{
  "reportTitle": "buzzer.click",
  "stats": {
    "suites": 187,
    "tests": 340,
    "passes": 340,
    "pending": 0,
    "failures": 0,
    "start": "2016-09-30T09:29:01.445Z",
    "end": "2016-09-30T09:29:02.896Z",
    "duration": 1451,
    "testsRegistered": 340,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "AddContestantResponse",
        "suites": [
          {
            "title": "#wasSuccessful",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "AddContestantResponse #wasSuccessful should throw on set value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.wasSuccessful = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "a0d06568-716f-4624-986f-43c7cb520018",
                "parentUUID": "638aec8b-bd17-4966-987d-4d9999187018",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #wasSuccessful should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>r.wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "c877f3c2-31c5-438f-9d93-22c42038b6e9",
                "parentUUID": "638aec8b-bd17-4966-987d-4d9999187018",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/AddContestantResponseTests.js",
            "uuid": "638aec8b-bd17-4966-987d-4d9999187018",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/AddContestantResponseTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "AddContestantResponse #wasSuccessful should throw on set value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.wasSuccessful = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "a0d06568-716f-4624-986f-43c7cb520018",
                "parentUUID": "638aec8b-bd17-4966-987d-4d9999187018",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #wasSuccessful should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>r.wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "c877f3c2-31c5-438f-9d93-22c42038b6e9",
                "parentUUID": "638aec8b-bd17-4966-987d-4d9999187018",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "#enquireForTeamLeaderPosition",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "AddContestantResponse #enquireForTeamLeaderPosition should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r._enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "1937eeb6-d8e1-4899-9cf5-c9c50a3535e4",
                "parentUUID": "31b1a100-d347-405e-a154-3ec95eb07fa6",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #enquireForTeamLeaderPosition should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r.enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "31454a23-21b5-40d4-9d0e-4030ef802ebc",
                "parentUUID": "31b1a100-d347-405e-a154-3ec95eb07fa6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/AddContestantResponseTests.js",
            "uuid": "31b1a100-d347-405e-a154-3ec95eb07fa6",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/AddContestantResponseTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "AddContestantResponse #enquireForTeamLeaderPosition should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r._enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "1937eeb6-d8e1-4899-9cf5-c9c50a3535e4",
                "parentUUID": "31b1a100-d347-405e-a154-3ec95eb07fa6",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #enquireForTeamLeaderPosition should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r.enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "31454a23-21b5-40d4-9d0e-4030ef802ebc",
                "parentUUID": "31b1a100-d347-405e-a154-3ec95eb07fa6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#errorMessage",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "AddContestantResponse #errorMessage should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.errorMessage = <span class=\"hljs-string\">'test'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "a84d865e-3e01-44a6-b824-27e4fef16d7c",
                "parentUUID": "6b730f18-6be3-43fc-a0f4-bc3221a801bf",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #errorMessage should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._errorMessage = <span class=\"hljs-string\">'errorMessage_test'</span>;<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'errorMessage_test'</span>);",
                "isRoot": false,
                "uuid": "f1da233a-60f7-4645-a50a-a137684182e8",
                "parentUUID": "6b730f18-6be3-43fc-a0f4-bc3221a801bf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/AddContestantResponseTests.js",
            "uuid": "6b730f18-6be3-43fc-a0f4-bc3221a801bf",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/AddContestantResponseTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "AddContestantResponse #errorMessage should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.errorMessage = <span class=\"hljs-string\">'test'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "a84d865e-3e01-44a6-b824-27e4fef16d7c",
                "parentUUID": "6b730f18-6be3-43fc-a0f4-bc3221a801bf",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #errorMessage should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._errorMessage = <span class=\"hljs-string\">'errorMessage_test'</span>;<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'errorMessage_test'</span>);",
                "isRoot": false,
                "uuid": "f1da233a-60f7-4645-a50a-a137684182e8",
                "parentUUID": "6b730f18-6be3-43fc-a0f4-bc3221a801bf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#setNotSuccessful(errorMessage)",
            "suites": [],
            "tests": [
              {
                "title": "should change the state to not successful",
                "fullTitle": "AddContestantResponse #setNotSuccessful(errorMessage) should change the state to not successful",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.setNotSuccessful(<span class=\"hljs-string\">'Test error message'</span>);<br>r.wasSuccessful.should.be.false();<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'Test error message'</span>);",
                "isRoot": false,
                "uuid": "5202d738-1cac-4c54-b45b-3150efede70e",
                "parentUUID": "8e49334f-4d94-49a9-a021-27390be5e1a6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/AddContestantResponseTests.js",
            "uuid": "8e49334f-4d94-49a9-a021-27390be5e1a6",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/AddContestantResponseTests.js",
            "passes": [
              {
                "title": "should change the state to not successful",
                "fullTitle": "AddContestantResponse #setNotSuccessful(errorMessage) should change the state to not successful",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.setNotSuccessful(<span class=\"hljs-string\">'Test error message'</span>);<br>r.wasSuccessful.should.be.false();<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'Test error message'</span>);",
                "isRoot": false,
                "uuid": "5202d738-1cac-4c54-b45b-3150efede70e",
                "parentUUID": "8e49334f-4d94-49a9-a021-27390be5e1a6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/AddContestantResponseTests.js",
        "uuid": "b95254a3-c237-403f-9c2d-df903be126f5",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/AddContestantResponseTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Contestant",
        "suites": [
          {
            "title": "#username",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Contestant #username should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'username_test'</span>;<br>c._username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
                "isRoot": false,
                "uuid": "c25589e3-a985-4e58-bfdd-5b1a6950f6a4",
                "parentUUID": "490c842e-ffa6-460c-a263-4fa3dc443015",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Contestant #username should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._username = <span class=\"hljs-string\">'username_test'</span>;<br>c.username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
                "isRoot": false,
                "uuid": "0840cf96-3103-4b3d-8171-dfaa6eff487b",
                "parentUUID": "490c842e-ffa6-460c-a263-4fa3dc443015",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ContestantTests.js",
            "uuid": "490c842e-ffa6-460c-a263-4fa3dc443015",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ContestantTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Contestant #username should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'username_test'</span>;<br>c._username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
                "isRoot": false,
                "uuid": "c25589e3-a985-4e58-bfdd-5b1a6950f6a4",
                "parentUUID": "490c842e-ffa6-460c-a263-4fa3dc443015",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Contestant #username should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._username = <span class=\"hljs-string\">'username_test'</span>;<br>c.username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
                "isRoot": false,
                "uuid": "0840cf96-3103-4b3d-8171-dfaa6eff487b",
                "parentUUID": "490c842e-ffa6-460c-a263-4fa3dc443015",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#score",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Contestant #score should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    c.score = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "d61690ad-b957-411e-a3dd-3a4f0156d911",
                "parentUUID": "0c4a182a-d4c9-4bf8-ab7e-02e56804b34a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Contestant #score should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._score = <span class=\"hljs-number\">1</span>;<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "42d3de1d-a97f-46a2-8013-868b1fa1cbfa",
                "parentUUID": "0c4a182a-d4c9-4bf8-ab7e-02e56804b34a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ContestantTests.js",
            "uuid": "0c4a182a-d4c9-4bf8-ab7e-02e56804b34a",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ContestantTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Contestant #score should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    c.score = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "d61690ad-b957-411e-a3dd-3a4f0156d911",
                "parentUUID": "0c4a182a-d4c9-4bf8-ab7e-02e56804b34a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Contestant #score should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._score = <span class=\"hljs-number\">1</span>;<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "42d3de1d-a97f-46a2-8013-868b1fa1cbfa",
                "parentUUID": "0c4a182a-d4c9-4bf8-ab7e-02e56804b34a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#incrementScore()",
            "suites": [],
            "tests": [
              {
                "title": "should increment the contestant's score",
                "fullTitle": "Contestant #incrementScore() should increment the contestant's score",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.incrementScore();<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "51dbbf65-56a1-415a-895e-e6c434bb2bd0",
                "parentUUID": "b6a35631-bfc3-4ebe-bcab-71b224be33ed",
                "skipped": false
              },
              {
                "title": "should emit scoreUpdate event",
                "fullTitle": "Contestant #incrementScore() should emit scoreUpdate event",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.on(<span class=\"hljs-string\">'scoreUpdate'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>});<br>c.incrementScore();",
                "isRoot": false,
                "uuid": "870d072a-0432-42a4-8fdc-7c5982d13e1f",
                "parentUUID": "b6a35631-bfc3-4ebe-bcab-71b224be33ed",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ContestantTests.js",
            "uuid": "b6a35631-bfc3-4ebe-bcab-71b224be33ed",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ContestantTests.js",
            "passes": [
              {
                "title": "should increment the contestant's score",
                "fullTitle": "Contestant #incrementScore() should increment the contestant's score",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.incrementScore();<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "51dbbf65-56a1-415a-895e-e6c434bb2bd0",
                "parentUUID": "b6a35631-bfc3-4ebe-bcab-71b224be33ed",
                "skipped": false
              },
              {
                "title": "should emit scoreUpdate event",
                "fullTitle": "Contestant #incrementScore() should emit scoreUpdate event",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.on(<span class=\"hljs-string\">'scoreUpdate'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>});<br>c.incrementScore();",
                "isRoot": false,
                "uuid": "870d072a-0432-42a4-8fdc-7c5982d13e1f",
                "parentUUID": "b6a35631-bfc3-4ebe-bcab-71b224be33ed",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/ContestantTests.js",
        "uuid": "73bb5b52-b0fa-48c1-bdc3-d09af6a7a71b",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ContestantTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "IdentifierUtility",
        "suites": [
          {
            "title": "#generateSessionId()",
            "suites": [],
            "tests": [
              {
                "title": "should return a non-null non-empty key",
                "fullTitle": "IdentifierUtility #generateSessionId() should return a non-null non-empty key",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateSessionId().should.not.be.equal(<span class=\"hljs-string\">''</span>).and.not.be.equal(<span class=\"hljs-literal\">null</span>);",
                "isRoot": false,
                "uuid": "c2b22f83-45fb-4f41-b438-70eec64a2a46",
                "parentUUID": "ae81c6c6-e1f7-4562-96c8-45ececcf7d75",
                "skipped": false
              },
              {
                "title": "should return a id of the correct length",
                "fullTitle": "IdentifierUtility #generateSessionId() should return a id of the correct length",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateSessionId()<br>    .length.should.be.Number().and.equal(idUtility.keyLength);",
                "isRoot": false,
                "uuid": "3ac919e7-e95c-497c-9674-a28e6c710b28",
                "parentUUID": "ae81c6c6-e1f7-4562-96c8-45ececcf7d75",
                "skipped": false
              },
              {
                "title": "should record id so it cannot be reused.",
                "fullTitle": "IdentifierUtility #generateSessionId() should record id so it cannot be reused.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> id = idUtility.generateSessionId();<br>idUtility._sessionKeysInUse.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">cachedId</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> cachedId === id;<br>}).should.equal(id);",
                "isRoot": false,
                "uuid": "16908251-da93-4168-831e-85a91b13008b",
                "parentUUID": "ae81c6c6-e1f7-4562-96c8-45ececcf7d75",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/IdentifierUtilityTests.js",
            "uuid": "ae81c6c6-e1f7-4562-96c8-45ececcf7d75",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/IdentifierUtilityTests.js",
            "passes": [
              {
                "title": "should return a non-null non-empty key",
                "fullTitle": "IdentifierUtility #generateSessionId() should return a non-null non-empty key",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateSessionId().should.not.be.equal(<span class=\"hljs-string\">''</span>).and.not.be.equal(<span class=\"hljs-literal\">null</span>);",
                "isRoot": false,
                "uuid": "c2b22f83-45fb-4f41-b438-70eec64a2a46",
                "parentUUID": "ae81c6c6-e1f7-4562-96c8-45ececcf7d75",
                "skipped": false
              },
              {
                "title": "should return a id of the correct length",
                "fullTitle": "IdentifierUtility #generateSessionId() should return a id of the correct length",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateSessionId()<br>    .length.should.be.Number().and.equal(idUtility.keyLength);",
                "isRoot": false,
                "uuid": "3ac919e7-e95c-497c-9674-a28e6c710b28",
                "parentUUID": "ae81c6c6-e1f7-4562-96c8-45ececcf7d75",
                "skipped": false
              },
              {
                "title": "should record id so it cannot be reused.",
                "fullTitle": "IdentifierUtility #generateSessionId() should record id so it cannot be reused.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> id = idUtility.generateSessionId();<br>idUtility._sessionKeysInUse.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">cachedId</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> cachedId === id;<br>}).should.equal(id);",
                "isRoot": false,
                "uuid": "16908251-da93-4168-831e-85a91b13008b",
                "parentUUID": "ae81c6c6-e1f7-4562-96c8-45ececcf7d75",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#generateParticipantId()",
            "suites": [],
            "tests": [
              {
                "title": "should return a UUID",
                "fullTitle": "IdentifierUtility #generateParticipantId() should return a UUID",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateParticipantId()<br>    .should.match(<span class=\"hljs-regexp\">/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i</span>);",
                "isRoot": false,
                "uuid": "3aed0443-5962-4486-bb6b-b918ddc58759",
                "parentUUID": "71a8935c-4262-45cc-b9cb-b40f9885025c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/IdentifierUtilityTests.js",
            "uuid": "71a8935c-4262-45cc-b9cb-b40f9885025c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/IdentifierUtilityTests.js",
            "passes": [
              {
                "title": "should return a UUID",
                "fullTitle": "IdentifierUtility #generateParticipantId() should return a UUID",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateParticipantId()<br>    .should.match(<span class=\"hljs-regexp\">/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i</span>);",
                "isRoot": false,
                "uuid": "3aed0443-5962-4486-bb6b-b918ddc58759",
                "parentUUID": "71a8935c-4262-45cc-b9cb-b40f9885025c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#registerSessionIdsInUse(ids)",
            "suites": [],
            "tests": [
              {
                "title": "should store the ids to stop reuse",
                "fullTitle": "IdentifierUtility #registerSessionIdsInUse(ids) should store the ids to stop reuse",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.length.should.be.aboveOrEqual(<span class=\"hljs-number\">2</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "5010a8f3-916e-4d9f-8a4c-2f2dca2468ff",
                "parentUUID": "7bccc08a-059d-4e2e-bdec-3ab07c203c1a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/IdentifierUtilityTests.js",
            "uuid": "7bccc08a-059d-4e2e-bdec-3ab07c203c1a",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/IdentifierUtilityTests.js",
            "passes": [
              {
                "title": "should store the ids to stop reuse",
                "fullTitle": "IdentifierUtility #registerSessionIdsInUse(ids) should store the ids to stop reuse",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.length.should.be.aboveOrEqual(<span class=\"hljs-number\">2</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "5010a8f3-916e-4d9f-8a4c-2f2dca2468ff",
                "parentUUID": "7bccc08a-059d-4e2e-bdec-3ab07c203c1a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#releaseSessionId(id)",
            "suites": [],
            "tests": [
              {
                "title": "should return a UUID",
                "fullTitle": "IdentifierUtility #releaseSessionId(id) should return a UUID",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility.releaseSessionId(<span class=\"hljs-string\">'111AAA'</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.equal(-<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "5b8793c8-c609-4ed1-a983-43618107db65",
                "parentUUID": "44f4883a-4105-4718-98e9-54a9079d7c3b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/IdentifierUtilityTests.js",
            "uuid": "44f4883a-4105-4718-98e9-54a9079d7c3b",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/IdentifierUtilityTests.js",
            "passes": [
              {
                "title": "should return a UUID",
                "fullTitle": "IdentifierUtility #releaseSessionId(id) should return a UUID",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility.releaseSessionId(<span class=\"hljs-string\">'111AAA'</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.equal(-<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "5b8793c8-c609-4ed1-a983-43618107db65",
                "parentUUID": "44f4883a-4105-4718-98e9-54a9079d7c3b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/IdentifierUtilityTests.js",
        "uuid": "3d7f8f97-1a11-493d-b8e7-e7d5bf38e970",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/IdentifierUtilityTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "BuzzerActionCommandMessage",
        "suites": [
          {
            "title": "#action",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #action should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.data._action.should.equal(constants.buzzerActionCommands.RESET);",
                "isRoot": false,
                "uuid": "e20575a6-07bb-4722-9471-765043cdc7e3",
                "parentUUID": "ded301d9-09f1-4d22-ab9d-7fdf90a6eacf",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #action should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._action = constants.buzzerActionCommands.RESET;<br>m.action.should.equal(constants.buzzerActionCommands.RESET);",
                "isRoot": false,
                "uuid": "57626d32-138f-420c-b011-247d19485913",
                "parentUUID": "ded301d9-09f1-4d22-ab9d-7fdf90a6eacf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "uuid": "ded301d9-09f1-4d22-ab9d-7fdf90a6eacf",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #action should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.data._action.should.equal(constants.buzzerActionCommands.RESET);",
                "isRoot": false,
                "uuid": "e20575a6-07bb-4722-9471-765043cdc7e3",
                "parentUUID": "ded301d9-09f1-4d22-ab9d-7fdf90a6eacf",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #action should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._action = constants.buzzerActionCommands.RESET;<br>m.action.should.equal(constants.buzzerActionCommands.RESET);",
                "isRoot": false,
                "uuid": "57626d32-138f-420c-b011-247d19485913",
                "parentUUID": "ded301d9-09f1-4d22-ab9d-7fdf90a6eacf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "96f56558-adb6-41ab-941d-149ec67be88c",
                "parentUUID": "e61146c4-0d68-4301-a84e-22d45dda17d9",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "059e4d35-7b48-47ba-a90d-569a54614084",
                "parentUUID": "e61146c4-0d68-4301-a84e-22d45dda17d9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "uuid": "e61146c4-0d68-4301-a84e-22d45dda17d9",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "96f56558-adb6-41ab-941d-149ec67be88c",
                "parentUUID": "e61146c4-0d68-4301-a84e-22d45dda17d9",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "059e4d35-7b48-47ba-a90d-569a54614084",
                "parentUUID": "e61146c4-0d68-4301-a84e-22d45dda17d9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e8865c87-00b4-441a-ae60-abfe890d0553",
                "parentUUID": "16b32679-94bb-4556-a179-d9930c8a1a4a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "0990b24b-4a17-4a4c-beb2-dd3b5cf4df82",
                "parentUUID": "16b32679-94bb-4556-a179-d9930c8a1a4a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "uuid": "16b32679-94bb-4556-a179-d9930c8a1a4a",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e8865c87-00b4-441a-ae60-abfe890d0553",
                "parentUUID": "16b32679-94bb-4556-a179-d9930c8a1a4a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "0990b24b-4a17-4a4c-beb2-dd3b5cf4df82",
                "parentUUID": "16b32679-94bb-4556-a179-d9930c8a1a4a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "BuzzerActionCommandMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'yyy123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "1c9ace17-c94d-4a58-9fc8-9b9fb1b02786",
                "parentUUID": "06d390c9-183b-4705-a010-8017f8841a82",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "BuzzerActionCommandMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = <span class=\"hljs-number\">99</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "48e2ccb7-ec7c-49a8-8555-b8a4ae99745a",
                "parentUUID": "06d390c9-183b-4705-a010-8017f8841a82",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "uuid": "06d390c9-183b-4705-a010-8017f8841a82",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "BuzzerActionCommandMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'yyy123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "1c9ace17-c94d-4a58-9fc8-9b9fb1b02786",
                "parentUUID": "06d390c9-183b-4705-a010-8017f8841a82",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "BuzzerActionCommandMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = <span class=\"hljs-number\">99</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "48e2ccb7-ec7c-49a8-8555-b8a4ae99745a",
                "parentUUID": "06d390c9-183b-4705-a010-8017f8841a82",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 9
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
        "uuid": "38bafbc5-d0a3-433c-af75-57dae5959200",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ContestantBuzzerPressMessage",
        "suites": [
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantBuzzerPressMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "ef306fdf-e105-4420-900e-c44597574d0a",
                "parentUUID": "a73e1326-590b-436a-852d-6a7420c8bffb",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantBuzzerPressMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "618afd1c-46d2-4464-877f-8a52d939774a",
                "parentUUID": "a73e1326-590b-436a-852d-6a7420c8bffb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "uuid": "a73e1326-590b-436a-852d-6a7420c8bffb",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantBuzzerPressMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "ef306fdf-e105-4420-900e-c44597574d0a",
                "parentUUID": "a73e1326-590b-436a-852d-6a7420c8bffb",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantBuzzerPressMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "618afd1c-46d2-4464-877f-8a52d939774a",
                "parentUUID": "a73e1326-590b-436a-852d-6a7420c8bffb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#contestantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantBuzzerPressMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "167ec371-94ea-45ad-9963-f780a0f40ddf",
                "parentUUID": "1be3547e-b2dd-4589-8d56-645a938b95a8",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantBuzzerPressMessage #contestantId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "931275ad-94d9-49d9-86b2-b3765b033777",
                "parentUUID": "1be3547e-b2dd-4589-8d56-645a938b95a8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "uuid": "1be3547e-b2dd-4589-8d56-645a938b95a8",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantBuzzerPressMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "167ec371-94ea-45ad-9963-f780a0f40ddf",
                "parentUUID": "1be3547e-b2dd-4589-8d56-645a938b95a8",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantBuzzerPressMessage #contestantId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "931275ad-94d9-49d9-86b2-b3765b033777",
                "parentUUID": "1be3547e-b2dd-4589-8d56-645a938b95a8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantBuzzerPressMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "4847fa96-24e0-4dd5-a04e-2b1d3da3caaf",
                "parentUUID": "9f94fdc7-2e39-417f-a15b-6bda6d3bdfc8",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantBuzzerPressMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "7c5ea903-7ef0-4b5c-9d3e-9af69fd9d194",
                "parentUUID": "9f94fdc7-2e39-417f-a15b-6bda6d3bdfc8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "uuid": "9f94fdc7-2e39-417f-a15b-6bda6d3bdfc8",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantBuzzerPressMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "4847fa96-24e0-4dd5-a04e-2b1d3da3caaf",
                "parentUUID": "9f94fdc7-2e39-417f-a15b-6bda6d3bdfc8",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantBuzzerPressMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "7c5ea903-7ef0-4b5c-9d3e-9af69fd9d194",
                "parentUUID": "9f94fdc7-2e39-417f-a15b-6bda6d3bdfc8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
        "uuid": "e734c31f-580d-4f26-a059-6b9848fce25e",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ContestantJoinRequestMessage",
        "suites": [
          {
            "title": "#username",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #username should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.username = <span class=\"hljs-string\">'test123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
                "isRoot": false,
                "uuid": "9112276a-3cbd-4fba-a954-1a86b222405a",
                "parentUUID": "6fabc9c3-4faa-4072-a04b-1e2933a09fdf",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #username should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._username = <span class=\"hljs-string\">'test123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
                "isRoot": false,
                "uuid": "74a13a8c-a3a8-4089-ab6e-e9544a8fd364",
                "parentUUID": "6fabc9c3-4faa-4072-a04b-1e2933a09fdf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "uuid": "6fabc9c3-4faa-4072-a04b-1e2933a09fdf",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #username should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.username = <span class=\"hljs-string\">'test123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
                "isRoot": false,
                "uuid": "9112276a-3cbd-4fba-a954-1a86b222405a",
                "parentUUID": "6fabc9c3-4faa-4072-a04b-1e2933a09fdf",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #username should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._username = <span class=\"hljs-string\">'test123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
                "isRoot": false,
                "uuid": "74a13a8c-a3a8-4089-ab6e-e9544a8fd364",
                "parentUUID": "6fabc9c3-4faa-4072-a04b-1e2933a09fdf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e93600b6-c973-4c4d-a082-1db1c8d9ea44",
                "parentUUID": "5e0af63c-fd71-4ab1-9789-51bc3a789c58",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "c0a40837-957d-4f1b-8332-af3cf254bd45",
                "parentUUID": "5e0af63c-fd71-4ab1-9789-51bc3a789c58",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "uuid": "5e0af63c-fd71-4ab1-9789-51bc3a789c58",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e93600b6-c973-4c4d-a082-1db1c8d9ea44",
                "parentUUID": "5e0af63c-fd71-4ab1-9789-51bc3a789c58",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "c0a40837-957d-4f1b-8332-af3cf254bd45",
                "parentUUID": "5e0af63c-fd71-4ab1-9789-51bc3a789c58",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#teamName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "ba58da0a-98cb-45ef-8bef-d885a4d21dfe",
                "parentUUID": "3d74dfbf-73ba-415f-9ed8-74ef95b88fcd",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "fef38334-1b4b-4957-ae21-c32acb2b32b3",
                "parentUUID": "3d74dfbf-73ba-415f-9ed8-74ef95b88fcd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "uuid": "3d74dfbf-73ba-415f-9ed8-74ef95b88fcd",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "ba58da0a-98cb-45ef-8bef-d885a4d21dfe",
                "parentUUID": "3d74dfbf-73ba-415f-9ed8-74ef95b88fcd",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "fef38334-1b4b-4957-ae21-c32acb2b32b3",
                "parentUUID": "3d74dfbf-73ba-415f-9ed8-74ef95b88fcd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantJoinRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "cffccdaf-e748-4583-896f-3ec866d945ce",
                "parentUUID": "85aaa33d-14f2-418e-8de2-4c1660bd9c0d",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantJoinRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "eb3d17dd-26b4-4c52-91c6-404cdb89d3d7",
                "parentUUID": "85aaa33d-14f2-418e-8de2-4c1660bd9c0d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "uuid": "85aaa33d-14f2-418e-8de2-4c1660bd9c0d",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantJoinRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "cffccdaf-e748-4583-896f-3ec866d945ce",
                "parentUUID": "85aaa33d-14f2-418e-8de2-4c1660bd9c0d",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantJoinRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "eb3d17dd-26b4-4c52-91c6-404cdb89d3d7",
                "parentUUID": "85aaa33d-14f2-418e-8de2-4c1660bd9c0d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 6
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
        "uuid": "887899e5-0c01-4e95-b0a7-9b49b78f5eed",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ContestantJoinResponseMessage",
        "suites": [
          {
            "title": "#wasSuccessful",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #wasSuccessful should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.data._wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "0e4ff7df-956c-426c-9da3-fb2acc13dba6",
                "parentUUID": "df9aea43-0b10-4b30-9614-bd29c6506d72",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #wasSuccessful should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "8540ee3c-e62d-4975-9296-0d1df5e4f5c4",
                "parentUUID": "df9aea43-0b10-4b30-9614-bd29c6506d72",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "df9aea43-0b10-4b30-9614-bd29c6506d72",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #wasSuccessful should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.data._wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "0e4ff7df-956c-426c-9da3-fb2acc13dba6",
                "parentUUID": "df9aea43-0b10-4b30-9614-bd29c6506d72",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #wasSuccessful should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "8540ee3c-e62d-4975-9296-0d1df5e4f5c4",
                "parentUUID": "df9aea43-0b10-4b30-9614-bd29c6506d72",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#enquireForTeamLeaderPosition",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #enquireForTeamLeaderPosition should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.data._enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "b70fc961-95c5-4e4b-8387-e8b8962c68a7",
                "parentUUID": "926c2cce-b1bf-4144-aefd-cfc628e48e9c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #enquireForTeamLeaderPosition should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "0245129c-da79-4360-82f3-7282ddbab77b",
                "parentUUID": "926c2cce-b1bf-4144-aefd-cfc628e48e9c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "926c2cce-b1bf-4144-aefd-cfc628e48e9c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #enquireForTeamLeaderPosition should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.data._enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "b70fc961-95c5-4e4b-8387-e8b8962c68a7",
                "parentUUID": "926c2cce-b1bf-4144-aefd-cfc628e48e9c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #enquireForTeamLeaderPosition should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "0245129c-da79-4360-82f3-7282ddbab77b",
                "parentUUID": "926c2cce-b1bf-4144-aefd-cfc628e48e9c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#failedRequestReason",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #failedRequestReason should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.data._failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
                "isRoot": false,
                "uuid": "a39b962c-44ec-4beb-83ad-12571e8b73bc",
                "parentUUID": "a25d57a1-1e62-425c-95cc-76e1840a4e5f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #failedRequestReason should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
                "isRoot": false,
                "uuid": "05499656-6d26-4bf3-b29d-4cac35033dbf",
                "parentUUID": "a25d57a1-1e62-425c-95cc-76e1840a4e5f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "a25d57a1-1e62-425c-95cc-76e1840a4e5f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #failedRequestReason should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.data._failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
                "isRoot": false,
                "uuid": "a39b962c-44ec-4beb-83ad-12571e8b73bc",
                "parentUUID": "a25d57a1-1e62-425c-95cc-76e1840a4e5f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #failedRequestReason should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
                "isRoot": false,
                "uuid": "05499656-6d26-4bf3-b29d-4cac35033dbf",
                "parentUUID": "a25d57a1-1e62-425c-95cc-76e1840a4e5f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#contestantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #contestantId should set value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "04ffa9f0-e2ff-4c7e-916e-15fecc545bba",
                "parentUUID": "e8172bc2-308d-4d93-b2c0-a5cb29418b8a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "98284765-057a-426e-ad07-6c89dd1b44fa",
                "parentUUID": "e8172bc2-308d-4d93-b2c0-a5cb29418b8a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "e8172bc2-308d-4d93-b2c0-a5cb29418b8a",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #contestantId should set value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "04ffa9f0-e2ff-4c7e-916e-15fecc545bba",
                "parentUUID": "e8172bc2-308d-4d93-b2c0-a5cb29418b8a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "98284765-057a-426e-ad07-6c89dd1b44fa",
                "parentUUID": "e8172bc2-308d-4d93-b2c0-a5cb29418b8a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#mustChooseTeam",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #mustChooseTeam should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.data._mustChooseTeam.should.be.true();",
                "isRoot": false,
                "uuid": "567aaeee-143b-4cef-896c-199ef74f9539",
                "parentUUID": "94998537-ada8-403f-bcbe-a82a5b97f86c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #mustChooseTeam should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.mustChooseTeam.should.be.true();",
                "isRoot": false,
                "uuid": "0f9d8224-326b-4c09-a89a-71d1854646da",
                "parentUUID": "94998537-ada8-403f-bcbe-a82a5b97f86c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "94998537-ada8-403f-bcbe-a82a5b97f86c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #mustChooseTeam should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.data._mustChooseTeam.should.be.true();",
                "isRoot": false,
                "uuid": "567aaeee-143b-4cef-896c-199ef74f9539",
                "parentUUID": "94998537-ada8-403f-bcbe-a82a5b97f86c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #mustChooseTeam should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.mustChooseTeam.should.be.true();",
                "isRoot": false,
                "uuid": "0f9d8224-326b-4c09-a89a-71d1854646da",
                "parentUUID": "94998537-ada8-403f-bcbe-a82a5b97f86c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#teams",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #teams should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.data._teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
                "isRoot": false,
                "uuid": "5c11cc52-8c67-4414-a35c-32c208edd487",
                "parentUUID": "9827ea32-1fae-4199-acf3-cdf67a7db4e8",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #teams should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
                "isRoot": false,
                "uuid": "8ca80bd8-79bc-4061-849f-412d42c3d156",
                "parentUUID": "9827ea32-1fae-4199-acf3-cdf67a7db4e8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "9827ea32-1fae-4199-acf3-cdf67a7db4e8",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #teams should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.data._teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
                "isRoot": false,
                "uuid": "5c11cc52-8c67-4414-a35c-32c208edd487",
                "parentUUID": "9827ea32-1fae-4199-acf3-cdf67a7db4e8",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #teams should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
                "isRoot": false,
                "uuid": "8ca80bd8-79bc-4061-849f-412d42c3d156",
                "parentUUID": "9827ea32-1fae-4199-acf3-cdf67a7db4e8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantJoinResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "ea40b2d6-8e7a-4423-b35e-f44c97ee34f0",
                "parentUUID": "7ca0f093-499d-4516-b7a0-ff32045203ed",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantJoinResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "32930e62-895f-4722-89fb-8252349c722a",
                "parentUUID": "7ca0f093-499d-4516-b7a0-ff32045203ed",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "7ca0f093-499d-4516-b7a0-ff32045203ed",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantJoinResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "ea40b2d6-8e7a-4423-b35e-f44c97ee34f0",
                "parentUUID": "7ca0f093-499d-4516-b7a0-ff32045203ed",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantJoinResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "32930e62-895f-4722-89fb-8252349c722a",
                "parentUUID": "7ca0f093-499d-4516-b7a0-ff32045203ed",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 6
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
        "uuid": "6efdb9bc-05a6-4600-af46-af328340c938",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "CreateSessionMessage",
        "suites": [
          {
            "title": "#settings",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionMessage #settings should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.data._settings.should.equal(s);",
                "isRoot": false,
                "uuid": "50c53b48-01f3-44ad-9291-123a02a3225a",
                "parentUUID": "1366fc0f-dff9-48bd-a4b2-5d6010e0eac6",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionMessage #settings should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.data._settings = s;<br>m.settings.should.equal(s);",
                "isRoot": false,
                "uuid": "d48ea912-f959-40dc-b76b-29f447b260fe",
                "parentUUID": "1366fc0f-dff9-48bd-a4b2-5d6010e0eac6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/CreateSessionMessageTests.js",
            "uuid": "1366fc0f-dff9-48bd-a4b2-5d6010e0eac6",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionMessage #settings should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.data._settings.should.equal(s);",
                "isRoot": false,
                "uuid": "50c53b48-01f3-44ad-9291-123a02a3225a",
                "parentUUID": "1366fc0f-dff9-48bd-a4b2-5d6010e0eac6",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionMessage #settings should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.data._settings = s;<br>m.settings.should.equal(s);",
                "isRoot": false,
                "uuid": "d48ea912-f959-40dc-b76b-29f447b260fe",
                "parentUUID": "1366fc0f-dff9-48bd-a4b2-5d6010e0eac6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "CreateSessionMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "43a1b2db-eb5f-4d4d-9a60-38a68e236e54",
                "parentUUID": "cb991c69-dd05-4824-8f10-eb89a88e61c7",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "CreateSessionMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-string\">'invalid'</span>;<br>m.settings = s;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "412ab5b3-b98d-4410-bb07-00a6a9705a24",
                "parentUUID": "cb991c69-dd05-4824-8f10-eb89a88e61c7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/CreateSessionMessageTests.js",
            "uuid": "cb991c69-dd05-4824-8f10-eb89a88e61c7",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "CreateSessionMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "43a1b2db-eb5f-4d4d-9a60-38a68e236e54",
                "parentUUID": "cb991c69-dd05-4824-8f10-eb89a88e61c7",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "CreateSessionMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-string\">'invalid'</span>;<br>m.settings = s;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "412ab5b3-b98d-4410-bb07-00a6a9705a24",
                "parentUUID": "cb991c69-dd05-4824-8f10-eb89a88e61c7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/CreateSessionMessageTests.js",
        "uuid": "755e3c32-26fe-4f1d-bcfe-80a727495b46",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "CreateSessionResponseMessage",
        "suites": [
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionResponseMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "3665a3f4-0e64-4516-9466-760814dc1660",
                "parentUUID": "af2a6462-41e6-4afe-af80-f08765d64100",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionResponseMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "63e486da-1145-4479-9855-f9414c3b6830",
                "parentUUID": "af2a6462-41e6-4afe-af80-f08765d64100",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "uuid": "af2a6462-41e6-4afe-af80-f08765d64100",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionResponseMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "3665a3f4-0e64-4516-9466-760814dc1660",
                "parentUUID": "af2a6462-41e6-4afe-af80-f08765d64100",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionResponseMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "63e486da-1145-4479-9855-f9414c3b6830",
                "parentUUID": "af2a6462-41e6-4afe-af80-f08765d64100",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionResponseMessage #hostId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "672d9161-7e04-4b35-8e88-045b399630ad",
                "parentUUID": "4fb51a99-da71-4b42-9307-e48bb20efe10",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionResponseMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "6026a40e-d63b-4aef-8ce5-3167fa301ef4",
                "parentUUID": "4fb51a99-da71-4b42-9307-e48bb20efe10",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "uuid": "4fb51a99-da71-4b42-9307-e48bb20efe10",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionResponseMessage #hostId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "672d9161-7e04-4b35-8e88-045b399630ad",
                "parentUUID": "4fb51a99-da71-4b42-9307-e48bb20efe10",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionResponseMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "6026a40e-d63b-4aef-8ce5-3167fa301ef4",
                "parentUUID": "4fb51a99-da71-4b42-9307-e48bb20efe10",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "CreateSessionResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "9227d66d-8a61-4093-98c4-eafd3b2166a4",
                "parentUUID": "1c1da0eb-3e72-4dae-bcc8-0c925f9eb3ea",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "CreateSessionResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "87c8c03f-830f-4201-8273-a7697f5f7fdf",
                "parentUUID": "1c1da0eb-3e72-4dae-bcc8-0c925f9eb3ea",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "uuid": "1c1da0eb-3e72-4dae-bcc8-0c925f9eb3ea",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "CreateSessionResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "9227d66d-8a61-4093-98c4-eafd3b2166a4",
                "parentUUID": "1c1da0eb-3e72-4dae-bcc8-0c925f9eb3ea",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "CreateSessionResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "87c8c03f-830f-4201-8273-a7697f5f7fdf",
                "parentUUID": "1c1da0eb-3e72-4dae-bcc8-0c925f9eb3ea",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 8
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
        "uuid": "e9e97fef-5d58-4c2f-9068-469ec39bf990",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ErrorMessage",
        "suites": [
          {
            "title": "#message",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ErrorMessage #message should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5019df87-4ed5-4732-a4c7-40883539044b",
                "parentUUID": "70feab43-b191-4f86-8a55-39766fef3058",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ErrorMessage #message should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.data._error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "7480e132-66b3-45cf-850e-216094a79bb7",
                "parentUUID": "70feab43-b191-4f86-8a55-39766fef3058",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ErrorMessageTests.js",
            "uuid": "70feab43-b191-4f86-8a55-39766fef3058",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ErrorMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ErrorMessage #message should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5019df87-4ed5-4732-a4c7-40883539044b",
                "parentUUID": "70feab43-b191-4f86-8a55-39766fef3058",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ErrorMessage #message should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.data._error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "7480e132-66b3-45cf-850e-216094a79bb7",
                "parentUUID": "70feab43-b191-4f86-8a55-39766fef3058",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "ErrorMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "9894d068-4957-41fd-b73c-20b8ea3a76e5",
                "parentUUID": "c600b785-6ba6-4f89-9480-214264e1aa1b",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ErrorMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "4d9e113d-063c-4832-b1ce-4c842663879a",
                "parentUUID": "c600b785-6ba6-4f89-9480-214264e1aa1b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ErrorMessageTests.js",
            "uuid": "c600b785-6ba6-4f89-9480-214264e1aa1b",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ErrorMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "ErrorMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "9894d068-4957-41fd-b73c-20b8ea3a76e5",
                "parentUUID": "c600b785-6ba6-4f89-9480-214264e1aa1b",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ErrorMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "4d9e113d-063c-4832-b1ce-4c842663879a",
                "parentUUID": "c600b785-6ba6-4f89-9480-214264e1aa1b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 8
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/ErrorMessageTests.js",
        "uuid": "70fac06c-8767-45c6-bdf0-d546a706dc71",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ErrorMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "HostSettingsUpdateMessage",
        "suites": [
          {
            "title": "#sessionName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #sessionName should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "192db5f9-a76c-43c8-b85f-0f7adbfa65d9",
                "parentUUID": "fe21c6ae-82c6-4f45-ab94-ef0b13df0a91",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #sessionName should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "c3483ad6-8c1c-46a3-b1f4-b0a73fc88752",
                "parentUUID": "fe21c6ae-82c6-4f45-ab94-ef0b13df0a91",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "fe21c6ae-82c6-4f45-ab94-ef0b13df0a91",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #sessionName should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "192db5f9-a76c-43c8-b85f-0f7adbfa65d9",
                "parentUUID": "fe21c6ae-82c6-4f45-ab94-ef0b13df0a91",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #sessionName should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "c3483ad6-8c1c-46a3-b1f4-b0a73fc88752",
                "parentUUID": "fe21c6ae-82c6-4f45-ab94-ef0b13df0a91",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#maxTeams",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #maxTeams should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxTeams = <span class=\"hljs-number\">5</span>;<br>m.data._maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "f4573b24-4743-4854-b91c-e0e504639999",
                "parentUUID": "91189a29-9910-4a73-87d2-cac5950862c0",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #maxTeams should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxTeams = <span class=\"hljs-number\">5</span>;<br>m.maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "62ea2898-8ebc-49ee-943e-a5429f6d02b1",
                "parentUUID": "91189a29-9910-4a73-87d2-cac5950862c0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "91189a29-9910-4a73-87d2-cac5950862c0",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #maxTeams should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxTeams = <span class=\"hljs-number\">5</span>;<br>m.data._maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "f4573b24-4743-4854-b91c-e0e504639999",
                "parentUUID": "91189a29-9910-4a73-87d2-cac5950862c0",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #maxTeams should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxTeams = <span class=\"hljs-number\">5</span>;<br>m.maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "62ea2898-8ebc-49ee-943e-a5429f6d02b1",
                "parentUUID": "91189a29-9910-4a73-87d2-cac5950862c0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#teamSize",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #teamSize should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.teamSize = <span class=\"hljs-number\">5</span>;<br>m.data._teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "170bebf6-0d16-4416-861a-3903d4df38c5",
                "parentUUID": "fb9f6e16-9717-4eb2-8d71-10b1adbe5c41",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #teamSize should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._teamSize = <span class=\"hljs-number\">5</span>;<br>m.teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "adcbee2e-b2c0-4117-b94a-9c8e7a016e90",
                "parentUUID": "fb9f6e16-9717-4eb2-8d71-10b1adbe5c41",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "fb9f6e16-9717-4eb2-8d71-10b1adbe5c41",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #teamSize should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.teamSize = <span class=\"hljs-number\">5</span>;<br>m.data._teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "170bebf6-0d16-4416-861a-3903d4df38c5",
                "parentUUID": "fb9f6e16-9717-4eb2-8d71-10b1adbe5c41",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #teamSize should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._teamSize = <span class=\"hljs-number\">5</span>;<br>m.teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "adcbee2e-b2c0-4117-b94a-9c8e7a016e90",
                "parentUUID": "fb9f6e16-9717-4eb2-8d71-10b1adbe5c41",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#maxContestants",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #maxContestants should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxContestants = <span class=\"hljs-number\">5</span>;<br>m.data._maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "7a24889e-e102-4f57-8c63-5fca162d8e14",
                "parentUUID": "01ce8c18-447a-442c-ab6a-08224b53d9eb",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #maxContestants should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxContestants = <span class=\"hljs-number\">5</span>;<br>m.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "24ecac71-48bc-4d7d-b278-e828e8067b24",
                "parentUUID": "01ce8c18-447a-442c-ab6a-08224b53d9eb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "01ce8c18-447a-442c-ab6a-08224b53d9eb",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #maxContestants should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxContestants = <span class=\"hljs-number\">5</span>;<br>m.data._maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "7a24889e-e102-4f57-8c63-5fca162d8e14",
                "parentUUID": "01ce8c18-447a-442c-ab6a-08224b53d9eb",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #maxContestants should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxContestants = <span class=\"hljs-number\">5</span>;<br>m.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "24ecac71-48bc-4d7d-b278-e828e8067b24",
                "parentUUID": "01ce8c18-447a-442c-ab6a-08224b53d9eb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "1bacb314-9e80-4d72-937b-68e709e995ff",
                "parentUUID": "780ee354-5fef-43dd-b2c2-f4f9b418b5c0",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e5c1a97e-405f-47db-9514-c943c4b80430",
                "parentUUID": "780ee354-5fef-43dd-b2c2-f4f9b418b5c0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "780ee354-5fef-43dd-b2c2-f4f9b418b5c0",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "1bacb314-9e80-4d72-937b-68e709e995ff",
                "parentUUID": "780ee354-5fef-43dd-b2c2-f4f9b418b5c0",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e5c1a97e-405f-47db-9514-c943c4b80430",
                "parentUUID": "780ee354-5fef-43dd-b2c2-f4f9b418b5c0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "fb17284d-ec7d-4fc6-b17b-23b7f017b705",
                "parentUUID": "c1c2fe49-6c7e-446a-b8fb-a04b1a5ce906",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "6df193e6-00bb-41e7-8a13-e5c2065b0f27",
                "parentUUID": "c1c2fe49-6c7e-446a-b8fb-a04b1a5ce906",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "c1c2fe49-6c7e-446a-b8fb-a04b1a5ce906",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "fb17284d-ec7d-4fc6-b17b-23b7f017b705",
                "parentUUID": "c1c2fe49-6c7e-446a-b8fb-a04b1a5ce906",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "6df193e6-00bb-41e7-8a13-e5c2065b0f27",
                "parentUUID": "c1c2fe49-6c7e-446a-b8fb-a04b1a5ce906",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostSettingsUpdateMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "f0140e12-7dc2-4e7d-9f12-2ae3ddd943be",
                "parentUUID": "235d2780-39af-45a2-a9d4-bd172611ae48",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostSettingsUpdateMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "4733b1e2-572f-4904-9e0d-b12e60edfa6d",
                "parentUUID": "235d2780-39af-45a2-a9d4-bd172611ae48",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "235d2780-39af-45a2-a9d4-bd172611ae48",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostSettingsUpdateMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "f0140e12-7dc2-4e7d-9f12-2ae3ddd943be",
                "parentUUID": "235d2780-39af-45a2-a9d4-bd172611ae48",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostSettingsUpdateMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "4733b1e2-572f-4904-9e0d-b12e60edfa6d",
                "parentUUID": "235d2780-39af-45a2-a9d4-bd172611ae48",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
        "uuid": "f91fae70-8e66-4aca-b5d0-17d9ad9b91f8",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "HostTeamLeaderSetRequestMessage",
        "suites": [
          {
            "title": "#teamName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "fe133e88-917c-4f41-a1ba-cdc3dc77bd09",
                "parentUUID": "102b6668-054d-42a1-9392-158afb1581ba",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "c687db89-58be-40a6-8918-6d078f07e80b",
                "parentUUID": "102b6668-054d-42a1-9392-158afb1581ba",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "uuid": "102b6668-054d-42a1-9392-158afb1581ba",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "fe133e88-917c-4f41-a1ba-cdc3dc77bd09",
                "parentUUID": "102b6668-054d-42a1-9392-158afb1581ba",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "c687db89-58be-40a6-8918-6d078f07e80b",
                "parentUUID": "102b6668-054d-42a1-9392-158afb1581ba",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#teamLeaderUsername",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamLeaderUsername should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "4667668a-6628-459b-a43f-6166784e1546",
                "parentUUID": "d6071ceb-87af-4af0-860e-c4fc91e97a37",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamLeaderUsername should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "01959758-46ae-426f-9550-870c7350be6a",
                "parentUUID": "d6071ceb-87af-4af0-860e-c4fc91e97a37",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "uuid": "d6071ceb-87af-4af0-860e-c4fc91e97a37",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamLeaderUsername should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "4667668a-6628-459b-a43f-6166784e1546",
                "parentUUID": "d6071ceb-87af-4af0-860e-c4fc91e97a37",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamLeaderUsername should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "01959758-46ae-426f-9550-870c7350be6a",
                "parentUUID": "d6071ceb-87af-4af0-860e-c4fc91e97a37",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "f11ea562-fdc4-4830-9c0a-ce3cec377c7f",
                "parentUUID": "d3f98df6-22d7-45d5-94e1-90b02072a9c0",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "9f568252-40ac-49c0-8a55-4bc36da21e9f",
                "parentUUID": "d3f98df6-22d7-45d5-94e1-90b02072a9c0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "uuid": "d3f98df6-22d7-45d5-94e1-90b02072a9c0",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "f11ea562-fdc4-4830-9c0a-ce3cec377c7f",
                "parentUUID": "d3f98df6-22d7-45d5-94e1-90b02072a9c0",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "9f568252-40ac-49c0-8a55-4bc36da21e9f",
                "parentUUID": "d3f98df6-22d7-45d5-94e1-90b02072a9c0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "404b181e-4020-4359-9e35-3cb384962289",
                "parentUUID": "8b7d6cc2-287a-4fef-aaa9-e6bfe315f055",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "f3b3eee5-995a-4d78-9b2f-2642ce1243f0",
                "parentUUID": "8b7d6cc2-287a-4fef-aaa9-e6bfe315f055",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "uuid": "8b7d6cc2-287a-4fef-aaa9-e6bfe315f055",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "404b181e-4020-4359-9e35-3cb384962289",
                "parentUUID": "8b7d6cc2-287a-4fef-aaa9-e6bfe315f055",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "f3b3eee5-995a-4d78-9b2f-2642ce1243f0",
                "parentUUID": "8b7d6cc2-287a-4fef-aaa9-e6bfe315f055",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostTeamLeaderSetRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "ed0fe017-c61b-46cc-8cf2-7112254be134",
                "parentUUID": "e409fcdc-d340-473d-8c64-bda14c6660a6",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostTeamLeaderSetRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "4dc12352-e711-4a22-944f-07efe280e0a1",
                "parentUUID": "e409fcdc-d340-473d-8c64-bda14c6660a6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "uuid": "e409fcdc-d340-473d-8c64-bda14c6660a6",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostTeamLeaderSetRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "ed0fe017-c61b-46cc-8cf2-7112254be134",
                "parentUUID": "e409fcdc-d340-473d-8c64-bda14c6660a6",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostTeamLeaderSetRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "4dc12352-e711-4a22-944f-07efe280e0a1",
                "parentUUID": "e409fcdc-d340-473d-8c64-bda14c6660a6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
        "uuid": "b5315f9e-dab4-4557-8166-0bd1c9ac2000",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "HostTeamNameUpdateRequestMessage",
        "suites": [
          {
            "title": "#teamNameFrom",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameFrom should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "901bc006-d3cf-47a8-a8bb-a494d11d0c3f",
                "parentUUID": "59033101-fe0c-439e-bec8-73dd200e82a5",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameFrom should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "634368ee-ba45-4d0b-b033-02d51ce5c195",
                "parentUUID": "59033101-fe0c-439e-bec8-73dd200e82a5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "uuid": "59033101-fe0c-439e-bec8-73dd200e82a5",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameFrom should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "901bc006-d3cf-47a8-a8bb-a494d11d0c3f",
                "parentUUID": "59033101-fe0c-439e-bec8-73dd200e82a5",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameFrom should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "634368ee-ba45-4d0b-b033-02d51ce5c195",
                "parentUUID": "59033101-fe0c-439e-bec8-73dd200e82a5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#teamNameTo",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameTo should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "2d08aa7a-4f19-44a4-bfb1-f746cf7ed588",
                "parentUUID": "7fd98ec6-76ec-4e44-a7b7-aa408cdab8ba",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameTo should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "eb2d7375-0553-4be3-8a7f-7ebe96fcd193",
                "parentUUID": "7fd98ec6-76ec-4e44-a7b7-aa408cdab8ba",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "uuid": "7fd98ec6-76ec-4e44-a7b7-aa408cdab8ba",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameTo should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "2d08aa7a-4f19-44a4-bfb1-f746cf7ed588",
                "parentUUID": "7fd98ec6-76ec-4e44-a7b7-aa408cdab8ba",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameTo should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "eb2d7375-0553-4be3-8a7f-7ebe96fcd193",
                "parentUUID": "7fd98ec6-76ec-4e44-a7b7-aa408cdab8ba",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "86f8b118-49ac-41de-ab9f-3814715c4242",
                "parentUUID": "723a3028-dc71-42a3-9c09-2ee16ce270ea",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "df858409-35c9-4f17-a954-a14d4eee238c",
                "parentUUID": "723a3028-dc71-42a3-9c09-2ee16ce270ea",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "uuid": "723a3028-dc71-42a3-9c09-2ee16ce270ea",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "86f8b118-49ac-41de-ab9f-3814715c4242",
                "parentUUID": "723a3028-dc71-42a3-9c09-2ee16ce270ea",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "df858409-35c9-4f17-a954-a14d4eee238c",
                "parentUUID": "723a3028-dc71-42a3-9c09-2ee16ce270ea",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5c5b185c-475f-47f2-8f8e-179bf8648b6f",
                "parentUUID": "3024c962-64c0-44ac-82d1-d34130177ea4",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #hostId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "fb3edebd-1ad9-4d57-99df-9072afff3d6a",
                "parentUUID": "3024c962-64c0-44ac-82d1-d34130177ea4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "uuid": "3024c962-64c0-44ac-82d1-d34130177ea4",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5c5b185c-475f-47f2-8f8e-179bf8648b6f",
                "parentUUID": "3024c962-64c0-44ac-82d1-d34130177ea4",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #hostId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "fb3edebd-1ad9-4d57-99df-9072afff3d6a",
                "parentUUID": "3024c962-64c0-44ac-82d1-d34130177ea4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostTeamNameUpdateRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "94c9aa43-1b8c-4b52-bc85-0a0ec167f691",
                "parentUUID": "8669f7a9-8dc2-4250-a374-ef8713ebc619",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostTeamNameUpdateRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "46fafbbb-b1da-45a1-929a-254bde47e968",
                "parentUUID": "8669f7a9-8dc2-4250-a374-ef8713ebc619",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "uuid": "8669f7a9-8dc2-4250-a374-ef8713ebc619",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostTeamNameUpdateRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "94c9aa43-1b8c-4b52-bc85-0a0ec167f691",
                "parentUUID": "8669f7a9-8dc2-4250-a374-ef8713ebc619",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostTeamNameUpdateRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "46fafbbb-b1da-45a1-929a-254bde47e968",
                "parentUUID": "8669f7a9-8dc2-4250-a374-ef8713ebc619",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 7
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
        "uuid": "e8cfd364-6b38-44e9-9543-c7f8f579a21f",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "InquireTeamLeaderResponseMessage",
        "suites": [
          {
            "title": "#decision",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #decision should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.data._decision.should.be.true();",
                "isRoot": false,
                "uuid": "10653ec6-0522-4e36-91f9-39dd9a0475a7",
                "parentUUID": "958cda6b-bc96-4418-a9c4-ed68e97963a1",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #decision should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._decision = <span class=\"hljs-literal\">true</span>;<br>m.decision.should.be.true();",
                "isRoot": false,
                "uuid": "d988d77f-df81-411e-a0f9-19e3cc5b9db9",
                "parentUUID": "958cda6b-bc96-4418-a9c4-ed68e97963a1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "uuid": "958cda6b-bc96-4418-a9c4-ed68e97963a1",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #decision should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.data._decision.should.be.true();",
                "isRoot": false,
                "uuid": "10653ec6-0522-4e36-91f9-39dd9a0475a7",
                "parentUUID": "958cda6b-bc96-4418-a9c4-ed68e97963a1",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #decision should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._decision = <span class=\"hljs-literal\">true</span>;<br>m.decision.should.be.true();",
                "isRoot": false,
                "uuid": "d988d77f-df81-411e-a0f9-19e3cc5b9db9",
                "parentUUID": "958cda6b-bc96-4418-a9c4-ed68e97963a1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "da69d4a4-8958-4485-8c33-97df2f64514d",
                "parentUUID": "c2997098-0973-47c6-92f7-90705a272ad8",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "f010bbb2-77a0-43f6-bf4c-d74cc1b2b29a",
                "parentUUID": "c2997098-0973-47c6-92f7-90705a272ad8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "uuid": "c2997098-0973-47c6-92f7-90705a272ad8",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "da69d4a4-8958-4485-8c33-97df2f64514d",
                "parentUUID": "c2997098-0973-47c6-92f7-90705a272ad8",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "f010bbb2-77a0-43f6-bf4c-d74cc1b2b29a",
                "parentUUID": "c2997098-0973-47c6-92f7-90705a272ad8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#contestantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "b0a2b3db-704d-469c-878e-f0aee061b7ac",
                "parentUUID": "455841b0-6f65-45d7-9d7c-4bec83aff36d",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #contestantId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "4823b196-a336-489e-82de-0db1d4331e3d",
                "parentUUID": "455841b0-6f65-45d7-9d7c-4bec83aff36d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "uuid": "455841b0-6f65-45d7-9d7c-4bec83aff36d",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "b0a2b3db-704d-469c-878e-f0aee061b7ac",
                "parentUUID": "455841b0-6f65-45d7-9d7c-4bec83aff36d",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #contestantId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "4823b196-a336-489e-82de-0db1d4331e3d",
                "parentUUID": "455841b0-6f65-45d7-9d7c-4bec83aff36d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "InquireTeamLeaderResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "8843b90f-9b70-4a44-ae2b-5d6af0e0b023",
                "parentUUID": "a3d203dc-443d-44a1-82c9-a4d723ece09e",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "InquireTeamLeaderResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "9c093554-0234-441f-b53a-bc757a4e22ee",
                "parentUUID": "a3d203dc-443d-44a1-82c9-a4d723ece09e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "uuid": "a3d203dc-443d-44a1-82c9-a4d723ece09e",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "InquireTeamLeaderResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "8843b90f-9b70-4a44-ae2b-5d6af0e0b023",
                "parentUUID": "a3d203dc-443d-44a1-82c9-a4d723ece09e",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "InquireTeamLeaderResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "9c093554-0234-441f-b53a-bc757a4e22ee",
                "parentUUID": "a3d203dc-443d-44a1-82c9-a4d723ece09e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
        "uuid": "061f2b77-ac53-4d22-aed0-e218b449c313",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ObserverUpdateMessage",
        "suites": [
          {
            "title": "#gameState",
            "suites": [],
            "tests": [
              {
                "title": "should get value",
                "fullTitle": "ObserverUpdateMessage #gameState should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.gameState.should.be.Object();",
                "isRoot": false,
                "uuid": "96e87c2c-e226-4658-acfb-90ad582a88e8",
                "parentUUID": "dfb5560d-cff0-4a00-a285-1079f97cc792",
                "skipped": false
              },
              {
                "title": "should not have ids",
                "fullTitle": "ObserverUpdateMessage #gameState should not have ids",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState.id);<br>should.not.exist(m.gameState.host.id);",
                "isRoot": false,
                "uuid": "3c2999b3-4456-4c1c-8803-566f4ddf7af9",
                "parentUUID": "dfb5560d-cff0-4a00-a285-1079f97cc792",
                "skipped": false
              },
              {
                "title": "should promote private field _ to public field",
                "fullTitle": "ObserverUpdateMessage #gameState should promote private field _ to public field",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState._host);<br>should.not.exist(m.gameState._settings);<br>should.exist(m.gameState.host);<br>should.exist(m.gameState.settings);<br>should.exist(m.gameState.settings.teamLeaderSelectionMethod);",
                "isRoot": false,
                "uuid": "f328e46f-caa5-44b7-afbe-14aa763ad7ae",
                "parentUUID": "dfb5560d-cff0-4a00-a285-1079f97cc792",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
            "uuid": "dfb5560d-cff0-4a00-a285-1079f97cc792",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
            "passes": [
              {
                "title": "should get value",
                "fullTitle": "ObserverUpdateMessage #gameState should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.gameState.should.be.Object();",
                "isRoot": false,
                "uuid": "96e87c2c-e226-4658-acfb-90ad582a88e8",
                "parentUUID": "dfb5560d-cff0-4a00-a285-1079f97cc792",
                "skipped": false
              },
              {
                "title": "should not have ids",
                "fullTitle": "ObserverUpdateMessage #gameState should not have ids",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState.id);<br>should.not.exist(m.gameState.host.id);",
                "isRoot": false,
                "uuid": "3c2999b3-4456-4c1c-8803-566f4ddf7af9",
                "parentUUID": "dfb5560d-cff0-4a00-a285-1079f97cc792",
                "skipped": false
              },
              {
                "title": "should promote private field _ to public field",
                "fullTitle": "ObserverUpdateMessage #gameState should promote private field _ to public field",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState._host);<br>should.not.exist(m.gameState._settings);<br>should.exist(m.gameState.host);<br>should.exist(m.gameState.settings);<br>should.exist(m.gameState.settings.teamLeaderSelectionMethod);",
                "isRoot": false,
                "uuid": "f328e46f-caa5-44b7-afbe-14aa763ad7ae",
                "parentUUID": "dfb5560d-cff0-4a00-a285-1079f97cc792",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "ObserverUpdateMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "a637fdc0-b990-4e52-8858-5de01a13e05c",
                "parentUUID": "9dc7fe07-1175-4c28-b805-af04c0c43a5a",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ObserverUpdateMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "80367e8a-a1c3-4427-bea4-f2a979b62d8a",
                "parentUUID": "9dc7fe07-1175-4c28-b805-af04c0c43a5a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
            "uuid": "9dc7fe07-1175-4c28-b805-af04c0c43a5a",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "ObserverUpdateMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "a637fdc0-b990-4e52-8858-5de01a13e05c",
                "parentUUID": "9dc7fe07-1175-4c28-b805-af04c0c43a5a",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ObserverUpdateMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "80367e8a-a1c3-4427-bea4-f2a979b62d8a",
                "parentUUID": "9dc7fe07-1175-4c28-b805-af04c0c43a5a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
        "uuid": "cdd4b44e-f3f8-4b29-b7d9-f499a776df73",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "RejoinSessionMessage",
        "suites": [
          {
            "title": "#rejoinAs",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #rejoinAs should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.rejoinAs = constants.rejoinAs.HOST;<br>m.data._rejoinAs.should.equal(constants.rejoinAs.HOST);",
                "isRoot": false,
                "uuid": "2657a1a3-7be7-4fc8-82ad-4ce64e843375",
                "parentUUID": "2ca7fcd1-293f-4dec-b674-b1d35c833d22",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #rejoinAs should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._rejoinAs = constants.rejoinAs.HOST;<br>m.rejoinAs.should.equal(constants.rejoinAs.HOST);",
                "isRoot": false,
                "uuid": "8d7d7bce-ffd3-4da6-ae6a-80061c39371d",
                "parentUUID": "2ca7fcd1-293f-4dec-b674-b1d35c833d22",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "uuid": "2ca7fcd1-293f-4dec-b674-b1d35c833d22",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #rejoinAs should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.rejoinAs = constants.rejoinAs.HOST;<br>m.data._rejoinAs.should.equal(constants.rejoinAs.HOST);",
                "isRoot": false,
                "uuid": "2657a1a3-7be7-4fc8-82ad-4ce64e843375",
                "parentUUID": "2ca7fcd1-293f-4dec-b674-b1d35c833d22",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #rejoinAs should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._rejoinAs = constants.rejoinAs.HOST;<br>m.rejoinAs.should.equal(constants.rejoinAs.HOST);",
                "isRoot": false,
                "uuid": "8d7d7bce-ffd3-4da6-ae6a-80061c39371d",
                "parentUUID": "2ca7fcd1-293f-4dec-b674-b1d35c833d22",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5fa13966-83e8-4169-b381-7ba60d04c9a0",
                "parentUUID": "292e7717-5859-493a-ba3c-0b620feeea4e",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "56f9bbc3-1b7f-4a86-b7db-fab2e808e761",
                "parentUUID": "292e7717-5859-493a-ba3c-0b620feeea4e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "uuid": "292e7717-5859-493a-ba3c-0b620feeea4e",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5fa13966-83e8-4169-b381-7ba60d04c9a0",
                "parentUUID": "292e7717-5859-493a-ba3c-0b620feeea4e",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "56f9bbc3-1b7f-4a86-b7db-fab2e808e761",
                "parentUUID": "292e7717-5859-493a-ba3c-0b620feeea4e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#participantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #participantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "7c59082e-2a31-411c-a4da-ff89d145c552",
                "parentUUID": "f242f6f2-2b72-4b84-8c4b-c350e1624905",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #participantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "20db40b3-5d12-418f-90ea-408ca071bb74",
                "parentUUID": "f242f6f2-2b72-4b84-8c4b-c350e1624905",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "uuid": "f242f6f2-2b72-4b84-8c4b-c350e1624905",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #participantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "7c59082e-2a31-411c-a4da-ff89d145c552",
                "parentUUID": "f242f6f2-2b72-4b84-8c4b-c350e1624905",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #participantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "20db40b3-5d12-418f-90ea-408ca071bb74",
                "parentUUID": "f242f6f2-2b72-4b84-8c4b-c350e1624905",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "RejoinSessionMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.rejoinAs = constants.rejoinAs.OBSERVER;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "095f3090-a62b-44d0-9dc8-d881063d3c31",
                "parentUUID": "6a8304f6-5220-4504-a248-f14fbbcdfa4b",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "RejoinSessionMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "e5853841-3d9d-4124-b19e-9566c9ad30b7",
                "parentUUID": "6a8304f6-5220-4504-a248-f14fbbcdfa4b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "uuid": "6a8304f6-5220-4504-a248-f14fbbcdfa4b",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "RejoinSessionMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.rejoinAs = constants.rejoinAs.OBSERVER;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "095f3090-a62b-44d0-9dc8-d881063d3c31",
                "parentUUID": "6a8304f6-5220-4504-a248-f14fbbcdfa4b",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "RejoinSessionMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "e5853841-3d9d-4124-b19e-9566c9ad30b7",
                "parentUUID": "6a8304f6-5220-4504-a248-f14fbbcdfa4b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/RejoinSessionMessageTests.js",
        "uuid": "a7c8050b-b02e-4ea0-970d-c4a5dc03b96a",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RejoinSessionMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "RoundWonMessage",
        "suites": [
          {
            "title": "#username",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "RoundWonMessage #username should set value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5dde0841-42ff-4496-8852-e8eed3bc79fa",
                "parentUUID": "3b36320f-1a78-4bbd-9e08-84facd04694b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RoundWonMessage #username should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "ce26415a-e203-431c-b195-3c36b11c865b",
                "parentUUID": "3b36320f-1a78-4bbd-9e08-84facd04694b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RoundWonMessageTests.js",
            "uuid": "3b36320f-1a78-4bbd-9e08-84facd04694b",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RoundWonMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "RoundWonMessage #username should set value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5dde0841-42ff-4496-8852-e8eed3bc79fa",
                "parentUUID": "3b36320f-1a78-4bbd-9e08-84facd04694b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RoundWonMessage #username should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "ce26415a-e203-431c-b195-3c36b11c865b",
                "parentUUID": "3b36320f-1a78-4bbd-9e08-84facd04694b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#teamName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "RoundWonMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "c81cd8e1-d035-47b7-9469-5610397e676f",
                "parentUUID": "d2b6e3b2-d3b2-437c-9be2-66c620f2df86",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RoundWonMessage #teamName should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "75899887-2be9-4e39-987d-72e1cee5dd65",
                "parentUUID": "d2b6e3b2-d3b2-437c-9be2-66c620f2df86",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RoundWonMessageTests.js",
            "uuid": "d2b6e3b2-d3b2-437c-9be2-66c620f2df86",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RoundWonMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "RoundWonMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "c81cd8e1-d035-47b7-9469-5610397e676f",
                "parentUUID": "d2b6e3b2-d3b2-437c-9be2-66c620f2df86",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RoundWonMessage #teamName should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "75899887-2be9-4e39-987d-72e1cee5dd65",
                "parentUUID": "d2b6e3b2-d3b2-437c-9be2-66c620f2df86",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "RoundWonMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "5c322d42-9857-4da1-b45a-a459aca09568",
                "parentUUID": "be10e4d3-08a6-479f-ba96-c08abbb457a2",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "RoundWonMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "7580ff6b-e897-441b-a233-d2e5e6999da4",
                "parentUUID": "be10e4d3-08a6-479f-ba96-c08abbb457a2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RoundWonMessageTests.js",
            "uuid": "be10e4d3-08a6-479f-ba96-c08abbb457a2",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RoundWonMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "RoundWonMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "5c322d42-9857-4da1-b45a-a459aca09568",
                "parentUUID": "be10e4d3-08a6-479f-ba96-c08abbb457a2",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "RoundWonMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "7580ff6b-e897-441b-a233-d2e5e6999da4",
                "parentUUID": "be10e4d3-08a6-479f-ba96-c08abbb457a2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/RoundWonMessageTests.js",
        "uuid": "cb9775bc-eaa6-4f32-8ed5-4b370fc93bc8",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RoundWonMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SessionCompleted",
        "suites": [
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionCompleted #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionCompleted();<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "b84a8f04-be06-46a4-be6e-69e1ed5f95ca",
                "parentUUID": "94b587bc-3631-43d0-bf28-7436d3e522f6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionCompletedTests.js",
            "uuid": "94b587bc-3631-43d0-bf28-7436d3e522f6",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompletedTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionCompleted #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionCompleted();<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "b84a8f04-be06-46a4-be6e-69e1ed5f95ca",
                "parentUUID": "94b587bc-3631-43d0-bf28-7436d3e522f6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SessionCompletedTests.js",
        "uuid": "b932bff9-19b9-49d6-89bf-3299a0c26df0",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompletedTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SessionComplete",
        "suites": [
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SessionComplete #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "59718188-0e76-4243-81d5-ab0888c20d24",
                "parentUUID": "c4c9c65a-b21e-4b7b-8b7a-9b4eaf084057",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionComplete #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "1ec67f4f-a80a-4d05-aded-c5f35b952236",
                "parentUUID": "c4c9c65a-b21e-4b7b-8b7a-9b4eaf084057",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionCompleteTests.js",
            "uuid": "c4c9c65a-b21e-4b7b-8b7a-9b4eaf084057",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompleteTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SessionComplete #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "59718188-0e76-4243-81d5-ab0888c20d24",
                "parentUUID": "c4c9c65a-b21e-4b7b-8b7a-9b4eaf084057",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionComplete #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "1ec67f4f-a80a-4d05-aded-c5f35b952236",
                "parentUUID": "c4c9c65a-b21e-4b7b-8b7a-9b4eaf084057",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SessionComplete #hostId should set value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "95ef94ad-dd4b-4b45-8c95-4f4dacff9042",
                "parentUUID": "2a3b0e2a-9ffe-4aef-9825-ba215c64a31c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionComplete #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "444048cb-6164-4498-bd1c-d3e668d955da",
                "parentUUID": "2a3b0e2a-9ffe-4aef-9825-ba215c64a31c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionCompleteTests.js",
            "uuid": "2a3b0e2a-9ffe-4aef-9825-ba215c64a31c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompleteTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SessionComplete #hostId should set value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "95ef94ad-dd4b-4b45-8c95-4f4dacff9042",
                "parentUUID": "2a3b0e2a-9ffe-4aef-9825-ba215c64a31c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionComplete #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "444048cb-6164-4498-bd1c-d3e668d955da",
                "parentUUID": "2a3b0e2a-9ffe-4aef-9825-ba215c64a31c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionComplete #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "748d7a19-1ff6-482c-9d72-9f91aff4218b",
                "parentUUID": "f1ddd173-0de6-4ad6-95b7-d8855e158687",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionComplete #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "73f914b7-4eb8-46be-a601-abf199e59817",
                "parentUUID": "f1ddd173-0de6-4ad6-95b7-d8855e158687",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionCompleteTests.js",
            "uuid": "f1ddd173-0de6-4ad6-95b7-d8855e158687",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompleteTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionComplete #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "748d7a19-1ff6-482c-9d72-9f91aff4218b",
                "parentUUID": "f1ddd173-0de6-4ad6-95b7-d8855e158687",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionComplete #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "73f914b7-4eb8-46be-a601-abf199e59817",
                "parentUUID": "f1ddd173-0de6-4ad6-95b7-d8855e158687",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SessionCompleteTests.js",
        "uuid": "a9230f43-ca08-4227-bf8a-fa8700cf0f05",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompleteTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SessionInformationRequestMessage",
        "suites": [
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SessionInformationRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "05468ec2-7c06-4c6c-828c-e81f38e84884",
                "parentUUID": "12eda6c8-f0f5-43fa-83a8-1aa5aafdabbf",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionInformationRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "d4bc879a-bdfa-4870-9b9b-cbb6b7b0b0bc",
                "parentUUID": "12eda6c8-f0f5-43fa-83a8-1aa5aafdabbf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "uuid": "12eda6c8-f0f5-43fa-83a8-1aa5aafdabbf",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SessionInformationRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "05468ec2-7c06-4c6c-828c-e81f38e84884",
                "parentUUID": "12eda6c8-f0f5-43fa-83a8-1aa5aafdabbf",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionInformationRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "d4bc879a-bdfa-4870-9b9b-cbb6b7b0b0bc",
                "parentUUID": "12eda6c8-f0f5-43fa-83a8-1aa5aafdabbf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#participantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SessionInformationRequestMessage #participantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "3cf47900-09b8-47fb-8d98-f8b9bb3d0fb0",
                "parentUUID": "aec797fc-956a-4622-80b6-56c1b54aa50f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionInformationRequestMessage #participantId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "68843028-0449-4c14-8b05-5df250774543",
                "parentUUID": "aec797fc-956a-4622-80b6-56c1b54aa50f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "uuid": "aec797fc-956a-4622-80b6-56c1b54aa50f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SessionInformationRequestMessage #participantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "3cf47900-09b8-47fb-8d98-f8b9bb3d0fb0",
                "parentUUID": "aec797fc-956a-4622-80b6-56c1b54aa50f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionInformationRequestMessage #participantId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "68843028-0449-4c14-8b05-5df250774543",
                "parentUUID": "aec797fc-956a-4622-80b6-56c1b54aa50f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionInformationRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "c580cd8b-70d4-4dd5-a4cd-6361a92ba375",
                "parentUUID": "5ab839a3-07f0-4643-a67d-820dc4fb99f3",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionInformationRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "c45810af-ad5b-45aa-8112-b4768048a449",
                "parentUUID": "5ab839a3-07f0-4643-a67d-820dc4fb99f3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "uuid": "5ab839a3-07f0-4643-a67d-820dc4fb99f3",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionInformationRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "c580cd8b-70d4-4dd5-a4cd-6361a92ba375",
                "parentUUID": "5ab839a3-07f0-4643-a67d-820dc4fb99f3",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionInformationRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "c45810af-ad5b-45aa-8112-b4768048a449",
                "parentUUID": "5ab839a3-07f0-4643-a67d-820dc4fb99f3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
        "uuid": "a8df8f1a-40aa-40a4-afc5-0110deff8d7e",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SessionInformationResponseMessage",
        "suites": [
          {
            "title": "#info",
            "suites": [],
            "tests": [
              {
                "title": "should get value",
                "fullTitle": "SessionInformationResponseMessage #info should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.should.be.Object();",
                "isRoot": false,
                "uuid": "e0aa2d1e-6554-4480-9dd4-033d86a087f7",
                "parentUUID": "c428014a-ce74-4146-a1ad-f5d783182923",
                "skipped": false
              },
              {
                "title": "should not have ids",
                "fullTitle": "SessionInformationResponseMessage #info should not have ids",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.host.should.not.be.null();<br>should.not.exist(m.info.host.id);",
                "isRoot": false,
                "uuid": "06ddf2a1-6bfa-4b54-bdeb-4eef13a845d1",
                "parentUUID": "c428014a-ce74-4146-a1ad-f5d783182923",
                "skipped": false
              },
              {
                "title": "should promote private field _ to public field",
                "fullTitle": "SessionInformationResponseMessage #info should promote private field _ to public field",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>should.not.exist(m.info._host);<br>should.not.exist(m.info._session);<br>should.exist(m.info.host);<br>should.exist(m.info.session);<br>should.exist(m.info.session.settings.teamLeaderSelectionMethod);",
                "isRoot": false,
                "uuid": "ae097e94-cb87-4f69-9d57-0668d16de952",
                "parentUUID": "c428014a-ce74-4146-a1ad-f5d783182923",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
            "uuid": "c428014a-ce74-4146-a1ad-f5d783182923",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
            "passes": [
              {
                "title": "should get value",
                "fullTitle": "SessionInformationResponseMessage #info should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.should.be.Object();",
                "isRoot": false,
                "uuid": "e0aa2d1e-6554-4480-9dd4-033d86a087f7",
                "parentUUID": "c428014a-ce74-4146-a1ad-f5d783182923",
                "skipped": false
              },
              {
                "title": "should not have ids",
                "fullTitle": "SessionInformationResponseMessage #info should not have ids",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.host.should.not.be.null();<br>should.not.exist(m.info.host.id);",
                "isRoot": false,
                "uuid": "06ddf2a1-6bfa-4b54-bdeb-4eef13a845d1",
                "parentUUID": "c428014a-ce74-4146-a1ad-f5d783182923",
                "skipped": false
              },
              {
                "title": "should promote private field _ to public field",
                "fullTitle": "SessionInformationResponseMessage #info should promote private field _ to public field",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>should.not.exist(m.info._host);<br>should.not.exist(m.info._session);<br>should.exist(m.info.host);<br>should.exist(m.info.session);<br>should.exist(m.info.session.settings.teamLeaderSelectionMethod);",
                "isRoot": false,
                "uuid": "ae097e94-cb87-4f69-9d57-0668d16de952",
                "parentUUID": "c428014a-ce74-4146-a1ad-f5d783182923",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionInformationResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "27fd695f-cde7-408b-b2b3-adc800681023",
                "parentUUID": "ebd0f270-27ac-43a4-83d7-6e28f9335704",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionInformationResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "5b1e0b8f-a7aa-439a-a89e-8e9ad2bc0f02",
                "parentUUID": "ebd0f270-27ac-43a4-83d7-6e28f9335704",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
            "uuid": "ebd0f270-27ac-43a4-83d7-6e28f9335704",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionInformationResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "27fd695f-cde7-408b-b2b3-adc800681023",
                "parentUUID": "ebd0f270-27ac-43a4-83d7-6e28f9335704",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionInformationResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "5b1e0b8f-a7aa-439a-a89e-8e9ad2bc0f02",
                "parentUUID": "ebd0f270-27ac-43a4-83d7-6e28f9335704",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
        "uuid": "fcb0d1d8-04a4-40d3-b59a-36d567f5bdd4",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SetTeamNameRequestMessage",
        "suites": [
          {
            "title": "#teamName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e8d32622-66b0-4e81-a3f7-5377ede4c1ed",
                "parentUUID": "e4f0c9cf-9036-4f15-81d9-cbc3c3a42283",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "d64bb59d-7c18-4120-844d-688655252586",
                "parentUUID": "e4f0c9cf-9036-4f15-81d9-cbc3c3a42283",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "uuid": "e4f0c9cf-9036-4f15-81d9-cbc3c3a42283",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e8d32622-66b0-4e81-a3f7-5377ede4c1ed",
                "parentUUID": "e4f0c9cf-9036-4f15-81d9-cbc3c3a42283",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "d64bb59d-7c18-4120-844d-688655252586",
                "parentUUID": "e4f0c9cf-9036-4f15-81d9-cbc3c3a42283",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "29216374-4eb2-420e-b6e2-1c80f152b8a7",
                "parentUUID": "fed4660e-b5f7-44a4-b61e-48a87012e034",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "33237947-da24-4c28-8699-84eb5c0f0029",
                "parentUUID": "fed4660e-b5f7-44a4-b61e-48a87012e034",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "uuid": "fed4660e-b5f7-44a4-b61e-48a87012e034",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "29216374-4eb2-420e-b6e2-1c80f152b8a7",
                "parentUUID": "fed4660e-b5f7-44a4-b61e-48a87012e034",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "33237947-da24-4c28-8699-84eb5c0f0029",
                "parentUUID": "fed4660e-b5f7-44a4-b61e-48a87012e034",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#contestantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "c65b88cf-d9b0-479e-9e02-693e0cf5a6b6",
                "parentUUID": "76a35348-21ea-46f1-929a-9fa0f50e123f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "2746112f-7993-48fc-acda-49246fa28486",
                "parentUUID": "76a35348-21ea-46f1-929a-9fa0f50e123f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "uuid": "76a35348-21ea-46f1-929a-9fa0f50e123f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "c65b88cf-d9b0-479e-9e02-693e0cf5a6b6",
                "parentUUID": "76a35348-21ea-46f1-929a-9fa0f50e123f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "2746112f-7993-48fc-acda-49246fa28486",
                "parentUUID": "76a35348-21ea-46f1-929a-9fa0f50e123f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SetTeamNameRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.contestantId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "65776311-00b2-4cdd-9374-2b54f7cc87ed",
                "parentUUID": "427108f0-37f8-404b-b4a1-c19d72a98af2",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SetTeamNameRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "064ef88e-d81a-4eab-a441-141239284818",
                "parentUUID": "427108f0-37f8-404b-b4a1-c19d72a98af2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "uuid": "427108f0-37f8-404b-b4a1-c19d72a98af2",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SetTeamNameRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.contestantId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "65776311-00b2-4cdd-9374-2b54f7cc87ed",
                "parentUUID": "427108f0-37f8-404b-b4a1-c19d72a98af2",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SetTeamNameRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "064ef88e-d81a-4eab-a441-141239284818",
                "parentUUID": "427108f0-37f8-404b-b4a1-c19d72a98af2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
        "uuid": "f9f68e00-d312-4d1e-aa59-a7d153f5697f",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SuccessMessage",
        "suites": [
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SuccessMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SuccessMessage();<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "28665704-f3dc-4cef-88fd-551beaa26eee",
                "parentUUID": "611c5b5a-b5be-41a2-a404-5c731939d03b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SuccessMessageTests.js",
            "uuid": "611c5b5a-b5be-41a2-a404-5c731939d03b",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SuccessMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SuccessMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SuccessMessage();<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "28665704-f3dc-4cef-88fd-551beaa26eee",
                "parentUUID": "611c5b5a-b5be-41a2-a404-5c731939d03b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SuccessMessageTests.js",
        "uuid": "168a8e15-8eaf-4fda-9605-773189500301",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SuccessMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ParamCheck",
        "suites": [
          {
            "title": "#isInstanceAndTypeOf()",
            "suites": [],
            "tests": [
              {
                "title": "should return false when not referenced",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when not referenced",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf().should.be.false();",
                "isRoot": false,
                "uuid": "fc3871f7-ab23-4ace-88fe-b8be4017419f",
                "parentUUID": "d05aed87-54e9-405b-a0c0-2f2d27b794ea",
                "skipped": false
              },
              {
                "title": "should return false when null",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when null",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">''</span>).should.be.false();",
                "isRoot": false,
                "uuid": "0f6d73b3-922a-4ecb-9d1d-55eeb3fb9638",
                "parentUUID": "d05aed87-54e9-405b-a0c0-2f2d27b794ea",
                "skipped": false
              },
              {
                "title": "should return false when not the correct type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when not the correct type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'Int'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "39b27f59-3eef-4e87-baec-dc02dd9904e4",
                "parentUUID": "d05aed87-54e9-405b-a0c0-2f2d27b794ea",
                "skipped": false
              },
              {
                "title": "should return true when is a built-in type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return true when is a built-in type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'Number'</span>).should.be.true();",
                "isRoot": false,
                "uuid": "5f27b478-62ca-40a7-9a19-e7f2f94a9c14",
                "parentUUID": "d05aed87-54e9-405b-a0c0-2f2d27b794ea",
                "skipped": false
              },
              {
                "title": "should return true when is user defined type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return true when is user defined type",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-keyword\">new</span> UserDefinedType(),<br>    UserDefinedType).should.be.true();",
                "isRoot": false,
                "uuid": "7c44ed7d-fbfa-480b-a470-8766d7a54155",
                "parentUUID": "d05aed87-54e9-405b-a0c0-2f2d27b794ea",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParamCheckTests.js",
            "uuid": "d05aed87-54e9-405b-a0c0-2f2d27b794ea",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParamCheckTests.js",
            "passes": [
              {
                "title": "should return false when not referenced",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when not referenced",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf().should.be.false();",
                "isRoot": false,
                "uuid": "fc3871f7-ab23-4ace-88fe-b8be4017419f",
                "parentUUID": "d05aed87-54e9-405b-a0c0-2f2d27b794ea",
                "skipped": false
              },
              {
                "title": "should return false when null",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when null",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">''</span>).should.be.false();",
                "isRoot": false,
                "uuid": "0f6d73b3-922a-4ecb-9d1d-55eeb3fb9638",
                "parentUUID": "d05aed87-54e9-405b-a0c0-2f2d27b794ea",
                "skipped": false
              },
              {
                "title": "should return false when not the correct type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when not the correct type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'Int'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "39b27f59-3eef-4e87-baec-dc02dd9904e4",
                "parentUUID": "d05aed87-54e9-405b-a0c0-2f2d27b794ea",
                "skipped": false
              },
              {
                "title": "should return true when is a built-in type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return true when is a built-in type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'Number'</span>).should.be.true();",
                "isRoot": false,
                "uuid": "5f27b478-62ca-40a7-9a19-e7f2f94a9c14",
                "parentUUID": "d05aed87-54e9-405b-a0c0-2f2d27b794ea",
                "skipped": false
              },
              {
                "title": "should return true when is user defined type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return true when is user defined type",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-keyword\">new</span> UserDefinedType(),<br>    UserDefinedType).should.be.true();",
                "isRoot": false,
                "uuid": "7c44ed7d-fbfa-480b-a470-8766d7a54155",
                "parentUUID": "d05aed87-54e9-405b-a0c0-2f2d27b794ea",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/ParamCheckTests.js",
        "uuid": "a8ccea65-5540-4805-ab58-7024632395b3",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParamCheckTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Participants",
        "suites": [
          {
            "title": "#all",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participants #all should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "09eac2e8-b89c-4f9e-9802-c5e2588551b9",
                "parentUUID": "55b99276-a699-4eea-8031-9f02660414e4",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participants #all should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "35128f11-bcce-4b50-995f-d1316e591163",
                "parentUUID": "55b99276-a699-4eea-8031-9f02660414e4",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Participants #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all.pop();<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "fca03ffb-bf20-472a-aca7-eec82c1133d7",
                "parentUUID": "55b99276-a699-4eea-8031-9f02660414e4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "55b99276-a699-4eea-8031-9f02660414e4",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participants #all should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "09eac2e8-b89c-4f9e-9802-c5e2588551b9",
                "parentUUID": "55b99276-a699-4eea-8031-9f02660414e4",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participants #all should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "35128f11-bcce-4b50-995f-d1316e591163",
                "parentUUID": "55b99276-a699-4eea-8031-9f02660414e4",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Participants #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all.pop();<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "fca03ffb-bf20-472a-aca7-eec82c1133d7",
                "parentUUID": "55b99276-a699-4eea-8031-9f02660414e4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#length",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participants #length should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.length = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "25152a92-4ff4-497e-916f-bd7fae774475",
                "parentUUID": "2b5095f5-1dea-4d46-8802-d4b86855b321",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participants #length should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "7fe17e3c-92bb-4d95-aa37-d1dcd752d14b",
                "parentUUID": "2b5095f5-1dea-4d46-8802-d4b86855b321",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "2b5095f5-1dea-4d46-8802-d4b86855b321",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participants #length should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.length = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "25152a92-4ff4-497e-916f-bd7fae774475",
                "parentUUID": "2b5095f5-1dea-4d46-8802-d4b86855b321",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participants #length should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "7fe17e3c-92bb-4d95-aa37-d1dcd752d14b",
                "parentUUID": "2b5095f5-1dea-4d46-8802-d4b86855b321",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#contains(id)",
            "suites": [],
            "tests": [
              {
                "title": "should return true when id does exist",
                "fullTitle": "Participants #contains(id) should return true when id does exist",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(p.id).should.be.true();",
                "isRoot": false,
                "uuid": "7c9ef772-f15d-4dee-992e-7f343a9f4753",
                "parentUUID": "7d4d6f15-e021-4ed7-ac52-d6b299dffba2",
                "skipped": false
              },
              {
                "title": "should return false when id does not exist",
                "fullTitle": "Participants #contains(id) should return false when id does not exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(<span class=\"hljs-string\">'p2'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "3bd70445-fb30-49bb-85c7-3f9ea2c10dd1",
                "parentUUID": "7d4d6f15-e021-4ed7-ac52-d6b299dffba2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "7d4d6f15-e021-4ed7-ac52-d6b299dffba2",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should return true when id does exist",
                "fullTitle": "Participants #contains(id) should return true when id does exist",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(p.id).should.be.true();",
                "isRoot": false,
                "uuid": "7c9ef772-f15d-4dee-992e-7f343a9f4753",
                "parentUUID": "7d4d6f15-e021-4ed7-ac52-d6b299dffba2",
                "skipped": false
              },
              {
                "title": "should return false when id does not exist",
                "fullTitle": "Participants #contains(id) should return false when id does not exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(<span class=\"hljs-string\">'p2'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "3bd70445-fb30-49bb-85c7-3f9ea2c10dd1",
                "parentUUID": "7d4d6f15-e021-4ed7-ac52-d6b299dffba2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#add(participant)",
            "suites": [],
            "tests": [
              {
                "title": "should add the given participant",
                "fullTitle": "Participants #add(participant) should add the given participant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc._participants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc._participants[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "66faa71f-b376-4fd8-b1ca-e2281cd31186",
                "parentUUID": "ed8f05cd-a05c-477a-a86a-c8ae20bf8607",
                "skipped": false
              },
              {
                "title": "should error if participant with id already exists",
                "fullTitle": "Participants #add(participant) should error if participant with id already exists",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.add(p);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "c942231b-3ab4-49a6-bb5c-bdfde0ed5463",
                "parentUUID": "ed8f05cd-a05c-477a-a86a-c8ae20bf8607",
                "skipped": false
              },
              {
                "title": "should emit add event",
                "fullTitle": "Participants #add(participant) should emit add event",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.on(<span class=\"hljs-string\">'add'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">participant</span>) </span>{<br>    participant.should.equal(p);<br>    done();<br>});<br>pc.add(p);",
                "isRoot": false,
                "uuid": "e080fda9-1a45-4624-be9a-42c23a30dbdd",
                "parentUUID": "ed8f05cd-a05c-477a-a86a-c8ae20bf8607",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "ed8f05cd-a05c-477a-a86a-c8ae20bf8607",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should add the given participant",
                "fullTitle": "Participants #add(participant) should add the given participant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc._participants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc._participants[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "66faa71f-b376-4fd8-b1ca-e2281cd31186",
                "parentUUID": "ed8f05cd-a05c-477a-a86a-c8ae20bf8607",
                "skipped": false
              },
              {
                "title": "should error if participant with id already exists",
                "fullTitle": "Participants #add(participant) should error if participant with id already exists",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.add(p);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "c942231b-3ab4-49a6-bb5c-bdfde0ed5463",
                "parentUUID": "ed8f05cd-a05c-477a-a86a-c8ae20bf8607",
                "skipped": false
              },
              {
                "title": "should emit add event",
                "fullTitle": "Participants #add(participant) should emit add event",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.on(<span class=\"hljs-string\">'add'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">participant</span>) </span>{<br>    participant.should.equal(p);<br>    done();<br>});<br>pc.add(p);",
                "isRoot": false,
                "uuid": "e080fda9-1a45-4624-be9a-42c23a30dbdd",
                "parentUUID": "ed8f05cd-a05c-477a-a86a-c8ae20bf8607",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#remove(participant)",
            "suites": [],
            "tests": [
              {
                "title": "should remove the existing participant",
                "fullTitle": "Participants #remove(participant) should remove the existing participant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "9811db4f-30db-4463-9170-8bdda313bb8c",
                "parentUUID": "9fdb2753-194d-479b-bc6d-68bb327ce480",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing participant",
                "fullTitle": "Participants #remove(participant) should not remove the non-existing participant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p1).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "851c07cb-859f-4f19-8a20-18cd66ec23df",
                "parentUUID": "9fdb2753-194d-479b-bc6d-68bb327ce480",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "9fdb2753-194d-479b-bc6d-68bb327ce480",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should remove the existing participant",
                "fullTitle": "Participants #remove(participant) should remove the existing participant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "9811db4f-30db-4463-9170-8bdda313bb8c",
                "parentUUID": "9fdb2753-194d-479b-bc6d-68bb327ce480",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing participant",
                "fullTitle": "Participants #remove(participant) should not remove the non-existing participant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p1).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "851c07cb-859f-4f19-8a20-18cd66ec23df",
                "parentUUID": "9fdb2753-194d-479b-bc6d-68bb327ce480",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#removeById(id)",
            "suites": [],
            "tests": [
              {
                "title": "should remove the existing participant",
                "fullTitle": "Participants #removeById(id) should remove the existing participant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p.id).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "04ced8bc-c09a-477d-9e1f-76acf9e1fd5c",
                "parentUUID": "9b6f0530-9ae3-48f4-b898-3d5d6a1be49c",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing participant",
                "fullTitle": "Participants #removeById(id) should not remove the non-existing participant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p1.id).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "9703c270-7e72-4976-b83b-780bed1d1f5f",
                "parentUUID": "9b6f0530-9ae3-48f4-b898-3d5d6a1be49c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "9b6f0530-9ae3-48f4-b898-3d5d6a1be49c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should remove the existing participant",
                "fullTitle": "Participants #removeById(id) should remove the existing participant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p.id).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "04ced8bc-c09a-477d-9e1f-76acf9e1fd5c",
                "parentUUID": "9b6f0530-9ae3-48f4-b898-3d5d6a1be49c",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing participant",
                "fullTitle": "Participants #removeById(id) should not remove the non-existing participant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p1.id).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "9703c270-7e72-4976-b83b-780bed1d1f5f",
                "parentUUID": "9b6f0530-9ae3-48f4-b898-3d5d6a1be49c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/ParticipantsTests.js",
        "uuid": "3e0008b5-0afd-4485-9dd0-fbcb11aa6938",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Participant",
        "suites": [
          {
            "title": "#id",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Participant #id should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'id_test'</span>;<br>p._id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "24234b40-9704-4e33-84ba-af772cbc3743",
                "parentUUID": "4e8ca7c6-383c-4a5d-b269-4e32fd5358e5",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participant #id should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "d18ff104-6387-43e2-823f-d742253f391b",
                "parentUUID": "4e8ca7c6-383c-4a5d-b269-4e32fd5358e5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantTests.js",
            "uuid": "4e8ca7c6-383c-4a5d-b269-4e32fd5358e5",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Participant #id should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'id_test'</span>;<br>p._id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "24234b40-9704-4e33-84ba-af772cbc3743",
                "parentUUID": "4e8ca7c6-383c-4a5d-b269-4e32fd5358e5",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participant #id should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "d18ff104-6387-43e2-823f-d742253f391b",
                "parentUUID": "4e8ca7c6-383c-4a5d-b269-4e32fd5358e5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isDisconnected",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participant #isDisconnected should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    p.isDisconnected = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "a14e5290-6c5d-4e98-82cf-7723cdc1f900",
                "parentUUID": "bbe2db22-9c5d-407b-b453-deab72a5cdcc",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participant #isDisconnected should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "b6f6ee23-2f46-46bf-bed9-f1182f568e17",
                "parentUUID": "bbe2db22-9c5d-407b-b453-deab72a5cdcc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantTests.js",
            "uuid": "bbe2db22-9c5d-407b-b453-deab72a5cdcc",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participant #isDisconnected should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    p.isDisconnected = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "a14e5290-6c5d-4e98-82cf-7723cdc1f900",
                "parentUUID": "bbe2db22-9c5d-407b-b453-deab72a5cdcc",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participant #isDisconnected should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "b6f6ee23-2f46-46bf-bed9-f1182f568e17",
                "parentUUID": "bbe2db22-9c5d-407b-b453-deab72a5cdcc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#disconnect()",
            "suites": [],
            "tests": [
              {
                "title": "should change participant state to disconnected",
                "fullTitle": "Participant #disconnect() should change participant state to disconnected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">false</span>;<br>p.disconnect();<br>p.isDisconnected.should.be.true();",
                "isRoot": false,
                "uuid": "7336f396-3cef-4d0e-a913-09fb16a9f51a",
                "parentUUID": "a65ec347-2c1a-4161-9745-9b0536d88aba",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantTests.js",
            "uuid": "a65ec347-2c1a-4161-9745-9b0536d88aba",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantTests.js",
            "passes": [
              {
                "title": "should change participant state to disconnected",
                "fullTitle": "Participant #disconnect() should change participant state to disconnected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">false</span>;<br>p.disconnect();<br>p.isDisconnected.should.be.true();",
                "isRoot": false,
                "uuid": "7336f396-3cef-4d0e-a913-09fb16a9f51a",
                "parentUUID": "a65ec347-2c1a-4161-9745-9b0536d88aba",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#reconnect()",
            "suites": [],
            "tests": [
              {
                "title": "should change participant state to connected",
                "fullTitle": "Participant #reconnect() should change participant state to connected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">true</span>;<br>p.reconnect();<br>p.isDisconnected.should.be.false();",
                "isRoot": false,
                "uuid": "a2116ace-a884-4ec6-b813-e3f29b2be62a",
                "parentUUID": "34354528-83cd-41a8-a247-f31668d28ab0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantTests.js",
            "uuid": "34354528-83cd-41a8-a247-f31668d28ab0",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantTests.js",
            "passes": [
              {
                "title": "should change participant state to connected",
                "fullTitle": "Participant #reconnect() should change participant state to connected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">true</span>;<br>p.reconnect();<br>p.isDisconnected.should.be.false();",
                "isRoot": false,
                "uuid": "a2116ace-a884-4ec6-b813-e3f29b2be62a",
                "parentUUID": "34354528-83cd-41a8-a247-f31668d28ab0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/ParticipantTests.js",
        "uuid": "1c502530-1636-4268-806b-42956036b6ee",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Sessions",
        "suites": [
          {
            "title": "#all",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Sessions #all should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    sc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "a19fabfb-7d31-498d-8c28-704605977088",
                "parentUUID": "f619698d-743d-4022-837a-ae16d9643d60",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Sessions #all should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
                "isRoot": false,
                "uuid": "b7d96cbf-281f-49cf-ae10-a7b1d51497a7",
                "parentUUID": "f619698d-743d-4022-837a-ae16d9643d60",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Sessions #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all.pop();<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
                "isRoot": false,
                "uuid": "2e3d25de-41e1-4fbb-9137-fbeffd062380",
                "parentUUID": "f619698d-743d-4022-837a-ae16d9643d60",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionsTests.js",
            "uuid": "f619698d-743d-4022-837a-ae16d9643d60",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionsTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Sessions #all should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    sc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "a19fabfb-7d31-498d-8c28-704605977088",
                "parentUUID": "f619698d-743d-4022-837a-ae16d9643d60",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Sessions #all should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
                "isRoot": false,
                "uuid": "b7d96cbf-281f-49cf-ae10-a7b1d51497a7",
                "parentUUID": "f619698d-743d-4022-837a-ae16d9643d60",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Sessions #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all.pop();<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
                "isRoot": false,
                "uuid": "2e3d25de-41e1-4fbb-9137-fbeffd062380",
                "parentUUID": "f619698d-743d-4022-837a-ae16d9643d60",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#add(host, settings)",
            "suites": [],
            "tests": [
              {
                "title": "add and return session",
                "fullTitle": "Sessions #add(host, settings) add and return session",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-keyword\">var</span> ses = sc.add(h, s);<br>ses.should.be.instanceof(Session);",
                "isRoot": false,
                "uuid": "0048ff2e-7bab-4ac8-9733-0fa319041d24",
                "parentUUID": "4247a1b9-9c93-44a2-a810-16babf37ca2e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionsTests.js",
            "uuid": "4247a1b9-9c93-44a2-a810-16babf37ca2e",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionsTests.js",
            "passes": [
              {
                "title": "add and return session",
                "fullTitle": "Sessions #add(host, settings) add and return session",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-keyword\">var</span> ses = sc.add(h, s);<br>ses.should.be.instanceof(Session);",
                "isRoot": false,
                "uuid": "0048ff2e-7bab-4ac8-9733-0fa319041d24",
                "parentUUID": "4247a1b9-9c93-44a2-a810-16babf37ca2e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#getById(id)",
            "suites": [],
            "tests": [
              {
                "title": "when given valid id should return session",
                "fullTitle": "Sessions #getById(id) when given valid id should return session",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-comment\">/* eslint-disable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses1 = sc.add(h, s);<br><span class=\"hljs-comment\">/* eslint-enable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses2 = sc.add(h, s);<br><span class=\"hljs-keyword\">var</span> sessionLocate = sc.getById(ses2.id);<br>sessionLocate.should.be.instanceof(Session)<br>    .and.equal(ses2);",
                "isRoot": false,
                "uuid": "4a1655dc-d0d9-4f01-b777-758d40992547",
                "parentUUID": "6d841489-5831-449c-9a9b-91b49f73f78b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionsTests.js",
            "uuid": "6d841489-5831-449c-9a9b-91b49f73f78b",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionsTests.js",
            "passes": [
              {
                "title": "when given valid id should return session",
                "fullTitle": "Sessions #getById(id) when given valid id should return session",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-comment\">/* eslint-disable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses1 = sc.add(h, s);<br><span class=\"hljs-comment\">/* eslint-enable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses2 = sc.add(h, s);<br><span class=\"hljs-keyword\">var</span> sessionLocate = sc.getById(ses2.id);<br>sessionLocate.should.be.instanceof(Session)<br>    .and.equal(ses2);",
                "isRoot": false,
                "uuid": "4a1655dc-d0d9-4f01-b777-758d40992547",
                "parentUUID": "6d841489-5831-449c-9a9b-91b49f73f78b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#purgeCompleted()",
            "suites": [],
            "tests": [
              {
                "title": "should remove complete sc",
                "fullTitle": "Sessions #purgeCompleted() should remove complete sc",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.all[<span class=\"hljs-number\">0</span>].complete();<br>sc.all[<span class=\"hljs-number\">1</span>].complete();<br>sc.purgeCompleted();<br>sc.all.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "cab63fe2-0f68-48e2-95b7-8e5885f9414c",
                "parentUUID": "f19ce19f-fcf4-4b20-9e06-c758a31bafbb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionsTests.js",
            "uuid": "f19ce19f-fcf4-4b20-9e06-c758a31bafbb",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionsTests.js",
            "passes": [
              {
                "title": "should remove complete sc",
                "fullTitle": "Sessions #purgeCompleted() should remove complete sc",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.all[<span class=\"hljs-number\">0</span>].complete();<br>sc.all[<span class=\"hljs-number\">1</span>].complete();<br>sc.purgeCompleted();<br>sc.all.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "cab63fe2-0f68-48e2-95b7-8e5885f9414c",
                "parentUUID": "f19ce19f-fcf4-4b20-9e06-c758a31bafbb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/SessionsTests.js",
        "uuid": "0fec2a64-0334-4487-bdb0-57aa62a6c1ad",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionsTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Session",
        "suites": [
          {
            "title": "#constructor",
            "suites": [],
            "tests": [
              {
                "title": "should create teams",
                "fullTitle": "Session #constructor should create teams",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "d59b83a0-63cf-47ec-a5c3-a8af0caf367d",
                "parentUUID": "17d099fb-faa7-47fe-b6b1-32d574ff709d",
                "skipped": false
              },
              {
                "title": "should not create teams",
                "fullTitle": "Session #constructor should not create teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>should(s.teams).be.null();",
                "isRoot": false,
                "uuid": "77846a58-9243-4993-ae90-269661e416c4",
                "parentUUID": "17d099fb-faa7-47fe-b6b1-32d574ff709d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "17d099fb-faa7-47fe-b6b1-32d574ff709d",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should create teams",
                "fullTitle": "Session #constructor should create teams",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "d59b83a0-63cf-47ec-a5c3-a8af0caf367d",
                "parentUUID": "17d099fb-faa7-47fe-b6b1-32d574ff709d",
                "skipped": false
              },
              {
                "title": "should not create teams",
                "fullTitle": "Session #constructor should not create teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>should(s.teams).be.null();",
                "isRoot": false,
                "uuid": "77846a58-9243-4993-ae90-269661e416c4",
                "parentUUID": "17d099fb-faa7-47fe-b6b1-32d574ff709d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          },
          {
            "title": "#id",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #id should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.id = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "42f2bbc2-2502-4928-b89e-3561316df696",
                "parentUUID": "c21ee296-40eb-4343-9290-22c99f06d5e2",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #id should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "b654dd55-0b71-4cb5-9102-9a05d99a491c",
                "parentUUID": "c21ee296-40eb-4343-9290-22c99f06d5e2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "c21ee296-40eb-4343-9290-22c99f06d5e2",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #id should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.id = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "42f2bbc2-2502-4928-b89e-3561316df696",
                "parentUUID": "c21ee296-40eb-4343-9290-22c99f06d5e2",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #id should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "b654dd55-0b71-4cb5-9102-9a05d99a491c",
                "parentUUID": "c21ee296-40eb-4343-9290-22c99f06d5e2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#roundsPlayed",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #roundsPlayed should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundsPlayed = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "0353870f-cc1c-47e2-846f-2a6031e89abb",
                "parentUUID": "8935b396-31d6-4dc2-9581-a8d95dda8f1c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #roundsPlayed should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "c353d5ed-2be4-4c1b-a895-2c121fafda24",
                "parentUUID": "8935b396-31d6-4dc2-9581-a8d95dda8f1c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "8935b396-31d6-4dc2-9581-a8d95dda8f1c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #roundsPlayed should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundsPlayed = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "0353870f-cc1c-47e2-846f-2a6031e89abb",
                "parentUUID": "8935b396-31d6-4dc2-9581-a8d95dda8f1c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #roundsPlayed should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "c353d5ed-2be4-4c1b-a895-2c121fafda24",
                "parentUUID": "8935b396-31d6-4dc2-9581-a8d95dda8f1c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#previousWinners",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #previousWinners should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.previousWinners = [<span class=\"hljs-string\">'SomeWinner'</span>];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "11fcd910-68d1-458a-90ce-9099224e05fc",
                "parentUUID": "61a75273-137f-491c-ad3e-c0099dc8c08d",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #previousWinners should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._previousWinners = [<span class=\"hljs-string\">'Winner1'</span>, <span class=\"hljs-string\">'Winner2'</span>];<br>s.previousWinners.should.be.Array();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
                "isRoot": false,
                "uuid": "d9035419-676e-4d46-95aa-7940dd34b234",
                "parentUUID": "61a75273-137f-491c-ad3e-c0099dc8c08d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "61a75273-137f-491c-ad3e-c0099dc8c08d",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #previousWinners should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.previousWinners = [<span class=\"hljs-string\">'SomeWinner'</span>];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "11fcd910-68d1-458a-90ce-9099224e05fc",
                "parentUUID": "61a75273-137f-491c-ad3e-c0099dc8c08d",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #previousWinners should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._previousWinners = [<span class=\"hljs-string\">'Winner1'</span>, <span class=\"hljs-string\">'Winner2'</span>];<br>s.previousWinners.should.be.Array();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
                "isRoot": false,
                "uuid": "d9035419-676e-4d46-95aa-7940dd34b234",
                "parentUUID": "61a75273-137f-491c-ad3e-c0099dc8c08d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#roundWinner",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #roundWinner should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundWinner = <span class=\"hljs-string\">'SomeWinner'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "0460aded-3b6a-44dc-8e72-e7f95cb4b59f",
                "parentUUID": "e066151d-b3f9-4faf-9712-58d4966f991e",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #roundWinner should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundWinner = <span class=\"hljs-string\">'Winner1'</span>;<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
                "isRoot": false,
                "uuid": "b15d291a-42c1-4205-9264-feddfc995bfa",
                "parentUUID": "e066151d-b3f9-4faf-9712-58d4966f991e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "e066151d-b3f9-4faf-9712-58d4966f991e",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #roundWinner should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundWinner = <span class=\"hljs-string\">'SomeWinner'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "0460aded-3b6a-44dc-8e72-e7f95cb4b59f",
                "parentUUID": "e066151d-b3f9-4faf-9712-58d4966f991e",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #roundWinner should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundWinner = <span class=\"hljs-string\">'Winner1'</span>;<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
                "isRoot": false,
                "uuid": "b15d291a-42c1-4205-9264-feddfc995bfa",
                "parentUUID": "e066151d-b3f9-4faf-9712-58d4966f991e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isSessionCompleted",
            "suites": [],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "b76d9c6c-464b-4103-84bc-a2b1fac730d1",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasSuites": false,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#observers",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #observers should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.observers = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "bcd176b7-4795-4b76-b456-1ee98e6021de",
                "parentUUID": "87bcbe37-794a-40ab-8f90-d5eb5a2f9cbe",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #observers should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.observers.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.observers[<span class=\"hljs-number\">0</span>].should.equal(observer);",
                "isRoot": false,
                "uuid": "8607cfe5-c1df-4916-90d0-123c515967f9",
                "parentUUID": "87bcbe37-794a-40ab-8f90-d5eb5a2f9cbe",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "87bcbe37-794a-40ab-8f90-d5eb5a2f9cbe",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #observers should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.observers = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "bcd176b7-4795-4b76-b456-1ee98e6021de",
                "parentUUID": "87bcbe37-794a-40ab-8f90-d5eb5a2f9cbe",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #observers should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.observers.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.observers[<span class=\"hljs-number\">0</span>].should.equal(observer);",
                "isRoot": false,
                "uuid": "8607cfe5-c1df-4916-90d0-123c515967f9",
                "parentUUID": "87bcbe37-794a-40ab-8f90-d5eb5a2f9cbe",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#contestants",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #contestants should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.contestants = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "f525cac0-b74e-4d73-bde2-c5188bf72b29",
                "parentUUID": "37182af0-08e9-460c-b98b-368edb236cd0",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #contestants should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.contestants[<span class=\"hljs-number\">0</span>].should.equal(contestant);",
                "isRoot": false,
                "uuid": "42dce483-781f-40b2-b09e-627fc704b9a2",
                "parentUUID": "37182af0-08e9-460c-b98b-368edb236cd0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "37182af0-08e9-460c-b98b-368edb236cd0",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #contestants should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.contestants = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "f525cac0-b74e-4d73-bde2-c5188bf72b29",
                "parentUUID": "37182af0-08e9-460c-b98b-368edb236cd0",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #contestants should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.contestants[<span class=\"hljs-number\">0</span>].should.equal(contestant);",
                "isRoot": false,
                "uuid": "42dce483-781f-40b2-b09e-627fc704b9a2",
                "parentUUID": "37182af0-08e9-460c-b98b-368edb236cd0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#host",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #host should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.host = host;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "d09cdb38-07ec-4451-8d20-52f3de8ade64",
                "parentUUID": "94306f71-afcb-4e2c-9bfb-3e29c7318c18",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #host should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.host.should.equal(host);",
                "isRoot": false,
                "uuid": "86f19d47-afd8-4172-bcad-ba9c914fd325",
                "parentUUID": "94306f71-afcb-4e2c-9bfb-3e29c7318c18",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "94306f71-afcb-4e2c-9bfb-3e29c7318c18",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #host should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.host = host;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "d09cdb38-07ec-4451-8d20-52f3de8ade64",
                "parentUUID": "94306f71-afcb-4e2c-9bfb-3e29c7318c18",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #host should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.host.should.equal(host);",
                "isRoot": false,
                "uuid": "86f19d47-afd8-4172-bcad-ba9c914fd325",
                "parentUUID": "94306f71-afcb-4e2c-9bfb-3e29c7318c18",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#currentState",
            "suites": [],
            "tests": [
              {
                "title": "should get value",
                "fullTitle": "Session #currentState should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
                "isRoot": false,
                "uuid": "48f1d1b9-080f-4581-b802-59a28e162417",
                "parentUUID": "32a2bb97-d867-446f-a6b7-56aa0db5e0fd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "32a2bb97-d867-446f-a6b7-56aa0db5e0fd",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should get value",
                "fullTitle": "Session #currentState should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
                "isRoot": false,
                "uuid": "48f1d1b9-080f-4581-b802-59a28e162417",
                "parentUUID": "32a2bb97-d867-446f-a6b7-56aa0db5e0fd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#incrementRoundsPlayed()",
            "suites": [],
            "tests": [
              {
                "title": "should increment rounds played",
                "fullTitle": "Session #incrementRoundsPlayed() should increment rounds played",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.incrementRoundsPlayed();<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "02c7b24c-1eaf-4be0-80e3-19ef5eb4f90f",
                "parentUUID": "8d3c3128-ad38-4569-9f7f-b68da164e80e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "8d3c3128-ad38-4569-9f7f-b68da164e80e",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should increment rounds played",
                "fullTitle": "Session #incrementRoundsPlayed() should increment rounds played",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.incrementRoundsPlayed();<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "02c7b24c-1eaf-4be0-80e3-19ef5eb4f90f",
                "parentUUID": "8d3c3128-ad38-4569-9f7f-b68da164e80e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#addContestant(contestant)",
            "suites": [
              {
                "title": "when in individual mode",
                "suites": [],
                "tests": [
                  {
                    "title": "should add contestant when session is not full",
                    "fullTitle": "#addContestant(contestant) when in individual mode should add contestant when session is not full",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
                    "isRoot": false,
                    "uuid": "331b97b0-b901-4d08-990d-e28415e8645c",
                    "parentUUID": "fd43b947-1e2e-477e-b5fc-c070400342c2",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when session is full",
                    "fullTitle": "#addContestant(contestant) when in individual mode should not add contestant when session is full",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br>s.addContestant(c2);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();",
                    "isRoot": false,
                    "uuid": "593facd9-b94e-4a57-84ea-b4384de370be",
                    "parentUUID": "fd43b947-1e2e-477e-b5fc-c070400342c2",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when username is already taken",
                    "fullTitle": "#addContestant(contestant) when in individual mode should not add contestant when username is already taken",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "80888b44-b14d-46d2-a5c1-14d68b10df6b",
                    "parentUUID": "fd43b947-1e2e-477e-b5fc-c070400342c2",
                    "skipped": false
                  },
                  {
                    "title": "BUG# username case should not matter",
                    "fullTitle": "#addContestant(contestant) when in individual mode BUG# username case should not matter",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'abc1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'ABC1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "be91e985-69ab-4262-99c5-2c81819aa117",
                    "parentUUID": "fd43b947-1e2e-477e-b5fc-c070400342c2",
                    "skipped": false
                  },
                  {
                    "title": "should allow unlimited contestants when max is set to constants.UNLIMITED",
                    "fullTitle": "#addContestant(contestant) when in individual mode should allow unlimited contestants when max is set to constants.UNLIMITED",
                    "timedOut": false,
                    "duration": 688,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = constants.UNLIMITED;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    <span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>    c.username = <span class=\"hljs-string\">'c'</span> + i;<br>    <span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>    response.wasSuccessful.should.be.true();<br>}",
                    "isRoot": false,
                    "uuid": "5dc512a2-5fd3-4822-addb-8cc0b3b4807e",
                    "parentUUID": "fd43b947-1e2e-477e-b5fc-c070400342c2",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "fd43b947-1e2e-477e-b5fc-c070400342c2",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should add contestant when session is not full",
                    "fullTitle": "#addContestant(contestant) when in individual mode should add contestant when session is not full",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
                    "isRoot": false,
                    "uuid": "331b97b0-b901-4d08-990d-e28415e8645c",
                    "parentUUID": "fd43b947-1e2e-477e-b5fc-c070400342c2",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when session is full",
                    "fullTitle": "#addContestant(contestant) when in individual mode should not add contestant when session is full",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br>s.addContestant(c2);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();",
                    "isRoot": false,
                    "uuid": "593facd9-b94e-4a57-84ea-b4384de370be",
                    "parentUUID": "fd43b947-1e2e-477e-b5fc-c070400342c2",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when username is already taken",
                    "fullTitle": "#addContestant(contestant) when in individual mode should not add contestant when username is already taken",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "80888b44-b14d-46d2-a5c1-14d68b10df6b",
                    "parentUUID": "fd43b947-1e2e-477e-b5fc-c070400342c2",
                    "skipped": false
                  },
                  {
                    "title": "BUG# username case should not matter",
                    "fullTitle": "#addContestant(contestant) when in individual mode BUG# username case should not matter",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'abc1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'ABC1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "be91e985-69ab-4262-99c5-2c81819aa117",
                    "parentUUID": "fd43b947-1e2e-477e-b5fc-c070400342c2",
                    "skipped": false
                  },
                  {
                    "title": "should allow unlimited contestants when max is set to constants.UNLIMITED",
                    "fullTitle": "#addContestant(contestant) when in individual mode should allow unlimited contestants when max is set to constants.UNLIMITED",
                    "timedOut": false,
                    "duration": 688,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = constants.UNLIMITED;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    <span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>    c.username = <span class=\"hljs-string\">'c'</span> + i;<br>    <span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>    response.wasSuccessful.should.be.true();<br>}",
                    "isRoot": false,
                    "uuid": "5dc512a2-5fd3-4822-addb-8cc0b3b4807e",
                    "parentUUID": "fd43b947-1e2e-477e-b5fc-c070400342c2",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 5,
                "totalPasses": 5,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 694
              },
              {
                "title": "when in team mode",
                "suites": [],
                "tests": [
                  {
                    "title": "should add contestant when teams is not full",
                    "fullTitle": "#addContestant(contestant) when in team mode should add contestant when teams is not full",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
                    "isRoot": false,
                    "uuid": "cde7129c-81b0-46ec-8f44-d7c6884b7969",
                    "parentUUID": "173bd3e3-0b78-45a9-952e-84c10fe61bd7",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when teams are full",
                    "fullTitle": "#addContestant(contestant) when in team mode should not add contestant when teams are full",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.TEAMS_ARE_FULL);",
                    "isRoot": false,
                    "uuid": "533a9713-0ba6-4d0a-aa85-9e7ebdeaba36",
                    "parentUUID": "173bd3e3-0b78-45a9-952e-84c10fe61bd7",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when username is already taken",
                    "fullTitle": "#addContestant(contestant) when in team mode should not add contestant when username is already taken",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "d33413c8-913d-44de-8823-19f4489ccb6a",
                    "parentUUID": "173bd3e3-0b78-45a9-952e-84c10fe61bd7",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "173bd3e3-0b78-45a9-952e-84c10fe61bd7",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should add contestant when teams is not full",
                    "fullTitle": "#addContestant(contestant) when in team mode should add contestant when teams is not full",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
                    "isRoot": false,
                    "uuid": "cde7129c-81b0-46ec-8f44-d7c6884b7969",
                    "parentUUID": "173bd3e3-0b78-45a9-952e-84c10fe61bd7",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when teams are full",
                    "fullTitle": "#addContestant(contestant) when in team mode should not add contestant when teams are full",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.TEAMS_ARE_FULL);",
                    "isRoot": false,
                    "uuid": "533a9713-0ba6-4d0a-aa85-9e7ebdeaba36",
                    "parentUUID": "173bd3e3-0b78-45a9-952e-84c10fe61bd7",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when username is already taken",
                    "fullTitle": "#addContestant(contestant) when in team mode should not add contestant when username is already taken",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "d33413c8-913d-44de-8823-19f4489ccb6a",
                    "parentUUID": "173bd3e3-0b78-45a9-952e-84c10fe61bd7",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 7
              }
            ],
            "tests": [
              {
                "title": "should not allow a contestant username with bad words",
                "fullTitle": "Session #addContestant(contestant) should not allow a contestant username with bad words",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Penis #YOLO'</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_CONTAINS_PROFANITY);",
                "isRoot": false,
                "uuid": "90707eb2-ac5c-4272-80e5-243db09522ba",
                "parentUUID": "ff773b0e-1910-4ee0-b5c2-28810ebce861",
                "skipped": false
              },
              {
                "title": "should not allow when username is empty",
                "fullTitle": "Session #addContestant(contestant) should not allow when username is empty",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">' '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_IS_REQUIRED);",
                "isRoot": false,
                "uuid": "cc5a03ec-e252-44b6-89f1-73265ba20a0d",
                "parentUUID": "ff773b0e-1910-4ee0-b5c2-28810ebce861",
                "skipped": false
              },
              {
                "title": "should trim username",
                "fullTitle": "Session #addContestant(contestant) should trim username",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Wade  '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>c.username.should.equal(<span class=\"hljs-string\">'Wade'</span>);",
                "isRoot": false,
                "uuid": "6336592b-056e-4f33-904a-91947fb41d6e",
                "parentUUID": "ff773b0e-1910-4ee0-b5c2-28810ebce861",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "ff773b0e-1910-4ee0-b5c2-28810ebce861",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should not allow a contestant username with bad words",
                "fullTitle": "Session #addContestant(contestant) should not allow a contestant username with bad words",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Penis #YOLO'</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_CONTAINS_PROFANITY);",
                "isRoot": false,
                "uuid": "90707eb2-ac5c-4272-80e5-243db09522ba",
                "parentUUID": "ff773b0e-1910-4ee0-b5c2-28810ebce861",
                "skipped": false
              },
              {
                "title": "should not allow when username is empty",
                "fullTitle": "Session #addContestant(contestant) should not allow when username is empty",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">' '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_IS_REQUIRED);",
                "isRoot": false,
                "uuid": "cc5a03ec-e252-44b6-89f1-73265ba20a0d",
                "parentUUID": "ff773b0e-1910-4ee0-b5c2-28810ebce861",
                "skipped": false
              },
              {
                "title": "should trim username",
                "fullTitle": "Session #addContestant(contestant) should trim username",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Wade  '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>c.username.should.equal(<span class=\"hljs-string\">'Wade'</span>);",
                "isRoot": false,
                "uuid": "6336592b-056e-4f33-904a-91947fb41d6e",
                "parentUUID": "ff773b0e-1910-4ee0-b5c2-28810ebce861",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 11
          },
          {
            "title": "#subscribeForStateChange(event, callback)",
            "suites": [],
            "tests": [
              {
                "title": "should subscribe callback to the correct event",
                "fullTitle": "Session #subscribeForStateChange(event, callback) should subscribe callback to the correct event",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> r = s.addContestant(c);<br>r.wasSuccessful.should.be.true();<br>s.subscribeForStateChange(<span class=\"hljs-string\">'onpending'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">session, event, from, to</span>) </span>{<br>    session.should.equal(s);<br>    event.should.equal(<span class=\"hljs-string\">'buzzerPressed'</span>);<br>    from.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>    to.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>    done();<br>});<br>s.tryBuzzerPressRegister(c.id).should.be.true();",
                "isRoot": false,
                "uuid": "7b0a056f-1d11-4bf3-ac03-9c662051cf23",
                "parentUUID": "acf052c3-7a12-4820-9324-b5ed9eb03a48",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "acf052c3-7a12-4820-9324-b5ed9eb03a48",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should subscribe callback to the correct event",
                "fullTitle": "Session #subscribeForStateChange(event, callback) should subscribe callback to the correct event",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> r = s.addContestant(c);<br>r.wasSuccessful.should.be.true();<br>s.subscribeForStateChange(<span class=\"hljs-string\">'onpending'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">session, event, from, to</span>) </span>{<br>    session.should.equal(s);<br>    event.should.equal(<span class=\"hljs-string\">'buzzerPressed'</span>);<br>    from.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>    to.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>    done();<br>});<br>s.tryBuzzerPressRegister(c.id).should.be.true();",
                "isRoot": false,
                "uuid": "7b0a056f-1d11-4bf3-ac03-9c662051cf23",
                "parentUUID": "acf052c3-7a12-4820-9324-b5ed9eb03a48",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "tryBuzzerPressRegister(contestantId)",
            "suites": [],
            "tests": [
              {
                "title": "should register when state is ready",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should register when state is ready",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);",
                "isRoot": false,
                "uuid": "e43e55bb-bc35-4235-a73f-09898e3d4939",
                "parentUUID": "9912872b-380c-487b-a0d9-11c412ff1294",
                "skipped": false
              },
              {
                "title": "should not register when state is not ready",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not register when state is not ready",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.false();",
                "isRoot": false,
                "uuid": "3d75cd7d-fe2b-4baf-ae2d-e947fa1a11ee",
                "parentUUID": "9912872b-380c-487b-a0d9-11c412ff1294",
                "skipped": false
              },
              {
                "title": "should not register when contestant does not exist",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not register when contestant does not exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(idUtility.generateParticipantId()).should.be.false();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
                "isRoot": false,
                "uuid": "39e5f576-1cf9-4eb0-9cd6-2276f558826b",
                "parentUUID": "9912872b-380c-487b-a0d9-11c412ff1294",
                "skipped": false
              },
              {
                "title": "should not replace previous round winner with pending contestant",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not replace previous round winner with pending contestant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                "isRoot": false,
                "uuid": "0bae80ae-eafe-4553-a618-879060afc027",
                "parentUUID": "9912872b-380c-487b-a0d9-11c412ff1294",
                "skipped": false
              },
              {
                "title": "should not add previous round winner to winners list",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not add previous round winner to winners list",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "d9ec47b1-6bfc-4c0c-b899-40777ea81f21",
                "parentUUID": "9912872b-380c-487b-a0d9-11c412ff1294",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "9912872b-380c-487b-a0d9-11c412ff1294",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should register when state is ready",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should register when state is ready",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);",
                "isRoot": false,
                "uuid": "e43e55bb-bc35-4235-a73f-09898e3d4939",
                "parentUUID": "9912872b-380c-487b-a0d9-11c412ff1294",
                "skipped": false
              },
              {
                "title": "should not register when state is not ready",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not register when state is not ready",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.false();",
                "isRoot": false,
                "uuid": "3d75cd7d-fe2b-4baf-ae2d-e947fa1a11ee",
                "parentUUID": "9912872b-380c-487b-a0d9-11c412ff1294",
                "skipped": false
              },
              {
                "title": "should not register when contestant does not exist",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not register when contestant does not exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(idUtility.generateParticipantId()).should.be.false();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
                "isRoot": false,
                "uuid": "39e5f576-1cf9-4eb0-9cd6-2276f558826b",
                "parentUUID": "9912872b-380c-487b-a0d9-11c412ff1294",
                "skipped": false
              },
              {
                "title": "should not replace previous round winner with pending contestant",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not replace previous round winner with pending contestant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                "isRoot": false,
                "uuid": "0bae80ae-eafe-4553-a618-879060afc027",
                "parentUUID": "9912872b-380c-487b-a0d9-11c412ff1294",
                "skipped": false
              },
              {
                "title": "should not add previous round winner to winners list",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not add previous round winner to winners list",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "d9ec47b1-6bfc-4c0c-b899-40777ea81f21",
                "parentUUID": "9912872b-380c-487b-a0d9-11c412ff1294",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "tryBuzzerAction(action)",
            "suites": [
              {
                "title": "action->ACCEPT",
                "suites": [],
                "tests": [
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should allow when game state is pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();",
                    "isRoot": false,
                    "uuid": "cf7a71c7-89f6-43ea-8b8d-f8d9b1d3c36c",
                    "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not pending",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should not allow when game state is not pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.false();",
                    "isRoot": false,
                    "uuid": "90000e52-be5d-4ffb-af14-f2d16de35a9a",
                    "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
                    "skipped": false
                  },
                  {
                    "title": "should update contestant's score",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should update contestant's score",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "300140c5-1503-4b3d-acb3-e7ff183f60bb",
                    "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
                    "skipped": false
                  },
                  {
                    "title": "should update contestant's team score",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should update contestant's team score",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>s.teams.all[<span class=\"hljs-number\">0</span>].score.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "4570ef7b-4b76-4ec6-a176-c143ad98e8f8",
                    "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "e6af432d-5d6a-4768-952d-22b7e8d8e2af",
                    "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should change game state back to ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "4b31e220-c6b4-4bc9-bab5-f4348f401b6b",
                    "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
                    "skipped": false
                  },
                  {
                    "title": "should clear pending winner",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should clear pending winner",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>should(s.pendingWinner).be.null();",
                    "isRoot": false,
                    "uuid": "cec4c621-8ad9-4f73-a34d-d45b4f65ae3b",
                    "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should allow when game state is pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();",
                    "isRoot": false,
                    "uuid": "cf7a71c7-89f6-43ea-8b8d-f8d9b1d3c36c",
                    "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not pending",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should not allow when game state is not pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.false();",
                    "isRoot": false,
                    "uuid": "90000e52-be5d-4ffb-af14-f2d16de35a9a",
                    "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
                    "skipped": false
                  },
                  {
                    "title": "should update contestant's score",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should update contestant's score",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "300140c5-1503-4b3d-acb3-e7ff183f60bb",
                    "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
                    "skipped": false
                  },
                  {
                    "title": "should update contestant's team score",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should update contestant's team score",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>s.teams.all[<span class=\"hljs-number\">0</span>].score.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "4570ef7b-4b76-4ec6-a176-c143ad98e8f8",
                    "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "e6af432d-5d6a-4768-952d-22b7e8d8e2af",
                    "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should change game state back to ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "4b31e220-c6b4-4bc9-bab5-f4348f401b6b",
                    "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
                    "skipped": false
                  },
                  {
                    "title": "should clear pending winner",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should clear pending winner",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>should(s.pendingWinner).be.null();",
                    "isRoot": false,
                    "uuid": "cec4c621-8ad9-4f73-a34d-d45b4f65ae3b",
                    "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 7,
                "totalPasses": 7,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 6
              },
              {
                "title": "action->REJECT",
                "suites": [],
                "tests": [
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should allow when game state is pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();",
                    "isRoot": false,
                    "uuid": "9c29ac48-d183-4463-89df-0d86077af3cc",
                    "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not pending",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not allow when game state is not pending",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.false();",
                    "isRoot": false,
                    "uuid": "51abba6e-da13-492f-9b3b-bd20bd15496f",
                    "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
                    "skipped": false
                  },
                  {
                    "title": "should not replace round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not replace round winner with pending contestant",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "5eeee5e9-0a0d-4dbd-889a-0889d28be779",
                    "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
                    "skipped": false
                  },
                  {
                    "title": "should not update pending contestant's score",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not update pending contestant's score",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.score.should.equal(<span class=\"hljs-number\">0</span>);",
                    "isRoot": false,
                    "uuid": "190f0a31-085b-4c0c-abfc-64c53932546e",
                    "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
                    "skipped": false
                  },
                  {
                    "title": "should add round winner to previous winners list",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should add round winner to previous winners list",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "4b3f26c2-41f4-48ad-bd72-56db164e8911",
                    "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should change game state back to ready",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "4c2d5da7-34b8-4050-baec-a83b05cb063e",
                    "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "15c2d032-c159-4074-8136-a4190a138942",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should allow when game state is pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();",
                    "isRoot": false,
                    "uuid": "9c29ac48-d183-4463-89df-0d86077af3cc",
                    "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not pending",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not allow when game state is not pending",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.false();",
                    "isRoot": false,
                    "uuid": "51abba6e-da13-492f-9b3b-bd20bd15496f",
                    "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
                    "skipped": false
                  },
                  {
                    "title": "should not replace round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not replace round winner with pending contestant",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "5eeee5e9-0a0d-4dbd-889a-0889d28be779",
                    "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
                    "skipped": false
                  },
                  {
                    "title": "should not update pending contestant's score",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not update pending contestant's score",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.score.should.equal(<span class=\"hljs-number\">0</span>);",
                    "isRoot": false,
                    "uuid": "190f0a31-085b-4c0c-abfc-64c53932546e",
                    "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
                    "skipped": false
                  },
                  {
                    "title": "should add round winner to previous winners list",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should add round winner to previous winners list",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "4b3f26c2-41f4-48ad-bd72-56db164e8911",
                    "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should change game state back to ready",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "4c2d5da7-34b8-4050-baec-a83b05cb063e",
                    "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 6,
                "totalPasses": 6,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 6
              },
              {
                "title": "action->RESET",
                "suites": [],
                "tests": [
                  {
                    "title": "should allow when game state is ready",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should allow when game state is ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
                    "isRoot": false,
                    "uuid": "98d93a88-5582-4392-98d8-ed0f3bb76b0c",
                    "parentUUID": "41fbf065-7ab4-4b79-8f02-c1c4ea62419a",
                    "skipped": false
                  },
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should allow when game state is pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
                    "isRoot": false,
                    "uuid": "b1195dcb-9f43-42b0-a842-f8952d1ac53c",
                    "parentUUID": "41fbf065-7ab4-4b79-8f02-c1c4ea62419a",
                    "skipped": false
                  },
                  {
                    "title": "should not replace previous round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should not replace previous round winner with pending contestant",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "b84e4c10-3317-47ce-bf12-d2c7f9f7e6c3",
                    "parentUUID": "41fbf065-7ab4-4b79-8f02-c1c4ea62419a",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "ac893e4a-0300-40dd-88ac-88b7a1463c7d",
                    "parentUUID": "41fbf065-7ab4-4b79-8f02-c1c4ea62419a",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should change game state back to ready",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "f77cf36c-9885-4e46-8e48-db704d850bfc",
                    "parentUUID": "41fbf065-7ab4-4b79-8f02-c1c4ea62419a",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "41fbf065-7ab4-4b79-8f02-c1c4ea62419a",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should allow when game state is ready",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should allow when game state is ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
                    "isRoot": false,
                    "uuid": "98d93a88-5582-4392-98d8-ed0f3bb76b0c",
                    "parentUUID": "41fbf065-7ab4-4b79-8f02-c1c4ea62419a",
                    "skipped": false
                  },
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should allow when game state is pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
                    "isRoot": false,
                    "uuid": "b1195dcb-9f43-42b0-a842-f8952d1ac53c",
                    "parentUUID": "41fbf065-7ab4-4b79-8f02-c1c4ea62419a",
                    "skipped": false
                  },
                  {
                    "title": "should not replace previous round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should not replace previous round winner with pending contestant",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "b84e4c10-3317-47ce-bf12-d2c7f9f7e6c3",
                    "parentUUID": "41fbf065-7ab4-4b79-8f02-c1c4ea62419a",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "ac893e4a-0300-40dd-88ac-88b7a1463c7d",
                    "parentUUID": "41fbf065-7ab4-4b79-8f02-c1c4ea62419a",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should change game state back to ready",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "f77cf36c-9885-4e46-8e48-db704d850bfc",
                    "parentUUID": "41fbf065-7ab4-4b79-8f02-c1c4ea62419a",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 5,
                "totalPasses": 5,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 4
              },
              {
                "title": "action->DISABLE",
                "suites": [],
                "tests": [
                  {
                    "title": "should allow when game state is ready",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should allow when game state is ready",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "25b35d3d-0e13-44d1-af9e-41281e669a10",
                    "parentUUID": "77df4139-7fcb-48b7-a9cc-69d5bb4e8ccd",
                    "skipped": false
                  },
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should allow when game state is pending",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "0d45cff0-ebe7-424a-bfaa-eb950953b3cf",
                    "parentUUID": "77df4139-7fcb-48b7-a9cc-69d5bb4e8ccd",
                    "skipped": false
                  },
                  {
                    "title": "should not replace previous round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should not replace previous round winner with pending contestant",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "30f73ac4-2020-4bf5-ab77-d6cffb97c6ad",
                    "parentUUID": "77df4139-7fcb-48b7-a9cc-69d5bb4e8ccd",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "62490f78-5d7d-46c8-af94-02155177a9ac",
                    "parentUUID": "77df4139-7fcb-48b7-a9cc-69d5bb4e8ccd",
                    "skipped": false
                  },
                  {
                    "title": "should change game state to buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should change game state to buzzerLock",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.BUZZER_LOCK);",
                    "isRoot": false,
                    "uuid": "54d26a66-4c39-406f-bba2-3a2569259b06",
                    "parentUUID": "77df4139-7fcb-48b7-a9cc-69d5bb4e8ccd",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "77df4139-7fcb-48b7-a9cc-69d5bb4e8ccd",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should allow when game state is ready",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should allow when game state is ready",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "25b35d3d-0e13-44d1-af9e-41281e669a10",
                    "parentUUID": "77df4139-7fcb-48b7-a9cc-69d5bb4e8ccd",
                    "skipped": false
                  },
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should allow when game state is pending",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "0d45cff0-ebe7-424a-bfaa-eb950953b3cf",
                    "parentUUID": "77df4139-7fcb-48b7-a9cc-69d5bb4e8ccd",
                    "skipped": false
                  },
                  {
                    "title": "should not replace previous round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should not replace previous round winner with pending contestant",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "30f73ac4-2020-4bf5-ab77-d6cffb97c6ad",
                    "parentUUID": "77df4139-7fcb-48b7-a9cc-69d5bb4e8ccd",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 4,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "62490f78-5d7d-46c8-af94-02155177a9ac",
                    "parentUUID": "77df4139-7fcb-48b7-a9cc-69d5bb4e8ccd",
                    "skipped": false
                  },
                  {
                    "title": "should change game state to buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should change game state to buzzerLock",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.BUZZER_LOCK);",
                    "isRoot": false,
                    "uuid": "54d26a66-4c39-406f-bba2-3a2569259b06",
                    "parentUUID": "77df4139-7fcb-48b7-a9cc-69d5bb4e8ccd",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 5,
                "totalPasses": 5,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 6
              },
              {
                "title": "action->ENABLE",
                "suites": [],
                "tests": [
                  {
                    "title": "should allow when game state is buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should allow when game state is buzzerLock",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "682e285c-3cc9-4db7-b0d2-74d3dd747d5e",
                    "parentUUID": "7cb3f5cb-b844-4022-88ed-201fff5703e8",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should not allow when game state is not buzzerLock",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.false();",
                    "isRoot": false,
                    "uuid": "b908532b-4a77-4c00-a746-5361711c5f33",
                    "parentUUID": "7cb3f5cb-b844-4022-88ed-201fff5703e8",
                    "skipped": false
                  },
                  {
                    "title": "should change game state to ready",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should change game state to ready",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "01c62e22-ac08-421d-abb5-07e4c3866f06",
                    "parentUUID": "7cb3f5cb-b844-4022-88ed-201fff5703e8",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "7cb3f5cb-b844-4022-88ed-201fff5703e8",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should allow when game state is buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should allow when game state is buzzerLock",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "682e285c-3cc9-4db7-b0d2-74d3dd747d5e",
                    "parentUUID": "7cb3f5cb-b844-4022-88ed-201fff5703e8",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should not allow when game state is not buzzerLock",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.false();",
                    "isRoot": false,
                    "uuid": "b908532b-4a77-4c00-a746-5361711c5f33",
                    "parentUUID": "7cb3f5cb-b844-4022-88ed-201fff5703e8",
                    "skipped": false
                  },
                  {
                    "title": "should change game state to ready",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should change game state to ready",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "01c62e22-ac08-421d-abb5-07e4c3866f06",
                    "parentUUID": "7cb3f5cb-b844-4022-88ed-201fff5703e8",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "524f760e-8d2e-4f34-a91b-a0df68cc9e2f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#pendingWinner",
            "suites": [],
            "tests": [
              {
                "title": "should return the pending winner",
                "fullTitle": "Session #pendingWinner should return the pending winner",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.pendingWinner.should.equal(<span class=\"hljs-string\">'testUser'</span>);",
                "isRoot": false,
                "uuid": "fc36f3bc-efb9-4867-a87f-053fde0acbc7",
                "parentUUID": "20a86227-6a6d-49a5-a400-538ecc8ceeec",
                "skipped": false
              },
              {
                "title": "should not return the pending winner",
                "fullTitle": "Session #pendingWinner should not return the pending winner",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>should(s.pendingWinner).be.null();",
                "isRoot": false,
                "uuid": "00ce4807-0a4d-46fc-8569-0a7f377bfce2",
                "parentUUID": "20a86227-6a6d-49a5-a400-538ecc8ceeec",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "20a86227-6a6d-49a5-a400-538ecc8ceeec",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should return the pending winner",
                "fullTitle": "Session #pendingWinner should return the pending winner",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.pendingWinner.should.equal(<span class=\"hljs-string\">'testUser'</span>);",
                "isRoot": false,
                "uuid": "fc36f3bc-efb9-4867-a87f-053fde0acbc7",
                "parentUUID": "20a86227-6a6d-49a5-a400-538ecc8ceeec",
                "skipped": false
              },
              {
                "title": "should not return the pending winner",
                "fullTitle": "Session #pendingWinner should not return the pending winner",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>should(s.pendingWinner).be.null();",
                "isRoot": false,
                "uuid": "00ce4807-0a4d-46fc-8569-0a7f377bfce2",
                "parentUUID": "20a86227-6a6d-49a5-a400-538ecc8ceeec",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#updateSessionName(name)",
            "suites": [],
            "tests": [
              {
                "title": "should update session name",
                "fullTitle": "Session #updateSessionName(name) should update session name",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.updateSessionName(<span class=\"hljs-string\">'session2'</span>);<br>settings.sessionName.should.equal(<span class=\"hljs-string\">'session2'</span>);",
                "isRoot": false,
                "uuid": "30d46ae5-309f-400d-87da-6932daa91aeb",
                "parentUUID": "6f7fc910-6f3c-4f4b-9659-6c829e133183",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "6f7fc910-6f3c-4f4b-9659-6c829e133183",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should update session name",
                "fullTitle": "Session #updateSessionName(name) should update session name",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.updateSessionName(<span class=\"hljs-string\">'session2'</span>);<br>settings.sessionName.should.equal(<span class=\"hljs-string\">'session2'</span>);",
                "isRoot": false,
                "uuid": "30d46ae5-309f-400d-87da-6932daa91aeb",
                "parentUUID": "6f7fc910-6f3c-4f4b-9659-6c829e133183",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#updateMaxContestants(maxContestants)",
            "suites": [],
            "tests": [
              {
                "title": "should update max contestants",
                "fullTitle": "Session #updateMaxContestants(maxContestants) should update max contestants",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "6150bca9-001f-47aa-b8fa-59bc23e8f8a9",
                "parentUUID": "88d218fe-5fd8-49fb-896b-1ef925bb5968",
                "skipped": false
              },
              {
                "title": "should not allow below current connected amount",
                "fullTitle": "Session #updateMaxContestants(maxContestants) should not allow below current connected amount",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>s.addContestant(c1).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>s.addContestant(c2).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">1</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_CONTESTANTS_MUST_BE_GREATER_THAN_ALREADY_CONNECTED);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "02cbe9cd-2c39-4933-86aa-e17c90467756",
                "parentUUID": "88d218fe-5fd8-49fb-896b-1ef925bb5968",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "88d218fe-5fd8-49fb-896b-1ef925bb5968",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should update max contestants",
                "fullTitle": "Session #updateMaxContestants(maxContestants) should update max contestants",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "6150bca9-001f-47aa-b8fa-59bc23e8f8a9",
                "parentUUID": "88d218fe-5fd8-49fb-896b-1ef925bb5968",
                "skipped": false
              },
              {
                "title": "should not allow below current connected amount",
                "fullTitle": "Session #updateMaxContestants(maxContestants) should not allow below current connected amount",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>s.addContestant(c1).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>s.addContestant(c2).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">1</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_CONTESTANTS_MUST_BE_GREATER_THAN_ALREADY_CONNECTED);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "02cbe9cd-2c39-4933-86aa-e17c90467756",
                "parentUUID": "88d218fe-5fd8-49fb-896b-1ef925bb5968",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#updateTeamSize(teamSize)",
            "suites": [],
            "tests": [
              {
                "title": "should update team size",
                "fullTitle": "Session #updateTeamSize(teamSize) should update team size",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.teamSize.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "8c1b70a5-97df-4a88-a0e0-793a5a63c76e",
                "parentUUID": "59999254-48a5-4cea-838c-cc4fac5429ac",
                "skipped": false
              },
              {
                "title": "should not allow below current setting",
                "fullTitle": "Session #updateTeamSize(teamSize) should not allow below current setting",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.TEAM_SIZE_MUST_BE_GREATER_THAN_ALREADY_SET);",
                "isRoot": false,
                "uuid": "4480fece-1d6a-498c-8bb2-2a97cb1ab778",
                "parentUUID": "59999254-48a5-4cea-838c-cc4fac5429ac",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "59999254-48a5-4cea-838c-cc4fac5429ac",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should update team size",
                "fullTitle": "Session #updateTeamSize(teamSize) should update team size",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.teamSize.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "8c1b70a5-97df-4a88-a0e0-793a5a63c76e",
                "parentUUID": "59999254-48a5-4cea-838c-cc4fac5429ac",
                "skipped": false
              },
              {
                "title": "should not allow below current setting",
                "fullTitle": "Session #updateTeamSize(teamSize) should not allow below current setting",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.TEAM_SIZE_MUST_BE_GREATER_THAN_ALREADY_SET);",
                "isRoot": false,
                "uuid": "4480fece-1d6a-498c-8bb2-2a97cb1ab778",
                "parentUUID": "59999254-48a5-4cea-838c-cc4fac5429ac",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#updateMaxTeams(maxTeams)",
            "suites": [],
            "tests": [
              {
                "title": "should update max teams",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should update max teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxTeams.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "7d79a72d-e219-4d73-94b3-0bfe70578ce6",
                "parentUUID": "a8d862e9-f139-4940-bb49-62baf94fd296",
                "skipped": false
              },
              {
                "title": "should add teams",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should add teams",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">5</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "8401547a-e883-4b53-91cd-67d34029a373",
                "parentUUID": "a8d862e9-f139-4940-bb49-62baf94fd296",
                "skipped": false
              },
              {
                "title": "should not allow below current setting",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should not allow below current setting",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_MUST_BE_GREATER_THAN_ALREADY_SET);",
                "isRoot": false,
                "uuid": "26e8c304-420a-4ef3-a9a5-073cd90195d4",
                "parentUUID": "a8d862e9-f139-4940-bb49-62baf94fd296",
                "skipped": false
              },
              {
                "title": "should not allow if teams are PLAYER_CHOICE",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should not allow if teams are PLAYER_CHOICE",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">6</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_CANNOT_BE_CHANGED_WHEN_PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "2b3d154d-217e-4661-bbee-b8beb7bf5b53",
                "parentUUID": "a8d862e9-f139-4940-bb49-62baf94fd296",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "a8d862e9-f139-4940-bb49-62baf94fd296",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should update max teams",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should update max teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxTeams.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "7d79a72d-e219-4d73-94b3-0bfe70578ce6",
                "parentUUID": "a8d862e9-f139-4940-bb49-62baf94fd296",
                "skipped": false
              },
              {
                "title": "should add teams",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should add teams",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">5</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "8401547a-e883-4b53-91cd-67d34029a373",
                "parentUUID": "a8d862e9-f139-4940-bb49-62baf94fd296",
                "skipped": false
              },
              {
                "title": "should not allow below current setting",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should not allow below current setting",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_MUST_BE_GREATER_THAN_ALREADY_SET);",
                "isRoot": false,
                "uuid": "26e8c304-420a-4ef3-a9a5-073cd90195d4",
                "parentUUID": "a8d862e9-f139-4940-bb49-62baf94fd296",
                "skipped": false
              },
              {
                "title": "should not allow if teams are PLAYER_CHOICE",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should not allow if teams are PLAYER_CHOICE",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">6</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_CANNOT_BE_CHANGED_WHEN_PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "2b3d154d-217e-4661-bbee-b8beb7bf5b53",
                "parentUUID": "a8d862e9-f139-4940-bb49-62baf94fd296",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/SessionTests.js",
        "uuid": "bf03d3a9-15dd-44ed-ad19-a49a3d3d1295",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Settings",
        "suites": [
          {
            "title": "#hasTeams",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #hasTeams should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s._hasTeams.should.be.true();",
                "isRoot": false,
                "uuid": "d76dfafe-cd19-491c-9031-77c5c146ea37",
                "parentUUID": "744655f3-e177-4fe5-9987-394b7521918f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #hasTeams should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.hasTeams.should.be.true();",
                "isRoot": false,
                "uuid": "5f929a77-8885-4829-a9a4-4b8ded23995e",
                "parentUUID": "744655f3-e177-4fe5-9987-394b7521918f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "744655f3-e177-4fe5-9987-394b7521918f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #hasTeams should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s._hasTeams.should.be.true();",
                "isRoot": false,
                "uuid": "d76dfafe-cd19-491c-9031-77c5c146ea37",
                "parentUUID": "744655f3-e177-4fe5-9987-394b7521918f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #hasTeams should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.hasTeams.should.be.true();",
                "isRoot": false,
                "uuid": "5f929a77-8885-4829-a9a4-4b8ded23995e",
                "parentUUID": "744655f3-e177-4fe5-9987-394b7521918f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#teamSize",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamSize should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s._teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "db2d5805-9a08-4192-bb3d-b20c840cd030",
                "parentUUID": "ac4eb3c2-71fc-4566-9521-7fb012288120",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamSize should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamSize = <span class=\"hljs-number\">1</span>;<br>s.teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "a14ef208-77d5-454b-8704-16e522c44c50",
                "parentUUID": "ac4eb3c2-71fc-4566-9521-7fb012288120",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "ac4eb3c2-71fc-4566-9521-7fb012288120",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamSize should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s._teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "db2d5805-9a08-4192-bb3d-b20c840cd030",
                "parentUUID": "ac4eb3c2-71fc-4566-9521-7fb012288120",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamSize should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamSize = <span class=\"hljs-number\">1</span>;<br>s.teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "a14ef208-77d5-454b-8704-16e522c44c50",
                "parentUUID": "ac4eb3c2-71fc-4566-9521-7fb012288120",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#maxTeams",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #maxTeams should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s._maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "557a41bd-12f4-4aaf-94e1-4c57e00843f2",
                "parentUUID": "44c7659e-749a-4299-9577-6dacd0b40454",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #maxTeams should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-number\">1</span>;<br>s.maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "e23467d1-6099-452c-9cb5-da77a3a3b865",
                "parentUUID": "44c7659e-749a-4299-9577-6dacd0b40454",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "44c7659e-749a-4299-9577-6dacd0b40454",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #maxTeams should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s._maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "557a41bd-12f4-4aaf-94e1-4c57e00843f2",
                "parentUUID": "44c7659e-749a-4299-9577-6dacd0b40454",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #maxTeams should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-number\">1</span>;<br>s.maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "e23467d1-6099-452c-9cb5-da77a3a3b865",
                "parentUUID": "44c7659e-749a-4299-9577-6dacd0b40454",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#teamLeaderSelectionMethod",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamLeaderSelectionMethod should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s._teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "14f8a25f-dae9-430e-8b9b-eefac5c0b374",
                "parentUUID": "826371bf-a1fb-4801-8ce7-824b1737ef42",
                "skipped": false
              },
              {
                "title": "should throw on set when constant value is invalid",
                "fullTitle": "Settings #teamLeaderSelectionMethod should throw on set when constant value is invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamLeaderSelectionMethod.all.slice().sort(<br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, b</span>) </span>{<br>            <span class=\"hljs-keyword\">return</span> a - b;<br>        }).pop();<br>    s.teamLeaderSelectionMethod = ++high;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "48d05ca1-d744-4657-868a-2106b2582877",
                "parentUUID": "826371bf-a1fb-4801-8ce7-824b1737ef42",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamLeaderSelectionMethod should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s.teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "9ce9b171-a888-4deb-82e2-038ab5e76755",
                "parentUUID": "826371bf-a1fb-4801-8ce7-824b1737ef42",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "826371bf-a1fb-4801-8ce7-824b1737ef42",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamLeaderSelectionMethod should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s._teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "14f8a25f-dae9-430e-8b9b-eefac5c0b374",
                "parentUUID": "826371bf-a1fb-4801-8ce7-824b1737ef42",
                "skipped": false
              },
              {
                "title": "should throw on set when constant value is invalid",
                "fullTitle": "Settings #teamLeaderSelectionMethod should throw on set when constant value is invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamLeaderSelectionMethod.all.slice().sort(<br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, b</span>) </span>{<br>            <span class=\"hljs-keyword\">return</span> a - b;<br>        }).pop();<br>    s.teamLeaderSelectionMethod = ++high;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "48d05ca1-d744-4657-868a-2106b2582877",
                "parentUUID": "826371bf-a1fb-4801-8ce7-824b1737ef42",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamLeaderSelectionMethod should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s.teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "9ce9b171-a888-4deb-82e2-038ab5e76755",
                "parentUUID": "826371bf-a1fb-4801-8ce7-824b1737ef42",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#teamNameEdit",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamNameEdit should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br>s._teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
                "isRoot": false,
                "uuid": "19f2ae2b-9385-4c0b-b488-4920a8072142",
                "parentUUID": "74a5b68d-6bb7-49f1-b796-df935f149fd8",
                "skipped": false
              },
              {
                "title": "should throw on set when constant value is invalid",
                "fullTitle": "Settings #teamNameEdit should throw on set when constant value is invalid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamNameEdit.all.slice().sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a,<br>        b</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> a - b;<br>    }).pop();<br>    s.teamNameEdit = ++high;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "6820c6cf-813d-475f-8f36-2fbe719f9697",
                "parentUUID": "74a5b68d-6bb7-49f1-b796-df935f149fd8",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamNameEdit should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNameEdit = constants.teamNameEdit.ALLOW;<br>s.teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
                "isRoot": false,
                "uuid": "128ed13a-409d-4ab6-87c7-413fe042cd28",
                "parentUUID": "74a5b68d-6bb7-49f1-b796-df935f149fd8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "74a5b68d-6bb7-49f1-b796-df935f149fd8",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamNameEdit should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br>s._teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
                "isRoot": false,
                "uuid": "19f2ae2b-9385-4c0b-b488-4920a8072142",
                "parentUUID": "74a5b68d-6bb7-49f1-b796-df935f149fd8",
                "skipped": false
              },
              {
                "title": "should throw on set when constant value is invalid",
                "fullTitle": "Settings #teamNameEdit should throw on set when constant value is invalid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamNameEdit.all.slice().sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a,<br>        b</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> a - b;<br>    }).pop();<br>    s.teamNameEdit = ++high;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "6820c6cf-813d-475f-8f36-2fbe719f9697",
                "parentUUID": "74a5b68d-6bb7-49f1-b796-df935f149fd8",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamNameEdit should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNameEdit = constants.teamNameEdit.ALLOW;<br>s.teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
                "isRoot": false,
                "uuid": "128ed13a-409d-4ab6-87c7-413fe042cd28",
                "parentUUID": "74a5b68d-6bb7-49f1-b796-df935f149fd8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#maxContestants",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #maxContestants should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxContestants = <span class=\"hljs-number\">1</span>;<br>s._maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "00937dac-07eb-4014-830c-9e5a0f1050a1",
                "parentUUID": "ef104888-4c08-4e68-a251-7de8ed3a939c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #maxContestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxContestants = <span class=\"hljs-number\">1</span>;<br>s.maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "c04f2ed0-a974-4fc3-ad76-89f658472ba7",
                "parentUUID": "ef104888-4c08-4e68-a251-7de8ed3a939c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "ef104888-4c08-4e68-a251-7de8ed3a939c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #maxContestants should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxContestants = <span class=\"hljs-number\">1</span>;<br>s._maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "00937dac-07eb-4014-830c-9e5a0f1050a1",
                "parentUUID": "ef104888-4c08-4e68-a251-7de8ed3a939c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #maxContestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxContestants = <span class=\"hljs-number\">1</span>;<br>s.maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "c04f2ed0-a974-4fc3-ad76-89f658472ba7",
                "parentUUID": "ef104888-4c08-4e68-a251-7de8ed3a939c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#sessionName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #sessionName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s._sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
                "isRoot": false,
                "uuid": "4a8f1d52-39b3-4589-b3f2-72e0701be800",
                "parentUUID": "aea06817-cb9a-4844-a785-a64d0bccb98d",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #sessionName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s.sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
                "isRoot": false,
                "uuid": "8b9067d9-ba9d-40d5-a323-ba9ddc8d0b35",
                "parentUUID": "aea06817-cb9a-4844-a785-a64d0bccb98d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "aea06817-cb9a-4844-a785-a64d0bccb98d",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #sessionName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s._sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
                "isRoot": false,
                "uuid": "4a8f1d52-39b3-4589-b3f2-72e0701be800",
                "parentUUID": "aea06817-cb9a-4844-a785-a64d0bccb98d",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #sessionName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s.sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
                "isRoot": false,
                "uuid": "8b9067d9-ba9d-40d5-a323-ba9ddc8d0b35",
                "parentUUID": "aea06817-cb9a-4844-a785-a64d0bccb98d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#teamNames",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamNames should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s._teamNames.should.be.Array();<br>s._teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s._teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
                "isRoot": false,
                "uuid": "ce6b50ec-af4d-4675-a243-1c45ffe5bdc8",
                "parentUUID": "f5ba6b39-26e9-4034-972a-91e25f7b382a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamNames should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s.teamNames.should.be.Array();<br>s.teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
                "isRoot": false,
                "uuid": "01824d62-995b-475d-ba9b-74bd97aec596",
                "parentUUID": "f5ba6b39-26e9-4034-972a-91e25f7b382a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "f5ba6b39-26e9-4034-972a-91e25f7b382a",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamNames should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s._teamNames.should.be.Array();<br>s._teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s._teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
                "isRoot": false,
                "uuid": "ce6b50ec-af4d-4675-a243-1c45ffe5bdc8",
                "parentUUID": "f5ba6b39-26e9-4034-972a-91e25f7b382a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamNames should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s.teamNames.should.be.Array();<br>s.teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
                "isRoot": false,
                "uuid": "01824d62-995b-475d-ba9b-74bd97aec596",
                "parentUUID": "f5ba6b39-26e9-4034-972a-91e25f7b382a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/SettingsTests.js",
        "uuid": "e8d72caf-0edd-4f70-8cd7-ebc159cdfae0",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "TeamFactory",
        "suites": [
          {
            "title": "#create(teams, settings)",
            "suites": [],
            "tests": [
              {
                "title": "should throw when settings.maxTeams is less than 1",
                "fullTitle": "TeamFactory #create(teams, settings) should throw when settings.maxTeams is less than 1",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    teamFactory.create(tc, s);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "1190ab64-32a5-4e6d-93e0-87cde0a96edb",
                "parentUUID": "d60a24a9-9f32-4516-93fc-c28757e805a3",
                "skipped": false
              },
              {
                "title": "should create the correct amount of teams",
                "fullTitle": "TeamFactory #create(teams, settings) should create the correct amount of teams",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "931b796f-6937-4d80-8147-d6443f4c8fb6",
                "parentUUID": "d60a24a9-9f32-4516-93fc-c28757e805a3",
                "skipped": false
              },
              {
                "title": "should not fail with a large team size",
                "fullTitle": "TeamFactory #create(teams, settings) should not fail with a large team size",
                "timedOut": false,
                "duration": 72,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">500</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">500</span>);<br><span class=\"hljs-comment\">// ensure team names are unique</span><br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> i = names.indexOf(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> n === t.teamName;<br>    });<br>    i.should.equal(-<span class=\"hljs-number\">1</span>);<br>    names.push(t.teamName);<br>});",
                "isRoot": false,
                "uuid": "1991a813-4698-4632-a8dc-fea3f10b216d",
                "parentUUID": "d60a24a9-9f32-4516-93fc-c28757e805a3",
                "skipped": false
              },
              {
                "title": "should use settings.teamNames first, before random selection",
                "fullTitle": "TeamFactory #create(teams, settings) should use settings.teamNames first, before random selection",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">10</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>, <span class=\"hljs-string\">'t3'</span>, <span class=\"hljs-string\">'t4'</span>, <span class=\"hljs-string\">'t5'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);<br>tc.all[<span class=\"hljs-number\">2</span>].teamName.should.equal(<span class=\"hljs-string\">'t3'</span>);<br>tc.all[<span class=\"hljs-number\">3</span>].teamName.should.equal(<span class=\"hljs-string\">'t4'</span>);<br>tc.all[<span class=\"hljs-number\">4</span>].teamName.should.equal(<span class=\"hljs-string\">'t5'</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">5</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">6</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">7</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">8</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">9</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "b2146b94-8531-4a58-92cd-d700a1a73af6",
                "parentUUID": "d60a24a9-9f32-4516-93fc-c28757e805a3",
                "skipped": false
              },
              {
                "title": "should only create a single team when using unlimited teams",
                "fullTitle": "TeamFactory #create(teams, settings) should only create a single team when using unlimited teams",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "0966c236-dddd-4dd7-bf0a-6ae581323c27",
                "parentUUID": "d60a24a9-9f32-4516-93fc-c28757e805a3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamFactoryTests.js",
            "uuid": "d60a24a9-9f32-4516-93fc-c28757e805a3",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamFactoryTests.js",
            "passes": [
              {
                "title": "should throw when settings.maxTeams is less than 1",
                "fullTitle": "TeamFactory #create(teams, settings) should throw when settings.maxTeams is less than 1",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    teamFactory.create(tc, s);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "1190ab64-32a5-4e6d-93e0-87cde0a96edb",
                "parentUUID": "d60a24a9-9f32-4516-93fc-c28757e805a3",
                "skipped": false
              },
              {
                "title": "should create the correct amount of teams",
                "fullTitle": "TeamFactory #create(teams, settings) should create the correct amount of teams",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "931b796f-6937-4d80-8147-d6443f4c8fb6",
                "parentUUID": "d60a24a9-9f32-4516-93fc-c28757e805a3",
                "skipped": false
              },
              {
                "title": "should not fail with a large team size",
                "fullTitle": "TeamFactory #create(teams, settings) should not fail with a large team size",
                "timedOut": false,
                "duration": 72,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">500</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">500</span>);<br><span class=\"hljs-comment\">// ensure team names are unique</span><br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> i = names.indexOf(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> n === t.teamName;<br>    });<br>    i.should.equal(-<span class=\"hljs-number\">1</span>);<br>    names.push(t.teamName);<br>});",
                "isRoot": false,
                "uuid": "1991a813-4698-4632-a8dc-fea3f10b216d",
                "parentUUID": "d60a24a9-9f32-4516-93fc-c28757e805a3",
                "skipped": false
              },
              {
                "title": "should use settings.teamNames first, before random selection",
                "fullTitle": "TeamFactory #create(teams, settings) should use settings.teamNames first, before random selection",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">10</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>, <span class=\"hljs-string\">'t3'</span>, <span class=\"hljs-string\">'t4'</span>, <span class=\"hljs-string\">'t5'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);<br>tc.all[<span class=\"hljs-number\">2</span>].teamName.should.equal(<span class=\"hljs-string\">'t3'</span>);<br>tc.all[<span class=\"hljs-number\">3</span>].teamName.should.equal(<span class=\"hljs-string\">'t4'</span>);<br>tc.all[<span class=\"hljs-number\">4</span>].teamName.should.equal(<span class=\"hljs-string\">'t5'</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">5</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">6</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">7</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">8</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">9</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "b2146b94-8531-4a58-92cd-d700a1a73af6",
                "parentUUID": "d60a24a9-9f32-4516-93fc-c28757e805a3",
                "skipped": false
              },
              {
                "title": "should only create a single team when using unlimited teams",
                "fullTitle": "TeamFactory #create(teams, settings) should only create a single team when using unlimited teams",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "0966c236-dddd-4dd7-bf0a-6ae581323c27",
                "parentUUID": "d60a24a9-9f32-4516-93fc-c28757e805a3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 76
          },
          {
            "title": "#add(teams, settings)",
            "suites": [],
            "tests": [
              {
                "title": "should add a team",
                "fullTitle": "TeamFactory #add(teams, settings) should add a team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>teamFactory.add(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "21f31a4d-df84-44d6-8b3b-dbb7c7320e52",
                "parentUUID": "b593c2b1-9684-458d-b9df-72e6624c8c70",
                "skipped": false
              },
              {
                "title": "should reuse team names specified in settings",
                "fullTitle": "TeamFactory #add(teams, settings) should reuse team names specified in settings",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>teamFactory.add(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);",
                "isRoot": false,
                "uuid": "20576835-8200-4221-a75c-6a192c3ff048",
                "parentUUID": "b593c2b1-9684-458d-b9df-72e6624c8c70",
                "skipped": false
              },
              {
                "title": "should factor in team names which are already in use",
                "fullTitle": "TeamFactory #add(teams, settings) should factor in team names which are already in use",
                "timedOut": false,
                "duration": 271,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    teamFactory.add(tc, s);<br>}<br>tc.all.length.should.equal(<span class=\"hljs-number\">1001</span>);<br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    names.push(t.teamName);<br>});<br><span class=\"hljs-keyword\">var</span> uniqueNames = unique(names);<br>names.length.should.equal(uniqueNames.length);",
                "isRoot": false,
                "uuid": "05189978-4d68-4bc0-9612-1ce1996824e1",
                "parentUUID": "b593c2b1-9684-458d-b9df-72e6624c8c70",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamFactoryTests.js",
            "uuid": "b593c2b1-9684-458d-b9df-72e6624c8c70",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamFactoryTests.js",
            "passes": [
              {
                "title": "should add a team",
                "fullTitle": "TeamFactory #add(teams, settings) should add a team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>teamFactory.add(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "21f31a4d-df84-44d6-8b3b-dbb7c7320e52",
                "parentUUID": "b593c2b1-9684-458d-b9df-72e6624c8c70",
                "skipped": false
              },
              {
                "title": "should reuse team names specified in settings",
                "fullTitle": "TeamFactory #add(teams, settings) should reuse team names specified in settings",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>teamFactory.add(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);",
                "isRoot": false,
                "uuid": "20576835-8200-4221-a75c-6a192c3ff048",
                "parentUUID": "b593c2b1-9684-458d-b9df-72e6624c8c70",
                "skipped": false
              },
              {
                "title": "should factor in team names which are already in use",
                "fullTitle": "TeamFactory #add(teams, settings) should factor in team names which are already in use",
                "timedOut": false,
                "duration": 271,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    teamFactory.add(tc, s);<br>}<br>tc.all.length.should.equal(<span class=\"hljs-number\">1001</span>);<br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    names.push(t.teamName);<br>});<br><span class=\"hljs-keyword\">var</span> uniqueNames = unique(names);<br>names.length.should.equal(uniqueNames.length);",
                "isRoot": false,
                "uuid": "05189978-4d68-4bc0-9612-1ce1996824e1",
                "parentUUID": "b593c2b1-9684-458d-b9df-72e6624c8c70",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 271
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/TeamFactoryTests.js",
        "uuid": "635651bb-3a2f-449f-a276-a8f6468ee5bd",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamFactoryTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Teams",
        "suites": [
          {
            "title": "#contains(teamName)",
            "suites": [],
            "tests": [
              {
                "title": "should return true when team with teamName does exist",
                "fullTitle": "Teams #contains(teamName) should return true when team with teamName does exist",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(t.teamName).should.be.true();",
                "isRoot": false,
                "uuid": "13df8a58-2ea9-464f-934b-fb9d503aa07c",
                "parentUUID": "0132839b-fa77-4cdf-9e4d-52e27e5bbf84",
                "skipped": false
              },
              {
                "title": "should return false when no team with teamName does exist",
                "fullTitle": "Teams #contains(teamName) should return false when no team with teamName does exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(<span class=\"hljs-string\">'other team name'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "902b2323-d86b-4211-848e-e31b13659219",
                "parentUUID": "0132839b-fa77-4cdf-9e4d-52e27e5bbf84",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "0132839b-fa77-4cdf-9e4d-52e27e5bbf84",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should return true when team with teamName does exist",
                "fullTitle": "Teams #contains(teamName) should return true when team with teamName does exist",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(t.teamName).should.be.true();",
                "isRoot": false,
                "uuid": "13df8a58-2ea9-464f-934b-fb9d503aa07c",
                "parentUUID": "0132839b-fa77-4cdf-9e4d-52e27e5bbf84",
                "skipped": false
              },
              {
                "title": "should return false when no team with teamName does exist",
                "fullTitle": "Teams #contains(teamName) should return false when no team with teamName does exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(<span class=\"hljs-string\">'other team name'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "902b2323-d86b-4211-848e-e31b13659219",
                "parentUUID": "0132839b-fa77-4cdf-9e4d-52e27e5bbf84",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#all",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Teams #all should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "3804e788-783c-4319-9de3-4dc4760d1702",
                "parentUUID": "6e5563e2-bf05-436a-89dc-62493d312e2a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Teams #all should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "b22afd15-e47d-4b24-9dbe-fdabe2b7808e",
                "parentUUID": "6e5563e2-bf05-436a-89dc-62493d312e2a",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Teams #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all.pop();<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "a5155515-b8ce-466f-8bf8-a75e05fbfc98",
                "parentUUID": "6e5563e2-bf05-436a-89dc-62493d312e2a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "6e5563e2-bf05-436a-89dc-62493d312e2a",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Teams #all should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "3804e788-783c-4319-9de3-4dc4760d1702",
                "parentUUID": "6e5563e2-bf05-436a-89dc-62493d312e2a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Teams #all should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "b22afd15-e47d-4b24-9dbe-fdabe2b7808e",
                "parentUUID": "6e5563e2-bf05-436a-89dc-62493d312e2a",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Teams #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all.pop();<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "a5155515-b8ce-466f-8bf8-a75e05fbfc98",
                "parentUUID": "6e5563e2-bf05-436a-89dc-62493d312e2a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#length",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Teams #length should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.length = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "8daa0b1a-220f-43d9-975d-07e3b33c66bc",
                "parentUUID": "738b01be-89cc-4f3a-a976-69f8783eefcf",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Teams #length should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "8109f8c2-9f8f-4745-a859-d56013235c52",
                "parentUUID": "738b01be-89cc-4f3a-a976-69f8783eefcf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "738b01be-89cc-4f3a-a976-69f8783eefcf",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Teams #length should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.length = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "8daa0b1a-220f-43d9-975d-07e3b33c66bc",
                "parentUUID": "738b01be-89cc-4f3a-a976-69f8783eefcf",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Teams #length should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "8109f8c2-9f8f-4745-a859-d56013235c52",
                "parentUUID": "738b01be-89cc-4f3a-a976-69f8783eefcf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#add(team)",
            "suites": [],
            "tests": [
              {
                "title": "should add the given team",
                "fullTitle": "Teams #add(team) should add the given team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "aa5a2906-a803-4dce-8d15-07b72660aefa",
                "parentUUID": "a8b9ad67-cee7-43d7-b9a7-1addf84ffbde",
                "skipped": false
              },
              {
                "title": "should error if team with teamName already exists",
                "fullTitle": "Teams #add(team) should error if team with teamName already exists",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.add(t);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "cf20356a-af30-4e17-8a71-7cb7c37b3fa5",
                "parentUUID": "a8b9ad67-cee7-43d7-b9a7-1addf84ffbde",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "a8b9ad67-cee7-43d7-b9a7-1addf84ffbde",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should add the given team",
                "fullTitle": "Teams #add(team) should add the given team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "aa5a2906-a803-4dce-8d15-07b72660aefa",
                "parentUUID": "a8b9ad67-cee7-43d7-b9a7-1addf84ffbde",
                "skipped": false
              },
              {
                "title": "should error if team with teamName already exists",
                "fullTitle": "Teams #add(team) should error if team with teamName already exists",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.add(t);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "cf20356a-af30-4e17-8a71-7cb7c37b3fa5",
                "parentUUID": "a8b9ad67-cee7-43d7-b9a7-1addf84ffbde",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#remove(team)",
            "suites": [],
            "tests": [
              {
                "title": "should remove the existing team",
                "fullTitle": "Teams #remove(team) should remove the existing team",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "e830070c-ab5d-4366-a56a-514eeef55e5e",
                "parentUUID": "1c1a6878-0411-40cd-a52e-73b9e1c94ea1",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing team",
                "fullTitle": "Teams #remove(team) should not remove the non-existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t1).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "86d9d8fd-c975-417e-87d8-d37c0c5b5ae6",
                "parentUUID": "1c1a6878-0411-40cd-a52e-73b9e1c94ea1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "1c1a6878-0411-40cd-a52e-73b9e1c94ea1",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should remove the existing team",
                "fullTitle": "Teams #remove(team) should remove the existing team",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "e830070c-ab5d-4366-a56a-514eeef55e5e",
                "parentUUID": "1c1a6878-0411-40cd-a52e-73b9e1c94ea1",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing team",
                "fullTitle": "Teams #remove(team) should not remove the non-existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t1).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "86d9d8fd-c975-417e-87d8-d37c0c5b5ae6",
                "parentUUID": "1c1a6878-0411-40cd-a52e-73b9e1c94ea1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#removeByTeamName(team)",
            "suites": [],
            "tests": [
              {
                "title": "should remove the existing team",
                "fullTitle": "Teams #removeByTeamName(team) should remove the existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t.teamName).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "1fdb2039-8bfa-444d-ae5c-5156a58920cc",
                "parentUUID": "1f620ee4-1e80-485b-8835-dacb075e41a2",
                "skipped": false
              },
              {
                "title": "should ignore team name case",
                "fullTitle": "Teams #removeByTeamName(team) should ignore team name case",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'abc1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(<span class=\"hljs-string\">'ABC1'</span>).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "50963366-ded4-494f-b547-c6695dd57d53",
                "parentUUID": "1f620ee4-1e80-485b-8835-dacb075e41a2",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing team",
                "fullTitle": "Teams #removeByTeamName(team) should not remove the non-existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t1.teamName).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "4d1c0820-79f0-4ee0-91e5-5858b47a2412",
                "parentUUID": "1f620ee4-1e80-485b-8835-dacb075e41a2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "1f620ee4-1e80-485b-8835-dacb075e41a2",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should remove the existing team",
                "fullTitle": "Teams #removeByTeamName(team) should remove the existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t.teamName).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "1fdb2039-8bfa-444d-ae5c-5156a58920cc",
                "parentUUID": "1f620ee4-1e80-485b-8835-dacb075e41a2",
                "skipped": false
              },
              {
                "title": "should ignore team name case",
                "fullTitle": "Teams #removeByTeamName(team) should ignore team name case",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'abc1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(<span class=\"hljs-string\">'ABC1'</span>).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "50963366-ded4-494f-b547-c6695dd57d53",
                "parentUUID": "1f620ee4-1e80-485b-8835-dacb075e41a2",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing team",
                "fullTitle": "Teams #removeByTeamName(team) should not remove the non-existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t1.teamName).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "4d1c0820-79f0-4ee0-91e5-5858b47a2412",
                "parentUUID": "1f620ee4-1e80-485b-8835-dacb075e41a2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName)",
            "suites": [
              {
                "title": "when teams are full",
                "suites": [],
                "tests": [
                  {
                    "title": "should return a valid response",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teams are full should return a valid response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);",
                    "isRoot": false,
                    "uuid": "2529eb4e-92f1-48ac-9eaf-525bfc1d839a",
                    "parentUUID": "45633e3e-1b1c-447b-a242-98d0ef8576dd",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamsTests.js",
                "uuid": "45633e3e-1b1c-447b-a242-98d0ef8576dd",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
                "passes": [
                  {
                    "title": "should return a valid response",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teams are full should return a valid response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);",
                    "isRoot": false,
                    "uuid": "2529eb4e-92f1-48ac-9eaf-525bfc1d839a",
                    "parentUUID": "45633e3e-1b1c-447b-a242-98d0ef8576dd",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0
              },
              {
                "title": "when teamLeader selection is PLAYER_CHOICE",
                "suites": [],
                "tests": [
                  {
                    "title": "should inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should inquire for team leader",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> inquired = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    inquired = <span class=\"hljs-literal\">true</span>;<br>});<br>r.should.be.true();<br>inquired.should.be.true();",
                    "isRoot": false,
                    "uuid": "81b0b7d8-89ed-4506-a8e4-87c0e086dfe9",
                    "parentUUID": "2ca9ca67-710a-473e-8312-78fe2c388629",
                    "skipped": false
                  },
                  {
                    "title": "should not inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should not inquire for team leader",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>tc.all[<span class=\"hljs-number\">0</span>].teamLeader = c1;<br><span class=\"hljs-keyword\">var</span> didNotInquire = <span class=\"hljs-literal\">true</span>;<br>tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    didNotInquire = <span class=\"hljs-literal\">false</span>;<br>});<br>didNotInquire.should.be.true();<br>t.teamLeader.should.equal(c1);",
                    "isRoot": false,
                    "uuid": "b7b62817-e758-4b6a-a99a-54a28b01f133",
                    "parentUUID": "2ca9ca67-710a-473e-8312-78fe2c388629",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant as teamLeader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should not add contestant as teamLeader",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should(t.teamLeader).be.null();",
                    "isRoot": false,
                    "uuid": "fe9fdf0f-fbe4-4d31-878c-0ecaf959a61c",
                    "parentUUID": "2ca9ca67-710a-473e-8312-78fe2c388629",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamsTests.js",
                "uuid": "2ca9ca67-710a-473e-8312-78fe2c388629",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
                "passes": [
                  {
                    "title": "should inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should inquire for team leader",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> inquired = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    inquired = <span class=\"hljs-literal\">true</span>;<br>});<br>r.should.be.true();<br>inquired.should.be.true();",
                    "isRoot": false,
                    "uuid": "81b0b7d8-89ed-4506-a8e4-87c0e086dfe9",
                    "parentUUID": "2ca9ca67-710a-473e-8312-78fe2c388629",
                    "skipped": false
                  },
                  {
                    "title": "should not inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should not inquire for team leader",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>tc.all[<span class=\"hljs-number\">0</span>].teamLeader = c1;<br><span class=\"hljs-keyword\">var</span> didNotInquire = <span class=\"hljs-literal\">true</span>;<br>tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    didNotInquire = <span class=\"hljs-literal\">false</span>;<br>});<br>didNotInquire.should.be.true();<br>t.teamLeader.should.equal(c1);",
                    "isRoot": false,
                    "uuid": "b7b62817-e758-4b6a-a99a-54a28b01f133",
                    "parentUUID": "2ca9ca67-710a-473e-8312-78fe2c388629",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant as teamLeader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should not add contestant as teamLeader",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should(t.teamLeader).be.null();",
                    "isRoot": false,
                    "uuid": "fe9fdf0f-fbe4-4d31-878c-0ecaf959a61c",
                    "parentUUID": "2ca9ca67-710a-473e-8312-78fe2c388629",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 2
              },
              {
                "title": "when teamLeader selection is RANDOM",
                "suites": [],
                "tests": [
                  {
                    "title": "should not inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should not inquire for team leader",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> notInquired = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    notInquired = <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>r.should.be.true();<br>notInquired.should.be.true();",
                    "isRoot": false,
                    "uuid": "13e81307-2c06-4923-9121-be5e44549fbc",
                    "parentUUID": "b0f8e730-c55c-4f87-9031-b10c76b8ff03",
                    "skipped": false
                  },
                  {
                    "title": "should automatically add team leader when team is filled",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should automatically add team leader when team is filled",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).not.be.null();<br>});",
                    "isRoot": false,
                    "uuid": "d06c3856-9d7b-4ac4-84ec-d1344e20233f",
                    "parentUUID": "b0f8e730-c55c-4f87-9031-b10c76b8ff03",
                    "skipped": false
                  },
                  {
                    "title": "should not automatically add team leader when team is not filled",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should not automatically add team leader when team is not filled",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).be.null();<br>});",
                    "isRoot": false,
                    "uuid": "af5f2f00-eba8-4cf2-bad1-82930c4b35eb",
                    "parentUUID": "b0f8e730-c55c-4f87-9031-b10c76b8ff03",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamsTests.js",
                "uuid": "b0f8e730-c55c-4f87-9031-b10c76b8ff03",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
                "passes": [
                  {
                    "title": "should not inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should not inquire for team leader",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> notInquired = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    notInquired = <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>r.should.be.true();<br>notInquired.should.be.true();",
                    "isRoot": false,
                    "uuid": "13e81307-2c06-4923-9121-be5e44549fbc",
                    "parentUUID": "b0f8e730-c55c-4f87-9031-b10c76b8ff03",
                    "skipped": false
                  },
                  {
                    "title": "should automatically add team leader when team is filled",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should automatically add team leader when team is filled",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).not.be.null();<br>});",
                    "isRoot": false,
                    "uuid": "d06c3856-9d7b-4ac4-84ec-d1344e20233f",
                    "parentUUID": "b0f8e730-c55c-4f87-9031-b10c76b8ff03",
                    "skipped": false
                  },
                  {
                    "title": "should not automatically add team leader when team is not filled",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should not automatically add team leader when team is not filled",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).be.null();<br>});",
                    "isRoot": false,
                    "uuid": "af5f2f00-eba8-4cf2-bad1-82930c4b35eb",
                    "parentUUID": "b0f8e730-c55c-4f87-9031-b10c76b8ff03",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1
              },
              {
                "title": "when set to use unlimited teams",
                "suites": [],
                "tests": [
                  {
                    "title": "should add team when teams are full",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when set to use unlimited teams should add team when teams are full",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
                    "isRoot": false,
                    "uuid": "bd50a6f7-c0f7-495a-bd94-82defc43e2ed",
                    "parentUUID": "1f956e8d-78dc-4841-9f1d-70a6e32216d1",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamsTests.js",
                "uuid": "1f956e8d-78dc-4841-9f1d-70a6e32216d1",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
                "passes": [
                  {
                    "title": "should add team when teams are full",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when set to use unlimited teams should add team when teams are full",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
                    "isRoot": false,
                    "uuid": "bd50a6f7-c0f7-495a-bd94-82defc43e2ed",
                    "parentUUID": "1f956e8d-78dc-4841-9f1d-70a6e32216d1",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0
              },
              {
                "title": "when team selection method is PLAYER_CHOICE",
                "suites": [],
                "tests": [
                  {
                    "title": "should throw when no team name is given",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should throw when no team name is given",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>}).should.throw();",
                    "isRoot": false,
                    "uuid": "bad64548-fae0-441d-94b8-7581fc218583",
                    "parentUUID": "320b386b-f14b-429f-a514-e8eac2b205b9",
                    "skipped": false
                  },
                  {
                    "title": "should add contestant to correct team",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should add contestant to correct team",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "8fb2b6d0-0b14-4b14-bb9d-3c9f84a68174",
                    "parentUUID": "320b386b-f14b-429f-a514-e8eac2b205b9",
                    "skipped": false
                  },
                  {
                    "title": "should not add to full team",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should not add to full team",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "0c5308f8-a212-4eb8-949e-ce193139c2e1",
                    "parentUUID": "320b386b-f14b-429f-a514-e8eac2b205b9",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamsTests.js",
                "uuid": "320b386b-f14b-429f-a514-e8eac2b205b9",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
                "passes": [
                  {
                    "title": "should throw when no team name is given",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should throw when no team name is given",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>}).should.throw();",
                    "isRoot": false,
                    "uuid": "bad64548-fae0-441d-94b8-7581fc218583",
                    "parentUUID": "320b386b-f14b-429f-a514-e8eac2b205b9",
                    "skipped": false
                  },
                  {
                    "title": "should add contestant to correct team",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should add contestant to correct team",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "8fb2b6d0-0b14-4b14-bb9d-3c9f84a68174",
                    "parentUUID": "320b386b-f14b-429f-a514-e8eac2b205b9",
                    "skipped": false
                  },
                  {
                    "title": "should not add to full team",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should not add to full team",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "0c5308f8-a212-4eb8-949e-ce193139c2e1",
                    "parentUUID": "320b386b-f14b-429f-a514-e8eac2b205b9",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1
              }
            ],
            "tests": [
              {
                "title": "should give contestant an id",
                "fullTitle": "Teams addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) should give contestant an id",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Username'</span>;<br>should(c.id).be.null();<br>tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>should(c.id).not.be.null();",
                "isRoot": false,
                "uuid": "32def880-2fa3-45af-966d-f5663ed30f53",
                "parentUUID": "692e21ba-2218-4dcb-ab0f-a9950260df5f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "692e21ba-2218-4dcb-ab0f-a9950260df5f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should give contestant an id",
                "fullTitle": "Teams addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) should give contestant an id",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Username'</span>;<br>should(c.id).be.null();<br>tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>should(c.id).not.be.null();",
                "isRoot": false,
                "uuid": "32def880-2fa3-45af-966d-f5663ed30f53",
                "parentUUID": "692e21ba-2218-4dcb-ab0f-a9950260df5f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "getByContestant(contestant)",
            "suites": [],
            "tests": [
              {
                "title": "should get team of contestant",
                "fullTitle": "Teams getByContestant(contestant) should get team of contestant",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">5</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>    r.should.be.true();<br>});<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">4</span>]);<br>t.should.not.be.null();<br>t.contestants.getById(cc[<span class=\"hljs-number\">4</span>].id).should.equal(cc[<span class=\"hljs-number\">4</span>]);",
                "isRoot": false,
                "uuid": "2c80d723-5a0f-40c8-9241-d708b2ca7c47",
                "parentUUID": "ed1b9b19-0d44-4d76-b72d-7339403440a4",
                "skipped": false
              },
              {
                "title": "should not get team of contestant",
                "fullTitle": "Teams getByContestant(contestant) should not get team of contestant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">1</span>);<br>cc[<span class=\"hljs-number\">0</span>].id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">0</span>]);<br>should(t).be.null();",
                "isRoot": false,
                "uuid": "70224b80-3346-442f-a9a2-24bced457c9d",
                "parentUUID": "ed1b9b19-0d44-4d76-b72d-7339403440a4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "ed1b9b19-0d44-4d76-b72d-7339403440a4",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should get team of contestant",
                "fullTitle": "Teams getByContestant(contestant) should get team of contestant",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">5</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>    r.should.be.true();<br>});<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">4</span>]);<br>t.should.not.be.null();<br>t.contestants.getById(cc[<span class=\"hljs-number\">4</span>].id).should.equal(cc[<span class=\"hljs-number\">4</span>]);",
                "isRoot": false,
                "uuid": "2c80d723-5a0f-40c8-9241-d708b2ca7c47",
                "parentUUID": "ed1b9b19-0d44-4d76-b72d-7339403440a4",
                "skipped": false
              },
              {
                "title": "should not get team of contestant",
                "fullTitle": "Teams getByContestant(contestant) should not get team of contestant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">1</span>);<br>cc[<span class=\"hljs-number\">0</span>].id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">0</span>]);<br>should(t).be.null();",
                "isRoot": false,
                "uuid": "70224b80-3346-442f-a9a2-24bced457c9d",
                "parentUUID": "ed1b9b19-0d44-4d76-b72d-7339403440a4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "getByTeamName(temName)",
            "suites": [],
            "tests": [
              {
                "title": "should get team when team with name exists",
                "fullTitle": "Teams getByTeamName(temName) should get team when team with name exists",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t1 = tc.all[<span class=\"hljs-number\">0</span>];<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(t1.teamName);<br>t.should.equal(t1);",
                "isRoot": false,
                "uuid": "fa28085f-503e-4ca1-aa3b-585f97589bd9",
                "parentUUID": "caf3299d-8ae7-4835-9229-a7a057e0aa8f",
                "skipped": false
              },
              {
                "title": "should not get team when team with name does not exist",
                "fullTitle": "Teams getByTeamName(temName) should not get team when team with name does not exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(<span class=\"hljs-string\">'Not a team name that exists'</span>);<br>should(t).be.null();",
                "isRoot": false,
                "uuid": "aaaf3464-673f-44e3-b212-d8155eece968",
                "parentUUID": "caf3299d-8ae7-4835-9229-a7a057e0aa8f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "caf3299d-8ae7-4835-9229-a7a057e0aa8f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should get team when team with name exists",
                "fullTitle": "Teams getByTeamName(temName) should get team when team with name exists",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t1 = tc.all[<span class=\"hljs-number\">0</span>];<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(t1.teamName);<br>t.should.equal(t1);",
                "isRoot": false,
                "uuid": "fa28085f-503e-4ca1-aa3b-585f97589bd9",
                "parentUUID": "caf3299d-8ae7-4835-9229-a7a057e0aa8f",
                "skipped": false
              },
              {
                "title": "should not get team when team with name does not exist",
                "fullTitle": "Teams getByTeamName(temName) should not get team when team with name does not exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(<span class=\"hljs-string\">'Not a team name that exists'</span>);<br>should(t).be.null();",
                "isRoot": false,
                "uuid": "aaaf3464-673f-44e3-b212-d8155eece968",
                "parentUUID": "caf3299d-8ae7-4835-9229-a7a057e0aa8f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "getAvailable(settings)",
            "suites": [],
            "tests": [
              {
                "title": "should not return full teams",
                "fullTitle": "Teams getAvailable(settings) should not return full teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">2</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "b9617190-30bd-4923-b960-32ce42a4e490",
                "parentUUID": "d6d1dcc1-bf46-43a5-b966-6d939f0d458e",
                "skipped": false
              },
              {
                "title": "should return teams with space",
                "fullTitle": "Teams getAvailable(settings) should return teams with space",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "8fa40706-3896-4e3e-913e-a1faccf74f01",
                "parentUUID": "d6d1dcc1-bf46-43a5-b966-6d939f0d458e",
                "skipped": false
              },
              {
                "title": "should return teams with unlimited space",
                "fullTitle": "Teams getAvailable(settings) should return teams with unlimited space",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = constants.UNLIMITED;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "eeca0990-b958-4e9a-ac29-fe4a613a06f7",
                "parentUUID": "d6d1dcc1-bf46-43a5-b966-6d939f0d458e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "d6d1dcc1-bf46-43a5-b966-6d939f0d458e",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should not return full teams",
                "fullTitle": "Teams getAvailable(settings) should not return full teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">2</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "b9617190-30bd-4923-b960-32ce42a4e490",
                "parentUUID": "d6d1dcc1-bf46-43a5-b966-6d939f0d458e",
                "skipped": false
              },
              {
                "title": "should return teams with space",
                "fullTitle": "Teams getAvailable(settings) should return teams with space",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "8fa40706-3896-4e3e-913e-a1faccf74f01",
                "parentUUID": "d6d1dcc1-bf46-43a5-b966-6d939f0d458e",
                "skipped": false
              },
              {
                "title": "should return teams with unlimited space",
                "fullTitle": "Teams getAvailable(settings) should return teams with unlimited space",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = constants.UNLIMITED;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "eeca0990-b958-4e9a-ac29-fe4a613a06f7",
                "parentUUID": "d6d1dcc1-bf46-43a5-b966-6d939f0d458e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/TeamsTests.js",
        "uuid": "c1c326aa-d260-4994-b4c6-5dcbfb6ab83b",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Team",
        "suites": [
          {
            "title": "#teamName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Team #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t._teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
                "isRoot": false,
                "uuid": "ff8fce0f-8739-4100-86ff-ac8d12175427",
                "parentUUID": "b7d11874-9cd6-455e-a38e-76ccf4439112",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t._teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t.teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
                "isRoot": false,
                "uuid": "b14cbbdb-ae30-4306-8cde-309ce9440d05",
                "parentUUID": "b7d11874-9cd6-455e-a38e-76ccf4439112",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "b7d11874-9cd6-455e-a38e-76ccf4439112",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Team #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t._teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
                "isRoot": false,
                "uuid": "ff8fce0f-8739-4100-86ff-ac8d12175427",
                "parentUUID": "b7d11874-9cd6-455e-a38e-76ccf4439112",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t._teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t.teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
                "isRoot": false,
                "uuid": "b14cbbdb-ae30-4306-8cde-309ce9440d05",
                "parentUUID": "b7d11874-9cd6-455e-a38e-76ccf4439112",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#teamLeader",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Team #teamLeader should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t.teamLeader = c;<br>t._teamLeader.should.equal(c);",
                "isRoot": false,
                "uuid": "d601a106-8e3a-4ca8-a00b-995809c2350f",
                "parentUUID": "0154e657-bd8f-4787-9cf6-fd4565142a9e",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #teamLeader should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t._teamLeader = c;<br>t.teamLeader.should.equal(c);",
                "isRoot": false,
                "uuid": "4bda03d5-651d-416d-818c-fbdcb34e1d3f",
                "parentUUID": "0154e657-bd8f-4787-9cf6-fd4565142a9e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "0154e657-bd8f-4787-9cf6-fd4565142a9e",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Team #teamLeader should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t.teamLeader = c;<br>t._teamLeader.should.equal(c);",
                "isRoot": false,
                "uuid": "d601a106-8e3a-4ca8-a00b-995809c2350f",
                "parentUUID": "0154e657-bd8f-4787-9cf6-fd4565142a9e",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #teamLeader should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t._teamLeader = c;<br>t.teamLeader.should.equal(c);",
                "isRoot": false,
                "uuid": "4bda03d5-651d-416d-818c-fbdcb34e1d3f",
                "parentUUID": "0154e657-bd8f-4787-9cf6-fd4565142a9e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#score",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Team #score should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "25645839-0631-48a6-be8b-d53e6f551464",
                "parentUUID": "98ad86d0-8445-49a0-a2aa-9d5137723eec",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #score should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br>p._score = <span class=\"hljs-number\">5</span>;<br>p.score.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "2f765f22-2cec-4983-8a99-2dd59b7b5112",
                "parentUUID": "98ad86d0-8445-49a0-a2aa-9d5137723eec",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "98ad86d0-8445-49a0-a2aa-9d5137723eec",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Team #score should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "25645839-0631-48a6-be8b-d53e6f551464",
                "parentUUID": "98ad86d0-8445-49a0-a2aa-9d5137723eec",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #score should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br>p._score = <span class=\"hljs-number\">5</span>;<br>p.score.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "2f765f22-2cec-4983-8a99-2dd59b7b5112",
                "parentUUID": "98ad86d0-8445-49a0-a2aa-9d5137723eec",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#contestants",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Team #contestants should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "7f71a9fc-d5a8-40d4-8370-7fd94a0da293",
                "parentUUID": "b1986d2c-343d-4db2-9bae-14d2cdaaead1",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #contestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = p.contestants;<br>c.should.be.instanceOf(Participants);",
                "isRoot": false,
                "uuid": "3051daba-64eb-4ed9-bbe8-8d353aa5fd7d",
                "parentUUID": "b1986d2c-343d-4db2-9bae-14d2cdaaead1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "b1986d2c-343d-4db2-9bae-14d2cdaaead1",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Team #contestants should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "7f71a9fc-d5a8-40d4-8370-7fd94a0da293",
                "parentUUID": "b1986d2c-343d-4db2-9bae-14d2cdaaead1",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #contestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = p.contestants;<br>c.should.be.instanceOf(Participants);",
                "isRoot": false,
                "uuid": "3051daba-64eb-4ed9-bbe8-8d353aa5fd7d",
                "parentUUID": "b1986d2c-343d-4db2-9bae-14d2cdaaead1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "when a contestant scores",
            "suites": [],
            "tests": [
              {
                "title": "should update the teams score",
                "fullTitle": "Team when a contestant scores should update the teams score",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br>c1.incrementScore();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.incrementScore();<br>c2.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "191faefe-007d-43c4-9656-6c9efca81c3d",
                "parentUUID": "1e4f20f0-2c0c-4e57-9814-6a0376715fa5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "1e4f20f0-2c0c-4e57-9814-6a0376715fa5",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should update the teams score",
                "fullTitle": "Team when a contestant scores should update the teams score",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br>c1.incrementScore();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.incrementScore();<br>c2.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "191faefe-007d-43c4-9656-6c9efca81c3d",
                "parentUUID": "1e4f20f0-2c0c-4e57-9814-6a0376715fa5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "tryAssignTeamLeader(contestant, hostOverride)",
            "suites": [],
            "tests": [
              {
                "title": "should allow it when no team leader is set",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should allow it when no team leader is set",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.id = <span class=\"hljs-string\">'c1'</span>;<br>t.contestants.add(c);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);",
                "isRoot": false,
                "uuid": "7eed98da-b6c3-4517-8f3a-ffcb3f7f4671",
                "parentUUID": "05b8ebd2-89cb-4003-ad33-f36114c5c464",
                "skipped": false
              },
              {
                "title": "should not allow it when a team leader is set",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should not allow it when a team leader is set",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_FULFILLED);",
                "isRoot": false,
                "uuid": "66588e44-4f52-46ad-b723-6f11e6bfcd9e",
                "parentUUID": "05b8ebd2-89cb-4003-ad33-f36114c5c464",
                "skipped": false
              },
              {
                "title": "should not allow it when a contestant is not in team",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should not allow it when a contestant is not in team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_NOT_CONTESTANT);",
                "isRoot": false,
                "uuid": "f2d72588-b46f-4b60-8a47-8b98a8ebf112",
                "parentUUID": "05b8ebd2-89cb-4003-ad33-f36114c5c464",
                "skipped": false
              },
              {
                "title": "should allow it when a team leader is set and host override is flagged",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should allow it when a team leader is set and host override is flagged",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">true</span>);<br>r.should.be.true();<br>should.not.exist(m);",
                "isRoot": false,
                "uuid": "03d9a2dc-b430-487d-9c8f-d981a11c6b8d",
                "parentUUID": "05b8ebd2-89cb-4003-ad33-f36114c5c464",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "05b8ebd2-89cb-4003-ad33-f36114c5c464",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should allow it when no team leader is set",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should allow it when no team leader is set",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.id = <span class=\"hljs-string\">'c1'</span>;<br>t.contestants.add(c);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);",
                "isRoot": false,
                "uuid": "7eed98da-b6c3-4517-8f3a-ffcb3f7f4671",
                "parentUUID": "05b8ebd2-89cb-4003-ad33-f36114c5c464",
                "skipped": false
              },
              {
                "title": "should not allow it when a team leader is set",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should not allow it when a team leader is set",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_FULFILLED);",
                "isRoot": false,
                "uuid": "66588e44-4f52-46ad-b723-6f11e6bfcd9e",
                "parentUUID": "05b8ebd2-89cb-4003-ad33-f36114c5c464",
                "skipped": false
              },
              {
                "title": "should not allow it when a contestant is not in team",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should not allow it when a contestant is not in team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_NOT_CONTESTANT);",
                "isRoot": false,
                "uuid": "f2d72588-b46f-4b60-8a47-8b98a8ebf112",
                "parentUUID": "05b8ebd2-89cb-4003-ad33-f36114c5c464",
                "skipped": false
              },
              {
                "title": "should allow it when a team leader is set and host override is flagged",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should allow it when a team leader is set and host override is flagged",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">true</span>);<br>r.should.be.true();<br>should.not.exist(m);",
                "isRoot": false,
                "uuid": "03d9a2dc-b430-487d-9c8f-d981a11c6b8d",
                "parentUUID": "05b8ebd2-89cb-4003-ad33-f36114c5c464",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "tryChangeTeamName(teamName, settings, hostOverride)",
            "suites": [
              {
                "title": "when host override",
                "suites": [],
                "tests": [
                  {
                    "title": "should change name when request is valid",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when request is valid",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "8642efeb-637b-402e-8352-06d1051c145e",
                    "parentUUID": "4be6b10c-b5a6-43a8-8bc5-cabf63a57bad",
                    "skipped": false
                  },
                  {
                    "title": "should change name when setting do not allow it",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when setting do not allow it",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "4b07bc0d-2940-4ea0-8bb9-2ba710686bc2",
                    "parentUUID": "4be6b10c-b5a6-43a8-8bc5-cabf63a57bad",
                    "skipped": false
                  },
                  {
                    "title": "should change name when name contains profanity",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when name contains profanity",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "020d07d0-ccc4-4463-8efe-c4b87da84b76",
                    "parentUUID": "4be6b10c-b5a6-43a8-8bc5-cabf63a57bad",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamTests.js",
                "uuid": "4be6b10c-b5a6-43a8-8bc5-cabf63a57bad",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
                "passes": [
                  {
                    "title": "should change name when request is valid",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when request is valid",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "8642efeb-637b-402e-8352-06d1051c145e",
                    "parentUUID": "4be6b10c-b5a6-43a8-8bc5-cabf63a57bad",
                    "skipped": false
                  },
                  {
                    "title": "should change name when setting do not allow it",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when setting do not allow it",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "4b07bc0d-2940-4ea0-8bb9-2ba710686bc2",
                    "parentUUID": "4be6b10c-b5a6-43a8-8bc5-cabf63a57bad",
                    "skipped": false
                  },
                  {
                    "title": "should change name when name contains profanity",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when name contains profanity",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "020d07d0-ccc4-4463-8efe-c4b87da84b76",
                    "parentUUID": "4be6b10c-b5a6-43a8-8bc5-cabf63a57bad",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1
              }
            ],
            "tests": [
              {
                "title": "should change name when request is valid",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should change name when request is valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                "isRoot": false,
                "uuid": "8d63248c-bc10-4fca-8718-d47da2a79cc1",
                "parentUUID": "c183f725-0eaf-4ce7-adee-10ffbecdc985",
                "skipped": false
              },
              {
                "title": "should not change name when setting do not allow it",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should not change name when setting do not allow it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_SETTINGS_NOT_ALLOW);<br>r.should.be.false();",
                "isRoot": false,
                "uuid": "63bd2a16-441a-4691-898b-a03abaad966e",
                "parentUUID": "c183f725-0eaf-4ce7-adee-10ffbecdc985",
                "skipped": false
              },
              {
                "title": "should not change name when name contains profanity",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should not change name when name contains profanity",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_CONTAINS_PROFANITY);<br>r.should.be.false();",
                "isRoot": false,
                "uuid": "b11a18bc-c3a4-413f-b993-2470c38d9b74",
                "parentUUID": "c183f725-0eaf-4ce7-adee-10ffbecdc985",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "c183f725-0eaf-4ce7-adee-10ffbecdc985",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should change name when request is valid",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should change name when request is valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                "isRoot": false,
                "uuid": "8d63248c-bc10-4fca-8718-d47da2a79cc1",
                "parentUUID": "c183f725-0eaf-4ce7-adee-10ffbecdc985",
                "skipped": false
              },
              {
                "title": "should not change name when setting do not allow it",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should not change name when setting do not allow it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_SETTINGS_NOT_ALLOW);<br>r.should.be.false();",
                "isRoot": false,
                "uuid": "63bd2a16-441a-4691-898b-a03abaad966e",
                "parentUUID": "c183f725-0eaf-4ce7-adee-10ffbecdc985",
                "skipped": false
              },
              {
                "title": "should not change name when name contains profanity",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should not change name when name contains profanity",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_CONTAINS_PROFANITY);<br>r.should.be.false();",
                "isRoot": false,
                "uuid": "b11a18bc-c3a4-413f-b993-2470c38d9b74",
                "parentUUID": "c183f725-0eaf-4ce7-adee-10ffbecdc985",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "getContestantByUsername(username)",
            "suites": [],
            "tests": [
              {
                "title": "should get contestant when contest with username exists",
                "fullTitle": "Team getContestantByUsername(username) should get contestant when contest with username exists",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(c1.username);<br>c.should.equal(c1);<br>c = t.getContestantByUsername(<span class=\"hljs-string\">'c1abc'</span>);<br>c.should.equal(c1);",
                "isRoot": false,
                "uuid": "ca107621-cc40-4f09-a998-fdda6edc6e95",
                "parentUUID": "73e1103f-b97a-45dd-97a1-2bb516e7593c",
                "skipped": false
              },
              {
                "title": "should not get contestant when contest with username does not exist",
                "fullTitle": "Team getContestantByUsername(username) should not get contestant when contest with username does not exist",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(<span class=\"hljs-string\">'John Doe'</span>);<br>should(c).be.null();",
                "isRoot": false,
                "uuid": "114d56f3-09a3-4bf6-9a5e-02c8277b3595",
                "parentUUID": "73e1103f-b97a-45dd-97a1-2bb516e7593c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "73e1103f-b97a-45dd-97a1-2bb516e7593c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should get contestant when contest with username exists",
                "fullTitle": "Team getContestantByUsername(username) should get contestant when contest with username exists",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(c1.username);<br>c.should.equal(c1);<br>c = t.getContestantByUsername(<span class=\"hljs-string\">'c1abc'</span>);<br>c.should.equal(c1);",
                "isRoot": false,
                "uuid": "ca107621-cc40-4f09-a998-fdda6edc6e95",
                "parentUUID": "73e1103f-b97a-45dd-97a1-2bb516e7593c",
                "skipped": false
              },
              {
                "title": "should not get contestant when contest with username does not exist",
                "fullTitle": "Team getContestantByUsername(username) should not get contestant when contest with username does not exist",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(<span class=\"hljs-string\">'John Doe'</span>);<br>should(c).be.null();",
                "isRoot": false,
                "uuid": "114d56f3-09a3-4bf6-9a5e-02c8277b3595",
                "parentUUID": "73e1103f-b97a-45dd-97a1-2bb516e7593c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/TeamTests.js",
        "uuid": "cc12d21d-909c-4eb1-b1fb-ac0888c12ba1",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "fb6ed921-9c73-4b64-94c4-13091b48014c",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should throw on set value",
      "fullTitle": "#wasSuccessful should throw on set value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.wasSuccessful = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "6aba56f6-df20-4b71-a6e1-a4322e3a0fdb",
      "parentUUID": "638aec8b-bd17-4966-987d-4d9999187018",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#wasSuccessful should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>r.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "7585fc3b-1c1a-4446-870f-7ec75d5fd8e8",
      "parentUUID": "638aec8b-bd17-4966-987d-4d9999187018",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#enquireForTeamLeaderPosition should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r._enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "e700e467-d9ab-48b5-8b2f-489d10468f5e",
      "parentUUID": "31b1a100-d347-405e-a154-3ec95eb07fa6",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#enquireForTeamLeaderPosition should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r.enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "7817a349-f829-4d1e-ae67-4a03857ff3f2",
      "parentUUID": "31b1a100-d347-405e-a154-3ec95eb07fa6",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#errorMessage should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.errorMessage = <span class=\"hljs-string\">'test'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "2a97f4a8-4515-46d6-9b69-bc60e6434822",
      "parentUUID": "6b730f18-6be3-43fc-a0f4-bc3221a801bf",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#errorMessage should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._errorMessage = <span class=\"hljs-string\">'errorMessage_test'</span>;<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'errorMessage_test'</span>);",
      "isRoot": false,
      "uuid": "72e56e70-142d-4484-ad4f-bd3436c8e76e",
      "parentUUID": "6b730f18-6be3-43fc-a0f4-bc3221a801bf",
      "skipped": false
    },
    {
      "title": "should change the state to not successful",
      "fullTitle": "#setNotSuccessful(errorMessage) should change the state to not successful",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.setNotSuccessful(<span class=\"hljs-string\">'Test error message'</span>);<br>r.wasSuccessful.should.be.false();<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'Test error message'</span>);",
      "isRoot": false,
      "uuid": "1285a6be-e066-4583-989f-eb25db1d3f15",
      "parentUUID": "8e49334f-4d94-49a9-a021-27390be5e1a6",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'username_test'</span>;<br>c._username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
      "isRoot": false,
      "uuid": "00453ecc-bfc8-4511-9f3a-1bc310a81073",
      "parentUUID": "490c842e-ffa6-460c-a263-4fa3dc443015",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._username = <span class=\"hljs-string\">'username_test'</span>;<br>c.username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
      "isRoot": false,
      "uuid": "79e10825-c814-4adb-9b7a-fbc6b0c64a2f",
      "parentUUID": "490c842e-ffa6-460c-a263-4fa3dc443015",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#score should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    c.score = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "50c581b8-a971-48f1-9f71-81887aaa4a75",
      "parentUUID": "0c4a182a-d4c9-4bf8-ab7e-02e56804b34a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#score should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._score = <span class=\"hljs-number\">1</span>;<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "09a9d708-a513-44e9-a5ae-2384f717c41a",
      "parentUUID": "0c4a182a-d4c9-4bf8-ab7e-02e56804b34a",
      "skipped": false
    },
    {
      "title": "should increment the contestant's score",
      "fullTitle": "#incrementScore() should increment the contestant's score",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.incrementScore();<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "89e9619e-69ca-44b2-ae1c-f65237335ced",
      "parentUUID": "b6a35631-bfc3-4ebe-bcab-71b224be33ed",
      "skipped": false
    },
    {
      "title": "should emit scoreUpdate event",
      "fullTitle": "#incrementScore() should emit scoreUpdate event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.on(<span class=\"hljs-string\">'scoreUpdate'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>});<br>c.incrementScore();",
      "isRoot": false,
      "uuid": "45ef8fb1-ae48-42aa-a60f-c3ce5fbb9b09",
      "parentUUID": "b6a35631-bfc3-4ebe-bcab-71b224be33ed",
      "skipped": false
    },
    {
      "title": "should return a non-null non-empty key",
      "fullTitle": "#generateSessionId() should return a non-null non-empty key",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateSessionId().should.not.be.equal(<span class=\"hljs-string\">''</span>).and.not.be.equal(<span class=\"hljs-literal\">null</span>);",
      "isRoot": false,
      "uuid": "be32e871-916a-4e71-a0b0-4b5f0f5e4451",
      "parentUUID": "ae81c6c6-e1f7-4562-96c8-45ececcf7d75",
      "skipped": false
    },
    {
      "title": "should return a id of the correct length",
      "fullTitle": "#generateSessionId() should return a id of the correct length",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateSessionId()<br>    .length.should.be.Number().and.equal(idUtility.keyLength);",
      "isRoot": false,
      "uuid": "d33db0e8-ff0c-482d-9ae6-062eadb24a0a",
      "parentUUID": "ae81c6c6-e1f7-4562-96c8-45ececcf7d75",
      "skipped": false
    },
    {
      "title": "should record id so it cannot be reused.",
      "fullTitle": "#generateSessionId() should record id so it cannot be reused.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> id = idUtility.generateSessionId();<br>idUtility._sessionKeysInUse.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">cachedId</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> cachedId === id;<br>}).should.equal(id);",
      "isRoot": false,
      "uuid": "d49442ec-e2e9-40e5-99b4-ca3ee48d1d45",
      "parentUUID": "ae81c6c6-e1f7-4562-96c8-45ececcf7d75",
      "skipped": false
    },
    {
      "title": "should return a UUID",
      "fullTitle": "#generateParticipantId() should return a UUID",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateParticipantId()<br>    .should.match(<span class=\"hljs-regexp\">/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i</span>);",
      "isRoot": false,
      "uuid": "9c4cfc3b-d297-46c5-b925-ad0a0eaa798a",
      "parentUUID": "71a8935c-4262-45cc-b9cb-b40f9885025c",
      "skipped": false
    },
    {
      "title": "should store the ids to stop reuse",
      "fullTitle": "#registerSessionIdsInUse(ids) should store the ids to stop reuse",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.length.should.be.aboveOrEqual(<span class=\"hljs-number\">2</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "8837b62e-d69c-452a-94ef-35e406e0b1fd",
      "parentUUID": "7bccc08a-059d-4e2e-bdec-3ab07c203c1a",
      "skipped": false
    },
    {
      "title": "should return a UUID",
      "fullTitle": "#releaseSessionId(id) should return a UUID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility.releaseSessionId(<span class=\"hljs-string\">'111AAA'</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.equal(-<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "be67410b-2db6-400e-a4d1-fe9694abd4c3",
      "parentUUID": "44f4883a-4105-4718-98e9-54a9079d7c3b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#action should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.data._action.should.equal(constants.buzzerActionCommands.RESET);",
      "isRoot": false,
      "uuid": "e364b064-cee8-4af7-ae67-c3c3041f686b",
      "parentUUID": "ded301d9-09f1-4d22-ab9d-7fdf90a6eacf",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#action should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._action = constants.buzzerActionCommands.RESET;<br>m.action.should.equal(constants.buzzerActionCommands.RESET);",
      "isRoot": false,
      "uuid": "db201396-4db9-4838-86c7-11ee2e12d9da",
      "parentUUID": "ded301d9-09f1-4d22-ab9d-7fdf90a6eacf",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "e8a34432-9298-4bf1-ba97-cf83b4a299fa",
      "parentUUID": "e61146c4-0d68-4301-a84e-22d45dda17d9",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "21ee7e84-2214-4d9e-9c9b-5636e18a02e7",
      "parentUUID": "e61146c4-0d68-4301-a84e-22d45dda17d9",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "fbb09189-f169-416d-8ab1-a0e1293ff582",
      "parentUUID": "16b32679-94bb-4556-a179-d9930c8a1a4a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "6bfd9d59-dd5f-4c4b-b13a-1281fc1db3f8",
      "parentUUID": "16b32679-94bb-4556-a179-d9930c8a1a4a",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'yyy123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "15aadf50-387e-480a-b95d-99cd700e5706",
      "parentUUID": "06d390c9-183b-4705-a010-8017f8841a82",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = <span class=\"hljs-number\">99</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "c0b45db1-4630-4916-a8c5-dd29ab942846",
      "parentUUID": "06d390c9-183b-4705-a010-8017f8841a82",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "0d4efce6-31f1-485c-a1ec-64806f057991",
      "parentUUID": "a73e1326-590b-436a-852d-6a7420c8bffb",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "7ef68d84-48c3-418a-8275-fea388359d08",
      "parentUUID": "a73e1326-590b-436a-852d-6a7420c8bffb",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "39ac89dc-e683-45be-8e07-2ea7ef31fbbb",
      "parentUUID": "1be3547e-b2dd-4589-8d56-645a938b95a8",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "3a749232-5125-44a1-8c78-6a9238a3ac4b",
      "parentUUID": "1be3547e-b2dd-4589-8d56-645a938b95a8",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "489a3abc-3f32-487a-9b5a-b10eceeb954e",
      "parentUUID": "9f94fdc7-2e39-417f-a15b-6bda6d3bdfc8",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "e42f5b74-4907-4778-8958-7299c15b6e7f",
      "parentUUID": "9f94fdc7-2e39-417f-a15b-6bda6d3bdfc8",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.username = <span class=\"hljs-string\">'test123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
      "isRoot": false,
      "uuid": "9bd6412b-0059-4642-be15-a6f652c15fe9",
      "parentUUID": "6fabc9c3-4faa-4072-a04b-1e2933a09fdf",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._username = <span class=\"hljs-string\">'test123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
      "isRoot": false,
      "uuid": "07b1d64c-0032-4593-8215-3995813e019c",
      "parentUUID": "6fabc9c3-4faa-4072-a04b-1e2933a09fdf",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "8ad84ab8-b4cb-4d7b-a031-1b113f0149fe",
      "parentUUID": "5e0af63c-fd71-4ab1-9789-51bc3a789c58",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f9c1dce6-ea50-4a0b-bc0b-fc6ec0f004b8",
      "parentUUID": "5e0af63c-fd71-4ab1-9789-51bc3a789c58",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "0f7b1410-caeb-4845-afe1-abadde0cc86e",
      "parentUUID": "3d74dfbf-73ba-415f-9ed8-74ef95b88fcd",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "1581e8c5-0ea4-4ece-9b8b-265de143ab53",
      "parentUUID": "3d74dfbf-73ba-415f-9ed8-74ef95b88fcd",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "5e0215df-c1d9-44ec-bbc4-a6273066e3f9",
      "parentUUID": "85aaa33d-14f2-418e-8de2-4c1660bd9c0d",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "55e3c4c8-4edd-4334-892a-cdb65f10b61f",
      "parentUUID": "85aaa33d-14f2-418e-8de2-4c1660bd9c0d",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#wasSuccessful should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.data._wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "eb0b0672-33bd-4845-8c38-3cc32c810c6c",
      "parentUUID": "df9aea43-0b10-4b30-9614-bd29c6506d72",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#wasSuccessful should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "963685d0-9aa4-4ba9-aedb-b699fdaa810a",
      "parentUUID": "df9aea43-0b10-4b30-9614-bd29c6506d72",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#enquireForTeamLeaderPosition should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.data._enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "f51cc64c-cc29-4662-b410-ab32d2a82ad7",
      "parentUUID": "926c2cce-b1bf-4144-aefd-cfc628e48e9c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#enquireForTeamLeaderPosition should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "e9dc0e1e-56a6-49ee-a905-9e350deb1042",
      "parentUUID": "926c2cce-b1bf-4144-aefd-cfc628e48e9c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#failedRequestReason should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.data._failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
      "isRoot": false,
      "uuid": "41cd6f14-17ce-4192-aa6a-1cef3f77c451",
      "parentUUID": "a25d57a1-1e62-425c-95cc-76e1840a4e5f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#failedRequestReason should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
      "isRoot": false,
      "uuid": "4248c9a3-b05a-4d2d-a3fe-cdd9359cf4b7",
      "parentUUID": "a25d57a1-1e62-425c-95cc-76e1840a4e5f",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "39a25c0b-913e-4e06-845e-2344d89d1b6c",
      "parentUUID": "e8172bc2-308d-4d93-b2c0-a5cb29418b8a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "84ab6a9b-fc40-42a2-8752-edbe741cef04",
      "parentUUID": "e8172bc2-308d-4d93-b2c0-a5cb29418b8a",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#mustChooseTeam should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.data._mustChooseTeam.should.be.true();",
      "isRoot": false,
      "uuid": "e8a7d2da-192e-48ce-af90-594163386a4e",
      "parentUUID": "94998537-ada8-403f-bcbe-a82a5b97f86c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#mustChooseTeam should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.mustChooseTeam.should.be.true();",
      "isRoot": false,
      "uuid": "33751cb5-898a-4d28-81d4-7085bc5283e3",
      "parentUUID": "94998537-ada8-403f-bcbe-a82a5b97f86c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teams should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.data._teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
      "isRoot": false,
      "uuid": "12f88db7-2d64-4127-87be-d343a201bac5",
      "parentUUID": "9827ea32-1fae-4199-acf3-cdf67a7db4e8",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teams should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
      "isRoot": false,
      "uuid": "79be706a-2baa-4859-84a6-3498f70cb8c6",
      "parentUUID": "9827ea32-1fae-4199-acf3-cdf67a7db4e8",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "94e4df95-2249-4fe7-8477-154a31452bef",
      "parentUUID": "7ca0f093-499d-4516-b7a0-ff32045203ed",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "f477cc15-21c9-444e-85b0-96c9be7b14cb",
      "parentUUID": "7ca0f093-499d-4516-b7a0-ff32045203ed",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#settings should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.data._settings.should.equal(s);",
      "isRoot": false,
      "uuid": "82c537e2-f64d-459d-b8c4-dc69eb5da42d",
      "parentUUID": "1366fc0f-dff9-48bd-a4b2-5d6010e0eac6",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#settings should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.data._settings = s;<br>m.settings.should.equal(s);",
      "isRoot": false,
      "uuid": "bad5c5d6-082c-425e-80ef-259c21a88b94",
      "parentUUID": "1366fc0f-dff9-48bd-a4b2-5d6010e0eac6",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "11e80f67-c0eb-4985-af5c-ab9883121065",
      "parentUUID": "cb991c69-dd05-4824-8f10-eb89a88e61c7",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-string\">'invalid'</span>;<br>m.settings = s;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "55382408-cc54-4b27-9dd1-22a0df7c3f7c",
      "parentUUID": "cb991c69-dd05-4824-8f10-eb89a88e61c7",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "80125c76-bd25-4c18-8476-a749ac67b6e4",
      "parentUUID": "af2a6462-41e6-4afe-af80-f08765d64100",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f5683577-058c-47d4-896f-8508d08ed9dc",
      "parentUUID": "af2a6462-41e6-4afe-af80-f08765d64100",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "8f7a4d0d-0e22-4f1a-abf3-c87450d6d4d1",
      "parentUUID": "4fb51a99-da71-4b42-9307-e48bb20efe10",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "7b289060-a1ed-4f2c-b22c-ed89784fb67c",
      "parentUUID": "4fb51a99-da71-4b42-9307-e48bb20efe10",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "bb7b9c77-51eb-44e2-b4d2-df12182500e2",
      "parentUUID": "1c1da0eb-3e72-4dae-bcc8-0c925f9eb3ea",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "7fdd8491-cd25-4012-8f45-9ac0f06a3865",
      "parentUUID": "1c1da0eb-3e72-4dae-bcc8-0c925f9eb3ea",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#message should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "dbf89908-e994-459c-8aec-82a02cba7cd9",
      "parentUUID": "70feab43-b191-4f86-8a55-39766fef3058",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#message should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.data._error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b276a849-399d-4d61-9628-7f7ffa2fdd65",
      "parentUUID": "70feab43-b191-4f86-8a55-39766fef3058",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "5bee5431-954c-424d-b69f-4978b7577f3a",
      "parentUUID": "c600b785-6ba6-4f89-9480-214264e1aa1b",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "9b456a35-f52f-44fb-ae28-9125954035ac",
      "parentUUID": "c600b785-6ba6-4f89-9480-214264e1aa1b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionName should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "792f4e99-27a7-4438-aa1e-0a49c67def12",
      "parentUUID": "fe21c6ae-82c6-4f45-ab94-ef0b13df0a91",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionName should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "8c575bac-5903-4b51-912f-447ecd5c284c",
      "parentUUID": "fe21c6ae-82c6-4f45-ab94-ef0b13df0a91",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxTeams should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxTeams = <span class=\"hljs-number\">5</span>;<br>m.data._maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "16870995-21b2-4a3f-95b1-d93a5c952e73",
      "parentUUID": "91189a29-9910-4a73-87d2-cac5950862c0",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxTeams should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxTeams = <span class=\"hljs-number\">5</span>;<br>m.maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "5a7c0b05-25c2-4f67-80c7-d7968cec3589",
      "parentUUID": "91189a29-9910-4a73-87d2-cac5950862c0",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamSize should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.teamSize = <span class=\"hljs-number\">5</span>;<br>m.data._teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "1f1ac66d-b236-44d2-a05c-d801989198bf",
      "parentUUID": "fb9f6e16-9717-4eb2-8d71-10b1adbe5c41",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamSize should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._teamSize = <span class=\"hljs-number\">5</span>;<br>m.teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "87f965d1-5fa5-4d13-845c-69ed656ec525",
      "parentUUID": "fb9f6e16-9717-4eb2-8d71-10b1adbe5c41",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxContestants should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxContestants = <span class=\"hljs-number\">5</span>;<br>m.data._maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "9c163565-a4ea-4472-bc42-d727214cd91a",
      "parentUUID": "01ce8c18-447a-442c-ab6a-08224b53d9eb",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxContestants should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxContestants = <span class=\"hljs-number\">5</span>;<br>m.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "4b186fe2-affe-4fe2-a2a2-c04b703a82a8",
      "parentUUID": "01ce8c18-447a-442c-ab6a-08224b53d9eb",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "ce76c296-074f-40ce-9ddf-d38503c6ba9d",
      "parentUUID": "780ee354-5fef-43dd-b2c2-f4f9b418b5c0",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "000defb0-dee0-4f80-b830-878cc6556cb4",
      "parentUUID": "780ee354-5fef-43dd-b2c2-f4f9b418b5c0",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "151d8d3b-9761-4ca4-94ef-ca12b68e0ff3",
      "parentUUID": "c1c2fe49-6c7e-446a-b8fb-a04b1a5ce906",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "6b4e01ce-6e72-4741-9290-741034a5bfb9",
      "parentUUID": "c1c2fe49-6c7e-446a-b8fb-a04b1a5ce906",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "eecaeb06-0404-4265-9938-e734de4c5ea3",
      "parentUUID": "235d2780-39af-45a2-a9d4-bd172611ae48",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "5d216adb-751d-4c6e-8eb0-d45edcafec73",
      "parentUUID": "235d2780-39af-45a2-a9d4-bd172611ae48",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "11cfafd3-d759-4ee5-b83d-d155075847eb",
      "parentUUID": "102b6668-054d-42a1-9392-158afb1581ba",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "0fc76e8a-63a3-484f-a9ae-d4a04f0ada37",
      "parentUUID": "102b6668-054d-42a1-9392-158afb1581ba",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeaderUsername should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "6a5da53e-6d3d-4719-b368-e8ea0b6c5f63",
      "parentUUID": "d6071ceb-87af-4af0-860e-c4fc91e97a37",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeaderUsername should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "6d9be688-0668-4db3-84ce-19a79cb62b21",
      "parentUUID": "d6071ceb-87af-4af0-860e-c4fc91e97a37",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b48f046b-4abf-4fff-bf7b-3e69527a9f79",
      "parentUUID": "d3f98df6-22d7-45d5-94e1-90b02072a9c0",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "bf25615c-1977-43e7-902e-2c7ae592d7a7",
      "parentUUID": "d3f98df6-22d7-45d5-94e1-90b02072a9c0",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "1dec4322-a6c2-4255-89a6-8eaad8c7a7c6",
      "parentUUID": "8b7d6cc2-287a-4fef-aaa9-e6bfe315f055",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "72e59a21-54f1-4633-a38d-27d13b1bf2e5",
      "parentUUID": "8b7d6cc2-287a-4fef-aaa9-e6bfe315f055",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "c4f239ab-4730-43b0-92fb-8ae1e1cfdfd4",
      "parentUUID": "e409fcdc-d340-473d-8c64-bda14c6660a6",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "4e39a7a3-1dcb-4c44-bb27-4eef52185ae3",
      "parentUUID": "e409fcdc-d340-473d-8c64-bda14c6660a6",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameFrom should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "2e332345-dbf8-4c44-b4e4-af5975f0d1d7",
      "parentUUID": "59033101-fe0c-439e-bec8-73dd200e82a5",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameFrom should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "2b79e3f6-ceb9-4fd3-b1f2-e7c6a91fa090",
      "parentUUID": "59033101-fe0c-439e-bec8-73dd200e82a5",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameTo should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "0e6cdf0d-9905-4893-88ea-2e4671206a20",
      "parentUUID": "7fd98ec6-76ec-4e44-a7b7-aa408cdab8ba",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameTo should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "1e59d7da-8a4d-4e57-ae1d-a12d202b9b4c",
      "parentUUID": "7fd98ec6-76ec-4e44-a7b7-aa408cdab8ba",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "52e945a1-a6f9-4832-b44d-da7ed8d59a1e",
      "parentUUID": "723a3028-dc71-42a3-9c09-2ee16ce270ea",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "9925159e-946c-48d1-b8ec-ff1e3d1a2b37",
      "parentUUID": "723a3028-dc71-42a3-9c09-2ee16ce270ea",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "4acad8ed-2818-41ea-8b3f-2117046b640f",
      "parentUUID": "3024c962-64c0-44ac-82d1-d34130177ea4",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b8c29bf6-2532-46d6-a8b5-65e5904adf82",
      "parentUUID": "3024c962-64c0-44ac-82d1-d34130177ea4",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "ae1fe7c7-2527-498c-9fdd-e6d0aec17b7b",
      "parentUUID": "8669f7a9-8dc2-4250-a374-ef8713ebc619",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "bef222f0-506a-4a2a-b158-94e8fcbc7d38",
      "parentUUID": "8669f7a9-8dc2-4250-a374-ef8713ebc619",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#decision should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.data._decision.should.be.true();",
      "isRoot": false,
      "uuid": "58e0bf8b-00c1-4049-934a-e0d2fd3579c4",
      "parentUUID": "958cda6b-bc96-4418-a9c4-ed68e97963a1",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#decision should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._decision = <span class=\"hljs-literal\">true</span>;<br>m.decision.should.be.true();",
      "isRoot": false,
      "uuid": "c478c542-8d8c-48c8-8b58-8d50ab4a0546",
      "parentUUID": "958cda6b-bc96-4418-a9c4-ed68e97963a1",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "37c18688-d11e-4753-96ad-b9620c66435b",
      "parentUUID": "c2997098-0973-47c6-92f7-90705a272ad8",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "284706da-180f-4236-9a5f-4c6dad58296b",
      "parentUUID": "c2997098-0973-47c6-92f7-90705a272ad8",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "d1178cf1-a520-4cda-bb2c-ab563dd8fa90",
      "parentUUID": "455841b0-6f65-45d7-9d7c-4bec83aff36d",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "fa43180b-5303-4614-96a0-f2c620629a03",
      "parentUUID": "455841b0-6f65-45d7-9d7c-4bec83aff36d",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "ce7ea9c0-de0d-4b52-b2d9-dbbf743e583a",
      "parentUUID": "a3d203dc-443d-44a1-82c9-a4d723ece09e",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "1dc8b577-da7c-4c6f-b534-75bb5a28656d",
      "parentUUID": "a3d203dc-443d-44a1-82c9-a4d723ece09e",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#gameState should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.gameState.should.be.Object();",
      "isRoot": false,
      "uuid": "16a83d61-1afe-4013-a5e6-bfdbacf52798",
      "parentUUID": "dfb5560d-cff0-4a00-a285-1079f97cc792",
      "skipped": false
    },
    {
      "title": "should not have ids",
      "fullTitle": "#gameState should not have ids",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState.id);<br>should.not.exist(m.gameState.host.id);",
      "isRoot": false,
      "uuid": "ff164600-1df5-43f2-976f-927b78f39417",
      "parentUUID": "dfb5560d-cff0-4a00-a285-1079f97cc792",
      "skipped": false
    },
    {
      "title": "should promote private field _ to public field",
      "fullTitle": "#gameState should promote private field _ to public field",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState._host);<br>should.not.exist(m.gameState._settings);<br>should.exist(m.gameState.host);<br>should.exist(m.gameState.settings);<br>should.exist(m.gameState.settings.teamLeaderSelectionMethod);",
      "isRoot": false,
      "uuid": "c1ee8156-5c4b-4674-ae00-e3633f89d8da",
      "parentUUID": "dfb5560d-cff0-4a00-a285-1079f97cc792",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "4e862cf8-1807-49cf-aec3-68df7e18348c",
      "parentUUID": "9dc7fe07-1175-4c28-b805-af04c0c43a5a",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "44e9cd28-4542-4964-ac23-7ff2b5451cca",
      "parentUUID": "9dc7fe07-1175-4c28-b805-af04c0c43a5a",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#rejoinAs should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.rejoinAs = constants.rejoinAs.HOST;<br>m.data._rejoinAs.should.equal(constants.rejoinAs.HOST);",
      "isRoot": false,
      "uuid": "635bf65b-9f6b-4854-afd2-7827e4790d31",
      "parentUUID": "2ca7fcd1-293f-4dec-b674-b1d35c833d22",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#rejoinAs should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._rejoinAs = constants.rejoinAs.HOST;<br>m.rejoinAs.should.equal(constants.rejoinAs.HOST);",
      "isRoot": false,
      "uuid": "82b92d6a-c4fa-4d46-8c21-47755ef5052b",
      "parentUUID": "2ca7fcd1-293f-4dec-b674-b1d35c833d22",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "4d5d3a15-0589-4f5b-a3db-0b5d226187bf",
      "parentUUID": "292e7717-5859-493a-ba3c-0b620feeea4e",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "cf3f51fa-dc3f-4264-9256-8c638709830e",
      "parentUUID": "292e7717-5859-493a-ba3c-0b620feeea4e",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#participantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "3c5c0b21-5d96-4fb0-a20a-45a9158202ab",
      "parentUUID": "f242f6f2-2b72-4b84-8c4b-c350e1624905",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#participantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "d307a9b2-fc02-4a24-8776-d64094b74859",
      "parentUUID": "f242f6f2-2b72-4b84-8c4b-c350e1624905",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.rejoinAs = constants.rejoinAs.OBSERVER;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "a5c54ab1-701f-45c2-be8d-476135a44d0f",
      "parentUUID": "6a8304f6-5220-4504-a248-f14fbbcdfa4b",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "1ce880b1-597f-4e95-9fb0-f8b0b3f07ec4",
      "parentUUID": "6a8304f6-5220-4504-a248-f14fbbcdfa4b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "8202462e-c082-47f8-8ef3-04049e5e9e6a",
      "parentUUID": "3b36320f-1a78-4bbd-9e08-84facd04694b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "77c5fab4-a6cd-4405-a1be-20839ffe0a56",
      "parentUUID": "3b36320f-1a78-4bbd-9e08-84facd04694b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "3183aef2-e209-45a8-9e96-471c060b6d7e",
      "parentUUID": "d2b6e3b2-d3b2-437c-9be2-66c620f2df86",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "a3d853b2-44f9-4d9e-a81a-f855f095cfb2",
      "parentUUID": "d2b6e3b2-d3b2-437c-9be2-66c620f2df86",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "aea70615-135a-4ba0-adfb-327b3fe56868",
      "parentUUID": "be10e4d3-08a6-479f-ba96-c08abbb457a2",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "964bc55d-1c0b-4710-ba66-9d4b6efb00ef",
      "parentUUID": "be10e4d3-08a6-479f-ba96-c08abbb457a2",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionCompleted();<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "a7fab426-f6bd-493f-9208-bb6a78ff3a63",
      "parentUUID": "94b587bc-3631-43d0-bf28-7436d3e522f6",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "cd295b06-d968-4a13-8933-087429b3c176",
      "parentUUID": "c4c9c65a-b21e-4b7b-8b7a-9b4eaf084057",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "dda466b2-8712-4ff8-8845-539b9780f708",
      "parentUUID": "c4c9c65a-b21e-4b7b-8b7a-9b4eaf084057",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "560d6672-cf2e-4555-a415-bba058c9f82e",
      "parentUUID": "2a3b0e2a-9ffe-4aef-9825-ba215c64a31c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f4ea190d-e379-4de3-95fd-b1a906ba82e4",
      "parentUUID": "2a3b0e2a-9ffe-4aef-9825-ba215c64a31c",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "ac828aa8-5e74-4b24-806c-32385b00b176",
      "parentUUID": "f1ddd173-0de6-4ad6-95b7-d8855e158687",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "05d6abec-a83d-4173-899d-c49328ce9941",
      "parentUUID": "f1ddd173-0de6-4ad6-95b7-d8855e158687",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "97af3a27-d48f-47ad-8964-3a6780ce03c3",
      "parentUUID": "12eda6c8-f0f5-43fa-83a8-1aa5aafdabbf",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "cbcefd47-346e-48a7-ad83-79dc7e339ac1",
      "parentUUID": "12eda6c8-f0f5-43fa-83a8-1aa5aafdabbf",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#participantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "fe55825d-fcca-45c6-b255-99df16740e7a",
      "parentUUID": "aec797fc-956a-4622-80b6-56c1b54aa50f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#participantId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b50070a3-d2c7-4b48-804e-b7987b241819",
      "parentUUID": "aec797fc-956a-4622-80b6-56c1b54aa50f",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "35821b83-5617-44c4-91f9-c30e89754a0a",
      "parentUUID": "5ab839a3-07f0-4643-a67d-820dc4fb99f3",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "01e95dd7-041e-4c84-8384-851145f53599",
      "parentUUID": "5ab839a3-07f0-4643-a67d-820dc4fb99f3",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#info should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.should.be.Object();",
      "isRoot": false,
      "uuid": "90476653-a77c-46ab-9a53-96974a7eac8d",
      "parentUUID": "c428014a-ce74-4146-a1ad-f5d783182923",
      "skipped": false
    },
    {
      "title": "should not have ids",
      "fullTitle": "#info should not have ids",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.host.should.not.be.null();<br>should.not.exist(m.info.host.id);",
      "isRoot": false,
      "uuid": "816ab1c1-e2a3-4da8-92ca-eb148ca16051",
      "parentUUID": "c428014a-ce74-4146-a1ad-f5d783182923",
      "skipped": false
    },
    {
      "title": "should promote private field _ to public field",
      "fullTitle": "#info should promote private field _ to public field",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>should.not.exist(m.info._host);<br>should.not.exist(m.info._session);<br>should.exist(m.info.host);<br>should.exist(m.info.session);<br>should.exist(m.info.session.settings.teamLeaderSelectionMethod);",
      "isRoot": false,
      "uuid": "812058a1-e01b-40b8-9fdb-41f455420424",
      "parentUUID": "c428014a-ce74-4146-a1ad-f5d783182923",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "e53df891-5150-42a6-a3ac-b66fc52d9e64",
      "parentUUID": "ebd0f270-27ac-43a4-83d7-6e28f9335704",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "07c23815-6624-4c3c-8d0b-6201be6d0c1e",
      "parentUUID": "ebd0f270-27ac-43a4-83d7-6e28f9335704",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "1d333481-0f57-4b96-ba07-846d1ad81404",
      "parentUUID": "e4f0c9cf-9036-4f15-81d9-cbc3c3a42283",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "fdaa043a-dbcc-4f73-a019-20ea6f011cf8",
      "parentUUID": "e4f0c9cf-9036-4f15-81d9-cbc3c3a42283",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "aa79af01-4957-4ec3-be78-35448c11bcac",
      "parentUUID": "fed4660e-b5f7-44a4-b61e-48a87012e034",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b20d5b1e-bd26-4a18-8161-851447bdc021",
      "parentUUID": "fed4660e-b5f7-44a4-b61e-48a87012e034",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b4e6b595-bf3a-4339-8e74-6477d2b98e6a",
      "parentUUID": "76a35348-21ea-46f1-929a-9fa0f50e123f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "70d701f2-b0b5-419f-8dc0-82fc5057a43f",
      "parentUUID": "76a35348-21ea-46f1-929a-9fa0f50e123f",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.contestantId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "38a0dd59-956d-4c9a-8790-ba9d76c75f01",
      "parentUUID": "427108f0-37f8-404b-b4a1-c19d72a98af2",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "cb230bd4-1b0b-4d16-9516-42ba20bf3f71",
      "parentUUID": "427108f0-37f8-404b-b4a1-c19d72a98af2",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SuccessMessage();<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "d43a8829-fd45-4c72-82c0-c5377b1130f9",
      "parentUUID": "611c5b5a-b5be-41a2-a404-5c731939d03b",
      "skipped": false
    },
    {
      "title": "should return false when not referenced",
      "fullTitle": "#isInstanceAndTypeOf() should return false when not referenced",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf().should.be.false();",
      "isRoot": false,
      "uuid": "c17d0fea-2d1f-4030-b1c5-46ebb7615122",
      "parentUUID": "d05aed87-54e9-405b-a0c0-2f2d27b794ea",
      "skipped": false
    },
    {
      "title": "should return false when null",
      "fullTitle": "#isInstanceAndTypeOf() should return false when null",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">''</span>).should.be.false();",
      "isRoot": false,
      "uuid": "712c969e-cdf4-4054-b0b1-b83db1b3b300",
      "parentUUID": "d05aed87-54e9-405b-a0c0-2f2d27b794ea",
      "skipped": false
    },
    {
      "title": "should return false when not the correct type",
      "fullTitle": "#isInstanceAndTypeOf() should return false when not the correct type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'Int'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "8f6c30a8-fb28-440f-97f2-10025a11f2fe",
      "parentUUID": "d05aed87-54e9-405b-a0c0-2f2d27b794ea",
      "skipped": false
    },
    {
      "title": "should return true when is a built-in type",
      "fullTitle": "#isInstanceAndTypeOf() should return true when is a built-in type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'Number'</span>).should.be.true();",
      "isRoot": false,
      "uuid": "fe55b58e-3715-4049-a280-69a15702d508",
      "parentUUID": "d05aed87-54e9-405b-a0c0-2f2d27b794ea",
      "skipped": false
    },
    {
      "title": "should return true when is user defined type",
      "fullTitle": "#isInstanceAndTypeOf() should return true when is user defined type",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-keyword\">new</span> UserDefinedType(),<br>    UserDefinedType).should.be.true();",
      "isRoot": false,
      "uuid": "d15075f0-9f54-4137-a06b-6e6dbdc27da9",
      "parentUUID": "d05aed87-54e9-405b-a0c0-2f2d27b794ea",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "42c9a79e-1f23-4923-b56e-f862f6c434e6",
      "parentUUID": "55b99276-a699-4eea-8031-9f02660414e4",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "5b6eed67-4d12-49b7-9e0b-757dbeff146c",
      "parentUUID": "55b99276-a699-4eea-8031-9f02660414e4",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all.pop();<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "49519900-b0fb-4dad-975b-fffb428f33ac",
      "parentUUID": "55b99276-a699-4eea-8031-9f02660414e4",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#length should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.length = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "f1931024-7c3d-44eb-8559-95769c590cf6",
      "parentUUID": "2b5095f5-1dea-4d46-8802-d4b86855b321",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#length should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "050d96df-3ded-4e48-a6c0-5faa5ecfdb27",
      "parentUUID": "2b5095f5-1dea-4d46-8802-d4b86855b321",
      "skipped": false
    },
    {
      "title": "should return true when id does exist",
      "fullTitle": "#contains(id) should return true when id does exist",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(p.id).should.be.true();",
      "isRoot": false,
      "uuid": "6ac6d6b5-f036-46a2-8ce1-0a7741dfe13e",
      "parentUUID": "7d4d6f15-e021-4ed7-ac52-d6b299dffba2",
      "skipped": false
    },
    {
      "title": "should return false when id does not exist",
      "fullTitle": "#contains(id) should return false when id does not exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(<span class=\"hljs-string\">'p2'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "4ccc410b-b52f-4175-8a31-955491953053",
      "parentUUID": "7d4d6f15-e021-4ed7-ac52-d6b299dffba2",
      "skipped": false
    },
    {
      "title": "should add the given participant",
      "fullTitle": "#add(participant) should add the given participant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc._participants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc._participants[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "168f12a1-f95d-44b0-acb6-38e00d53536c",
      "parentUUID": "ed8f05cd-a05c-477a-a86a-c8ae20bf8607",
      "skipped": false
    },
    {
      "title": "should error if participant with id already exists",
      "fullTitle": "#add(participant) should error if participant with id already exists",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.add(p);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "d660a603-5b94-4b1f-82f2-4fb53dfedbff",
      "parentUUID": "ed8f05cd-a05c-477a-a86a-c8ae20bf8607",
      "skipped": false
    },
    {
      "title": "should emit add event",
      "fullTitle": "#add(participant) should emit add event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.on(<span class=\"hljs-string\">'add'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">participant</span>) </span>{<br>    participant.should.equal(p);<br>    done();<br>});<br>pc.add(p);",
      "isRoot": false,
      "uuid": "3cf81dae-d679-4965-9624-8e6ba3866296",
      "parentUUID": "ed8f05cd-a05c-477a-a86a-c8ae20bf8607",
      "skipped": false
    },
    {
      "title": "should remove the existing participant",
      "fullTitle": "#remove(participant) should remove the existing participant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "b13012d0-595b-4da7-a426-7628f36e4587",
      "parentUUID": "9fdb2753-194d-479b-bc6d-68bb327ce480",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing participant",
      "fullTitle": "#remove(participant) should not remove the non-existing participant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p1).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "45376520-bade-4b00-93f0-bbf0d4eac19b",
      "parentUUID": "9fdb2753-194d-479b-bc6d-68bb327ce480",
      "skipped": false
    },
    {
      "title": "should remove the existing participant",
      "fullTitle": "#removeById(id) should remove the existing participant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p.id).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "69d51fee-e341-4091-b4d0-d129488fe081",
      "parentUUID": "9b6f0530-9ae3-48f4-b898-3d5d6a1be49c",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing participant",
      "fullTitle": "#removeById(id) should not remove the non-existing participant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p1.id).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "d861edbf-c931-441e-b96c-0d5b1ee72419",
      "parentUUID": "9b6f0530-9ae3-48f4-b898-3d5d6a1be49c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#id should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'id_test'</span>;<br>p._id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "1503b290-9576-4a55-b93e-eb16950bc557",
      "parentUUID": "4e8ca7c6-383c-4a5d-b269-4e32fd5358e5",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#id should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "7ca37475-dd5e-48e9-a35f-4efc72b9055a",
      "parentUUID": "4e8ca7c6-383c-4a5d-b269-4e32fd5358e5",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#isDisconnected should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    p.isDisconnected = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "cb028e9b-f098-4d65-a159-9d228c27a471",
      "parentUUID": "bbe2db22-9c5d-407b-b453-deab72a5cdcc",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#isDisconnected should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "5f6fb25e-0073-43fb-96fb-77efaa0a20aa",
      "parentUUID": "bbe2db22-9c5d-407b-b453-deab72a5cdcc",
      "skipped": false
    },
    {
      "title": "should change participant state to disconnected",
      "fullTitle": "#disconnect() should change participant state to disconnected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">false</span>;<br>p.disconnect();<br>p.isDisconnected.should.be.true();",
      "isRoot": false,
      "uuid": "18d10f77-b877-4b51-9c80-377ea2a0df71",
      "parentUUID": "a65ec347-2c1a-4161-9745-9b0536d88aba",
      "skipped": false
    },
    {
      "title": "should change participant state to connected",
      "fullTitle": "#reconnect() should change participant state to connected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">true</span>;<br>p.reconnect();<br>p.isDisconnected.should.be.false();",
      "isRoot": false,
      "uuid": "ce949ad3-4112-47c0-bbf8-215371a4ad84",
      "parentUUID": "34354528-83cd-41a8-a247-f31668d28ab0",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    sc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "6a0a4cc7-d1c0-4709-a207-587cc9ea24fb",
      "parentUUID": "f619698d-743d-4022-837a-ae16d9643d60",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
      "isRoot": false,
      "uuid": "d9745d61-1637-41ae-94db-b51c0611b831",
      "parentUUID": "f619698d-743d-4022-837a-ae16d9643d60",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all.pop();<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
      "isRoot": false,
      "uuid": "db61c1b4-3688-497c-8276-d0b55bc5cebe",
      "parentUUID": "f619698d-743d-4022-837a-ae16d9643d60",
      "skipped": false
    },
    {
      "title": "add and return session",
      "fullTitle": "#add(host, settings) add and return session",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-keyword\">var</span> ses = sc.add(h, s);<br>ses.should.be.instanceof(Session);",
      "isRoot": false,
      "uuid": "d2553968-ba89-4f1b-8425-d28a6668c42a",
      "parentUUID": "4247a1b9-9c93-44a2-a810-16babf37ca2e",
      "skipped": false
    },
    {
      "title": "when given valid id should return session",
      "fullTitle": "#getById(id) when given valid id should return session",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-comment\">/* eslint-disable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses1 = sc.add(h, s);<br><span class=\"hljs-comment\">/* eslint-enable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses2 = sc.add(h, s);<br><span class=\"hljs-keyword\">var</span> sessionLocate = sc.getById(ses2.id);<br>sessionLocate.should.be.instanceof(Session)<br>    .and.equal(ses2);",
      "isRoot": false,
      "uuid": "9111118f-0010-48b8-9dfb-d023998c0e30",
      "parentUUID": "6d841489-5831-449c-9a9b-91b49f73f78b",
      "skipped": false
    },
    {
      "title": "should remove complete sc",
      "fullTitle": "#purgeCompleted() should remove complete sc",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.all[<span class=\"hljs-number\">0</span>].complete();<br>sc.all[<span class=\"hljs-number\">1</span>].complete();<br>sc.purgeCompleted();<br>sc.all.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "ed6710bd-b9df-46d8-b18a-eb0ba8e94ace",
      "parentUUID": "f19ce19f-fcf4-4b20-9e06-c758a31bafbb",
      "skipped": false
    },
    {
      "title": "should create teams",
      "fullTitle": "#constructor should create teams",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "89e6a5c3-d141-4b82-aece-d8de76f8fba4",
      "parentUUID": "17d099fb-faa7-47fe-b6b1-32d574ff709d",
      "skipped": false
    },
    {
      "title": "should not create teams",
      "fullTitle": "#constructor should not create teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>should(s.teams).be.null();",
      "isRoot": false,
      "uuid": "9f9beed5-baeb-461d-a8de-dc1fad15a2cb",
      "parentUUID": "17d099fb-faa7-47fe-b6b1-32d574ff709d",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#id should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.id = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "10b03f3a-7c35-4977-b896-65cda448b8e7",
      "parentUUID": "c21ee296-40eb-4343-9290-22c99f06d5e2",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#id should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "cbb8416e-9799-4a44-9999-9e388e7a3679",
      "parentUUID": "c21ee296-40eb-4343-9290-22c99f06d5e2",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#roundsPlayed should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundsPlayed = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "3f3af0b5-f7da-4b15-a361-798455beb31f",
      "parentUUID": "8935b396-31d6-4dc2-9581-a8d95dda8f1c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#roundsPlayed should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "9ace66fb-eab0-40f1-b19c-dff84c670292",
      "parentUUID": "8935b396-31d6-4dc2-9581-a8d95dda8f1c",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#previousWinners should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.previousWinners = [<span class=\"hljs-string\">'SomeWinner'</span>];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "439d6074-b2eb-4a24-b03c-b6f1f1e1a6b2",
      "parentUUID": "61a75273-137f-491c-ad3e-c0099dc8c08d",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#previousWinners should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._previousWinners = [<span class=\"hljs-string\">'Winner1'</span>, <span class=\"hljs-string\">'Winner2'</span>];<br>s.previousWinners.should.be.Array();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
      "isRoot": false,
      "uuid": "ab1f0a2c-c86e-4815-9537-aa83d8adb6ae",
      "parentUUID": "61a75273-137f-491c-ad3e-c0099dc8c08d",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#roundWinner should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundWinner = <span class=\"hljs-string\">'SomeWinner'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "f0d8b620-6133-4af4-959b-d8a2cd8dfac1",
      "parentUUID": "e066151d-b3f9-4faf-9712-58d4966f991e",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#roundWinner should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundWinner = <span class=\"hljs-string\">'Winner1'</span>;<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
      "isRoot": false,
      "uuid": "572f69f9-077c-4a55-8aa5-9af01a69149c",
      "parentUUID": "e066151d-b3f9-4faf-9712-58d4966f991e",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#observers should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.observers = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "f78d90cc-b67c-44ef-b801-73cba637995c",
      "parentUUID": "87bcbe37-794a-40ab-8f90-d5eb5a2f9cbe",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#observers should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.observers.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.observers[<span class=\"hljs-number\">0</span>].should.equal(observer);",
      "isRoot": false,
      "uuid": "70374796-a001-4ffd-8d05-b0ca038faf9f",
      "parentUUID": "87bcbe37-794a-40ab-8f90-d5eb5a2f9cbe",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#contestants should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.contestants = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "bb0fa10b-9dff-40a0-b3e5-9b4c251f10c0",
      "parentUUID": "37182af0-08e9-460c-b98b-368edb236cd0",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestants should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.contestants[<span class=\"hljs-number\">0</span>].should.equal(contestant);",
      "isRoot": false,
      "uuid": "53700e35-c628-4a09-94a4-0351e14ebf6b",
      "parentUUID": "37182af0-08e9-460c-b98b-368edb236cd0",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#host should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.host = host;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "7e0a3530-7bcf-44b2-b600-fe7792358f83",
      "parentUUID": "94306f71-afcb-4e2c-9bfb-3e29c7318c18",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#host should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.host.should.equal(host);",
      "isRoot": false,
      "uuid": "bf838609-7403-4cc1-b0ed-4d6a3d781085",
      "parentUUID": "94306f71-afcb-4e2c-9bfb-3e29c7318c18",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#currentState should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
      "isRoot": false,
      "uuid": "4dd1bf17-cee1-4e5c-9c12-ee4cf7a35058",
      "parentUUID": "32a2bb97-d867-446f-a6b7-56aa0db5e0fd",
      "skipped": false
    },
    {
      "title": "should increment rounds played",
      "fullTitle": "#incrementRoundsPlayed() should increment rounds played",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.incrementRoundsPlayed();<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "ef5c6233-287f-4a94-9752-9a97d7793e64",
      "parentUUID": "8d3c3128-ad38-4569-9f7f-b68da164e80e",
      "skipped": false
    },
    {
      "title": "should not allow a contestant username with bad words",
      "fullTitle": "#addContestant(contestant) should not allow a contestant username with bad words",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Penis #YOLO'</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_CONTAINS_PROFANITY);",
      "isRoot": false,
      "uuid": "ea84644d-9405-4f38-8fcb-8e78934e4501",
      "parentUUID": "ff773b0e-1910-4ee0-b5c2-28810ebce861",
      "skipped": false
    },
    {
      "title": "should not allow when username is empty",
      "fullTitle": "#addContestant(contestant) should not allow when username is empty",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">' '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_IS_REQUIRED);",
      "isRoot": false,
      "uuid": "a2448700-eeec-436d-b529-e5dd172dc891",
      "parentUUID": "ff773b0e-1910-4ee0-b5c2-28810ebce861",
      "skipped": false
    },
    {
      "title": "should trim username",
      "fullTitle": "#addContestant(contestant) should trim username",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Wade  '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>c.username.should.equal(<span class=\"hljs-string\">'Wade'</span>);",
      "isRoot": false,
      "uuid": "da690dca-a7ca-4e9f-93c7-ebd93e18b9be",
      "parentUUID": "ff773b0e-1910-4ee0-b5c2-28810ebce861",
      "skipped": false
    },
    {
      "title": "should add contestant when session is not full",
      "fullTitle": "when in individual mode should add contestant when session is not full",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "a3b46af8-e4c7-4d9d-a8a1-9795f5fe0d19",
      "parentUUID": "fd43b947-1e2e-477e-b5fc-c070400342c2",
      "skipped": false
    },
    {
      "title": "should not add contestant when session is full",
      "fullTitle": "when in individual mode should not add contestant when session is full",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br>s.addContestant(c2);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();",
      "isRoot": false,
      "uuid": "3ca5f270-c5f0-48c8-9bfe-279830ec26cb",
      "parentUUID": "fd43b947-1e2e-477e-b5fc-c070400342c2",
      "skipped": false
    },
    {
      "title": "should not add contestant when username is already taken",
      "fullTitle": "when in individual mode should not add contestant when username is already taken",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "fdd31b05-e13d-471d-98a2-aa73e1c08920",
      "parentUUID": "fd43b947-1e2e-477e-b5fc-c070400342c2",
      "skipped": false
    },
    {
      "title": "BUG# username case should not matter",
      "fullTitle": "when in individual mode BUG# username case should not matter",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'abc1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'ABC1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "2d61e974-fa6a-4e74-b10d-5b9abce9515e",
      "parentUUID": "fd43b947-1e2e-477e-b5fc-c070400342c2",
      "skipped": false
    },
    {
      "title": "should allow unlimited contestants when max is set to constants.UNLIMITED",
      "fullTitle": "when in individual mode should allow unlimited contestants when max is set to constants.UNLIMITED",
      "timedOut": false,
      "duration": 688,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = constants.UNLIMITED;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    <span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>    c.username = <span class=\"hljs-string\">'c'</span> + i;<br>    <span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>    response.wasSuccessful.should.be.true();<br>}",
      "isRoot": false,
      "uuid": "d88c41a9-a7aa-4f57-a485-4d7f784792af",
      "parentUUID": "fd43b947-1e2e-477e-b5fc-c070400342c2",
      "skipped": false
    },
    {
      "title": "should add contestant when teams is not full",
      "fullTitle": "when in team mode should add contestant when teams is not full",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "9b5ded93-77d0-45ab-8d0b-e2b2f56514de",
      "parentUUID": "173bd3e3-0b78-45a9-952e-84c10fe61bd7",
      "skipped": false
    },
    {
      "title": "should not add contestant when teams are full",
      "fullTitle": "when in team mode should not add contestant when teams are full",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.TEAMS_ARE_FULL);",
      "isRoot": false,
      "uuid": "d3c47166-3ff2-4eb2-b9e3-be0ac6e6873b",
      "parentUUID": "173bd3e3-0b78-45a9-952e-84c10fe61bd7",
      "skipped": false
    },
    {
      "title": "should not add contestant when username is already taken",
      "fullTitle": "when in team mode should not add contestant when username is already taken",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "b2e86204-7168-4a6a-9250-775310cb7afd",
      "parentUUID": "173bd3e3-0b78-45a9-952e-84c10fe61bd7",
      "skipped": false
    },
    {
      "title": "should subscribe callback to the correct event",
      "fullTitle": "#subscribeForStateChange(event, callback) should subscribe callback to the correct event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> r = s.addContestant(c);<br>r.wasSuccessful.should.be.true();<br>s.subscribeForStateChange(<span class=\"hljs-string\">'onpending'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">session, event, from, to</span>) </span>{<br>    session.should.equal(s);<br>    event.should.equal(<span class=\"hljs-string\">'buzzerPressed'</span>);<br>    from.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>    to.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>    done();<br>});<br>s.tryBuzzerPressRegister(c.id).should.be.true();",
      "isRoot": false,
      "uuid": "699a9896-2113-4e27-8c0d-c4ded06350c3",
      "parentUUID": "acf052c3-7a12-4820-9324-b5ed9eb03a48",
      "skipped": false
    },
    {
      "title": "should register when state is ready",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should register when state is ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);",
      "isRoot": false,
      "uuid": "8ddd7818-e6ce-4b25-91d9-47ce98477ef5",
      "parentUUID": "9912872b-380c-487b-a0d9-11c412ff1294",
      "skipped": false
    },
    {
      "title": "should not register when state is not ready",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not register when state is not ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.false();",
      "isRoot": false,
      "uuid": "9ae92962-78d9-45c5-baf2-5a8e5ea03e8c",
      "parentUUID": "9912872b-380c-487b-a0d9-11c412ff1294",
      "skipped": false
    },
    {
      "title": "should not register when contestant does not exist",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not register when contestant does not exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(idUtility.generateParticipantId()).should.be.false();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
      "isRoot": false,
      "uuid": "8339a72d-57b2-4d44-a295-e766ac0097e9",
      "parentUUID": "9912872b-380c-487b-a0d9-11c412ff1294",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "c45f3709-c7f7-4f18-9f82-cecaca03c06d",
      "parentUUID": "9912872b-380c-487b-a0d9-11c412ff1294",
      "skipped": false
    },
    {
      "title": "should not add previous round winner to winners list",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not add previous round winner to winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "93ccf626-0d39-4027-9d8b-485f65f06333",
      "parentUUID": "9912872b-380c-487b-a0d9-11c412ff1294",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->ACCEPT should allow when game state is pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();",
      "isRoot": false,
      "uuid": "d7781594-14c5-4b2c-8c93-d986d6f0f4ef",
      "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not pending",
      "fullTitle": "action->ACCEPT should not allow when game state is not pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.false();",
      "isRoot": false,
      "uuid": "88910e41-cb9b-4c54-aec8-805c6c9c4227",
      "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
      "skipped": false
    },
    {
      "title": "should update contestant's score",
      "fullTitle": "action->ACCEPT should update contestant's score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "3d16f439-0764-4dec-ba17-8456e2fc5a46",
      "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
      "skipped": false
    },
    {
      "title": "should update contestant's team score",
      "fullTitle": "action->ACCEPT should update contestant's team score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>s.teams.all[<span class=\"hljs-number\">0</span>].score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "5511db88-c3da-456a-a7fd-d4a3bff737d3",
      "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->ACCEPT should add previous round winner to winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "f6e8cae3-945d-47e1-a446-07295481e4d7",
      "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->ACCEPT should change game state back to ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "89b29cff-abcf-4d30-a77b-7be809ee7526",
      "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
      "skipped": false
    },
    {
      "title": "should clear pending winner",
      "fullTitle": "action->ACCEPT should clear pending winner",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>should(s.pendingWinner).be.null();",
      "isRoot": false,
      "uuid": "9fd1ca2b-f877-4840-bc8f-07659aac67c1",
      "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->REJECT should allow when game state is pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();",
      "isRoot": false,
      "uuid": "6e784731-d789-4780-b1c5-69a5b4c38cb6",
      "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not pending",
      "fullTitle": "action->REJECT should not allow when game state is not pending",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.false();",
      "isRoot": false,
      "uuid": "22893602-880a-4428-85e8-35f6d0bf2ccd",
      "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
      "skipped": false
    },
    {
      "title": "should not replace round winner with pending contestant",
      "fullTitle": "action->REJECT should not replace round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "c9234eab-6753-4d05-85d7-ece9ade93644",
      "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
      "skipped": false
    },
    {
      "title": "should not update pending contestant's score",
      "fullTitle": "action->REJECT should not update pending contestant's score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.score.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "8fe6deff-2ca6-4cde-9d46-e72503336276",
      "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
      "skipped": false
    },
    {
      "title": "should add round winner to previous winners list",
      "fullTitle": "action->REJECT should add round winner to previous winners list",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "96eae26c-f7b1-4c4f-9967-56bef8568065",
      "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->REJECT should change game state back to ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "73968b25-a01d-4fb4-9cf5-d0a9c4493128",
      "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
      "skipped": false
    },
    {
      "title": "should allow when game state is ready",
      "fullTitle": "action->RESET should allow when game state is ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
      "isRoot": false,
      "uuid": "2485261a-e03d-4368-8cbb-f6c98d2d7f32",
      "parentUUID": "41fbf065-7ab4-4b79-8f02-c1c4ea62419a",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->RESET should allow when game state is pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
      "isRoot": false,
      "uuid": "4d937985-f1e4-4ae1-8adb-735b231bce2a",
      "parentUUID": "41fbf065-7ab4-4b79-8f02-c1c4ea62419a",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "action->RESET should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "623ebe58-815d-412e-8d09-24491d9a9a33",
      "parentUUID": "41fbf065-7ab4-4b79-8f02-c1c4ea62419a",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->RESET should add previous round winner to winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "7a5e1413-8875-4025-8a3a-836116a3f580",
      "parentUUID": "41fbf065-7ab4-4b79-8f02-c1c4ea62419a",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->RESET should change game state back to ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "98c9d184-542d-460c-a9b7-bf75ca6cb3b7",
      "parentUUID": "41fbf065-7ab4-4b79-8f02-c1c4ea62419a",
      "skipped": false
    },
    {
      "title": "should allow when game state is ready",
      "fullTitle": "action->DISABLE should allow when game state is ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
      "isRoot": false,
      "uuid": "4de20add-c6e5-47b1-9d09-a6c92d897e91",
      "parentUUID": "77df4139-7fcb-48b7-a9cc-69d5bb4e8ccd",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->DISABLE should allow when game state is pending",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
      "isRoot": false,
      "uuid": "02aa342f-d987-47b0-88aa-6cebb75f25b8",
      "parentUUID": "77df4139-7fcb-48b7-a9cc-69d5bb4e8ccd",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "action->DISABLE should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "559f8b8a-9018-4b5a-abdf-c4045d8992d4",
      "parentUUID": "77df4139-7fcb-48b7-a9cc-69d5bb4e8ccd",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->DISABLE should add previous round winner to winners list",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "b0b8f9f3-6418-45cf-bc0f-dde8dbfac0f9",
      "parentUUID": "77df4139-7fcb-48b7-a9cc-69d5bb4e8ccd",
      "skipped": false
    },
    {
      "title": "should change game state to buzzerLock",
      "fullTitle": "action->DISABLE should change game state to buzzerLock",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.BUZZER_LOCK);",
      "isRoot": false,
      "uuid": "a999670a-f2ac-4d26-8f81-36841a014c88",
      "parentUUID": "77df4139-7fcb-48b7-a9cc-69d5bb4e8ccd",
      "skipped": false
    },
    {
      "title": "should allow when game state is buzzerLock",
      "fullTitle": "action->ENABLE should allow when game state is buzzerLock",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();",
      "isRoot": false,
      "uuid": "edf1bea8-20ef-44a8-b3f2-e7e1d069db2b",
      "parentUUID": "7cb3f5cb-b844-4022-88ed-201fff5703e8",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not buzzerLock",
      "fullTitle": "action->ENABLE should not allow when game state is not buzzerLock",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.false();",
      "isRoot": false,
      "uuid": "aebaf0f8-e068-45fe-8aad-98e460a2bba0",
      "parentUUID": "7cb3f5cb-b844-4022-88ed-201fff5703e8",
      "skipped": false
    },
    {
      "title": "should change game state to ready",
      "fullTitle": "action->ENABLE should change game state to ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "e6cd4535-850c-41cd-ab86-bc9e0cb759cd",
      "parentUUID": "7cb3f5cb-b844-4022-88ed-201fff5703e8",
      "skipped": false
    },
    {
      "title": "should return the pending winner",
      "fullTitle": "#pendingWinner should return the pending winner",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.pendingWinner.should.equal(<span class=\"hljs-string\">'testUser'</span>);",
      "isRoot": false,
      "uuid": "02707378-a5cc-4d6a-beb1-936ff92d6eb3",
      "parentUUID": "20a86227-6a6d-49a5-a400-538ecc8ceeec",
      "skipped": false
    },
    {
      "title": "should not return the pending winner",
      "fullTitle": "#pendingWinner should not return the pending winner",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>should(s.pendingWinner).be.null();",
      "isRoot": false,
      "uuid": "3b932673-342f-4289-bfd9-1ba7997c662e",
      "parentUUID": "20a86227-6a6d-49a5-a400-538ecc8ceeec",
      "skipped": false
    },
    {
      "title": "should update session name",
      "fullTitle": "#updateSessionName(name) should update session name",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.updateSessionName(<span class=\"hljs-string\">'session2'</span>);<br>settings.sessionName.should.equal(<span class=\"hljs-string\">'session2'</span>);",
      "isRoot": false,
      "uuid": "e4f8488e-c96e-46ae-a89d-2ea2fd0a9668",
      "parentUUID": "6f7fc910-6f3c-4f4b-9659-6c829e133183",
      "skipped": false
    },
    {
      "title": "should update max contestants",
      "fullTitle": "#updateMaxContestants(maxContestants) should update max contestants",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "aae0bc82-edba-4892-adc7-a8df81d3d95f",
      "parentUUID": "88d218fe-5fd8-49fb-896b-1ef925bb5968",
      "skipped": false
    },
    {
      "title": "should not allow below current connected amount",
      "fullTitle": "#updateMaxContestants(maxContestants) should not allow below current connected amount",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>s.addContestant(c1).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>s.addContestant(c2).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">1</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_CONTESTANTS_MUST_BE_GREATER_THAN_ALREADY_CONNECTED);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "bf9d383e-7576-40b3-86ff-4c3259650893",
      "parentUUID": "88d218fe-5fd8-49fb-896b-1ef925bb5968",
      "skipped": false
    },
    {
      "title": "should update team size",
      "fullTitle": "#updateTeamSize(teamSize) should update team size",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.teamSize.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "8f3a5102-dd49-4228-aeb1-f387d0f299e0",
      "parentUUID": "59999254-48a5-4cea-838c-cc4fac5429ac",
      "skipped": false
    },
    {
      "title": "should not allow below current setting",
      "fullTitle": "#updateTeamSize(teamSize) should not allow below current setting",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.TEAM_SIZE_MUST_BE_GREATER_THAN_ALREADY_SET);",
      "isRoot": false,
      "uuid": "247cde07-0456-40cd-9d55-668f2766fd26",
      "parentUUID": "59999254-48a5-4cea-838c-cc4fac5429ac",
      "skipped": false
    },
    {
      "title": "should update max teams",
      "fullTitle": "#updateMaxTeams(maxTeams) should update max teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxTeams.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "04d1dd96-f61f-44b6-b3be-a79c00027a95",
      "parentUUID": "a8d862e9-f139-4940-bb49-62baf94fd296",
      "skipped": false
    },
    {
      "title": "should add teams",
      "fullTitle": "#updateMaxTeams(maxTeams) should add teams",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">5</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "283ec1e5-c607-429b-b75a-e0e0ae0bc25b",
      "parentUUID": "a8d862e9-f139-4940-bb49-62baf94fd296",
      "skipped": false
    },
    {
      "title": "should not allow below current setting",
      "fullTitle": "#updateMaxTeams(maxTeams) should not allow below current setting",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_MUST_BE_GREATER_THAN_ALREADY_SET);",
      "isRoot": false,
      "uuid": "1a718e69-3701-444d-bbcc-aaa35612b17d",
      "parentUUID": "a8d862e9-f139-4940-bb49-62baf94fd296",
      "skipped": false
    },
    {
      "title": "should not allow if teams are PLAYER_CHOICE",
      "fullTitle": "#updateMaxTeams(maxTeams) should not allow if teams are PLAYER_CHOICE",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">6</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_CANNOT_BE_CHANGED_WHEN_PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "65db2c8d-5c62-43d1-acd5-cb911c8e5af8",
      "parentUUID": "a8d862e9-f139-4940-bb49-62baf94fd296",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hasTeams should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s._hasTeams.should.be.true();",
      "isRoot": false,
      "uuid": "247b3b9f-1f73-4faa-9d85-d4daf96a75de",
      "parentUUID": "744655f3-e177-4fe5-9987-394b7521918f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hasTeams should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.hasTeams.should.be.true();",
      "isRoot": false,
      "uuid": "af1f3f87-6a8d-4382-bf06-a0f47e474ffb",
      "parentUUID": "744655f3-e177-4fe5-9987-394b7521918f",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamSize should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s._teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "f9496bf5-3001-48e6-93f0-1a9c21b370f4",
      "parentUUID": "ac4eb3c2-71fc-4566-9521-7fb012288120",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamSize should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamSize = <span class=\"hljs-number\">1</span>;<br>s.teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "20f011dc-71d8-40c0-9014-fa3b9eb29b2d",
      "parentUUID": "ac4eb3c2-71fc-4566-9521-7fb012288120",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxTeams should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s._maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "aeb83c4d-a4ff-4ba5-b78d-b931265aba79",
      "parentUUID": "44c7659e-749a-4299-9577-6dacd0b40454",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxTeams should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-number\">1</span>;<br>s.maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "d1643ae3-ed7d-4f1e-862e-6eb49f928b5b",
      "parentUUID": "44c7659e-749a-4299-9577-6dacd0b40454",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeaderSelectionMethod should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s._teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "6c2aa62c-5805-4666-8c0e-1724e55ca976",
      "parentUUID": "826371bf-a1fb-4801-8ce7-824b1737ef42",
      "skipped": false
    },
    {
      "title": "should throw on set when constant value is invalid",
      "fullTitle": "#teamLeaderSelectionMethod should throw on set when constant value is invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamLeaderSelectionMethod.all.slice().sort(<br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, b</span>) </span>{<br>            <span class=\"hljs-keyword\">return</span> a - b;<br>        }).pop();<br>    s.teamLeaderSelectionMethod = ++high;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "e91af480-c381-421e-9eb5-220f7ec7dbbd",
      "parentUUID": "826371bf-a1fb-4801-8ce7-824b1737ef42",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeaderSelectionMethod should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s.teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "7f3dd182-ba21-4921-b7ad-100742339657",
      "parentUUID": "826371bf-a1fb-4801-8ce7-824b1737ef42",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameEdit should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br>s._teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
      "isRoot": false,
      "uuid": "270831a0-f175-4f31-81f6-7cd585eb4297",
      "parentUUID": "74a5b68d-6bb7-49f1-b796-df935f149fd8",
      "skipped": false
    },
    {
      "title": "should throw on set when constant value is invalid",
      "fullTitle": "#teamNameEdit should throw on set when constant value is invalid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamNameEdit.all.slice().sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a,<br>        b</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> a - b;<br>    }).pop();<br>    s.teamNameEdit = ++high;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "873b1c4c-cf70-4408-91cf-72a186ccd8f9",
      "parentUUID": "74a5b68d-6bb7-49f1-b796-df935f149fd8",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameEdit should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNameEdit = constants.teamNameEdit.ALLOW;<br>s.teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
      "isRoot": false,
      "uuid": "14d6fae4-3275-4dc8-9c5c-9e73ddf51ad5",
      "parentUUID": "74a5b68d-6bb7-49f1-b796-df935f149fd8",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxContestants should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxContestants = <span class=\"hljs-number\">1</span>;<br>s._maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "e9e8f489-10ca-4f03-b47a-969ccb70c25a",
      "parentUUID": "ef104888-4c08-4e68-a251-7de8ed3a939c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxContestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxContestants = <span class=\"hljs-number\">1</span>;<br>s.maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "ba23b369-842d-4446-acb7-bbfd973c6b44",
      "parentUUID": "ef104888-4c08-4e68-a251-7de8ed3a939c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s._sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
      "isRoot": false,
      "uuid": "92dc4700-6d2c-471a-9052-e5a4a9612e65",
      "parentUUID": "aea06817-cb9a-4844-a785-a64d0bccb98d",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s.sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
      "isRoot": false,
      "uuid": "b0904de6-4a76-44cb-8049-f037ac0c9c53",
      "parentUUID": "aea06817-cb9a-4844-a785-a64d0bccb98d",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNames should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s._teamNames.should.be.Array();<br>s._teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s._teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
      "isRoot": false,
      "uuid": "554c1072-d373-4d63-b3eb-fa6d16ac15ee",
      "parentUUID": "f5ba6b39-26e9-4034-972a-91e25f7b382a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNames should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s.teamNames.should.be.Array();<br>s.teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
      "isRoot": false,
      "uuid": "75b12cd9-95ab-484b-8a6e-12aa52a6e40b",
      "parentUUID": "f5ba6b39-26e9-4034-972a-91e25f7b382a",
      "skipped": false
    },
    {
      "title": "should throw when settings.maxTeams is less than 1",
      "fullTitle": "#create(teams, settings) should throw when settings.maxTeams is less than 1",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    teamFactory.create(tc, s);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "60f4117b-ed92-4985-bbee-38a4a809696e",
      "parentUUID": "d60a24a9-9f32-4516-93fc-c28757e805a3",
      "skipped": false
    },
    {
      "title": "should create the correct amount of teams",
      "fullTitle": "#create(teams, settings) should create the correct amount of teams",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "88ea31cf-190a-4ee5-84ff-7cb5bc2d34f5",
      "parentUUID": "d60a24a9-9f32-4516-93fc-c28757e805a3",
      "skipped": false
    },
    {
      "title": "should not fail with a large team size",
      "fullTitle": "#create(teams, settings) should not fail with a large team size",
      "timedOut": false,
      "duration": 72,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">500</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">500</span>);<br><span class=\"hljs-comment\">// ensure team names are unique</span><br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> i = names.indexOf(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> n === t.teamName;<br>    });<br>    i.should.equal(-<span class=\"hljs-number\">1</span>);<br>    names.push(t.teamName);<br>});",
      "isRoot": false,
      "uuid": "dfbd73ed-b10a-4084-b943-15b985726bac",
      "parentUUID": "d60a24a9-9f32-4516-93fc-c28757e805a3",
      "skipped": false
    },
    {
      "title": "should use settings.teamNames first, before random selection",
      "fullTitle": "#create(teams, settings) should use settings.teamNames first, before random selection",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">10</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>, <span class=\"hljs-string\">'t3'</span>, <span class=\"hljs-string\">'t4'</span>, <span class=\"hljs-string\">'t5'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);<br>tc.all[<span class=\"hljs-number\">2</span>].teamName.should.equal(<span class=\"hljs-string\">'t3'</span>);<br>tc.all[<span class=\"hljs-number\">3</span>].teamName.should.equal(<span class=\"hljs-string\">'t4'</span>);<br>tc.all[<span class=\"hljs-number\">4</span>].teamName.should.equal(<span class=\"hljs-string\">'t5'</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">5</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">6</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">7</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">8</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">9</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "796c66e0-a82a-4ce5-b2d7-dc0bc788ae54",
      "parentUUID": "d60a24a9-9f32-4516-93fc-c28757e805a3",
      "skipped": false
    },
    {
      "title": "should only create a single team when using unlimited teams",
      "fullTitle": "#create(teams, settings) should only create a single team when using unlimited teams",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "aff55efe-6ad0-45de-b02f-52034489d7c5",
      "parentUUID": "d60a24a9-9f32-4516-93fc-c28757e805a3",
      "skipped": false
    },
    {
      "title": "should add a team",
      "fullTitle": "#add(teams, settings) should add a team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>teamFactory.add(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "8f41cd2d-dedb-4251-9ec8-03d3f0948f27",
      "parentUUID": "b593c2b1-9684-458d-b9df-72e6624c8c70",
      "skipped": false
    },
    {
      "title": "should reuse team names specified in settings",
      "fullTitle": "#add(teams, settings) should reuse team names specified in settings",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>teamFactory.add(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);",
      "isRoot": false,
      "uuid": "a690e590-64cc-41a2-afd0-942d9070965b",
      "parentUUID": "b593c2b1-9684-458d-b9df-72e6624c8c70",
      "skipped": false
    },
    {
      "title": "should factor in team names which are already in use",
      "fullTitle": "#add(teams, settings) should factor in team names which are already in use",
      "timedOut": false,
      "duration": 271,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    teamFactory.add(tc, s);<br>}<br>tc.all.length.should.equal(<span class=\"hljs-number\">1001</span>);<br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    names.push(t.teamName);<br>});<br><span class=\"hljs-keyword\">var</span> uniqueNames = unique(names);<br>names.length.should.equal(uniqueNames.length);",
      "isRoot": false,
      "uuid": "0d49b06c-b40e-4b74-bf9f-ee76cb63ef6e",
      "parentUUID": "b593c2b1-9684-458d-b9df-72e6624c8c70",
      "skipped": false
    },
    {
      "title": "should return true when team with teamName does exist",
      "fullTitle": "#contains(teamName) should return true when team with teamName does exist",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(t.teamName).should.be.true();",
      "isRoot": false,
      "uuid": "940b0ae3-4903-47fd-9754-bfa67f079277",
      "parentUUID": "0132839b-fa77-4cdf-9e4d-52e27e5bbf84",
      "skipped": false
    },
    {
      "title": "should return false when no team with teamName does exist",
      "fullTitle": "#contains(teamName) should return false when no team with teamName does exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(<span class=\"hljs-string\">'other team name'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "0007c8c5-a1bf-4054-865c-2a84f2eb0798",
      "parentUUID": "0132839b-fa77-4cdf-9e4d-52e27e5bbf84",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "6606ab28-5dc4-462b-b778-b15cc06ec008",
      "parentUUID": "6e5563e2-bf05-436a-89dc-62493d312e2a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "48234443-eadf-4004-bbcb-8af50e295a6d",
      "parentUUID": "6e5563e2-bf05-436a-89dc-62493d312e2a",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all.pop();<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "d0d9d75a-51a8-4964-8ce3-ea8a134c4b8b",
      "parentUUID": "6e5563e2-bf05-436a-89dc-62493d312e2a",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#length should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.length = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "9a33ba68-b5f5-40c8-9ae9-683a38e3e1df",
      "parentUUID": "738b01be-89cc-4f3a-a976-69f8783eefcf",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#length should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "6f1a6dc5-50fd-4578-a27b-14e95e49b0cf",
      "parentUUID": "738b01be-89cc-4f3a-a976-69f8783eefcf",
      "skipped": false
    },
    {
      "title": "should add the given team",
      "fullTitle": "#add(team) should add the given team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "e989e4e0-84ad-4791-959d-23b5852b6dd8",
      "parentUUID": "a8b9ad67-cee7-43d7-b9a7-1addf84ffbde",
      "skipped": false
    },
    {
      "title": "should error if team with teamName already exists",
      "fullTitle": "#add(team) should error if team with teamName already exists",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.add(t);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "a81d9375-3e90-4635-afae-3becac0cbe4b",
      "parentUUID": "a8b9ad67-cee7-43d7-b9a7-1addf84ffbde",
      "skipped": false
    },
    {
      "title": "should remove the existing team",
      "fullTitle": "#remove(team) should remove the existing team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "fbf8f5c7-d86d-4ab7-bf01-f1d7319095f6",
      "parentUUID": "1c1a6878-0411-40cd-a52e-73b9e1c94ea1",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing team",
      "fullTitle": "#remove(team) should not remove the non-existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t1).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "3de95705-8067-42e2-914d-0520cb7feae9",
      "parentUUID": "1c1a6878-0411-40cd-a52e-73b9e1c94ea1",
      "skipped": false
    },
    {
      "title": "should remove the existing team",
      "fullTitle": "#removeByTeamName(team) should remove the existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t.teamName).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "f41f918c-7e73-4120-bbf7-9118f834aea7",
      "parentUUID": "1f620ee4-1e80-485b-8835-dacb075e41a2",
      "skipped": false
    },
    {
      "title": "should ignore team name case",
      "fullTitle": "#removeByTeamName(team) should ignore team name case",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'abc1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(<span class=\"hljs-string\">'ABC1'</span>).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "9d40d553-9285-4de2-abcf-154ff720b79c",
      "parentUUID": "1f620ee4-1e80-485b-8835-dacb075e41a2",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing team",
      "fullTitle": "#removeByTeamName(team) should not remove the non-existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t1.teamName).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "b9b0b356-b7f2-44bd-a683-c080b0d7d578",
      "parentUUID": "1f620ee4-1e80-485b-8835-dacb075e41a2",
      "skipped": false
    },
    {
      "title": "should give contestant an id",
      "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) should give contestant an id",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Username'</span>;<br>should(c.id).be.null();<br>tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>should(c.id).not.be.null();",
      "isRoot": false,
      "uuid": "c2154ba6-1f92-4d37-b3e2-ffb9e861d143",
      "parentUUID": "692e21ba-2218-4dcb-ab0f-a9950260df5f",
      "skipped": false
    },
    {
      "title": "should return a valid response",
      "fullTitle": "when teams are full should return a valid response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);",
      "isRoot": false,
      "uuid": "590a9dfc-448f-4158-b682-f7c17f2ba5c7",
      "parentUUID": "45633e3e-1b1c-447b-a242-98d0ef8576dd",
      "skipped": false
    },
    {
      "title": "should inquire for team leader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should inquire for team leader",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> inquired = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    inquired = <span class=\"hljs-literal\">true</span>;<br>});<br>r.should.be.true();<br>inquired.should.be.true();",
      "isRoot": false,
      "uuid": "c13a5a37-869a-474a-9873-d7ff94eaca67",
      "parentUUID": "2ca9ca67-710a-473e-8312-78fe2c388629",
      "skipped": false
    },
    {
      "title": "should not inquire for team leader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should not inquire for team leader",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>tc.all[<span class=\"hljs-number\">0</span>].teamLeader = c1;<br><span class=\"hljs-keyword\">var</span> didNotInquire = <span class=\"hljs-literal\">true</span>;<br>tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    didNotInquire = <span class=\"hljs-literal\">false</span>;<br>});<br>didNotInquire.should.be.true();<br>t.teamLeader.should.equal(c1);",
      "isRoot": false,
      "uuid": "e26e5d11-0197-4b57-ab41-0034d91d5f7a",
      "parentUUID": "2ca9ca67-710a-473e-8312-78fe2c388629",
      "skipped": false
    },
    {
      "title": "should not add contestant as teamLeader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should not add contestant as teamLeader",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should(t.teamLeader).be.null();",
      "isRoot": false,
      "uuid": "9efb5ba2-5ce5-48ed-a053-456bd39a6a75",
      "parentUUID": "2ca9ca67-710a-473e-8312-78fe2c388629",
      "skipped": false
    },
    {
      "title": "should not inquire for team leader",
      "fullTitle": "when teamLeader selection is RANDOM should not inquire for team leader",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> notInquired = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    notInquired = <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>r.should.be.true();<br>notInquired.should.be.true();",
      "isRoot": false,
      "uuid": "644787b2-bf19-4923-8cc1-9aeacfde9114",
      "parentUUID": "b0f8e730-c55c-4f87-9031-b10c76b8ff03",
      "skipped": false
    },
    {
      "title": "should automatically add team leader when team is filled",
      "fullTitle": "when teamLeader selection is RANDOM should automatically add team leader when team is filled",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).not.be.null();<br>});",
      "isRoot": false,
      "uuid": "308d2d2f-2e41-4ada-a54b-08c44094e401",
      "parentUUID": "b0f8e730-c55c-4f87-9031-b10c76b8ff03",
      "skipped": false
    },
    {
      "title": "should not automatically add team leader when team is not filled",
      "fullTitle": "when teamLeader selection is RANDOM should not automatically add team leader when team is not filled",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).be.null();<br>});",
      "isRoot": false,
      "uuid": "794bb346-6bca-4359-9116-b5afeed66b21",
      "parentUUID": "b0f8e730-c55c-4f87-9031-b10c76b8ff03",
      "skipped": false
    },
    {
      "title": "should add team when teams are full",
      "fullTitle": "when set to use unlimited teams should add team when teams are full",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "ddafb370-93d3-40b1-b46a-d0bdaecca928",
      "parentUUID": "1f956e8d-78dc-4841-9f1d-70a6e32216d1",
      "skipped": false
    },
    {
      "title": "should throw when no team name is given",
      "fullTitle": "when team selection method is PLAYER_CHOICE should throw when no team name is given",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>}).should.throw();",
      "isRoot": false,
      "uuid": "57e9dc9f-4c78-4340-8876-73890533d59a",
      "parentUUID": "320b386b-f14b-429f-a514-e8eac2b205b9",
      "skipped": false
    },
    {
      "title": "should add contestant to correct team",
      "fullTitle": "when team selection method is PLAYER_CHOICE should add contestant to correct team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "31ea3717-3ac3-4463-839b-b61cf30e19c4",
      "parentUUID": "320b386b-f14b-429f-a514-e8eac2b205b9",
      "skipped": false
    },
    {
      "title": "should not add to full team",
      "fullTitle": "when team selection method is PLAYER_CHOICE should not add to full team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "e33b23e2-8536-46ce-be7e-3ae1a8716f53",
      "parentUUID": "320b386b-f14b-429f-a514-e8eac2b205b9",
      "skipped": false
    },
    {
      "title": "should get team of contestant",
      "fullTitle": "getByContestant(contestant) should get team of contestant",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">5</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>    r.should.be.true();<br>});<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">4</span>]);<br>t.should.not.be.null();<br>t.contestants.getById(cc[<span class=\"hljs-number\">4</span>].id).should.equal(cc[<span class=\"hljs-number\">4</span>]);",
      "isRoot": false,
      "uuid": "73e3567f-1feb-46f8-aca1-bff462b90f81",
      "parentUUID": "ed1b9b19-0d44-4d76-b72d-7339403440a4",
      "skipped": false
    },
    {
      "title": "should not get team of contestant",
      "fullTitle": "getByContestant(contestant) should not get team of contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">1</span>);<br>cc[<span class=\"hljs-number\">0</span>].id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">0</span>]);<br>should(t).be.null();",
      "isRoot": false,
      "uuid": "6a5e7a41-0c55-405e-b613-b38f66c79549",
      "parentUUID": "ed1b9b19-0d44-4d76-b72d-7339403440a4",
      "skipped": false
    },
    {
      "title": "should get team when team with name exists",
      "fullTitle": "getByTeamName(temName) should get team when team with name exists",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t1 = tc.all[<span class=\"hljs-number\">0</span>];<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(t1.teamName);<br>t.should.equal(t1);",
      "isRoot": false,
      "uuid": "bd010834-7df7-40a8-8325-03ae2b8405ab",
      "parentUUID": "caf3299d-8ae7-4835-9229-a7a057e0aa8f",
      "skipped": false
    },
    {
      "title": "should not get team when team with name does not exist",
      "fullTitle": "getByTeamName(temName) should not get team when team with name does not exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(<span class=\"hljs-string\">'Not a team name that exists'</span>);<br>should(t).be.null();",
      "isRoot": false,
      "uuid": "7b042d15-8244-424a-9046-0eb6f1cdba12",
      "parentUUID": "caf3299d-8ae7-4835-9229-a7a057e0aa8f",
      "skipped": false
    },
    {
      "title": "should not return full teams",
      "fullTitle": "getAvailable(settings) should not return full teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">2</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "e129f228-bd04-4287-8f0e-b1048fa7cc12",
      "parentUUID": "d6d1dcc1-bf46-43a5-b966-6d939f0d458e",
      "skipped": false
    },
    {
      "title": "should return teams with space",
      "fullTitle": "getAvailable(settings) should return teams with space",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "4e8b3457-820a-44b5-9bf6-f2b0f89dead1",
      "parentUUID": "d6d1dcc1-bf46-43a5-b966-6d939f0d458e",
      "skipped": false
    },
    {
      "title": "should return teams with unlimited space",
      "fullTitle": "getAvailable(settings) should return teams with unlimited space",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = constants.UNLIMITED;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "188d21b8-47fe-40a4-8284-7f2f2f6b2d3f",
      "parentUUID": "d6d1dcc1-bf46-43a5-b966-6d939f0d458e",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t._teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
      "isRoot": false,
      "uuid": "8a06ac43-814b-4ffc-a93f-abb4a7915309",
      "parentUUID": "b7d11874-9cd6-455e-a38e-76ccf4439112",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t._teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t.teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
      "isRoot": false,
      "uuid": "fd94cd9f-3af3-4fbd-9e34-eb230ceca02a",
      "parentUUID": "b7d11874-9cd6-455e-a38e-76ccf4439112",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeader should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t.teamLeader = c;<br>t._teamLeader.should.equal(c);",
      "isRoot": false,
      "uuid": "46e08b6f-ff0e-4c85-b7b8-ecf847f351f4",
      "parentUUID": "0154e657-bd8f-4787-9cf6-fd4565142a9e",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeader should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t._teamLeader = c;<br>t.teamLeader.should.equal(c);",
      "isRoot": false,
      "uuid": "1ee7c757-7da1-4b06-bd57-707622a59378",
      "parentUUID": "0154e657-bd8f-4787-9cf6-fd4565142a9e",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#score should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "737b8477-8a0f-4d30-a3fa-9e2580a977e7",
      "parentUUID": "98ad86d0-8445-49a0-a2aa-9d5137723eec",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#score should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br>p._score = <span class=\"hljs-number\">5</span>;<br>p.score.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "b919bf93-15df-4c8e-99ea-ccca502618ce",
      "parentUUID": "98ad86d0-8445-49a0-a2aa-9d5137723eec",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#contestants should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "64c7c674-bd92-4627-bb9c-3b018ebbead6",
      "parentUUID": "b1986d2c-343d-4db2-9bae-14d2cdaaead1",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = p.contestants;<br>c.should.be.instanceOf(Participants);",
      "isRoot": false,
      "uuid": "1c7bd100-1ef4-43af-b710-fee263db6af3",
      "parentUUID": "b1986d2c-343d-4db2-9bae-14d2cdaaead1",
      "skipped": false
    },
    {
      "title": "should update the teams score",
      "fullTitle": "when a contestant scores should update the teams score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br>c1.incrementScore();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.incrementScore();<br>c2.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "131bfe1c-6c15-4243-a608-7556d64d74f4",
      "parentUUID": "1e4f20f0-2c0c-4e57-9814-6a0376715fa5",
      "skipped": false
    },
    {
      "title": "should allow it when no team leader is set",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should allow it when no team leader is set",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.id = <span class=\"hljs-string\">'c1'</span>;<br>t.contestants.add(c);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);",
      "isRoot": false,
      "uuid": "1a490fd5-27f0-42ba-afa7-a85811a224cc",
      "parentUUID": "05b8ebd2-89cb-4003-ad33-f36114c5c464",
      "skipped": false
    },
    {
      "title": "should not allow it when a team leader is set",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should not allow it when a team leader is set",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_FULFILLED);",
      "isRoot": false,
      "uuid": "61e0edc6-bc37-4eee-8bb3-3feab96995b7",
      "parentUUID": "05b8ebd2-89cb-4003-ad33-f36114c5c464",
      "skipped": false
    },
    {
      "title": "should not allow it when a contestant is not in team",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should not allow it when a contestant is not in team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_NOT_CONTESTANT);",
      "isRoot": false,
      "uuid": "9c433943-a6fb-4439-bb88-00a4008b7cf6",
      "parentUUID": "05b8ebd2-89cb-4003-ad33-f36114c5c464",
      "skipped": false
    },
    {
      "title": "should allow it when a team leader is set and host override is flagged",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should allow it when a team leader is set and host override is flagged",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">true</span>);<br>r.should.be.true();<br>should.not.exist(m);",
      "isRoot": false,
      "uuid": "37eadac0-6d37-47ab-bdb1-27d5a5000ba0",
      "parentUUID": "05b8ebd2-89cb-4003-ad33-f36114c5c464",
      "skipped": false
    },
    {
      "title": "should change name when request is valid",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should change name when request is valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "863da025-803a-4b01-881d-d5a0c1dfb898",
      "parentUUID": "c183f725-0eaf-4ce7-adee-10ffbecdc985",
      "skipped": false
    },
    {
      "title": "should not change name when setting do not allow it",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should not change name when setting do not allow it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_SETTINGS_NOT_ALLOW);<br>r.should.be.false();",
      "isRoot": false,
      "uuid": "3c471706-f1ee-4ce2-b2a0-60c31273d83c",
      "parentUUID": "c183f725-0eaf-4ce7-adee-10ffbecdc985",
      "skipped": false
    },
    {
      "title": "should not change name when name contains profanity",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should not change name when name contains profanity",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_CONTAINS_PROFANITY);<br>r.should.be.false();",
      "isRoot": false,
      "uuid": "efdf5390-e98b-4202-8359-caecb01ad08d",
      "parentUUID": "c183f725-0eaf-4ce7-adee-10ffbecdc985",
      "skipped": false
    },
    {
      "title": "should change name when request is valid",
      "fullTitle": "when host override should change name when request is valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "e8ee6aec-10c5-46b3-bc2c-55d5cc7fc5d2",
      "parentUUID": "4be6b10c-b5a6-43a8-8bc5-cabf63a57bad",
      "skipped": false
    },
    {
      "title": "should change name when setting do not allow it",
      "fullTitle": "when host override should change name when setting do not allow it",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "96d5eb0d-c1e3-455c-810f-0e38bc1639b3",
      "parentUUID": "4be6b10c-b5a6-43a8-8bc5-cabf63a57bad",
      "skipped": false
    },
    {
      "title": "should change name when name contains profanity",
      "fullTitle": "when host override should change name when name contains profanity",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "ca7852f3-de73-4fee-860f-eac6f122ec3f",
      "parentUUID": "4be6b10c-b5a6-43a8-8bc5-cabf63a57bad",
      "skipped": false
    },
    {
      "title": "should get contestant when contest with username exists",
      "fullTitle": "getContestantByUsername(username) should get contestant when contest with username exists",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(c1.username);<br>c.should.equal(c1);<br>c = t.getContestantByUsername(<span class=\"hljs-string\">'c1abc'</span>);<br>c.should.equal(c1);",
      "isRoot": false,
      "uuid": "a663df76-5039-4d65-8994-d1e72842150e",
      "parentUUID": "73e1103f-b97a-45dd-97a1-2bb516e7593c",
      "skipped": false
    },
    {
      "title": "should not get contestant when contest with username does not exist",
      "fullTitle": "getContestantByUsername(username) should not get contestant when contest with username does not exist",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(<span class=\"hljs-string\">'John Doe'</span>);<br>should(c).be.null();",
      "isRoot": false,
      "uuid": "8341a2db-6e45-4a8e-8225-ccf9629617a8",
      "parentUUID": "73e1103f-b97a-45dd-97a1-2bb516e7593c",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should throw on set value",
      "fullTitle": "#wasSuccessful should throw on set value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.wasSuccessful = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "686f87d8-5e2f-44d3-8936-e1ab92d008bf",
      "parentUUID": "638aec8b-bd17-4966-987d-4d9999187018",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#wasSuccessful should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>r.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "43a17cb7-4ad3-4c9f-945a-4457665e0945",
      "parentUUID": "638aec8b-bd17-4966-987d-4d9999187018",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#enquireForTeamLeaderPosition should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r._enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "12b5a3fd-70a1-4593-acb5-124507d15ac2",
      "parentUUID": "31b1a100-d347-405e-a154-3ec95eb07fa6",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#enquireForTeamLeaderPosition should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r.enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "6f2827dd-0f2b-4da6-9512-5250af6d8828",
      "parentUUID": "31b1a100-d347-405e-a154-3ec95eb07fa6",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#errorMessage should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.errorMessage = <span class=\"hljs-string\">'test'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "82ffc620-890a-449f-98ea-de8f059d31ae",
      "parentUUID": "6b730f18-6be3-43fc-a0f4-bc3221a801bf",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#errorMessage should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._errorMessage = <span class=\"hljs-string\">'errorMessage_test'</span>;<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'errorMessage_test'</span>);",
      "isRoot": false,
      "uuid": "34a04243-ba22-466a-aa15-cfe96ce53475",
      "parentUUID": "6b730f18-6be3-43fc-a0f4-bc3221a801bf",
      "skipped": false
    },
    {
      "title": "should change the state to not successful",
      "fullTitle": "#setNotSuccessful(errorMessage) should change the state to not successful",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.setNotSuccessful(<span class=\"hljs-string\">'Test error message'</span>);<br>r.wasSuccessful.should.be.false();<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'Test error message'</span>);",
      "isRoot": false,
      "uuid": "04371013-7c13-4cb2-bf4d-65fd18b27396",
      "parentUUID": "8e49334f-4d94-49a9-a021-27390be5e1a6",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'username_test'</span>;<br>c._username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
      "isRoot": false,
      "uuid": "82d82518-028e-42e0-bfa6-d961f54cd983",
      "parentUUID": "490c842e-ffa6-460c-a263-4fa3dc443015",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._username = <span class=\"hljs-string\">'username_test'</span>;<br>c.username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
      "isRoot": false,
      "uuid": "965ca7e4-b556-46a2-a9ac-e3fd787bc263",
      "parentUUID": "490c842e-ffa6-460c-a263-4fa3dc443015",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#score should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    c.score = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "06345fc1-4475-4872-8555-c268a42dae9d",
      "parentUUID": "0c4a182a-d4c9-4bf8-ab7e-02e56804b34a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#score should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._score = <span class=\"hljs-number\">1</span>;<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "13d2bcdb-b5ac-4afc-a068-740e78f43c7b",
      "parentUUID": "0c4a182a-d4c9-4bf8-ab7e-02e56804b34a",
      "skipped": false
    },
    {
      "title": "should increment the contestant's score",
      "fullTitle": "#incrementScore() should increment the contestant's score",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.incrementScore();<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "b411d2b5-3702-4cb6-a64e-de6a3f763660",
      "parentUUID": "b6a35631-bfc3-4ebe-bcab-71b224be33ed",
      "skipped": false
    },
    {
      "title": "should emit scoreUpdate event",
      "fullTitle": "#incrementScore() should emit scoreUpdate event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.on(<span class=\"hljs-string\">'scoreUpdate'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>});<br>c.incrementScore();",
      "isRoot": false,
      "uuid": "039fcfe2-3b5a-4484-8826-3cffdc0a4c4a",
      "parentUUID": "b6a35631-bfc3-4ebe-bcab-71b224be33ed",
      "skipped": false
    },
    {
      "title": "should return a non-null non-empty key",
      "fullTitle": "#generateSessionId() should return a non-null non-empty key",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateSessionId().should.not.be.equal(<span class=\"hljs-string\">''</span>).and.not.be.equal(<span class=\"hljs-literal\">null</span>);",
      "isRoot": false,
      "uuid": "36c2dd29-fe66-49f8-b2fd-e34b4159be0f",
      "parentUUID": "ae81c6c6-e1f7-4562-96c8-45ececcf7d75",
      "skipped": false
    },
    {
      "title": "should return a id of the correct length",
      "fullTitle": "#generateSessionId() should return a id of the correct length",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateSessionId()<br>    .length.should.be.Number().and.equal(idUtility.keyLength);",
      "isRoot": false,
      "uuid": "58cbf584-1dbc-49db-a836-ca03de24d4af",
      "parentUUID": "ae81c6c6-e1f7-4562-96c8-45ececcf7d75",
      "skipped": false
    },
    {
      "title": "should record id so it cannot be reused.",
      "fullTitle": "#generateSessionId() should record id so it cannot be reused.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> id = idUtility.generateSessionId();<br>idUtility._sessionKeysInUse.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">cachedId</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> cachedId === id;<br>}).should.equal(id);",
      "isRoot": false,
      "uuid": "85c9555a-1ea9-4d16-adc9-9831400147b7",
      "parentUUID": "ae81c6c6-e1f7-4562-96c8-45ececcf7d75",
      "skipped": false
    },
    {
      "title": "should return a UUID",
      "fullTitle": "#generateParticipantId() should return a UUID",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateParticipantId()<br>    .should.match(<span class=\"hljs-regexp\">/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i</span>);",
      "isRoot": false,
      "uuid": "a631e874-4ded-4252-a0a1-2bd4d7ec3698",
      "parentUUID": "71a8935c-4262-45cc-b9cb-b40f9885025c",
      "skipped": false
    },
    {
      "title": "should store the ids to stop reuse",
      "fullTitle": "#registerSessionIdsInUse(ids) should store the ids to stop reuse",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.length.should.be.aboveOrEqual(<span class=\"hljs-number\">2</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "a9ed32d7-3f11-4e49-8e43-ee428b86fae2",
      "parentUUID": "7bccc08a-059d-4e2e-bdec-3ab07c203c1a",
      "skipped": false
    },
    {
      "title": "should return a UUID",
      "fullTitle": "#releaseSessionId(id) should return a UUID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility.releaseSessionId(<span class=\"hljs-string\">'111AAA'</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.equal(-<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "51095f24-2edd-4f66-83bf-d075a879f952",
      "parentUUID": "44f4883a-4105-4718-98e9-54a9079d7c3b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#action should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.data._action.should.equal(constants.buzzerActionCommands.RESET);",
      "isRoot": false,
      "uuid": "8068e9d9-2292-4dd6-865d-3d8d23e44f4c",
      "parentUUID": "ded301d9-09f1-4d22-ab9d-7fdf90a6eacf",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#action should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._action = constants.buzzerActionCommands.RESET;<br>m.action.should.equal(constants.buzzerActionCommands.RESET);",
      "isRoot": false,
      "uuid": "12a3731c-01f7-4d81-91cc-56a2ac5c4999",
      "parentUUID": "ded301d9-09f1-4d22-ab9d-7fdf90a6eacf",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "2f9fbf63-ff94-4384-b2ed-4c472394fffb",
      "parentUUID": "e61146c4-0d68-4301-a84e-22d45dda17d9",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "cf4530a5-56c5-4177-a1fd-8bb2e57815c6",
      "parentUUID": "e61146c4-0d68-4301-a84e-22d45dda17d9",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "42571ff2-6589-4463-8208-233b6746c5c5",
      "parentUUID": "16b32679-94bb-4556-a179-d9930c8a1a4a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "81c11b08-927a-436d-b6dc-7606d3bf4146",
      "parentUUID": "16b32679-94bb-4556-a179-d9930c8a1a4a",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'yyy123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "2c6d9049-1254-4044-a1a8-260bc4c01b7e",
      "parentUUID": "06d390c9-183b-4705-a010-8017f8841a82",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = <span class=\"hljs-number\">99</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "43265e57-5917-415a-82f4-38f090151769",
      "parentUUID": "06d390c9-183b-4705-a010-8017f8841a82",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f3be735a-f8eb-46d0-b5a7-7d25e3b28783",
      "parentUUID": "a73e1326-590b-436a-852d-6a7420c8bffb",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "36af4e0a-1cd9-414d-b38d-148f3feaec40",
      "parentUUID": "a73e1326-590b-436a-852d-6a7420c8bffb",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "989c3590-83c7-4357-9c22-57255c7e1f2e",
      "parentUUID": "1be3547e-b2dd-4589-8d56-645a938b95a8",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "9922b00c-9d9c-4be9-add2-65c95a5f24ff",
      "parentUUID": "1be3547e-b2dd-4589-8d56-645a938b95a8",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "48ec19da-6339-4275-bf7d-035290e40ff5",
      "parentUUID": "9f94fdc7-2e39-417f-a15b-6bda6d3bdfc8",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "380c958d-4c4e-4970-bad4-05ff2e4b822b",
      "parentUUID": "9f94fdc7-2e39-417f-a15b-6bda6d3bdfc8",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.username = <span class=\"hljs-string\">'test123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
      "isRoot": false,
      "uuid": "e386a9ad-af76-48ab-a124-3ab4f9da7897",
      "parentUUID": "6fabc9c3-4faa-4072-a04b-1e2933a09fdf",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._username = <span class=\"hljs-string\">'test123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
      "isRoot": false,
      "uuid": "5accfd73-2a1f-4ad1-9bb9-0d66d60bbb10",
      "parentUUID": "6fabc9c3-4faa-4072-a04b-1e2933a09fdf",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "0d7f0ee7-47e4-403b-90c3-3fed27f38006",
      "parentUUID": "5e0af63c-fd71-4ab1-9789-51bc3a789c58",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "c622d99b-e83b-42a8-8601-af81802c0b45",
      "parentUUID": "5e0af63c-fd71-4ab1-9789-51bc3a789c58",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "945a0e47-dbfb-4737-8ed9-4fb3a7294f43",
      "parentUUID": "3d74dfbf-73ba-415f-9ed8-74ef95b88fcd",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "19ef7410-8c89-4a45-9b32-219b81a0b804",
      "parentUUID": "3d74dfbf-73ba-415f-9ed8-74ef95b88fcd",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "12f6ebaa-da87-4be2-85e8-6eae6db01e9c",
      "parentUUID": "85aaa33d-14f2-418e-8de2-4c1660bd9c0d",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "8bfbef62-a105-411c-87d1-6a26e6833448",
      "parentUUID": "85aaa33d-14f2-418e-8de2-4c1660bd9c0d",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#wasSuccessful should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.data._wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "5759f5b9-c6c7-4428-abda-5d2cb4cfccf8",
      "parentUUID": "df9aea43-0b10-4b30-9614-bd29c6506d72",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#wasSuccessful should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "5d002bd6-d2ba-45b3-96cc-115e829d4e8b",
      "parentUUID": "df9aea43-0b10-4b30-9614-bd29c6506d72",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#enquireForTeamLeaderPosition should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.data._enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "f11845b3-39b9-45cc-aad6-f4544f02ed51",
      "parentUUID": "926c2cce-b1bf-4144-aefd-cfc628e48e9c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#enquireForTeamLeaderPosition should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "dfa97d51-c18c-4727-899c-a7be1a3edd8f",
      "parentUUID": "926c2cce-b1bf-4144-aefd-cfc628e48e9c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#failedRequestReason should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.data._failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
      "isRoot": false,
      "uuid": "f6b1e9dd-3fa6-4ddf-878f-35f926ea3d0a",
      "parentUUID": "a25d57a1-1e62-425c-95cc-76e1840a4e5f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#failedRequestReason should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
      "isRoot": false,
      "uuid": "06f9c76b-394a-426d-9b42-fad2da538ba9",
      "parentUUID": "a25d57a1-1e62-425c-95cc-76e1840a4e5f",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "710148ff-07f0-49ca-be80-f967809c8090",
      "parentUUID": "e8172bc2-308d-4d93-b2c0-a5cb29418b8a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "6f34e218-1924-46d3-8622-9e56f2d935e6",
      "parentUUID": "e8172bc2-308d-4d93-b2c0-a5cb29418b8a",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#mustChooseTeam should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.data._mustChooseTeam.should.be.true();",
      "isRoot": false,
      "uuid": "a068990a-d1a6-4b5b-9721-a91c5e3bd36f",
      "parentUUID": "94998537-ada8-403f-bcbe-a82a5b97f86c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#mustChooseTeam should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.mustChooseTeam.should.be.true();",
      "isRoot": false,
      "uuid": "7bbdbdeb-4cdf-43fb-b40d-7ef912ad8996",
      "parentUUID": "94998537-ada8-403f-bcbe-a82a5b97f86c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teams should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.data._teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
      "isRoot": false,
      "uuid": "3e94b06d-084c-4137-bf0b-503e22959535",
      "parentUUID": "9827ea32-1fae-4199-acf3-cdf67a7db4e8",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teams should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
      "isRoot": false,
      "uuid": "e99c7ce5-2a0e-456c-a490-b79422f65606",
      "parentUUID": "9827ea32-1fae-4199-acf3-cdf67a7db4e8",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "4939d650-0cd0-4c7a-add7-98fb88ab3e58",
      "parentUUID": "7ca0f093-499d-4516-b7a0-ff32045203ed",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "3493b715-33ba-48f6-8018-5b7f5b78580b",
      "parentUUID": "7ca0f093-499d-4516-b7a0-ff32045203ed",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#settings should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.data._settings.should.equal(s);",
      "isRoot": false,
      "uuid": "185dddbe-1aa2-4196-8ea1-aab397bd9fd6",
      "parentUUID": "1366fc0f-dff9-48bd-a4b2-5d6010e0eac6",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#settings should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.data._settings = s;<br>m.settings.should.equal(s);",
      "isRoot": false,
      "uuid": "da44309b-d016-43b3-8c60-ca855b977b74",
      "parentUUID": "1366fc0f-dff9-48bd-a4b2-5d6010e0eac6",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "3199387d-73cb-4b9c-9e3f-eedb8e88e6ea",
      "parentUUID": "cb991c69-dd05-4824-8f10-eb89a88e61c7",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-string\">'invalid'</span>;<br>m.settings = s;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "c730849f-e8f6-4c73-bf0b-cabb3134124d",
      "parentUUID": "cb991c69-dd05-4824-8f10-eb89a88e61c7",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "8c1ecc51-0a7e-4129-aeef-4a3bac7d8b21",
      "parentUUID": "af2a6462-41e6-4afe-af80-f08765d64100",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "57efd196-9058-4291-8d27-b4f94bef8445",
      "parentUUID": "af2a6462-41e6-4afe-af80-f08765d64100",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "9d430820-d7ed-417e-8ea3-996c56cd534e",
      "parentUUID": "4fb51a99-da71-4b42-9307-e48bb20efe10",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "9deba1cf-d4a0-4f00-9354-006588f5be45",
      "parentUUID": "4fb51a99-da71-4b42-9307-e48bb20efe10",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "ebb8b171-fa76-4641-af0e-ede86e5d864c",
      "parentUUID": "1c1da0eb-3e72-4dae-bcc8-0c925f9eb3ea",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "aa9994a7-d38d-4e38-8b40-8b3c88c1d71c",
      "parentUUID": "1c1da0eb-3e72-4dae-bcc8-0c925f9eb3ea",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#message should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f5304bb2-9575-454e-9854-7ea5dea8fe6f",
      "parentUUID": "70feab43-b191-4f86-8a55-39766fef3058",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#message should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.data._error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "a5070004-6610-4c3c-8fce-ddba0733b0fe",
      "parentUUID": "70feab43-b191-4f86-8a55-39766fef3058",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "497b3f7d-c5b0-49ba-991f-e563366d9fec",
      "parentUUID": "c600b785-6ba6-4f89-9480-214264e1aa1b",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "1e3c5ccc-5d86-4e71-bb9d-6d3831959014",
      "parentUUID": "c600b785-6ba6-4f89-9480-214264e1aa1b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionName should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "d63346a3-0d6a-4dac-a86c-831b05adb5da",
      "parentUUID": "fe21c6ae-82c6-4f45-ab94-ef0b13df0a91",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionName should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "61fdef14-d2a1-4840-b78c-2ef8f00b5505",
      "parentUUID": "fe21c6ae-82c6-4f45-ab94-ef0b13df0a91",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxTeams should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxTeams = <span class=\"hljs-number\">5</span>;<br>m.data._maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "e602225d-7ec2-4649-9f05-9547b14bb52a",
      "parentUUID": "91189a29-9910-4a73-87d2-cac5950862c0",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxTeams should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxTeams = <span class=\"hljs-number\">5</span>;<br>m.maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "8532aa89-b07d-4673-9b75-2c1520b88f9c",
      "parentUUID": "91189a29-9910-4a73-87d2-cac5950862c0",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamSize should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.teamSize = <span class=\"hljs-number\">5</span>;<br>m.data._teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "9649c97d-261e-423d-ac53-868e896732b7",
      "parentUUID": "fb9f6e16-9717-4eb2-8d71-10b1adbe5c41",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamSize should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._teamSize = <span class=\"hljs-number\">5</span>;<br>m.teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "02e63d4d-9ab3-47a9-bb3e-509e80c3f695",
      "parentUUID": "fb9f6e16-9717-4eb2-8d71-10b1adbe5c41",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxContestants should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxContestants = <span class=\"hljs-number\">5</span>;<br>m.data._maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "c5081168-3c02-4158-90ee-c9fdd4f80b18",
      "parentUUID": "01ce8c18-447a-442c-ab6a-08224b53d9eb",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxContestants should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxContestants = <span class=\"hljs-number\">5</span>;<br>m.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "c9ab69ca-e76d-4981-ade8-494400004247",
      "parentUUID": "01ce8c18-447a-442c-ab6a-08224b53d9eb",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "d899c79a-71f5-42ff-9fcd-b161cf04bfab",
      "parentUUID": "780ee354-5fef-43dd-b2c2-f4f9b418b5c0",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "eed186b9-90b9-4f92-bb71-060d72cd3e84",
      "parentUUID": "780ee354-5fef-43dd-b2c2-f4f9b418b5c0",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "ea9ffae3-9fea-46b6-a402-d85560ee6028",
      "parentUUID": "c1c2fe49-6c7e-446a-b8fb-a04b1a5ce906",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b2fbb840-e78a-4368-8488-f43796094d6a",
      "parentUUID": "c1c2fe49-6c7e-446a-b8fb-a04b1a5ce906",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "a54dadb6-9fce-4da5-97f3-28c99a5eda34",
      "parentUUID": "235d2780-39af-45a2-a9d4-bd172611ae48",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "0a10f42a-b376-486a-85fc-ea16ad6cfa3c",
      "parentUUID": "235d2780-39af-45a2-a9d4-bd172611ae48",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "ac9d1f1e-5a44-4c48-8d2d-226ef92dbc7b",
      "parentUUID": "102b6668-054d-42a1-9392-158afb1581ba",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b4b51b31-665f-4514-af90-31896701ac30",
      "parentUUID": "102b6668-054d-42a1-9392-158afb1581ba",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeaderUsername should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "8aa547c8-b99a-48dd-8e48-c1ccea9d3577",
      "parentUUID": "d6071ceb-87af-4af0-860e-c4fc91e97a37",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeaderUsername should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "23a7fc2e-4d49-4985-aca6-c29b9dcfda8c",
      "parentUUID": "d6071ceb-87af-4af0-860e-c4fc91e97a37",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "bc45bc5b-c8cf-4d6e-9525-efce56995e49",
      "parentUUID": "d3f98df6-22d7-45d5-94e1-90b02072a9c0",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "2df8ae34-a5f5-4c56-b592-cbbc7d4b973e",
      "parentUUID": "d3f98df6-22d7-45d5-94e1-90b02072a9c0",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "140e8d5b-2730-477b-87a2-ccc79eebdf3d",
      "parentUUID": "8b7d6cc2-287a-4fef-aaa9-e6bfe315f055",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "bfaf1b2c-c52e-4f42-913c-6b0725fa92aa",
      "parentUUID": "8b7d6cc2-287a-4fef-aaa9-e6bfe315f055",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "a79cfffc-d6fd-4ffa-9ee6-94658d0f3fbf",
      "parentUUID": "e409fcdc-d340-473d-8c64-bda14c6660a6",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "e724c41e-b907-40d5-a78b-6f707aeaf1ec",
      "parentUUID": "e409fcdc-d340-473d-8c64-bda14c6660a6",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameFrom should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "2eb10af2-d111-48f4-b977-b5791fd2d1b1",
      "parentUUID": "59033101-fe0c-439e-bec8-73dd200e82a5",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameFrom should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "e03ecbef-f8cc-498a-8631-29859e1b6b32",
      "parentUUID": "59033101-fe0c-439e-bec8-73dd200e82a5",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameTo should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "52e519c1-9768-4a69-9b12-6e6a39f46468",
      "parentUUID": "7fd98ec6-76ec-4e44-a7b7-aa408cdab8ba",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameTo should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "ae3af0ce-1b6d-4408-9105-b8b8b8e439e5",
      "parentUUID": "7fd98ec6-76ec-4e44-a7b7-aa408cdab8ba",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "816e37b7-aa08-4704-8656-e80be8b3bda8",
      "parentUUID": "723a3028-dc71-42a3-9c09-2ee16ce270ea",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "8aaa2908-76a9-4dce-b728-8c7a7c6e4534",
      "parentUUID": "723a3028-dc71-42a3-9c09-2ee16ce270ea",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "a140f97a-7a30-4d22-9f68-674a7beb48cb",
      "parentUUID": "3024c962-64c0-44ac-82d1-d34130177ea4",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "8d88b541-2f55-46d8-a2ba-637992621235",
      "parentUUID": "3024c962-64c0-44ac-82d1-d34130177ea4",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "03eaf7c1-5f00-4ee0-807c-229c7441c704",
      "parentUUID": "8669f7a9-8dc2-4250-a374-ef8713ebc619",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "ea69ff07-4969-4e16-add0-5f3576ec39d3",
      "parentUUID": "8669f7a9-8dc2-4250-a374-ef8713ebc619",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#decision should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.data._decision.should.be.true();",
      "isRoot": false,
      "uuid": "bea25ed2-40ef-475a-863f-36559bcb7df4",
      "parentUUID": "958cda6b-bc96-4418-a9c4-ed68e97963a1",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#decision should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._decision = <span class=\"hljs-literal\">true</span>;<br>m.decision.should.be.true();",
      "isRoot": false,
      "uuid": "4a7f3d59-5062-4107-87af-c35ea1f984af",
      "parentUUID": "958cda6b-bc96-4418-a9c4-ed68e97963a1",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "6ea8ab47-c881-480f-846a-603a7ddb0c2e",
      "parentUUID": "c2997098-0973-47c6-92f7-90705a272ad8",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "c72c724d-be6d-4b99-9f44-fe1998342173",
      "parentUUID": "c2997098-0973-47c6-92f7-90705a272ad8",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "ca66c151-7b73-456a-aaf6-4c3d15098554",
      "parentUUID": "455841b0-6f65-45d7-9d7c-4bec83aff36d",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "86b826c9-1add-4222-ab76-f205631a1f5d",
      "parentUUID": "455841b0-6f65-45d7-9d7c-4bec83aff36d",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "74824602-87c3-4130-9ff6-5a4d94de061e",
      "parentUUID": "a3d203dc-443d-44a1-82c9-a4d723ece09e",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "5a9e2f65-0d5a-4932-817a-5bea89eccbad",
      "parentUUID": "a3d203dc-443d-44a1-82c9-a4d723ece09e",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#gameState should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.gameState.should.be.Object();",
      "isRoot": false,
      "uuid": "4f74b3a8-9b3d-41eb-8cb7-888ad812c827",
      "parentUUID": "dfb5560d-cff0-4a00-a285-1079f97cc792",
      "skipped": false
    },
    {
      "title": "should not have ids",
      "fullTitle": "#gameState should not have ids",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState.id);<br>should.not.exist(m.gameState.host.id);",
      "isRoot": false,
      "uuid": "9d3a2a38-2e38-4a96-9e74-5e3436767e72",
      "parentUUID": "dfb5560d-cff0-4a00-a285-1079f97cc792",
      "skipped": false
    },
    {
      "title": "should promote private field _ to public field",
      "fullTitle": "#gameState should promote private field _ to public field",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState._host);<br>should.not.exist(m.gameState._settings);<br>should.exist(m.gameState.host);<br>should.exist(m.gameState.settings);<br>should.exist(m.gameState.settings.teamLeaderSelectionMethod);",
      "isRoot": false,
      "uuid": "d6d36173-0383-42e6-88ec-a8809c691c91",
      "parentUUID": "dfb5560d-cff0-4a00-a285-1079f97cc792",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "0a1acdc6-2587-4ad0-a3a6-17a945f2083f",
      "parentUUID": "9dc7fe07-1175-4c28-b805-af04c0c43a5a",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "bdf53bf2-adb2-48a4-bb7f-afbd301467a2",
      "parentUUID": "9dc7fe07-1175-4c28-b805-af04c0c43a5a",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#rejoinAs should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.rejoinAs = constants.rejoinAs.HOST;<br>m.data._rejoinAs.should.equal(constants.rejoinAs.HOST);",
      "isRoot": false,
      "uuid": "42038d36-0759-4f16-9984-e6411fcc456d",
      "parentUUID": "2ca7fcd1-293f-4dec-b674-b1d35c833d22",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#rejoinAs should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._rejoinAs = constants.rejoinAs.HOST;<br>m.rejoinAs.should.equal(constants.rejoinAs.HOST);",
      "isRoot": false,
      "uuid": "b4484505-df6a-4fb0-b021-46eb20283e1f",
      "parentUUID": "2ca7fcd1-293f-4dec-b674-b1d35c833d22",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "73ac5fd5-23ee-4805-b253-b6b59bd2ee07",
      "parentUUID": "292e7717-5859-493a-ba3c-0b620feeea4e",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "a435387f-5b61-4ad9-b0e0-ad8d8d19d63f",
      "parentUUID": "292e7717-5859-493a-ba3c-0b620feeea4e",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#participantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "fdc5fe63-bb29-4732-a61d-86c0d07ca37d",
      "parentUUID": "f242f6f2-2b72-4b84-8c4b-c350e1624905",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#participantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "e04d7974-17c8-4029-b528-d8e9979e3d99",
      "parentUUID": "f242f6f2-2b72-4b84-8c4b-c350e1624905",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.rejoinAs = constants.rejoinAs.OBSERVER;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "439fe326-6aaf-43e9-877f-1851a7058606",
      "parentUUID": "6a8304f6-5220-4504-a248-f14fbbcdfa4b",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "59bc0cd2-a546-40d2-b486-b63ef8069c91",
      "parentUUID": "6a8304f6-5220-4504-a248-f14fbbcdfa4b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b1c9e2e4-3ed3-4dc5-8191-ff306470287c",
      "parentUUID": "3b36320f-1a78-4bbd-9e08-84facd04694b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "63dd08e2-5b06-4381-9456-8c203ca2615d",
      "parentUUID": "3b36320f-1a78-4bbd-9e08-84facd04694b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "37b277a2-f4fe-4716-b662-5adce1f5edf5",
      "parentUUID": "d2b6e3b2-d3b2-437c-9be2-66c620f2df86",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "555c60fe-8ebd-49a0-b35f-7385d8b9b9d9",
      "parentUUID": "d2b6e3b2-d3b2-437c-9be2-66c620f2df86",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "a15a97cd-8900-4ebf-b895-50e614e5a637",
      "parentUUID": "be10e4d3-08a6-479f-ba96-c08abbb457a2",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "ebfe5778-3969-4c35-a8b6-7787665d5de3",
      "parentUUID": "be10e4d3-08a6-479f-ba96-c08abbb457a2",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionCompleted();<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "3da0b2ae-384c-495f-8957-f962d707883d",
      "parentUUID": "94b587bc-3631-43d0-bf28-7436d3e522f6",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "64ca1d89-f293-4826-b56b-b6219577fddc",
      "parentUUID": "c4c9c65a-b21e-4b7b-8b7a-9b4eaf084057",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b6430f05-e53f-4fa6-a44a-4b1b86421367",
      "parentUUID": "c4c9c65a-b21e-4b7b-8b7a-9b4eaf084057",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f4459722-d826-418b-aa8f-8ea7f4a329c6",
      "parentUUID": "2a3b0e2a-9ffe-4aef-9825-ba215c64a31c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "44427d5d-5bfd-4c41-9682-4f8fab59c4c2",
      "parentUUID": "2a3b0e2a-9ffe-4aef-9825-ba215c64a31c",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "6824be18-387a-44ca-8238-5e4cde98903b",
      "parentUUID": "f1ddd173-0de6-4ad6-95b7-d8855e158687",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "ad28db8f-8142-40fd-b590-40f53f6d52b8",
      "parentUUID": "f1ddd173-0de6-4ad6-95b7-d8855e158687",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "6ec6697e-3c82-4b40-b130-fe1d9f2878d5",
      "parentUUID": "12eda6c8-f0f5-43fa-83a8-1aa5aafdabbf",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "36d60cdd-03a8-4167-a04b-2772aabc6e46",
      "parentUUID": "12eda6c8-f0f5-43fa-83a8-1aa5aafdabbf",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#participantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "58315d4b-b4d2-42f0-a523-d459aa32e8e3",
      "parentUUID": "aec797fc-956a-4622-80b6-56c1b54aa50f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#participantId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "16f1f9c6-7cc8-4773-9ee4-b80db2362299",
      "parentUUID": "aec797fc-956a-4622-80b6-56c1b54aa50f",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "9c2ca8da-141a-4331-9584-b74e3c0aeff8",
      "parentUUID": "5ab839a3-07f0-4643-a67d-820dc4fb99f3",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "ebe87ed3-2d8d-4aa7-a734-e00b8d609de6",
      "parentUUID": "5ab839a3-07f0-4643-a67d-820dc4fb99f3",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#info should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.should.be.Object();",
      "isRoot": false,
      "uuid": "be19a5e5-4774-4153-b20f-5b482a3893cb",
      "parentUUID": "c428014a-ce74-4146-a1ad-f5d783182923",
      "skipped": false
    },
    {
      "title": "should not have ids",
      "fullTitle": "#info should not have ids",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.host.should.not.be.null();<br>should.not.exist(m.info.host.id);",
      "isRoot": false,
      "uuid": "53d50131-d024-48fe-9b2d-71ac3b217a5c",
      "parentUUID": "c428014a-ce74-4146-a1ad-f5d783182923",
      "skipped": false
    },
    {
      "title": "should promote private field _ to public field",
      "fullTitle": "#info should promote private field _ to public field",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>should.not.exist(m.info._host);<br>should.not.exist(m.info._session);<br>should.exist(m.info.host);<br>should.exist(m.info.session);<br>should.exist(m.info.session.settings.teamLeaderSelectionMethod);",
      "isRoot": false,
      "uuid": "160d09a5-0c73-4674-ac44-75c6c7608023",
      "parentUUID": "c428014a-ce74-4146-a1ad-f5d783182923",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "d69024be-1294-4ae3-be74-0bc4f29ec430",
      "parentUUID": "ebd0f270-27ac-43a4-83d7-6e28f9335704",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "6ac05dd1-dff8-4480-8964-0af0611ffe19",
      "parentUUID": "ebd0f270-27ac-43a4-83d7-6e28f9335704",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "0cbdf6ab-c963-4a84-8b0b-1a5517c46598",
      "parentUUID": "e4f0c9cf-9036-4f15-81d9-cbc3c3a42283",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b81959a5-9e3a-4a31-a703-924e60ddd17e",
      "parentUUID": "e4f0c9cf-9036-4f15-81d9-cbc3c3a42283",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "8a409774-aa66-4d15-84dd-9bd9f267b8f5",
      "parentUUID": "fed4660e-b5f7-44a4-b61e-48a87012e034",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "5c9d7e95-ccc7-4a3c-8d7a-bd916f2cb8bc",
      "parentUUID": "fed4660e-b5f7-44a4-b61e-48a87012e034",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "1daf36c4-058f-4a64-864b-59054435d3b1",
      "parentUUID": "76a35348-21ea-46f1-929a-9fa0f50e123f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "4849eea5-0af7-4a8e-bd74-0e19b24fc178",
      "parentUUID": "76a35348-21ea-46f1-929a-9fa0f50e123f",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.contestantId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "501a5954-2252-41df-aa76-4d36afc314dd",
      "parentUUID": "427108f0-37f8-404b-b4a1-c19d72a98af2",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "a7a54be5-3d11-40a8-9896-937cee110c09",
      "parentUUID": "427108f0-37f8-404b-b4a1-c19d72a98af2",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SuccessMessage();<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "3d21ef3f-0ff7-4b45-9ae7-03e3fc2802b0",
      "parentUUID": "611c5b5a-b5be-41a2-a404-5c731939d03b",
      "skipped": false
    },
    {
      "title": "should return false when not referenced",
      "fullTitle": "#isInstanceAndTypeOf() should return false when not referenced",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf().should.be.false();",
      "isRoot": false,
      "uuid": "b4de929a-6120-460f-b381-d2b34aa078b1",
      "parentUUID": "d05aed87-54e9-405b-a0c0-2f2d27b794ea",
      "skipped": false
    },
    {
      "title": "should return false when null",
      "fullTitle": "#isInstanceAndTypeOf() should return false when null",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">''</span>).should.be.false();",
      "isRoot": false,
      "uuid": "59705182-bd59-49e4-a6be-199e02665dc5",
      "parentUUID": "d05aed87-54e9-405b-a0c0-2f2d27b794ea",
      "skipped": false
    },
    {
      "title": "should return false when not the correct type",
      "fullTitle": "#isInstanceAndTypeOf() should return false when not the correct type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'Int'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "71d58b1b-fa40-4292-aaa3-24b7ae053c4a",
      "parentUUID": "d05aed87-54e9-405b-a0c0-2f2d27b794ea",
      "skipped": false
    },
    {
      "title": "should return true when is a built-in type",
      "fullTitle": "#isInstanceAndTypeOf() should return true when is a built-in type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'Number'</span>).should.be.true();",
      "isRoot": false,
      "uuid": "17b27b63-f5e2-45ad-9bf0-179c42048461",
      "parentUUID": "d05aed87-54e9-405b-a0c0-2f2d27b794ea",
      "skipped": false
    },
    {
      "title": "should return true when is user defined type",
      "fullTitle": "#isInstanceAndTypeOf() should return true when is user defined type",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-keyword\">new</span> UserDefinedType(),<br>    UserDefinedType).should.be.true();",
      "isRoot": false,
      "uuid": "c4812e53-df9c-43f9-b086-b25f93614d44",
      "parentUUID": "d05aed87-54e9-405b-a0c0-2f2d27b794ea",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "14e58f0a-84c3-46f9-ae8e-1302525cd221",
      "parentUUID": "55b99276-a699-4eea-8031-9f02660414e4",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "57c97847-e0a3-4304-ad22-ca6c9e7cad9a",
      "parentUUID": "55b99276-a699-4eea-8031-9f02660414e4",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all.pop();<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "70470046-7db3-483b-8bcd-fdaba1508662",
      "parentUUID": "55b99276-a699-4eea-8031-9f02660414e4",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#length should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.length = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "f286e6b7-4820-418c-9282-6366ca82b244",
      "parentUUID": "2b5095f5-1dea-4d46-8802-d4b86855b321",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#length should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "1822a437-5c77-43d6-ab44-be7c12c9fd82",
      "parentUUID": "2b5095f5-1dea-4d46-8802-d4b86855b321",
      "skipped": false
    },
    {
      "title": "should return true when id does exist",
      "fullTitle": "#contains(id) should return true when id does exist",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(p.id).should.be.true();",
      "isRoot": false,
      "uuid": "b362c14a-5956-4098-824b-bc6665c61aea",
      "parentUUID": "7d4d6f15-e021-4ed7-ac52-d6b299dffba2",
      "skipped": false
    },
    {
      "title": "should return false when id does not exist",
      "fullTitle": "#contains(id) should return false when id does not exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(<span class=\"hljs-string\">'p2'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "5a376510-2f5e-4caf-be2c-198fc04b887a",
      "parentUUID": "7d4d6f15-e021-4ed7-ac52-d6b299dffba2",
      "skipped": false
    },
    {
      "title": "should add the given participant",
      "fullTitle": "#add(participant) should add the given participant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc._participants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc._participants[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "cfa16675-3fe0-40ba-8ac4-842b3bab71bf",
      "parentUUID": "ed8f05cd-a05c-477a-a86a-c8ae20bf8607",
      "skipped": false
    },
    {
      "title": "should error if participant with id already exists",
      "fullTitle": "#add(participant) should error if participant with id already exists",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.add(p);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "9fb06128-5e94-466a-93c5-55528fb66051",
      "parentUUID": "ed8f05cd-a05c-477a-a86a-c8ae20bf8607",
      "skipped": false
    },
    {
      "title": "should emit add event",
      "fullTitle": "#add(participant) should emit add event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.on(<span class=\"hljs-string\">'add'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">participant</span>) </span>{<br>    participant.should.equal(p);<br>    done();<br>});<br>pc.add(p);",
      "isRoot": false,
      "uuid": "f9a2625c-a206-4fcd-9662-e578a7b386ad",
      "parentUUID": "ed8f05cd-a05c-477a-a86a-c8ae20bf8607",
      "skipped": false
    },
    {
      "title": "should remove the existing participant",
      "fullTitle": "#remove(participant) should remove the existing participant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "8af04596-3437-4b0b-b71a-fcb34135f483",
      "parentUUID": "9fdb2753-194d-479b-bc6d-68bb327ce480",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing participant",
      "fullTitle": "#remove(participant) should not remove the non-existing participant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p1).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "ee1c5a2c-b827-45e3-b4d0-30f3ffb1bc15",
      "parentUUID": "9fdb2753-194d-479b-bc6d-68bb327ce480",
      "skipped": false
    },
    {
      "title": "should remove the existing participant",
      "fullTitle": "#removeById(id) should remove the existing participant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p.id).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "661b6fb4-e89e-4551-b828-f5f4366fd007",
      "parentUUID": "9b6f0530-9ae3-48f4-b898-3d5d6a1be49c",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing participant",
      "fullTitle": "#removeById(id) should not remove the non-existing participant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p1.id).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "8d4c33ab-139d-4777-989a-74319a4159a5",
      "parentUUID": "9b6f0530-9ae3-48f4-b898-3d5d6a1be49c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#id should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'id_test'</span>;<br>p._id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "8069892f-867c-463f-80dc-a26629082ed1",
      "parentUUID": "4e8ca7c6-383c-4a5d-b269-4e32fd5358e5",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#id should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "8395167d-8eb3-4996-9005-19fcdea340b3",
      "parentUUID": "4e8ca7c6-383c-4a5d-b269-4e32fd5358e5",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#isDisconnected should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    p.isDisconnected = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "3c8036ab-dfb8-4fc2-ba69-d971129b797d",
      "parentUUID": "bbe2db22-9c5d-407b-b453-deab72a5cdcc",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#isDisconnected should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "01fc5039-4a14-420d-ad00-9f116d2ffd6e",
      "parentUUID": "bbe2db22-9c5d-407b-b453-deab72a5cdcc",
      "skipped": false
    },
    {
      "title": "should change participant state to disconnected",
      "fullTitle": "#disconnect() should change participant state to disconnected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">false</span>;<br>p.disconnect();<br>p.isDisconnected.should.be.true();",
      "isRoot": false,
      "uuid": "c2acedc9-6a4e-45d2-8dab-aa303128a372",
      "parentUUID": "a65ec347-2c1a-4161-9745-9b0536d88aba",
      "skipped": false
    },
    {
      "title": "should change participant state to connected",
      "fullTitle": "#reconnect() should change participant state to connected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">true</span>;<br>p.reconnect();<br>p.isDisconnected.should.be.false();",
      "isRoot": false,
      "uuid": "97124808-5f0b-4096-895c-84189ad90536",
      "parentUUID": "34354528-83cd-41a8-a247-f31668d28ab0",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    sc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "97a825ab-2159-4216-aa9f-78efc2905c2f",
      "parentUUID": "f619698d-743d-4022-837a-ae16d9643d60",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
      "isRoot": false,
      "uuid": "0c3c0e2d-4ac5-45e5-b75c-168d2c138e83",
      "parentUUID": "f619698d-743d-4022-837a-ae16d9643d60",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all.pop();<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
      "isRoot": false,
      "uuid": "e2cc9b22-5539-4f29-9a7f-13f175ae9f6f",
      "parentUUID": "f619698d-743d-4022-837a-ae16d9643d60",
      "skipped": false
    },
    {
      "title": "add and return session",
      "fullTitle": "#add(host, settings) add and return session",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-keyword\">var</span> ses = sc.add(h, s);<br>ses.should.be.instanceof(Session);",
      "isRoot": false,
      "uuid": "a18a2b9d-ce10-4e58-b4a3-7d7d0ce7d793",
      "parentUUID": "4247a1b9-9c93-44a2-a810-16babf37ca2e",
      "skipped": false
    },
    {
      "title": "when given valid id should return session",
      "fullTitle": "#getById(id) when given valid id should return session",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-comment\">/* eslint-disable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses1 = sc.add(h, s);<br><span class=\"hljs-comment\">/* eslint-enable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses2 = sc.add(h, s);<br><span class=\"hljs-keyword\">var</span> sessionLocate = sc.getById(ses2.id);<br>sessionLocate.should.be.instanceof(Session)<br>    .and.equal(ses2);",
      "isRoot": false,
      "uuid": "03875309-d215-4f0e-84e5-9400934c2f00",
      "parentUUID": "6d841489-5831-449c-9a9b-91b49f73f78b",
      "skipped": false
    },
    {
      "title": "should remove complete sc",
      "fullTitle": "#purgeCompleted() should remove complete sc",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.all[<span class=\"hljs-number\">0</span>].complete();<br>sc.all[<span class=\"hljs-number\">1</span>].complete();<br>sc.purgeCompleted();<br>sc.all.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "44f30be9-e3bb-4e57-b900-98ae79ffdf09",
      "parentUUID": "f19ce19f-fcf4-4b20-9e06-c758a31bafbb",
      "skipped": false
    },
    {
      "title": "should create teams",
      "fullTitle": "#constructor should create teams",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "e38ab580-47b3-4826-ba0b-7315ebda3c54",
      "parentUUID": "17d099fb-faa7-47fe-b6b1-32d574ff709d",
      "skipped": false
    },
    {
      "title": "should not create teams",
      "fullTitle": "#constructor should not create teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>should(s.teams).be.null();",
      "isRoot": false,
      "uuid": "c896e432-9b50-462b-8036-169c5ea0eeda",
      "parentUUID": "17d099fb-faa7-47fe-b6b1-32d574ff709d",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#id should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.id = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "b578d214-23eb-4eb5-b59f-600b6a2f5a5c",
      "parentUUID": "c21ee296-40eb-4343-9290-22c99f06d5e2",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#id should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "7b3312b2-f6f7-4bd6-93fd-6de7fbb1bc6b",
      "parentUUID": "c21ee296-40eb-4343-9290-22c99f06d5e2",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#roundsPlayed should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundsPlayed = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "8618a408-9ff5-4c25-b9de-53c39de4419e",
      "parentUUID": "8935b396-31d6-4dc2-9581-a8d95dda8f1c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#roundsPlayed should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "8b78654a-dd3f-49ba-b63f-ae936f0fcf3c",
      "parentUUID": "8935b396-31d6-4dc2-9581-a8d95dda8f1c",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#previousWinners should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.previousWinners = [<span class=\"hljs-string\">'SomeWinner'</span>];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "690cfbce-a16b-43c6-b3b4-6a3def8759cf",
      "parentUUID": "61a75273-137f-491c-ad3e-c0099dc8c08d",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#previousWinners should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._previousWinners = [<span class=\"hljs-string\">'Winner1'</span>, <span class=\"hljs-string\">'Winner2'</span>];<br>s.previousWinners.should.be.Array();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
      "isRoot": false,
      "uuid": "39e1546b-1c6e-4d8c-8e36-e7c46cb63d33",
      "parentUUID": "61a75273-137f-491c-ad3e-c0099dc8c08d",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#roundWinner should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundWinner = <span class=\"hljs-string\">'SomeWinner'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "4e34d2d5-9c49-46d0-9fac-816c506a70ca",
      "parentUUID": "e066151d-b3f9-4faf-9712-58d4966f991e",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#roundWinner should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundWinner = <span class=\"hljs-string\">'Winner1'</span>;<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
      "isRoot": false,
      "uuid": "6c2eeb7b-b0ce-45a0-9d0c-f2ab8a08547b",
      "parentUUID": "e066151d-b3f9-4faf-9712-58d4966f991e",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#observers should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.observers = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "a4d4aec3-7e3e-4342-9b00-aa73527b2c18",
      "parentUUID": "87bcbe37-794a-40ab-8f90-d5eb5a2f9cbe",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#observers should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.observers.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.observers[<span class=\"hljs-number\">0</span>].should.equal(observer);",
      "isRoot": false,
      "uuid": "8e38edbe-74bd-45e0-a8b4-81adf78d58b6",
      "parentUUID": "87bcbe37-794a-40ab-8f90-d5eb5a2f9cbe",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#contestants should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.contestants = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "11128d37-8841-4a52-b516-a94eaf76f808",
      "parentUUID": "37182af0-08e9-460c-b98b-368edb236cd0",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestants should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.contestants[<span class=\"hljs-number\">0</span>].should.equal(contestant);",
      "isRoot": false,
      "uuid": "d6a0302d-f660-4d60-9f1b-8994453c40c8",
      "parentUUID": "37182af0-08e9-460c-b98b-368edb236cd0",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#host should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.host = host;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "6dd25c62-3bc9-4e06-8ccf-a5c2a68e3d6e",
      "parentUUID": "94306f71-afcb-4e2c-9bfb-3e29c7318c18",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#host should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.host.should.equal(host);",
      "isRoot": false,
      "uuid": "f39cb46a-7032-46ea-a977-743bfb636c0d",
      "parentUUID": "94306f71-afcb-4e2c-9bfb-3e29c7318c18",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#currentState should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
      "isRoot": false,
      "uuid": "3c412fed-f95a-4984-88a2-33ab297f4421",
      "parentUUID": "32a2bb97-d867-446f-a6b7-56aa0db5e0fd",
      "skipped": false
    },
    {
      "title": "should increment rounds played",
      "fullTitle": "#incrementRoundsPlayed() should increment rounds played",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.incrementRoundsPlayed();<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "e48d015a-075f-42b0-b5c8-5e411ce5854f",
      "parentUUID": "8d3c3128-ad38-4569-9f7f-b68da164e80e",
      "skipped": false
    },
    {
      "title": "should not allow a contestant username with bad words",
      "fullTitle": "#addContestant(contestant) should not allow a contestant username with bad words",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Penis #YOLO'</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_CONTAINS_PROFANITY);",
      "isRoot": false,
      "uuid": "a4ff362e-c3ae-447e-935b-e1d95dfcbed2",
      "parentUUID": "ff773b0e-1910-4ee0-b5c2-28810ebce861",
      "skipped": false
    },
    {
      "title": "should not allow when username is empty",
      "fullTitle": "#addContestant(contestant) should not allow when username is empty",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">' '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_IS_REQUIRED);",
      "isRoot": false,
      "uuid": "842a0fae-1a5c-470b-87dc-b22d0a4ac161",
      "parentUUID": "ff773b0e-1910-4ee0-b5c2-28810ebce861",
      "skipped": false
    },
    {
      "title": "should trim username",
      "fullTitle": "#addContestant(contestant) should trim username",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Wade  '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>c.username.should.equal(<span class=\"hljs-string\">'Wade'</span>);",
      "isRoot": false,
      "uuid": "aeb8f27d-ffc0-4e64-b65e-b5ad9980eb72",
      "parentUUID": "ff773b0e-1910-4ee0-b5c2-28810ebce861",
      "skipped": false
    },
    {
      "title": "should add contestant when session is not full",
      "fullTitle": "when in individual mode should add contestant when session is not full",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "bddc0ac8-eb9a-46a2-b1b4-6c8475958cff",
      "parentUUID": "fd43b947-1e2e-477e-b5fc-c070400342c2",
      "skipped": false
    },
    {
      "title": "should not add contestant when session is full",
      "fullTitle": "when in individual mode should not add contestant when session is full",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br>s.addContestant(c2);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();",
      "isRoot": false,
      "uuid": "30990c1f-aea6-4926-993c-e0014c2f789d",
      "parentUUID": "fd43b947-1e2e-477e-b5fc-c070400342c2",
      "skipped": false
    },
    {
      "title": "should not add contestant when username is already taken",
      "fullTitle": "when in individual mode should not add contestant when username is already taken",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "8660b257-e26a-48f3-9325-e22364150a9b",
      "parentUUID": "fd43b947-1e2e-477e-b5fc-c070400342c2",
      "skipped": false
    },
    {
      "title": "BUG# username case should not matter",
      "fullTitle": "when in individual mode BUG# username case should not matter",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'abc1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'ABC1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "9e3b0d6d-3037-4f6b-8245-c76a255f9549",
      "parentUUID": "fd43b947-1e2e-477e-b5fc-c070400342c2",
      "skipped": false
    },
    {
      "title": "should allow unlimited contestants when max is set to constants.UNLIMITED",
      "fullTitle": "when in individual mode should allow unlimited contestants when max is set to constants.UNLIMITED",
      "timedOut": false,
      "duration": 688,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = constants.UNLIMITED;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    <span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>    c.username = <span class=\"hljs-string\">'c'</span> + i;<br>    <span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>    response.wasSuccessful.should.be.true();<br>}",
      "isRoot": false,
      "uuid": "199d0f98-bdce-4b4f-a463-92e26d75fc66",
      "parentUUID": "fd43b947-1e2e-477e-b5fc-c070400342c2",
      "skipped": false
    },
    {
      "title": "should add contestant when teams is not full",
      "fullTitle": "when in team mode should add contestant when teams is not full",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "62767661-8098-4a87-874e-65b16e47074e",
      "parentUUID": "173bd3e3-0b78-45a9-952e-84c10fe61bd7",
      "skipped": false
    },
    {
      "title": "should not add contestant when teams are full",
      "fullTitle": "when in team mode should not add contestant when teams are full",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.TEAMS_ARE_FULL);",
      "isRoot": false,
      "uuid": "b4edff03-6c84-4a94-91f9-d0d7edf2a88b",
      "parentUUID": "173bd3e3-0b78-45a9-952e-84c10fe61bd7",
      "skipped": false
    },
    {
      "title": "should not add contestant when username is already taken",
      "fullTitle": "when in team mode should not add contestant when username is already taken",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "763c52cf-4545-4cad-b3a2-417042986375",
      "parentUUID": "173bd3e3-0b78-45a9-952e-84c10fe61bd7",
      "skipped": false
    },
    {
      "title": "should subscribe callback to the correct event",
      "fullTitle": "#subscribeForStateChange(event, callback) should subscribe callback to the correct event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> r = s.addContestant(c);<br>r.wasSuccessful.should.be.true();<br>s.subscribeForStateChange(<span class=\"hljs-string\">'onpending'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">session, event, from, to</span>) </span>{<br>    session.should.equal(s);<br>    event.should.equal(<span class=\"hljs-string\">'buzzerPressed'</span>);<br>    from.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>    to.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>    done();<br>});<br>s.tryBuzzerPressRegister(c.id).should.be.true();",
      "isRoot": false,
      "uuid": "2c15c6ff-3ab5-4900-8f38-0e42ae2c2d9b",
      "parentUUID": "acf052c3-7a12-4820-9324-b5ed9eb03a48",
      "skipped": false
    },
    {
      "title": "should register when state is ready",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should register when state is ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);",
      "isRoot": false,
      "uuid": "0fe3983b-f841-4f30-9ad3-eb882ae00953",
      "parentUUID": "9912872b-380c-487b-a0d9-11c412ff1294",
      "skipped": false
    },
    {
      "title": "should not register when state is not ready",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not register when state is not ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.false();",
      "isRoot": false,
      "uuid": "e3eb6060-e558-46a3-8595-f3e93879e1fd",
      "parentUUID": "9912872b-380c-487b-a0d9-11c412ff1294",
      "skipped": false
    },
    {
      "title": "should not register when contestant does not exist",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not register when contestant does not exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(idUtility.generateParticipantId()).should.be.false();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
      "isRoot": false,
      "uuid": "33d92d17-c98a-4e01-828c-1305b8e4228a",
      "parentUUID": "9912872b-380c-487b-a0d9-11c412ff1294",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "20e95384-19ec-46c2-b847-e9c46d9116d2",
      "parentUUID": "9912872b-380c-487b-a0d9-11c412ff1294",
      "skipped": false
    },
    {
      "title": "should not add previous round winner to winners list",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not add previous round winner to winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "ef7daccd-fadd-4cfc-aacb-959c3a970061",
      "parentUUID": "9912872b-380c-487b-a0d9-11c412ff1294",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->ACCEPT should allow when game state is pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();",
      "isRoot": false,
      "uuid": "f23544ad-a599-408f-8f6b-120cc208ef4c",
      "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not pending",
      "fullTitle": "action->ACCEPT should not allow when game state is not pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.false();",
      "isRoot": false,
      "uuid": "09c770f7-2fd3-4d93-b047-cba5a1a295e5",
      "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
      "skipped": false
    },
    {
      "title": "should update contestant's score",
      "fullTitle": "action->ACCEPT should update contestant's score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "4650a8bf-ca61-447c-9e12-fc1447aab241",
      "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
      "skipped": false
    },
    {
      "title": "should update contestant's team score",
      "fullTitle": "action->ACCEPT should update contestant's team score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>s.teams.all[<span class=\"hljs-number\">0</span>].score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "246338b8-ce3d-4291-9064-077bfb67e5df",
      "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->ACCEPT should add previous round winner to winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "e96759d2-7b75-4a3c-b0bd-d28476c2472f",
      "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->ACCEPT should change game state back to ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "dd8c962b-3cf3-4652-8b01-0f983cb409d3",
      "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
      "skipped": false
    },
    {
      "title": "should clear pending winner",
      "fullTitle": "action->ACCEPT should clear pending winner",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>should(s.pendingWinner).be.null();",
      "isRoot": false,
      "uuid": "c7a2a09d-dd43-461f-802f-167f3820adb3",
      "parentUUID": "4b42d309-a44c-4895-bf41-d240ad87fcb5",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->REJECT should allow when game state is pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();",
      "isRoot": false,
      "uuid": "d3853ee2-9991-4cf1-a0dc-f0b549d8b728",
      "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not pending",
      "fullTitle": "action->REJECT should not allow when game state is not pending",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.false();",
      "isRoot": false,
      "uuid": "e72b6e1f-bcaf-4134-b4a2-a8bc0eb6fe71",
      "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
      "skipped": false
    },
    {
      "title": "should not replace round winner with pending contestant",
      "fullTitle": "action->REJECT should not replace round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "33b2c0c4-80c2-41f0-8f0b-e99cdd48908b",
      "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
      "skipped": false
    },
    {
      "title": "should not update pending contestant's score",
      "fullTitle": "action->REJECT should not update pending contestant's score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.score.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "97cab7bc-e857-47ba-b9e7-2c4ca98ded72",
      "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
      "skipped": false
    },
    {
      "title": "should add round winner to previous winners list",
      "fullTitle": "action->REJECT should add round winner to previous winners list",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "32fdc2db-9a80-428d-857f-e1a404eec5fe",
      "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->REJECT should change game state back to ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "2b5119ac-006c-4252-bdbd-330ca190231f",
      "parentUUID": "15c2d032-c159-4074-8136-a4190a138942",
      "skipped": false
    },
    {
      "title": "should allow when game state is ready",
      "fullTitle": "action->RESET should allow when game state is ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
      "isRoot": false,
      "uuid": "4860c000-abcc-4269-a385-914eb0207a56",
      "parentUUID": "41fbf065-7ab4-4b79-8f02-c1c4ea62419a",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->RESET should allow when game state is pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
      "isRoot": false,
      "uuid": "1f2b6a15-5a79-478a-846e-7528d059056f",
      "parentUUID": "41fbf065-7ab4-4b79-8f02-c1c4ea62419a",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "action->RESET should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "d82b4611-346c-409d-80cf-47ae4e78d069",
      "parentUUID": "41fbf065-7ab4-4b79-8f02-c1c4ea62419a",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->RESET should add previous round winner to winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "a714a1c7-a3fb-49a3-8f9d-5438463af70b",
      "parentUUID": "41fbf065-7ab4-4b79-8f02-c1c4ea62419a",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->RESET should change game state back to ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "cede0820-575e-4f6c-bfbd-68c4db877032",
      "parentUUID": "41fbf065-7ab4-4b79-8f02-c1c4ea62419a",
      "skipped": false
    },
    {
      "title": "should allow when game state is ready",
      "fullTitle": "action->DISABLE should allow when game state is ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
      "isRoot": false,
      "uuid": "e6a511a3-25e3-4fb2-a08b-782891e7acef",
      "parentUUID": "77df4139-7fcb-48b7-a9cc-69d5bb4e8ccd",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->DISABLE should allow when game state is pending",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
      "isRoot": false,
      "uuid": "adce1a93-4a2b-4fe5-abae-ab817ed9e697",
      "parentUUID": "77df4139-7fcb-48b7-a9cc-69d5bb4e8ccd",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "action->DISABLE should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "c2dbc160-f8d5-4c4e-b82c-17a6d0d7fba3",
      "parentUUID": "77df4139-7fcb-48b7-a9cc-69d5bb4e8ccd",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->DISABLE should add previous round winner to winners list",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "f73e210f-08cc-4191-af95-a1539bc884c0",
      "parentUUID": "77df4139-7fcb-48b7-a9cc-69d5bb4e8ccd",
      "skipped": false
    },
    {
      "title": "should change game state to buzzerLock",
      "fullTitle": "action->DISABLE should change game state to buzzerLock",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.BUZZER_LOCK);",
      "isRoot": false,
      "uuid": "46666f12-7aae-4f27-83ea-6eb36af29cac",
      "parentUUID": "77df4139-7fcb-48b7-a9cc-69d5bb4e8ccd",
      "skipped": false
    },
    {
      "title": "should allow when game state is buzzerLock",
      "fullTitle": "action->ENABLE should allow when game state is buzzerLock",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();",
      "isRoot": false,
      "uuid": "ca133783-8953-4bbd-92ff-0313923ff803",
      "parentUUID": "7cb3f5cb-b844-4022-88ed-201fff5703e8",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not buzzerLock",
      "fullTitle": "action->ENABLE should not allow when game state is not buzzerLock",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.false();",
      "isRoot": false,
      "uuid": "5a6eaf12-28a1-4494-93b3-2bed0a725cb7",
      "parentUUID": "7cb3f5cb-b844-4022-88ed-201fff5703e8",
      "skipped": false
    },
    {
      "title": "should change game state to ready",
      "fullTitle": "action->ENABLE should change game state to ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "6ff759c4-461c-4a73-8063-300e52482b05",
      "parentUUID": "7cb3f5cb-b844-4022-88ed-201fff5703e8",
      "skipped": false
    },
    {
      "title": "should return the pending winner",
      "fullTitle": "#pendingWinner should return the pending winner",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.pendingWinner.should.equal(<span class=\"hljs-string\">'testUser'</span>);",
      "isRoot": false,
      "uuid": "708cfa6c-08e6-4bcb-b841-c7c2f4968bca",
      "parentUUID": "20a86227-6a6d-49a5-a400-538ecc8ceeec",
      "skipped": false
    },
    {
      "title": "should not return the pending winner",
      "fullTitle": "#pendingWinner should not return the pending winner",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>should(s.pendingWinner).be.null();",
      "isRoot": false,
      "uuid": "502653ea-40ca-4172-8a67-d7006630d5c6",
      "parentUUID": "20a86227-6a6d-49a5-a400-538ecc8ceeec",
      "skipped": false
    },
    {
      "title": "should update session name",
      "fullTitle": "#updateSessionName(name) should update session name",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.updateSessionName(<span class=\"hljs-string\">'session2'</span>);<br>settings.sessionName.should.equal(<span class=\"hljs-string\">'session2'</span>);",
      "isRoot": false,
      "uuid": "4925c19f-9ebe-4060-aecb-85107342f952",
      "parentUUID": "6f7fc910-6f3c-4f4b-9659-6c829e133183",
      "skipped": false
    },
    {
      "title": "should update max contestants",
      "fullTitle": "#updateMaxContestants(maxContestants) should update max contestants",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "661980e3-8000-4dfa-ab4e-be599b9d0cc2",
      "parentUUID": "88d218fe-5fd8-49fb-896b-1ef925bb5968",
      "skipped": false
    },
    {
      "title": "should not allow below current connected amount",
      "fullTitle": "#updateMaxContestants(maxContestants) should not allow below current connected amount",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>s.addContestant(c1).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>s.addContestant(c2).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">1</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_CONTESTANTS_MUST_BE_GREATER_THAN_ALREADY_CONNECTED);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "e7d32ba4-9571-4313-bc07-f4a47c4fff4f",
      "parentUUID": "88d218fe-5fd8-49fb-896b-1ef925bb5968",
      "skipped": false
    },
    {
      "title": "should update team size",
      "fullTitle": "#updateTeamSize(teamSize) should update team size",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.teamSize.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "67cd132a-dc05-49c7-bda5-c80e4e39d6ee",
      "parentUUID": "59999254-48a5-4cea-838c-cc4fac5429ac",
      "skipped": false
    },
    {
      "title": "should not allow below current setting",
      "fullTitle": "#updateTeamSize(teamSize) should not allow below current setting",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.TEAM_SIZE_MUST_BE_GREATER_THAN_ALREADY_SET);",
      "isRoot": false,
      "uuid": "22fa9df2-423c-4442-b500-2739e0b3bf40",
      "parentUUID": "59999254-48a5-4cea-838c-cc4fac5429ac",
      "skipped": false
    },
    {
      "title": "should update max teams",
      "fullTitle": "#updateMaxTeams(maxTeams) should update max teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxTeams.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "a80ddc07-33be-4550-80ba-e79f5eafd9ba",
      "parentUUID": "a8d862e9-f139-4940-bb49-62baf94fd296",
      "skipped": false
    },
    {
      "title": "should add teams",
      "fullTitle": "#updateMaxTeams(maxTeams) should add teams",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">5</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "3773f4cd-6fcf-46c0-836f-7f507e047479",
      "parentUUID": "a8d862e9-f139-4940-bb49-62baf94fd296",
      "skipped": false
    },
    {
      "title": "should not allow below current setting",
      "fullTitle": "#updateMaxTeams(maxTeams) should not allow below current setting",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_MUST_BE_GREATER_THAN_ALREADY_SET);",
      "isRoot": false,
      "uuid": "6698e439-6838-4d9e-b161-02a914c4f58f",
      "parentUUID": "a8d862e9-f139-4940-bb49-62baf94fd296",
      "skipped": false
    },
    {
      "title": "should not allow if teams are PLAYER_CHOICE",
      "fullTitle": "#updateMaxTeams(maxTeams) should not allow if teams are PLAYER_CHOICE",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">6</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_CANNOT_BE_CHANGED_WHEN_PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "9be89a38-b146-4ce2-adc4-69679b4e12fa",
      "parentUUID": "a8d862e9-f139-4940-bb49-62baf94fd296",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hasTeams should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s._hasTeams.should.be.true();",
      "isRoot": false,
      "uuid": "733da1db-4557-41e6-8b87-b003d17324a4",
      "parentUUID": "744655f3-e177-4fe5-9987-394b7521918f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hasTeams should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.hasTeams.should.be.true();",
      "isRoot": false,
      "uuid": "d8b86a9e-4eac-410f-ba87-84f3e030af1f",
      "parentUUID": "744655f3-e177-4fe5-9987-394b7521918f",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamSize should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s._teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "b64f6bde-ec79-4af4-84b6-1f5648f4803c",
      "parentUUID": "ac4eb3c2-71fc-4566-9521-7fb012288120",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamSize should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamSize = <span class=\"hljs-number\">1</span>;<br>s.teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "0127a21d-14a3-45fd-ab53-334a7907043e",
      "parentUUID": "ac4eb3c2-71fc-4566-9521-7fb012288120",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxTeams should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s._maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "3a3ec3a6-df82-43f4-850d-b420e4e96c87",
      "parentUUID": "44c7659e-749a-4299-9577-6dacd0b40454",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxTeams should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-number\">1</span>;<br>s.maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "ae1ae326-aacd-4976-9d3d-adfb4fb02a7b",
      "parentUUID": "44c7659e-749a-4299-9577-6dacd0b40454",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeaderSelectionMethod should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s._teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "ff7214c8-080a-4c9e-b159-96e357cdfe8e",
      "parentUUID": "826371bf-a1fb-4801-8ce7-824b1737ef42",
      "skipped": false
    },
    {
      "title": "should throw on set when constant value is invalid",
      "fullTitle": "#teamLeaderSelectionMethod should throw on set when constant value is invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamLeaderSelectionMethod.all.slice().sort(<br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, b</span>) </span>{<br>            <span class=\"hljs-keyword\">return</span> a - b;<br>        }).pop();<br>    s.teamLeaderSelectionMethod = ++high;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "b45c5c41-dbde-430e-8e03-5ae5776ec45c",
      "parentUUID": "826371bf-a1fb-4801-8ce7-824b1737ef42",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeaderSelectionMethod should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s.teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "ebb3e128-e110-4f9d-9698-fc33885f0cd6",
      "parentUUID": "826371bf-a1fb-4801-8ce7-824b1737ef42",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameEdit should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br>s._teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
      "isRoot": false,
      "uuid": "4581dd94-35ca-4d06-abea-ec4a02b9c2bc",
      "parentUUID": "74a5b68d-6bb7-49f1-b796-df935f149fd8",
      "skipped": false
    },
    {
      "title": "should throw on set when constant value is invalid",
      "fullTitle": "#teamNameEdit should throw on set when constant value is invalid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamNameEdit.all.slice().sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a,<br>        b</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> a - b;<br>    }).pop();<br>    s.teamNameEdit = ++high;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "334d3369-fb1a-4d1e-826b-b2f45620ffb9",
      "parentUUID": "74a5b68d-6bb7-49f1-b796-df935f149fd8",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameEdit should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNameEdit = constants.teamNameEdit.ALLOW;<br>s.teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
      "isRoot": false,
      "uuid": "7aadf7d6-9793-49d8-b9db-d5c6a966f116",
      "parentUUID": "74a5b68d-6bb7-49f1-b796-df935f149fd8",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxContestants should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxContestants = <span class=\"hljs-number\">1</span>;<br>s._maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "33ebd2cb-12a0-400e-8ecf-ad38a290b327",
      "parentUUID": "ef104888-4c08-4e68-a251-7de8ed3a939c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxContestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxContestants = <span class=\"hljs-number\">1</span>;<br>s.maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "892ee5be-650f-4d67-bb59-943a32683edd",
      "parentUUID": "ef104888-4c08-4e68-a251-7de8ed3a939c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s._sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
      "isRoot": false,
      "uuid": "6f3c8c3b-7e6e-42a1-97c0-58e7663f8939",
      "parentUUID": "aea06817-cb9a-4844-a785-a64d0bccb98d",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s.sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
      "isRoot": false,
      "uuid": "99f087d0-aa83-402f-804c-f0eabe91628e",
      "parentUUID": "aea06817-cb9a-4844-a785-a64d0bccb98d",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNames should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s._teamNames.should.be.Array();<br>s._teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s._teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
      "isRoot": false,
      "uuid": "6b1a4b34-e7a3-403a-8b67-f0a248dceada",
      "parentUUID": "f5ba6b39-26e9-4034-972a-91e25f7b382a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNames should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s.teamNames.should.be.Array();<br>s.teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
      "isRoot": false,
      "uuid": "bebb093e-dd26-46ce-afb6-18ee9d51e8c2",
      "parentUUID": "f5ba6b39-26e9-4034-972a-91e25f7b382a",
      "skipped": false
    },
    {
      "title": "should throw when settings.maxTeams is less than 1",
      "fullTitle": "#create(teams, settings) should throw when settings.maxTeams is less than 1",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    teamFactory.create(tc, s);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "a0583ac2-b34c-4b21-8ff0-e8ab4350a41c",
      "parentUUID": "d60a24a9-9f32-4516-93fc-c28757e805a3",
      "skipped": false
    },
    {
      "title": "should create the correct amount of teams",
      "fullTitle": "#create(teams, settings) should create the correct amount of teams",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "5547904c-f13a-4fb8-9306-a71bd35a0fcd",
      "parentUUID": "d60a24a9-9f32-4516-93fc-c28757e805a3",
      "skipped": false
    },
    {
      "title": "should not fail with a large team size",
      "fullTitle": "#create(teams, settings) should not fail with a large team size",
      "timedOut": false,
      "duration": 72,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">500</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">500</span>);<br><span class=\"hljs-comment\">// ensure team names are unique</span><br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> i = names.indexOf(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> n === t.teamName;<br>    });<br>    i.should.equal(-<span class=\"hljs-number\">1</span>);<br>    names.push(t.teamName);<br>});",
      "isRoot": false,
      "uuid": "58a891f3-51df-499b-8f18-83443b328927",
      "parentUUID": "d60a24a9-9f32-4516-93fc-c28757e805a3",
      "skipped": false
    },
    {
      "title": "should use settings.teamNames first, before random selection",
      "fullTitle": "#create(teams, settings) should use settings.teamNames first, before random selection",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">10</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>, <span class=\"hljs-string\">'t3'</span>, <span class=\"hljs-string\">'t4'</span>, <span class=\"hljs-string\">'t5'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);<br>tc.all[<span class=\"hljs-number\">2</span>].teamName.should.equal(<span class=\"hljs-string\">'t3'</span>);<br>tc.all[<span class=\"hljs-number\">3</span>].teamName.should.equal(<span class=\"hljs-string\">'t4'</span>);<br>tc.all[<span class=\"hljs-number\">4</span>].teamName.should.equal(<span class=\"hljs-string\">'t5'</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">5</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">6</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">7</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">8</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">9</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "529b1b41-8c9a-41be-95ad-c6a3955c1eb9",
      "parentUUID": "d60a24a9-9f32-4516-93fc-c28757e805a3",
      "skipped": false
    },
    {
      "title": "should only create a single team when using unlimited teams",
      "fullTitle": "#create(teams, settings) should only create a single team when using unlimited teams",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "5e923545-5eea-48c1-86a8-aa5d5fb78a44",
      "parentUUID": "d60a24a9-9f32-4516-93fc-c28757e805a3",
      "skipped": false
    },
    {
      "title": "should add a team",
      "fullTitle": "#add(teams, settings) should add a team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>teamFactory.add(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "63ad80c0-4d37-4f22-b7fa-163a588b7122",
      "parentUUID": "b593c2b1-9684-458d-b9df-72e6624c8c70",
      "skipped": false
    },
    {
      "title": "should reuse team names specified in settings",
      "fullTitle": "#add(teams, settings) should reuse team names specified in settings",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>teamFactory.add(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);",
      "isRoot": false,
      "uuid": "d512e974-f065-410d-be7e-59959c4e781a",
      "parentUUID": "b593c2b1-9684-458d-b9df-72e6624c8c70",
      "skipped": false
    },
    {
      "title": "should factor in team names which are already in use",
      "fullTitle": "#add(teams, settings) should factor in team names which are already in use",
      "timedOut": false,
      "duration": 271,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    teamFactory.add(tc, s);<br>}<br>tc.all.length.should.equal(<span class=\"hljs-number\">1001</span>);<br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    names.push(t.teamName);<br>});<br><span class=\"hljs-keyword\">var</span> uniqueNames = unique(names);<br>names.length.should.equal(uniqueNames.length);",
      "isRoot": false,
      "uuid": "d73f9123-038f-42f6-a566-3fad4e506ec0",
      "parentUUID": "b593c2b1-9684-458d-b9df-72e6624c8c70",
      "skipped": false
    },
    {
      "title": "should return true when team with teamName does exist",
      "fullTitle": "#contains(teamName) should return true when team with teamName does exist",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(t.teamName).should.be.true();",
      "isRoot": false,
      "uuid": "2808da7c-9a13-4711-b1db-024a90a0e61b",
      "parentUUID": "0132839b-fa77-4cdf-9e4d-52e27e5bbf84",
      "skipped": false
    },
    {
      "title": "should return false when no team with teamName does exist",
      "fullTitle": "#contains(teamName) should return false when no team with teamName does exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(<span class=\"hljs-string\">'other team name'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "d7eb645e-e200-4fd6-a8cc-dfe56a5facd5",
      "parentUUID": "0132839b-fa77-4cdf-9e4d-52e27e5bbf84",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "cefe6092-7469-4bbd-a755-a4c74fdbd6e8",
      "parentUUID": "6e5563e2-bf05-436a-89dc-62493d312e2a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "25298708-e322-4438-88d4-81ae9a9e399e",
      "parentUUID": "6e5563e2-bf05-436a-89dc-62493d312e2a",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all.pop();<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "1b172521-f292-403a-b7e6-8a928864d2f6",
      "parentUUID": "6e5563e2-bf05-436a-89dc-62493d312e2a",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#length should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.length = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "46b857b4-7ece-485c-a65d-37d8655c4077",
      "parentUUID": "738b01be-89cc-4f3a-a976-69f8783eefcf",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#length should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "ca646581-d9bf-4e3a-b3c6-9dee0b3aba81",
      "parentUUID": "738b01be-89cc-4f3a-a976-69f8783eefcf",
      "skipped": false
    },
    {
      "title": "should add the given team",
      "fullTitle": "#add(team) should add the given team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "a58864ed-2664-40b8-be97-7dad7b01cfac",
      "parentUUID": "a8b9ad67-cee7-43d7-b9a7-1addf84ffbde",
      "skipped": false
    },
    {
      "title": "should error if team with teamName already exists",
      "fullTitle": "#add(team) should error if team with teamName already exists",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.add(t);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "03830877-d058-46a9-840a-20a1757d9b79",
      "parentUUID": "a8b9ad67-cee7-43d7-b9a7-1addf84ffbde",
      "skipped": false
    },
    {
      "title": "should remove the existing team",
      "fullTitle": "#remove(team) should remove the existing team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "83ae4f79-439b-4bf1-979d-3e15c172f7f0",
      "parentUUID": "1c1a6878-0411-40cd-a52e-73b9e1c94ea1",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing team",
      "fullTitle": "#remove(team) should not remove the non-existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t1).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "7439be5a-8b3c-41cb-81e9-fb27e97594ab",
      "parentUUID": "1c1a6878-0411-40cd-a52e-73b9e1c94ea1",
      "skipped": false
    },
    {
      "title": "should remove the existing team",
      "fullTitle": "#removeByTeamName(team) should remove the existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t.teamName).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "6963c6cb-e081-4f19-9a8a-62c164c69869",
      "parentUUID": "1f620ee4-1e80-485b-8835-dacb075e41a2",
      "skipped": false
    },
    {
      "title": "should ignore team name case",
      "fullTitle": "#removeByTeamName(team) should ignore team name case",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'abc1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(<span class=\"hljs-string\">'ABC1'</span>).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "83442fd9-d351-474c-8f54-f9e60e8dd964",
      "parentUUID": "1f620ee4-1e80-485b-8835-dacb075e41a2",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing team",
      "fullTitle": "#removeByTeamName(team) should not remove the non-existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t1.teamName).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "37eb48b1-5a0c-47dc-a677-11ed637ed610",
      "parentUUID": "1f620ee4-1e80-485b-8835-dacb075e41a2",
      "skipped": false
    },
    {
      "title": "should give contestant an id",
      "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) should give contestant an id",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Username'</span>;<br>should(c.id).be.null();<br>tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>should(c.id).not.be.null();",
      "isRoot": false,
      "uuid": "6e954780-08ff-41cf-adf4-e51441efb8e8",
      "parentUUID": "692e21ba-2218-4dcb-ab0f-a9950260df5f",
      "skipped": false
    },
    {
      "title": "should return a valid response",
      "fullTitle": "when teams are full should return a valid response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);",
      "isRoot": false,
      "uuid": "9f8ebca6-3db5-4e6a-ac78-2e06863e80ca",
      "parentUUID": "45633e3e-1b1c-447b-a242-98d0ef8576dd",
      "skipped": false
    },
    {
      "title": "should inquire for team leader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should inquire for team leader",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> inquired = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    inquired = <span class=\"hljs-literal\">true</span>;<br>});<br>r.should.be.true();<br>inquired.should.be.true();",
      "isRoot": false,
      "uuid": "87927dd4-6932-4342-ba32-ae11a8624c62",
      "parentUUID": "2ca9ca67-710a-473e-8312-78fe2c388629",
      "skipped": false
    },
    {
      "title": "should not inquire for team leader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should not inquire for team leader",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>tc.all[<span class=\"hljs-number\">0</span>].teamLeader = c1;<br><span class=\"hljs-keyword\">var</span> didNotInquire = <span class=\"hljs-literal\">true</span>;<br>tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    didNotInquire = <span class=\"hljs-literal\">false</span>;<br>});<br>didNotInquire.should.be.true();<br>t.teamLeader.should.equal(c1);",
      "isRoot": false,
      "uuid": "d3c1a7de-60ee-45e6-b8ba-d6a2bb15fadf",
      "parentUUID": "2ca9ca67-710a-473e-8312-78fe2c388629",
      "skipped": false
    },
    {
      "title": "should not add contestant as teamLeader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should not add contestant as teamLeader",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should(t.teamLeader).be.null();",
      "isRoot": false,
      "uuid": "5c42df8b-3a96-45bc-a5ea-099d2c7f5c5b",
      "parentUUID": "2ca9ca67-710a-473e-8312-78fe2c388629",
      "skipped": false
    },
    {
      "title": "should not inquire for team leader",
      "fullTitle": "when teamLeader selection is RANDOM should not inquire for team leader",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> notInquired = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    notInquired = <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>r.should.be.true();<br>notInquired.should.be.true();",
      "isRoot": false,
      "uuid": "012680b3-0044-48bb-9d85-c9861e313e0f",
      "parentUUID": "b0f8e730-c55c-4f87-9031-b10c76b8ff03",
      "skipped": false
    },
    {
      "title": "should automatically add team leader when team is filled",
      "fullTitle": "when teamLeader selection is RANDOM should automatically add team leader when team is filled",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).not.be.null();<br>});",
      "isRoot": false,
      "uuid": "691ac85e-2d0d-432b-aaaa-97a7919c6134",
      "parentUUID": "b0f8e730-c55c-4f87-9031-b10c76b8ff03",
      "skipped": false
    },
    {
      "title": "should not automatically add team leader when team is not filled",
      "fullTitle": "when teamLeader selection is RANDOM should not automatically add team leader when team is not filled",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).be.null();<br>});",
      "isRoot": false,
      "uuid": "e4a810a5-eab8-479a-bc00-976d2d15ccf1",
      "parentUUID": "b0f8e730-c55c-4f87-9031-b10c76b8ff03",
      "skipped": false
    },
    {
      "title": "should add team when teams are full",
      "fullTitle": "when set to use unlimited teams should add team when teams are full",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "12fb1422-5a98-469a-bab8-023a9bec8049",
      "parentUUID": "1f956e8d-78dc-4841-9f1d-70a6e32216d1",
      "skipped": false
    },
    {
      "title": "should throw when no team name is given",
      "fullTitle": "when team selection method is PLAYER_CHOICE should throw when no team name is given",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>}).should.throw();",
      "isRoot": false,
      "uuid": "6bde9add-caa6-41a7-a552-2af420a43a71",
      "parentUUID": "320b386b-f14b-429f-a514-e8eac2b205b9",
      "skipped": false
    },
    {
      "title": "should add contestant to correct team",
      "fullTitle": "when team selection method is PLAYER_CHOICE should add contestant to correct team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "3185c3b6-e23d-462e-affd-6bbaea4ef6d2",
      "parentUUID": "320b386b-f14b-429f-a514-e8eac2b205b9",
      "skipped": false
    },
    {
      "title": "should not add to full team",
      "fullTitle": "when team selection method is PLAYER_CHOICE should not add to full team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "727094ef-c3a3-4fd1-827d-66f3014e0677",
      "parentUUID": "320b386b-f14b-429f-a514-e8eac2b205b9",
      "skipped": false
    },
    {
      "title": "should get team of contestant",
      "fullTitle": "getByContestant(contestant) should get team of contestant",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">5</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>    r.should.be.true();<br>});<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">4</span>]);<br>t.should.not.be.null();<br>t.contestants.getById(cc[<span class=\"hljs-number\">4</span>].id).should.equal(cc[<span class=\"hljs-number\">4</span>]);",
      "isRoot": false,
      "uuid": "4c2b1c72-9ddb-4229-9a91-b5d93ba06670",
      "parentUUID": "ed1b9b19-0d44-4d76-b72d-7339403440a4",
      "skipped": false
    },
    {
      "title": "should not get team of contestant",
      "fullTitle": "getByContestant(contestant) should not get team of contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">1</span>);<br>cc[<span class=\"hljs-number\">0</span>].id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">0</span>]);<br>should(t).be.null();",
      "isRoot": false,
      "uuid": "f3f369b5-b4f8-4e40-bb75-06eeb6018138",
      "parentUUID": "ed1b9b19-0d44-4d76-b72d-7339403440a4",
      "skipped": false
    },
    {
      "title": "should get team when team with name exists",
      "fullTitle": "getByTeamName(temName) should get team when team with name exists",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t1 = tc.all[<span class=\"hljs-number\">0</span>];<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(t1.teamName);<br>t.should.equal(t1);",
      "isRoot": false,
      "uuid": "c8371d9b-ad94-4316-975c-89e0ac3a3911",
      "parentUUID": "caf3299d-8ae7-4835-9229-a7a057e0aa8f",
      "skipped": false
    },
    {
      "title": "should not get team when team with name does not exist",
      "fullTitle": "getByTeamName(temName) should not get team when team with name does not exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(<span class=\"hljs-string\">'Not a team name that exists'</span>);<br>should(t).be.null();",
      "isRoot": false,
      "uuid": "00cec478-f38b-49e0-bf69-6192fada5a7c",
      "parentUUID": "caf3299d-8ae7-4835-9229-a7a057e0aa8f",
      "skipped": false
    },
    {
      "title": "should not return full teams",
      "fullTitle": "getAvailable(settings) should not return full teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">2</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "cfb25354-0566-4c6b-86ae-3a6201bdd0da",
      "parentUUID": "d6d1dcc1-bf46-43a5-b966-6d939f0d458e",
      "skipped": false
    },
    {
      "title": "should return teams with space",
      "fullTitle": "getAvailable(settings) should return teams with space",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "69dfbecb-d583-456b-9568-54723f3b89bc",
      "parentUUID": "d6d1dcc1-bf46-43a5-b966-6d939f0d458e",
      "skipped": false
    },
    {
      "title": "should return teams with unlimited space",
      "fullTitle": "getAvailable(settings) should return teams with unlimited space",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = constants.UNLIMITED;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "5ebd9275-e027-4630-b093-eb0e87c46d23",
      "parentUUID": "d6d1dcc1-bf46-43a5-b966-6d939f0d458e",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t._teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
      "isRoot": false,
      "uuid": "b2f1e2b0-725b-447e-940e-03ac96494b4e",
      "parentUUID": "b7d11874-9cd6-455e-a38e-76ccf4439112",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t._teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t.teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
      "isRoot": false,
      "uuid": "5434fa62-5793-4663-b83a-70ce6947d91d",
      "parentUUID": "b7d11874-9cd6-455e-a38e-76ccf4439112",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeader should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t.teamLeader = c;<br>t._teamLeader.should.equal(c);",
      "isRoot": false,
      "uuid": "38f58093-bae6-4842-94c0-ecd264eb359f",
      "parentUUID": "0154e657-bd8f-4787-9cf6-fd4565142a9e",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeader should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t._teamLeader = c;<br>t.teamLeader.should.equal(c);",
      "isRoot": false,
      "uuid": "7a172385-2151-4285-a56d-01d069055474",
      "parentUUID": "0154e657-bd8f-4787-9cf6-fd4565142a9e",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#score should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "97a106b3-e08c-44ae-ae5b-3e34ea179529",
      "parentUUID": "98ad86d0-8445-49a0-a2aa-9d5137723eec",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#score should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br>p._score = <span class=\"hljs-number\">5</span>;<br>p.score.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "4a403d68-bed7-40c4-a65b-960cf5dec92b",
      "parentUUID": "98ad86d0-8445-49a0-a2aa-9d5137723eec",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#contestants should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "a40c6bf1-f5f7-47e8-96fa-65f46dbc6419",
      "parentUUID": "b1986d2c-343d-4db2-9bae-14d2cdaaead1",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = p.contestants;<br>c.should.be.instanceOf(Participants);",
      "isRoot": false,
      "uuid": "7e031225-7fed-48dc-9bc5-6f293f1abc03",
      "parentUUID": "b1986d2c-343d-4db2-9bae-14d2cdaaead1",
      "skipped": false
    },
    {
      "title": "should update the teams score",
      "fullTitle": "when a contestant scores should update the teams score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br>c1.incrementScore();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.incrementScore();<br>c2.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "668d8524-1ef8-40bf-9805-664964bc2061",
      "parentUUID": "1e4f20f0-2c0c-4e57-9814-6a0376715fa5",
      "skipped": false
    },
    {
      "title": "should allow it when no team leader is set",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should allow it when no team leader is set",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.id = <span class=\"hljs-string\">'c1'</span>;<br>t.contestants.add(c);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);",
      "isRoot": false,
      "uuid": "109f8205-75a8-4a8c-a521-b046088294ca",
      "parentUUID": "05b8ebd2-89cb-4003-ad33-f36114c5c464",
      "skipped": false
    },
    {
      "title": "should not allow it when a team leader is set",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should not allow it when a team leader is set",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_FULFILLED);",
      "isRoot": false,
      "uuid": "40313b21-1e8b-4f59-89fe-b97a8ba1ae3f",
      "parentUUID": "05b8ebd2-89cb-4003-ad33-f36114c5c464",
      "skipped": false
    },
    {
      "title": "should not allow it when a contestant is not in team",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should not allow it when a contestant is not in team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_NOT_CONTESTANT);",
      "isRoot": false,
      "uuid": "19e914c4-ead2-4383-897e-f0db9019a9eb",
      "parentUUID": "05b8ebd2-89cb-4003-ad33-f36114c5c464",
      "skipped": false
    },
    {
      "title": "should allow it when a team leader is set and host override is flagged",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should allow it when a team leader is set and host override is flagged",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">true</span>);<br>r.should.be.true();<br>should.not.exist(m);",
      "isRoot": false,
      "uuid": "2697ddeb-de42-4b59-bcf5-09f8ff1d1f3c",
      "parentUUID": "05b8ebd2-89cb-4003-ad33-f36114c5c464",
      "skipped": false
    },
    {
      "title": "should change name when request is valid",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should change name when request is valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "146ec89f-1e04-4f1a-9e84-ef97f37fee99",
      "parentUUID": "c183f725-0eaf-4ce7-adee-10ffbecdc985",
      "skipped": false
    },
    {
      "title": "should not change name when setting do not allow it",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should not change name when setting do not allow it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_SETTINGS_NOT_ALLOW);<br>r.should.be.false();",
      "isRoot": false,
      "uuid": "7d5b6e76-337e-4f9c-b4e5-f0e36121e051",
      "parentUUID": "c183f725-0eaf-4ce7-adee-10ffbecdc985",
      "skipped": false
    },
    {
      "title": "should not change name when name contains profanity",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should not change name when name contains profanity",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_CONTAINS_PROFANITY);<br>r.should.be.false();",
      "isRoot": false,
      "uuid": "5aae4d15-b93b-4514-96cb-068fbc0cd1a2",
      "parentUUID": "c183f725-0eaf-4ce7-adee-10ffbecdc985",
      "skipped": false
    },
    {
      "title": "should change name when request is valid",
      "fullTitle": "when host override should change name when request is valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "49cfda8e-d636-4cb4-9881-5124425b743f",
      "parentUUID": "4be6b10c-b5a6-43a8-8bc5-cabf63a57bad",
      "skipped": false
    },
    {
      "title": "should change name when setting do not allow it",
      "fullTitle": "when host override should change name when setting do not allow it",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "436ef07a-4c48-457e-8ac2-5cd1524e34b0",
      "parentUUID": "4be6b10c-b5a6-43a8-8bc5-cabf63a57bad",
      "skipped": false
    },
    {
      "title": "should change name when name contains profanity",
      "fullTitle": "when host override should change name when name contains profanity",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "93f2c16a-38ec-4bc1-b902-2a2e312ea5c3",
      "parentUUID": "4be6b10c-b5a6-43a8-8bc5-cabf63a57bad",
      "skipped": false
    },
    {
      "title": "should get contestant when contest with username exists",
      "fullTitle": "getContestantByUsername(username) should get contestant when contest with username exists",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(c1.username);<br>c.should.equal(c1);<br>c = t.getContestantByUsername(<span class=\"hljs-string\">'c1abc'</span>);<br>c.should.equal(c1);",
      "isRoot": false,
      "uuid": "9ec3122f-f1c3-450e-94d9-b9e5744842d0",
      "parentUUID": "73e1103f-b97a-45dd-97a1-2bb516e7593c",
      "skipped": false
    },
    {
      "title": "should not get contestant when contest with username does not exist",
      "fullTitle": "getContestantByUsername(username) should not get contestant when contest with username does not exist",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(<span class=\"hljs-string\">'John Doe'</span>);<br>should(c).be.null();",
      "isRoot": false,
      "uuid": "039fb203-f828-4fa5-84fa-fac6befe1e6f",
      "parentUUID": "73e1103f-b97a-45dd-97a1-2bb516e7593c",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}