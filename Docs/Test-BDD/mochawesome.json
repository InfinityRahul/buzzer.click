{
  "reportTitle": "buzzer.click",
  "stats": {
    "suites": 187,
    "tests": 340,
    "passes": 340,
    "pending": 0,
    "failures": 0,
    "start": "2016-09-30T02:52:50.983Z",
    "end": "2016-09-30T02:52:52.303Z",
    "duration": 1320,
    "testsRegistered": 340,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "AddContestantResponse",
        "suites": [
          {
            "title": "#wasSuccessful",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "AddContestantResponse #wasSuccessful should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.wasSuccessful = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "c529be56-408d-445b-b2e8-083c4afdfa80",
                "parentUUID": "0a8e7dc5-2a8a-4d1c-94cc-d529b6b4ff0d",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #wasSuccessful should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>r.wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "37277ce8-9fc4-4b22-bdaa-e197ca332a13",
                "parentUUID": "0a8e7dc5-2a8a-4d1c-94cc-d529b6b4ff0d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/AddContestantResponseTests.js",
            "uuid": "0a8e7dc5-2a8a-4d1c-94cc-d529b6b4ff0d",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/AddContestantResponseTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "AddContestantResponse #wasSuccessful should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.wasSuccessful = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "c529be56-408d-445b-b2e8-083c4afdfa80",
                "parentUUID": "0a8e7dc5-2a8a-4d1c-94cc-d529b6b4ff0d",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #wasSuccessful should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>r.wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "37277ce8-9fc4-4b22-bdaa-e197ca332a13",
                "parentUUID": "0a8e7dc5-2a8a-4d1c-94cc-d529b6b4ff0d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#enquireForTeamLeaderPosition",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "AddContestantResponse #enquireForTeamLeaderPosition should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r._enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "767e372c-9a76-408c-9919-755f2773303a",
                "parentUUID": "401b1087-0135-4ebf-bfb1-bce71aa3599f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #enquireForTeamLeaderPosition should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r.enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "7d6f7c94-bbbf-4794-881c-48a08b09f809",
                "parentUUID": "401b1087-0135-4ebf-bfb1-bce71aa3599f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/AddContestantResponseTests.js",
            "uuid": "401b1087-0135-4ebf-bfb1-bce71aa3599f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/AddContestantResponseTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "AddContestantResponse #enquireForTeamLeaderPosition should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r._enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "767e372c-9a76-408c-9919-755f2773303a",
                "parentUUID": "401b1087-0135-4ebf-bfb1-bce71aa3599f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #enquireForTeamLeaderPosition should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r.enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "7d6f7c94-bbbf-4794-881c-48a08b09f809",
                "parentUUID": "401b1087-0135-4ebf-bfb1-bce71aa3599f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#errorMessage",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "AddContestantResponse #errorMessage should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.errorMessage = <span class=\"hljs-string\">'test'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "28cab71d-bad0-4098-b447-ddcee6b914c5",
                "parentUUID": "081d9403-cdb7-4cf5-8fdc-662d50d202af",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #errorMessage should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._errorMessage = <span class=\"hljs-string\">'errorMessage_test'</span>;<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'errorMessage_test'</span>);",
                "isRoot": false,
                "uuid": "c263c407-8fa4-46c8-a22a-9cb2f505a7c0",
                "parentUUID": "081d9403-cdb7-4cf5-8fdc-662d50d202af",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/AddContestantResponseTests.js",
            "uuid": "081d9403-cdb7-4cf5-8fdc-662d50d202af",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/AddContestantResponseTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "AddContestantResponse #errorMessage should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.errorMessage = <span class=\"hljs-string\">'test'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "28cab71d-bad0-4098-b447-ddcee6b914c5",
                "parentUUID": "081d9403-cdb7-4cf5-8fdc-662d50d202af",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #errorMessage should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._errorMessage = <span class=\"hljs-string\">'errorMessage_test'</span>;<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'errorMessage_test'</span>);",
                "isRoot": false,
                "uuid": "c263c407-8fa4-46c8-a22a-9cb2f505a7c0",
                "parentUUID": "081d9403-cdb7-4cf5-8fdc-662d50d202af",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#setNotSuccessful(errorMessage)",
            "suites": [],
            "tests": [
              {
                "title": "should change the state to not successful",
                "fullTitle": "AddContestantResponse #setNotSuccessful(errorMessage) should change the state to not successful",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.setNotSuccessful(<span class=\"hljs-string\">'Test error message'</span>);<br>r.wasSuccessful.should.be.false();<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'Test error message'</span>);",
                "isRoot": false,
                "uuid": "e2f315ad-3a1b-466f-b107-386035f4b703",
                "parentUUID": "d21e99ca-cce3-48dc-be17-5904aeaa69fb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/AddContestantResponseTests.js",
            "uuid": "d21e99ca-cce3-48dc-be17-5904aeaa69fb",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/AddContestantResponseTests.js",
            "passes": [
              {
                "title": "should change the state to not successful",
                "fullTitle": "AddContestantResponse #setNotSuccessful(errorMessage) should change the state to not successful",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.setNotSuccessful(<span class=\"hljs-string\">'Test error message'</span>);<br>r.wasSuccessful.should.be.false();<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'Test error message'</span>);",
                "isRoot": false,
                "uuid": "e2f315ad-3a1b-466f-b107-386035f4b703",
                "parentUUID": "d21e99ca-cce3-48dc-be17-5904aeaa69fb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/AddContestantResponseTests.js",
        "uuid": "8c6169af-1d86-4474-b4bb-fbaeec38b81c",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/AddContestantResponseTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Contestant",
        "suites": [
          {
            "title": "#username",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Contestant #username should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'username_test'</span>;<br>c._username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
                "isRoot": false,
                "uuid": "0697178a-8904-47a3-bba8-35caf2d3890f",
                "parentUUID": "14578bb9-8e96-45b2-9e49-6f3f63bc6b23",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Contestant #username should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._username = <span class=\"hljs-string\">'username_test'</span>;<br>c.username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
                "isRoot": false,
                "uuid": "187e97ed-b6c2-4035-8b65-4cfd90e5a516",
                "parentUUID": "14578bb9-8e96-45b2-9e49-6f3f63bc6b23",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ContestantTests.js",
            "uuid": "14578bb9-8e96-45b2-9e49-6f3f63bc6b23",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ContestantTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Contestant #username should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'username_test'</span>;<br>c._username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
                "isRoot": false,
                "uuid": "0697178a-8904-47a3-bba8-35caf2d3890f",
                "parentUUID": "14578bb9-8e96-45b2-9e49-6f3f63bc6b23",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Contestant #username should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._username = <span class=\"hljs-string\">'username_test'</span>;<br>c.username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
                "isRoot": false,
                "uuid": "187e97ed-b6c2-4035-8b65-4cfd90e5a516",
                "parentUUID": "14578bb9-8e96-45b2-9e49-6f3f63bc6b23",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#score",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Contestant #score should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    c.score = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "f0716573-3551-4866-900c-6ce77142581c",
                "parentUUID": "58995496-7a78-480b-9d0c-c5e4da0fad81",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Contestant #score should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._score = <span class=\"hljs-number\">1</span>;<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "49fc8cc3-6756-48ad-b409-fc4ea084049a",
                "parentUUID": "58995496-7a78-480b-9d0c-c5e4da0fad81",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ContestantTests.js",
            "uuid": "58995496-7a78-480b-9d0c-c5e4da0fad81",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ContestantTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Contestant #score should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    c.score = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "f0716573-3551-4866-900c-6ce77142581c",
                "parentUUID": "58995496-7a78-480b-9d0c-c5e4da0fad81",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Contestant #score should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._score = <span class=\"hljs-number\">1</span>;<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "49fc8cc3-6756-48ad-b409-fc4ea084049a",
                "parentUUID": "58995496-7a78-480b-9d0c-c5e4da0fad81",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#incrementScore()",
            "suites": [],
            "tests": [
              {
                "title": "should increment the contestant's score",
                "fullTitle": "Contestant #incrementScore() should increment the contestant's score",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.incrementScore();<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "36ca07c4-ec22-430f-bed1-1967df0c2b46",
                "parentUUID": "6fe54eec-3f1a-42db-8e20-544954b1ab92",
                "skipped": false
              },
              {
                "title": "should emit scoreUpdate event",
                "fullTitle": "Contestant #incrementScore() should emit scoreUpdate event",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.on(<span class=\"hljs-string\">'scoreUpdate'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>});<br>c.incrementScore();",
                "isRoot": false,
                "uuid": "6374c11e-8a0d-4db8-a849-e223993cac67",
                "parentUUID": "6fe54eec-3f1a-42db-8e20-544954b1ab92",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ContestantTests.js",
            "uuid": "6fe54eec-3f1a-42db-8e20-544954b1ab92",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ContestantTests.js",
            "passes": [
              {
                "title": "should increment the contestant's score",
                "fullTitle": "Contestant #incrementScore() should increment the contestant's score",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.incrementScore();<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "36ca07c4-ec22-430f-bed1-1967df0c2b46",
                "parentUUID": "6fe54eec-3f1a-42db-8e20-544954b1ab92",
                "skipped": false
              },
              {
                "title": "should emit scoreUpdate event",
                "fullTitle": "Contestant #incrementScore() should emit scoreUpdate event",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.on(<span class=\"hljs-string\">'scoreUpdate'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>});<br>c.incrementScore();",
                "isRoot": false,
                "uuid": "6374c11e-8a0d-4db8-a849-e223993cac67",
                "parentUUID": "6fe54eec-3f1a-42db-8e20-544954b1ab92",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/ContestantTests.js",
        "uuid": "afc7141c-ed8b-4523-b4fb-cbc449d81d00",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ContestantTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "IdentifierUtility",
        "suites": [
          {
            "title": "#generateSessionId()",
            "suites": [],
            "tests": [
              {
                "title": "should return a non-null non-empty key",
                "fullTitle": "IdentifierUtility #generateSessionId() should return a non-null non-empty key",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateSessionId().should.not.be.equal(<span class=\"hljs-string\">''</span>).and.not.be.equal(<span class=\"hljs-literal\">null</span>);",
                "isRoot": false,
                "uuid": "cc4f801b-d876-4d91-ab5d-389029a789ad",
                "parentUUID": "158ae8e1-8bd6-4346-993b-e5eac0258d80",
                "skipped": false
              },
              {
                "title": "should return a id of the correct length",
                "fullTitle": "IdentifierUtility #generateSessionId() should return a id of the correct length",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateSessionId()<br>    .length.should.be.Number().and.equal(idUtility.keyLength);",
                "isRoot": false,
                "uuid": "f5ec1fb2-794d-4b90-b25a-6f2652ccfffa",
                "parentUUID": "158ae8e1-8bd6-4346-993b-e5eac0258d80",
                "skipped": false
              },
              {
                "title": "should record id so it cannot be reused.",
                "fullTitle": "IdentifierUtility #generateSessionId() should record id so it cannot be reused.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> id = idUtility.generateSessionId();<br>idUtility._sessionKeysInUse.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">cachedId</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> cachedId === id;<br>}).should.equal(id);",
                "isRoot": false,
                "uuid": "7c399b79-ab81-493e-a3d5-f0054115b3c9",
                "parentUUID": "158ae8e1-8bd6-4346-993b-e5eac0258d80",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/IdentifierUtilityTests.js",
            "uuid": "158ae8e1-8bd6-4346-993b-e5eac0258d80",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/IdentifierUtilityTests.js",
            "passes": [
              {
                "title": "should return a non-null non-empty key",
                "fullTitle": "IdentifierUtility #generateSessionId() should return a non-null non-empty key",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateSessionId().should.not.be.equal(<span class=\"hljs-string\">''</span>).and.not.be.equal(<span class=\"hljs-literal\">null</span>);",
                "isRoot": false,
                "uuid": "cc4f801b-d876-4d91-ab5d-389029a789ad",
                "parentUUID": "158ae8e1-8bd6-4346-993b-e5eac0258d80",
                "skipped": false
              },
              {
                "title": "should return a id of the correct length",
                "fullTitle": "IdentifierUtility #generateSessionId() should return a id of the correct length",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateSessionId()<br>    .length.should.be.Number().and.equal(idUtility.keyLength);",
                "isRoot": false,
                "uuid": "f5ec1fb2-794d-4b90-b25a-6f2652ccfffa",
                "parentUUID": "158ae8e1-8bd6-4346-993b-e5eac0258d80",
                "skipped": false
              },
              {
                "title": "should record id so it cannot be reused.",
                "fullTitle": "IdentifierUtility #generateSessionId() should record id so it cannot be reused.",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> id = idUtility.generateSessionId();<br>idUtility._sessionKeysInUse.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">cachedId</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> cachedId === id;<br>}).should.equal(id);",
                "isRoot": false,
                "uuid": "7c399b79-ab81-493e-a3d5-f0054115b3c9",
                "parentUUID": "158ae8e1-8bd6-4346-993b-e5eac0258d80",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "#generateParticipantId()",
            "suites": [],
            "tests": [
              {
                "title": "should return a UUID",
                "fullTitle": "IdentifierUtility #generateParticipantId() should return a UUID",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateParticipantId()<br>    .should.match(<span class=\"hljs-regexp\">/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i</span>);",
                "isRoot": false,
                "uuid": "70e3a65e-44cc-493f-9150-07013a7ec375",
                "parentUUID": "b06f902c-9f8a-4ca8-8cc2-28af3b520901",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/IdentifierUtilityTests.js",
            "uuid": "b06f902c-9f8a-4ca8-8cc2-28af3b520901",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/IdentifierUtilityTests.js",
            "passes": [
              {
                "title": "should return a UUID",
                "fullTitle": "IdentifierUtility #generateParticipantId() should return a UUID",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateParticipantId()<br>    .should.match(<span class=\"hljs-regexp\">/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i</span>);",
                "isRoot": false,
                "uuid": "70e3a65e-44cc-493f-9150-07013a7ec375",
                "parentUUID": "b06f902c-9f8a-4ca8-8cc2-28af3b520901",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#registerSessionIdsInUse(ids)",
            "suites": [],
            "tests": [
              {
                "title": "should store the ids to stop reuse",
                "fullTitle": "IdentifierUtility #registerSessionIdsInUse(ids) should store the ids to stop reuse",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.length.should.be.aboveOrEqual(<span class=\"hljs-number\">2</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "33d6ac43-bc65-4d6a-af5d-8e3502e1b237",
                "parentUUID": "4defc731-7bb1-40e7-a285-705beb772381",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/IdentifierUtilityTests.js",
            "uuid": "4defc731-7bb1-40e7-a285-705beb772381",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/IdentifierUtilityTests.js",
            "passes": [
              {
                "title": "should store the ids to stop reuse",
                "fullTitle": "IdentifierUtility #registerSessionIdsInUse(ids) should store the ids to stop reuse",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.length.should.be.aboveOrEqual(<span class=\"hljs-number\">2</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "33d6ac43-bc65-4d6a-af5d-8e3502e1b237",
                "parentUUID": "4defc731-7bb1-40e7-a285-705beb772381",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#releaseSessionId(id)",
            "suites": [],
            "tests": [
              {
                "title": "should return a UUID",
                "fullTitle": "IdentifierUtility #releaseSessionId(id) should return a UUID",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility.releaseSessionId(<span class=\"hljs-string\">'111AAA'</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.equal(-<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "99ed9b05-4652-43ee-bb26-8d10b815bae5",
                "parentUUID": "9a802584-3fef-47ff-ac18-4ce69c14fea8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/IdentifierUtilityTests.js",
            "uuid": "9a802584-3fef-47ff-ac18-4ce69c14fea8",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/IdentifierUtilityTests.js",
            "passes": [
              {
                "title": "should return a UUID",
                "fullTitle": "IdentifierUtility #releaseSessionId(id) should return a UUID",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility.releaseSessionId(<span class=\"hljs-string\">'111AAA'</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.equal(-<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "99ed9b05-4652-43ee-bb26-8d10b815bae5",
                "parentUUID": "9a802584-3fef-47ff-ac18-4ce69c14fea8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/IdentifierUtilityTests.js",
        "uuid": "9971c3f3-2240-423e-a345-9f36a4a0553f",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/IdentifierUtilityTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "BuzzerActionCommandMessage",
        "suites": [
          {
            "title": "#action",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #action should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.data._action.should.equal(constants.buzzerActionCommands.RESET);",
                "isRoot": false,
                "uuid": "2867a433-1e8c-4f97-8e28-01bfaf5b2162",
                "parentUUID": "a7a3ef90-05aa-42d3-95cf-4dd3e8cdecfe",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #action should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._action = constants.buzzerActionCommands.RESET;<br>m.action.should.equal(constants.buzzerActionCommands.RESET);",
                "isRoot": false,
                "uuid": "0e704323-a7d2-4018-b35d-2431b198ba50",
                "parentUUID": "a7a3ef90-05aa-42d3-95cf-4dd3e8cdecfe",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "uuid": "a7a3ef90-05aa-42d3-95cf-4dd3e8cdecfe",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #action should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.data._action.should.equal(constants.buzzerActionCommands.RESET);",
                "isRoot": false,
                "uuid": "2867a433-1e8c-4f97-8e28-01bfaf5b2162",
                "parentUUID": "a7a3ef90-05aa-42d3-95cf-4dd3e8cdecfe",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #action should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._action = constants.buzzerActionCommands.RESET;<br>m.action.should.equal(constants.buzzerActionCommands.RESET);",
                "isRoot": false,
                "uuid": "0e704323-a7d2-4018-b35d-2431b198ba50",
                "parentUUID": "a7a3ef90-05aa-42d3-95cf-4dd3e8cdecfe",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "d4b4d00a-3899-4765-aafc-9c9ff20dc0cd",
                "parentUUID": "4471cf59-bb1a-4d0f-95d8-e20d152c6adc",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "66af263d-9694-4505-9ab8-0ffb6880c1ab",
                "parentUUID": "4471cf59-bb1a-4d0f-95d8-e20d152c6adc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "uuid": "4471cf59-bb1a-4d0f-95d8-e20d152c6adc",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "d4b4d00a-3899-4765-aafc-9c9ff20dc0cd",
                "parentUUID": "4471cf59-bb1a-4d0f-95d8-e20d152c6adc",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "66af263d-9694-4505-9ab8-0ffb6880c1ab",
                "parentUUID": "4471cf59-bb1a-4d0f-95d8-e20d152c6adc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #hostId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "ac9c0b40-7273-42de-b113-f7a835dd52d3",
                "parentUUID": "d2ee4ee3-3310-4052-a4a0-d4a128f62922",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "abe6f0c6-177c-4c4b-85a0-271ccb67c168",
                "parentUUID": "d2ee4ee3-3310-4052-a4a0-d4a128f62922",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "uuid": "d2ee4ee3-3310-4052-a4a0-d4a128f62922",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #hostId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "ac9c0b40-7273-42de-b113-f7a835dd52d3",
                "parentUUID": "d2ee4ee3-3310-4052-a4a0-d4a128f62922",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "abe6f0c6-177c-4c4b-85a0-271ccb67c168",
                "parentUUID": "d2ee4ee3-3310-4052-a4a0-d4a128f62922",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "BuzzerActionCommandMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'yyy123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "0083eca6-50fa-420e-8cb6-160e4d3939f5",
                "parentUUID": "26a9982d-72f6-4cf8-98bd-7862deef5490",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "BuzzerActionCommandMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = <span class=\"hljs-number\">99</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "82cafcd2-8604-43e2-8bca-f2bc82790638",
                "parentUUID": "26a9982d-72f6-4cf8-98bd-7862deef5490",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "uuid": "26a9982d-72f6-4cf8-98bd-7862deef5490",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "BuzzerActionCommandMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'yyy123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "0083eca6-50fa-420e-8cb6-160e4d3939f5",
                "parentUUID": "26a9982d-72f6-4cf8-98bd-7862deef5490",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "BuzzerActionCommandMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = <span class=\"hljs-number\">99</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "82cafcd2-8604-43e2-8bca-f2bc82790638",
                "parentUUID": "26a9982d-72f6-4cf8-98bd-7862deef5490",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 8
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
        "uuid": "0976b3c0-491e-44df-981d-aff20dff7752",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ContestantBuzzerPressMessage",
        "suites": [
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantBuzzerPressMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "003b0256-6cac-444f-a5b9-978f703dd4a4",
                "parentUUID": "0a30a7f9-b2ae-43ab-a846-14d89de75b1d",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantBuzzerPressMessage #sessionId should get value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e51b3c65-8187-4843-b525-b22306550259",
                "parentUUID": "0a30a7f9-b2ae-43ab-a846-14d89de75b1d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "uuid": "0a30a7f9-b2ae-43ab-a846-14d89de75b1d",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantBuzzerPressMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "003b0256-6cac-444f-a5b9-978f703dd4a4",
                "parentUUID": "0a30a7f9-b2ae-43ab-a846-14d89de75b1d",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantBuzzerPressMessage #sessionId should get value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e51b3c65-8187-4843-b525-b22306550259",
                "parentUUID": "0a30a7f9-b2ae-43ab-a846-14d89de75b1d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "#contestantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantBuzzerPressMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "496dde6f-c85c-43eb-8daf-9d6837ba3c53",
                "parentUUID": "1b52aba6-bb9c-42c7-9648-23c2c8ad96cc",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantBuzzerPressMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "b59aae88-87dc-4440-bdd5-899b916c8a77",
                "parentUUID": "1b52aba6-bb9c-42c7-9648-23c2c8ad96cc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "uuid": "1b52aba6-bb9c-42c7-9648-23c2c8ad96cc",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantBuzzerPressMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "496dde6f-c85c-43eb-8daf-9d6837ba3c53",
                "parentUUID": "1b52aba6-bb9c-42c7-9648-23c2c8ad96cc",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantBuzzerPressMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "b59aae88-87dc-4440-bdd5-899b916c8a77",
                "parentUUID": "1b52aba6-bb9c-42c7-9648-23c2c8ad96cc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantBuzzerPressMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "dd48dc25-7246-4f99-acef-b5877b83b6a2",
                "parentUUID": "8b2f5c0e-341a-435a-b0de-a72633641bc2",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantBuzzerPressMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "4d68d399-1374-42bf-aba7-c384cdee68ab",
                "parentUUID": "8b2f5c0e-341a-435a-b0de-a72633641bc2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "uuid": "8b2f5c0e-341a-435a-b0de-a72633641bc2",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantBuzzerPressMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "dd48dc25-7246-4f99-acef-b5877b83b6a2",
                "parentUUID": "8b2f5c0e-341a-435a-b0de-a72633641bc2",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantBuzzerPressMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "4d68d399-1374-42bf-aba7-c384cdee68ab",
                "parentUUID": "8b2f5c0e-341a-435a-b0de-a72633641bc2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
        "uuid": "d412abb1-dedd-4cce-a322-35aad48bdde8",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ContestantJoinRequestMessage",
        "suites": [
          {
            "title": "#username",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #username should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.username = <span class=\"hljs-string\">'test123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
                "isRoot": false,
                "uuid": "8aecc5b4-d4bf-4f96-a2aa-0cb84d913cd6",
                "parentUUID": "c5f74e2d-0190-4b34-b303-77c89102c523",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #username should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._username = <span class=\"hljs-string\">'test123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
                "isRoot": false,
                "uuid": "6f14a78f-6465-4a42-b59d-2e9343fee1d2",
                "parentUUID": "c5f74e2d-0190-4b34-b303-77c89102c523",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "uuid": "c5f74e2d-0190-4b34-b303-77c89102c523",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #username should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.username = <span class=\"hljs-string\">'test123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
                "isRoot": false,
                "uuid": "8aecc5b4-d4bf-4f96-a2aa-0cb84d913cd6",
                "parentUUID": "c5f74e2d-0190-4b34-b303-77c89102c523",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #username should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._username = <span class=\"hljs-string\">'test123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
                "isRoot": false,
                "uuid": "6f14a78f-6465-4a42-b59d-2e9343fee1d2",
                "parentUUID": "c5f74e2d-0190-4b34-b303-77c89102c523",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "cc155dac-320f-4ab2-adb1-db7da94329b2",
                "parentUUID": "a1dd9a4b-1725-42b1-b92a-b9b1d1346f5b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "dbaedca7-0ef1-4aa6-87cf-aff4d2814337",
                "parentUUID": "a1dd9a4b-1725-42b1-b92a-b9b1d1346f5b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "uuid": "a1dd9a4b-1725-42b1-b92a-b9b1d1346f5b",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "cc155dac-320f-4ab2-adb1-db7da94329b2",
                "parentUUID": "a1dd9a4b-1725-42b1-b92a-b9b1d1346f5b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "dbaedca7-0ef1-4aa6-87cf-aff4d2814337",
                "parentUUID": "a1dd9a4b-1725-42b1-b92a-b9b1d1346f5b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#teamName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "926b6e88-49db-4687-b38e-99d96f6a0333",
                "parentUUID": "54183cdd-fac6-4d4e-8fc1-34411251a44a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "4fb35092-a6f0-4064-bbc3-631140990517",
                "parentUUID": "54183cdd-fac6-4d4e-8fc1-34411251a44a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "uuid": "54183cdd-fac6-4d4e-8fc1-34411251a44a",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "926b6e88-49db-4687-b38e-99d96f6a0333",
                "parentUUID": "54183cdd-fac6-4d4e-8fc1-34411251a44a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "4fb35092-a6f0-4064-bbc3-631140990517",
                "parentUUID": "54183cdd-fac6-4d4e-8fc1-34411251a44a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantJoinRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "fd7aead0-843a-4e27-9e47-f382ddfe4905",
                "parentUUID": "37d094e2-6ccb-43a4-b35b-35f7839e3b0f",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantJoinRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "f20fc446-8993-4b28-ad41-c4e67ca34d59",
                "parentUUID": "37d094e2-6ccb-43a4-b35b-35f7839e3b0f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "uuid": "37d094e2-6ccb-43a4-b35b-35f7839e3b0f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantJoinRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "fd7aead0-843a-4e27-9e47-f382ddfe4905",
                "parentUUID": "37d094e2-6ccb-43a4-b35b-35f7839e3b0f",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantJoinRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "f20fc446-8993-4b28-ad41-c4e67ca34d59",
                "parentUUID": "37d094e2-6ccb-43a4-b35b-35f7839e3b0f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 6
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
        "uuid": "c2e616dc-3022-48e0-9f06-ea85ac052a70",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ContestantJoinResponseMessage",
        "suites": [
          {
            "title": "#wasSuccessful",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #wasSuccessful should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.data._wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "b1aaf37f-5674-4599-875e-bbb312d3000e",
                "parentUUID": "cc2b29b4-3c65-4881-aa45-70d7cdf9503c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #wasSuccessful should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "2e942f7c-ee63-4b30-98c1-00215a66eddf",
                "parentUUID": "cc2b29b4-3c65-4881-aa45-70d7cdf9503c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "cc2b29b4-3c65-4881-aa45-70d7cdf9503c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #wasSuccessful should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.data._wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "b1aaf37f-5674-4599-875e-bbb312d3000e",
                "parentUUID": "cc2b29b4-3c65-4881-aa45-70d7cdf9503c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #wasSuccessful should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "2e942f7c-ee63-4b30-98c1-00215a66eddf",
                "parentUUID": "cc2b29b4-3c65-4881-aa45-70d7cdf9503c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#enquireForTeamLeaderPosition",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #enquireForTeamLeaderPosition should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.data._enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "3ed0358d-70cf-40e3-b7f5-8b4b75688bc2",
                "parentUUID": "a18fe140-77d8-44b2-8cc9-69dfe83e8121",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #enquireForTeamLeaderPosition should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "fe8dc499-df97-436a-8ba3-4f8dfbbef7bb",
                "parentUUID": "a18fe140-77d8-44b2-8cc9-69dfe83e8121",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "a18fe140-77d8-44b2-8cc9-69dfe83e8121",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #enquireForTeamLeaderPosition should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.data._enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "3ed0358d-70cf-40e3-b7f5-8b4b75688bc2",
                "parentUUID": "a18fe140-77d8-44b2-8cc9-69dfe83e8121",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #enquireForTeamLeaderPosition should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "fe8dc499-df97-436a-8ba3-4f8dfbbef7bb",
                "parentUUID": "a18fe140-77d8-44b2-8cc9-69dfe83e8121",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#failedRequestReason",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #failedRequestReason should set value",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.data._failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
                "isRoot": false,
                "uuid": "79b94df6-85db-444c-9c84-d9f473cd17bc",
                "parentUUID": "baf79c79-fd95-4aeb-8b5a-0d148a1cb0d5",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #failedRequestReason should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
                "isRoot": false,
                "uuid": "eddb8d3d-07df-4024-b131-cb3b8e7007ce",
                "parentUUID": "baf79c79-fd95-4aeb-8b5a-0d148a1cb0d5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "baf79c79-fd95-4aeb-8b5a-0d148a1cb0d5",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #failedRequestReason should set value",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.data._failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
                "isRoot": false,
                "uuid": "79b94df6-85db-444c-9c84-d9f473cd17bc",
                "parentUUID": "baf79c79-fd95-4aeb-8b5a-0d148a1cb0d5",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #failedRequestReason should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
                "isRoot": false,
                "uuid": "eddb8d3d-07df-4024-b131-cb3b8e7007ce",
                "parentUUID": "baf79c79-fd95-4aeb-8b5a-0d148a1cb0d5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5
          },
          {
            "title": "#contestantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #contestantId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "59d81da3-1724-42aa-8df3-0a07380d5efb",
                "parentUUID": "4e5896cf-ff88-47de-bc8f-65820170d398",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "22fab4b1-4d07-4708-b542-064b1a7f099e",
                "parentUUID": "4e5896cf-ff88-47de-bc8f-65820170d398",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "4e5896cf-ff88-47de-bc8f-65820170d398",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #contestantId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "59d81da3-1724-42aa-8df3-0a07380d5efb",
                "parentUUID": "4e5896cf-ff88-47de-bc8f-65820170d398",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "22fab4b1-4d07-4708-b542-064b1a7f099e",
                "parentUUID": "4e5896cf-ff88-47de-bc8f-65820170d398",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#mustChooseTeam",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #mustChooseTeam should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.data._mustChooseTeam.should.be.true();",
                "isRoot": false,
                "uuid": "b2c7f1c8-e1b4-4a8b-a036-06467d70813b",
                "parentUUID": "e3dc90d0-4ba6-465d-a0d1-2c65f372e030",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #mustChooseTeam should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.mustChooseTeam.should.be.true();",
                "isRoot": false,
                "uuid": "db8700ea-b100-46a9-baf8-691e68b0b87f",
                "parentUUID": "e3dc90d0-4ba6-465d-a0d1-2c65f372e030",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "e3dc90d0-4ba6-465d-a0d1-2c65f372e030",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #mustChooseTeam should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.data._mustChooseTeam.should.be.true();",
                "isRoot": false,
                "uuid": "b2c7f1c8-e1b4-4a8b-a036-06467d70813b",
                "parentUUID": "e3dc90d0-4ba6-465d-a0d1-2c65f372e030",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #mustChooseTeam should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.mustChooseTeam.should.be.true();",
                "isRoot": false,
                "uuid": "db8700ea-b100-46a9-baf8-691e68b0b87f",
                "parentUUID": "e3dc90d0-4ba6-465d-a0d1-2c65f372e030",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#teams",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #teams should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.data._teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
                "isRoot": false,
                "uuid": "7b2c32c6-2091-4a63-a794-be795635f0f3",
                "parentUUID": "92b4bbba-a826-45e4-9edf-20193a753c67",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #teams should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
                "isRoot": false,
                "uuid": "8f9ec79c-527b-4f2d-81f7-2f592b1c75bc",
                "parentUUID": "92b4bbba-a826-45e4-9edf-20193a753c67",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "92b4bbba-a826-45e4-9edf-20193a753c67",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #teams should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.data._teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
                "isRoot": false,
                "uuid": "7b2c32c6-2091-4a63-a794-be795635f0f3",
                "parentUUID": "92b4bbba-a826-45e4-9edf-20193a753c67",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #teams should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
                "isRoot": false,
                "uuid": "8f9ec79c-527b-4f2d-81f7-2f592b1c75bc",
                "parentUUID": "92b4bbba-a826-45e4-9edf-20193a753c67",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantJoinResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "8fe76c42-a025-4f1c-aea4-e9307cd1cb75",
                "parentUUID": "ad713153-df73-49b2-a2bd-124ea79846d7",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantJoinResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "5aaa1b26-bcb6-45a0-bd18-4825cbb4bf5c",
                "parentUUID": "ad713153-df73-49b2-a2bd-124ea79846d7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "ad713153-df73-49b2-a2bd-124ea79846d7",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantJoinResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "8fe76c42-a025-4f1c-aea4-e9307cd1cb75",
                "parentUUID": "ad713153-df73-49b2-a2bd-124ea79846d7",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantJoinResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "5aaa1b26-bcb6-45a0-bd18-4825cbb4bf5c",
                "parentUUID": "ad713153-df73-49b2-a2bd-124ea79846d7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
        "uuid": "55e427ab-5271-4261-ab89-57f67711e31e",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "CreateSessionMessage",
        "suites": [
          {
            "title": "#settings",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionMessage #settings should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.data._settings.should.equal(s);",
                "isRoot": false,
                "uuid": "70b9ea4b-8720-446d-ad7e-84c7e3bca514",
                "parentUUID": "ac9a8afb-59cb-4fdc-a422-c2c77e4710d4",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionMessage #settings should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.data._settings = s;<br>m.settings.should.equal(s);",
                "isRoot": false,
                "uuid": "beb50707-9079-4b9e-a021-7f9a3d6e7f29",
                "parentUUID": "ac9a8afb-59cb-4fdc-a422-c2c77e4710d4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/CreateSessionMessageTests.js",
            "uuid": "ac9a8afb-59cb-4fdc-a422-c2c77e4710d4",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionMessage #settings should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.data._settings.should.equal(s);",
                "isRoot": false,
                "uuid": "70b9ea4b-8720-446d-ad7e-84c7e3bca514",
                "parentUUID": "ac9a8afb-59cb-4fdc-a422-c2c77e4710d4",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionMessage #settings should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.data._settings = s;<br>m.settings.should.equal(s);",
                "isRoot": false,
                "uuid": "beb50707-9079-4b9e-a021-7f9a3d6e7f29",
                "parentUUID": "ac9a8afb-59cb-4fdc-a422-c2c77e4710d4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "CreateSessionMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "f261e06e-e99c-4ee3-bbf5-b23414e1cba3",
                "parentUUID": "fe7c8225-06ce-4066-af1c-c9a81ab8560b",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "CreateSessionMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-string\">'invalid'</span>;<br>m.settings = s;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "b65bcc94-234b-42b4-8705-e6ba86fdd23e",
                "parentUUID": "fe7c8225-06ce-4066-af1c-c9a81ab8560b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/CreateSessionMessageTests.js",
            "uuid": "fe7c8225-06ce-4066-af1c-c9a81ab8560b",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "CreateSessionMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "f261e06e-e99c-4ee3-bbf5-b23414e1cba3",
                "parentUUID": "fe7c8225-06ce-4066-af1c-c9a81ab8560b",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "CreateSessionMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-string\">'invalid'</span>;<br>m.settings = s;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "b65bcc94-234b-42b4-8705-e6ba86fdd23e",
                "parentUUID": "fe7c8225-06ce-4066-af1c-c9a81ab8560b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/CreateSessionMessageTests.js",
        "uuid": "a024d179-fa7c-4d53-8be1-b56b38de44e2",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "CreateSessionResponseMessage",
        "suites": [
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionResponseMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "45fc7280-8c6b-43ee-881d-f1db03326cd5",
                "parentUUID": "e9ad758a-5717-45ea-9356-0010ef79a500",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionResponseMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "0a982fe5-a7b4-4181-bf0e-bea0c72d5b2d",
                "parentUUID": "e9ad758a-5717-45ea-9356-0010ef79a500",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "uuid": "e9ad758a-5717-45ea-9356-0010ef79a500",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionResponseMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "45fc7280-8c6b-43ee-881d-f1db03326cd5",
                "parentUUID": "e9ad758a-5717-45ea-9356-0010ef79a500",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionResponseMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "0a982fe5-a7b4-4181-bf0e-bea0c72d5b2d",
                "parentUUID": "e9ad758a-5717-45ea-9356-0010ef79a500",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionResponseMessage #hostId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "4886b20e-7bf9-4c25-b30f-448ec25d04c8",
                "parentUUID": "dd778764-7448-48e2-ad10-cba658704400",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionResponseMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "0e88432e-e436-4449-8980-62adffe11c49",
                "parentUUID": "dd778764-7448-48e2-ad10-cba658704400",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "uuid": "dd778764-7448-48e2-ad10-cba658704400",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionResponseMessage #hostId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "4886b20e-7bf9-4c25-b30f-448ec25d04c8",
                "parentUUID": "dd778764-7448-48e2-ad10-cba658704400",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionResponseMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "0e88432e-e436-4449-8980-62adffe11c49",
                "parentUUID": "dd778764-7448-48e2-ad10-cba658704400",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "CreateSessionResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "6320349f-6554-4440-850a-023cb409f9d3",
                "parentUUID": "a59be9a8-6cf0-4997-accd-13079a568a8d",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "CreateSessionResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "1d870b2f-7ba6-4c69-89b2-611ada2be115",
                "parentUUID": "a59be9a8-6cf0-4997-accd-13079a568a8d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "uuid": "a59be9a8-6cf0-4997-accd-13079a568a8d",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "CreateSessionResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "6320349f-6554-4440-850a-023cb409f9d3",
                "parentUUID": "a59be9a8-6cf0-4997-accd-13079a568a8d",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "CreateSessionResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "1d870b2f-7ba6-4c69-89b2-611ada2be115",
                "parentUUID": "a59be9a8-6cf0-4997-accd-13079a568a8d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
        "uuid": "d1b433ff-a183-42f5-ade3-7ff4e4a2d95c",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ErrorMessage",
        "suites": [
          {
            "title": "#message",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ErrorMessage #message should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e6c201c4-7b4c-4b9e-9e80-a498db890b61",
                "parentUUID": "37c264f3-39b5-4043-868a-85e400786eeb",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ErrorMessage #message should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.data._error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "38184821-f623-42cb-9017-1e9a6ec2738e",
                "parentUUID": "37c264f3-39b5-4043-868a-85e400786eeb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ErrorMessageTests.js",
            "uuid": "37c264f3-39b5-4043-868a-85e400786eeb",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ErrorMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ErrorMessage #message should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e6c201c4-7b4c-4b9e-9e80-a498db890b61",
                "parentUUID": "37c264f3-39b5-4043-868a-85e400786eeb",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ErrorMessage #message should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.data._error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "38184821-f623-42cb-9017-1e9a6ec2738e",
                "parentUUID": "37c264f3-39b5-4043-868a-85e400786eeb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "ErrorMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "5d6a57ed-f108-4945-bbeb-6622ddda45d3",
                "parentUUID": "31062d66-7ec0-45fc-ba81-fca242607ef7",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ErrorMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "1440c35b-17a9-4a5e-88bf-cc3ef3210a53",
                "parentUUID": "31062d66-7ec0-45fc-ba81-fca242607ef7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ErrorMessageTests.js",
            "uuid": "31062d66-7ec0-45fc-ba81-fca242607ef7",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ErrorMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "ErrorMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "5d6a57ed-f108-4945-bbeb-6622ddda45d3",
                "parentUUID": "31062d66-7ec0-45fc-ba81-fca242607ef7",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ErrorMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 11,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "1440c35b-17a9-4a5e-88bf-cc3ef3210a53",
                "parentUUID": "31062d66-7ec0-45fc-ba81-fca242607ef7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 13
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/ErrorMessageTests.js",
        "uuid": "77e36896-620c-4a46-8017-5e3914ec37b8",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ErrorMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "HostSettingsUpdateMessage",
        "suites": [
          {
            "title": "#sessionName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #sessionName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "30586177-4512-49c1-8d5c-434831aa5747",
                "parentUUID": "9053e230-5716-4467-9494-a0e3d5da2b9b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #sessionName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "8c9adb71-0b37-4caa-9e75-e20331fbfcd1",
                "parentUUID": "9053e230-5716-4467-9494-a0e3d5da2b9b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "9053e230-5716-4467-9494-a0e3d5da2b9b",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #sessionName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "30586177-4512-49c1-8d5c-434831aa5747",
                "parentUUID": "9053e230-5716-4467-9494-a0e3d5da2b9b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #sessionName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "8c9adb71-0b37-4caa-9e75-e20331fbfcd1",
                "parentUUID": "9053e230-5716-4467-9494-a0e3d5da2b9b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#maxTeams",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #maxTeams should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxTeams = <span class=\"hljs-number\">5</span>;<br>m.data._maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "26ac88dd-5e03-4876-91df-7623d40bbf68",
                "parentUUID": "9d95ac3f-19ea-4e18-ad01-350bb6b0b995",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #maxTeams should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxTeams = <span class=\"hljs-number\">5</span>;<br>m.maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "b1e66775-7e0e-4db3-83a1-5f2430f9a804",
                "parentUUID": "9d95ac3f-19ea-4e18-ad01-350bb6b0b995",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "9d95ac3f-19ea-4e18-ad01-350bb6b0b995",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #maxTeams should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxTeams = <span class=\"hljs-number\">5</span>;<br>m.data._maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "26ac88dd-5e03-4876-91df-7623d40bbf68",
                "parentUUID": "9d95ac3f-19ea-4e18-ad01-350bb6b0b995",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #maxTeams should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxTeams = <span class=\"hljs-number\">5</span>;<br>m.maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "b1e66775-7e0e-4db3-83a1-5f2430f9a804",
                "parentUUID": "9d95ac3f-19ea-4e18-ad01-350bb6b0b995",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#teamSize",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #teamSize should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.teamSize = <span class=\"hljs-number\">5</span>;<br>m.data._teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "52d75bd1-368b-4e2e-af6b-b1ef0ce7d4c7",
                "parentUUID": "82b3e071-5619-46af-a60b-7634f0d96655",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #teamSize should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._teamSize = <span class=\"hljs-number\">5</span>;<br>m.teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "9b822530-545d-4d95-8f84-ff4ee7777b41",
                "parentUUID": "82b3e071-5619-46af-a60b-7634f0d96655",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "82b3e071-5619-46af-a60b-7634f0d96655",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #teamSize should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.teamSize = <span class=\"hljs-number\">5</span>;<br>m.data._teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "52d75bd1-368b-4e2e-af6b-b1ef0ce7d4c7",
                "parentUUID": "82b3e071-5619-46af-a60b-7634f0d96655",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #teamSize should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._teamSize = <span class=\"hljs-number\">5</span>;<br>m.teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "9b822530-545d-4d95-8f84-ff4ee7777b41",
                "parentUUID": "82b3e071-5619-46af-a60b-7634f0d96655",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#maxContestants",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #maxContestants should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxContestants = <span class=\"hljs-number\">5</span>;<br>m.data._maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "3b860949-b43a-4c85-8e5f-cc235a99e8cf",
                "parentUUID": "1fb8a35e-c9b1-4139-8f70-a0d74b7a9f91",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #maxContestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxContestants = <span class=\"hljs-number\">5</span>;<br>m.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "20574dfd-9db0-4b26-aa3f-2ef9eb747e4e",
                "parentUUID": "1fb8a35e-c9b1-4139-8f70-a0d74b7a9f91",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "1fb8a35e-c9b1-4139-8f70-a0d74b7a9f91",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #maxContestants should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxContestants = <span class=\"hljs-number\">5</span>;<br>m.data._maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "3b860949-b43a-4c85-8e5f-cc235a99e8cf",
                "parentUUID": "1fb8a35e-c9b1-4139-8f70-a0d74b7a9f91",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #maxContestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxContestants = <span class=\"hljs-number\">5</span>;<br>m.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "20574dfd-9db0-4b26-aa3f-2ef9eb747e4e",
                "parentUUID": "1fb8a35e-c9b1-4139-8f70-a0d74b7a9f91",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "0ca67b74-f8d1-4c33-8bef-13913c05a8a6",
                "parentUUID": "858201ed-c1e6-4887-b522-474f1840b804",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "7279bdbd-a159-4d9f-9115-69148ba5588a",
                "parentUUID": "858201ed-c1e6-4887-b522-474f1840b804",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "858201ed-c1e6-4887-b522-474f1840b804",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "0ca67b74-f8d1-4c33-8bef-13913c05a8a6",
                "parentUUID": "858201ed-c1e6-4887-b522-474f1840b804",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "7279bdbd-a159-4d9f-9115-69148ba5588a",
                "parentUUID": "858201ed-c1e6-4887-b522-474f1840b804",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #hostId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "27da1e47-ec90-48b9-be2e-8e8000731536",
                "parentUUID": "e829ae45-944d-4f49-acf8-204a78ddb4f3",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #hostId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "0da0871f-c76f-40a4-b250-74c9f4d614bc",
                "parentUUID": "e829ae45-944d-4f49-acf8-204a78ddb4f3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "e829ae45-944d-4f49-acf8-204a78ddb4f3",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #hostId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "27da1e47-ec90-48b9-be2e-8e8000731536",
                "parentUUID": "e829ae45-944d-4f49-acf8-204a78ddb4f3",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #hostId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "0da0871f-c76f-40a4-b250-74c9f4d614bc",
                "parentUUID": "e829ae45-944d-4f49-acf8-204a78ddb4f3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostSettingsUpdateMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "09ad9f9c-96b9-41a0-9d3e-1bc79cbcc40f",
                "parentUUID": "414d589d-35d1-4120-b283-018cd0ed2745",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostSettingsUpdateMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "a902e0ef-63ab-45dc-a4a1-140e537606af",
                "parentUUID": "414d589d-35d1-4120-b283-018cd0ed2745",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "414d589d-35d1-4120-b283-018cd0ed2745",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostSettingsUpdateMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "09ad9f9c-96b9-41a0-9d3e-1bc79cbcc40f",
                "parentUUID": "414d589d-35d1-4120-b283-018cd0ed2745",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostSettingsUpdateMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "a902e0ef-63ab-45dc-a4a1-140e537606af",
                "parentUUID": "414d589d-35d1-4120-b283-018cd0ed2745",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
        "uuid": "7aae2606-981b-43bb-a8ea-796bc0cb2bbe",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "HostTeamLeaderSetRequestMessage",
        "suites": [
          {
            "title": "#teamName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "d1f12f85-b012-44e5-9849-ee4249972b4f",
                "parentUUID": "7691d04d-7e66-4f2b-8452-ddf27d5967cc",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "39d82c06-0319-4876-bc3b-d4a15d9d5458",
                "parentUUID": "7691d04d-7e66-4f2b-8452-ddf27d5967cc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "uuid": "7691d04d-7e66-4f2b-8452-ddf27d5967cc",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "d1f12f85-b012-44e5-9849-ee4249972b4f",
                "parentUUID": "7691d04d-7e66-4f2b-8452-ddf27d5967cc",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "39d82c06-0319-4876-bc3b-d4a15d9d5458",
                "parentUUID": "7691d04d-7e66-4f2b-8452-ddf27d5967cc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#teamLeaderUsername",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamLeaderUsername should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "8265c76d-5ffb-4f94-9ace-b2447437997e",
                "parentUUID": "94ab5598-afe2-4297-a540-0e9b7270f076",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamLeaderUsername should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "c763d362-8bb7-4166-b0b6-5f36a4a398db",
                "parentUUID": "94ab5598-afe2-4297-a540-0e9b7270f076",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "uuid": "94ab5598-afe2-4297-a540-0e9b7270f076",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamLeaderUsername should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "8265c76d-5ffb-4f94-9ace-b2447437997e",
                "parentUUID": "94ab5598-afe2-4297-a540-0e9b7270f076",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamLeaderUsername should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "c763d362-8bb7-4166-b0b6-5f36a4a398db",
                "parentUUID": "94ab5598-afe2-4297-a540-0e9b7270f076",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "748ffa06-305f-404d-be87-9647d7519d8f",
                "parentUUID": "d8af4d4e-991d-4399-aea8-bf591b4bf51b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "825172f0-3809-45f7-a005-a33ee9c4d55a",
                "parentUUID": "d8af4d4e-991d-4399-aea8-bf591b4bf51b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "uuid": "d8af4d4e-991d-4399-aea8-bf591b4bf51b",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "748ffa06-305f-404d-be87-9647d7519d8f",
                "parentUUID": "d8af4d4e-991d-4399-aea8-bf591b4bf51b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "825172f0-3809-45f7-a005-a33ee9c4d55a",
                "parentUUID": "d8af4d4e-991d-4399-aea8-bf591b4bf51b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "47fe3a85-a875-4faa-85f6-2d9d94a48cf9",
                "parentUUID": "06de98c6-f06e-447f-a7a6-c11ec8233775",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "1536ce2b-ab33-47cf-ac9c-0c710f4b7909",
                "parentUUID": "06de98c6-f06e-447f-a7a6-c11ec8233775",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "uuid": "06de98c6-f06e-447f-a7a6-c11ec8233775",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "47fe3a85-a875-4faa-85f6-2d9d94a48cf9",
                "parentUUID": "06de98c6-f06e-447f-a7a6-c11ec8233775",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "1536ce2b-ab33-47cf-ac9c-0c710f4b7909",
                "parentUUID": "06de98c6-f06e-447f-a7a6-c11ec8233775",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostTeamLeaderSetRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "04064233-5674-46bf-b86b-bb601c505f15",
                "parentUUID": "97e3d3c5-a5fa-4ab2-b27d-35457383dfb1",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostTeamLeaderSetRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "0bf683b3-2054-4992-a07c-fd61ef8eeb81",
                "parentUUID": "97e3d3c5-a5fa-4ab2-b27d-35457383dfb1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "uuid": "97e3d3c5-a5fa-4ab2-b27d-35457383dfb1",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostTeamLeaderSetRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "04064233-5674-46bf-b86b-bb601c505f15",
                "parentUUID": "97e3d3c5-a5fa-4ab2-b27d-35457383dfb1",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostTeamLeaderSetRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "0bf683b3-2054-4992-a07c-fd61ef8eeb81",
                "parentUUID": "97e3d3c5-a5fa-4ab2-b27d-35457383dfb1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 7
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
        "uuid": "1e9969c0-4468-43e3-9dcb-fff3d9125e53",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "HostTeamNameUpdateRequestMessage",
        "suites": [
          {
            "title": "#teamNameFrom",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameFrom should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "86483000-5d59-4e17-9546-9ce73a595204",
                "parentUUID": "bd358368-16b4-4c57-a0bc-b0b200e7b0b5",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameFrom should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "1d2250bc-eaa2-4263-9475-a4c9ea4379f0",
                "parentUUID": "bd358368-16b4-4c57-a0bc-b0b200e7b0b5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "uuid": "bd358368-16b4-4c57-a0bc-b0b200e7b0b5",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameFrom should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "86483000-5d59-4e17-9546-9ce73a595204",
                "parentUUID": "bd358368-16b4-4c57-a0bc-b0b200e7b0b5",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameFrom should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "1d2250bc-eaa2-4263-9475-a4c9ea4379f0",
                "parentUUID": "bd358368-16b4-4c57-a0bc-b0b200e7b0b5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#teamNameTo",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameTo should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "c7bd8c17-c504-4d66-8720-317b4c9e6c57",
                "parentUUID": "4d07ff74-a448-4db7-a6ba-cb870d58249e",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameTo should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "d47f53d1-ef48-416d-8469-31fdfe6fc00e",
                "parentUUID": "4d07ff74-a448-4db7-a6ba-cb870d58249e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "uuid": "4d07ff74-a448-4db7-a6ba-cb870d58249e",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameTo should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "c7bd8c17-c504-4d66-8720-317b4c9e6c57",
                "parentUUID": "4d07ff74-a448-4db7-a6ba-cb870d58249e",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameTo should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "d47f53d1-ef48-416d-8469-31fdfe6fc00e",
                "parentUUID": "4d07ff74-a448-4db7-a6ba-cb870d58249e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e66e7fb4-b8fe-4e72-9df1-13b9bbc7eb31",
                "parentUUID": "a032917e-8022-43c1-a2c6-ef0d946b3af0",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "70deff9f-b9e4-4e56-8316-7273c2ae8f43",
                "parentUUID": "a032917e-8022-43c1-a2c6-ef0d946b3af0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "uuid": "a032917e-8022-43c1-a2c6-ef0d946b3af0",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e66e7fb4-b8fe-4e72-9df1-13b9bbc7eb31",
                "parentUUID": "a032917e-8022-43c1-a2c6-ef0d946b3af0",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "70deff9f-b9e4-4e56-8316-7273c2ae8f43",
                "parentUUID": "a032917e-8022-43c1-a2c6-ef0d946b3af0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 6
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "19ed6d94-85da-47e9-b079-a9cf4eadd6b7",
                "parentUUID": "1e7f63f6-771e-4249-817e-301a8abf452c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "0f4af71d-cf96-422a-90d0-a2466080e662",
                "parentUUID": "1e7f63f6-771e-4249-817e-301a8abf452c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "uuid": "1e7f63f6-771e-4249-817e-301a8abf452c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "19ed6d94-85da-47e9-b079-a9cf4eadd6b7",
                "parentUUID": "1e7f63f6-771e-4249-817e-301a8abf452c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "0f4af71d-cf96-422a-90d0-a2466080e662",
                "parentUUID": "1e7f63f6-771e-4249-817e-301a8abf452c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostTeamNameUpdateRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "c878e9a4-513d-4b52-ac4a-63b19963f09d",
                "parentUUID": "659fe879-60f2-4c44-af0d-0c40a44d73ab",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostTeamNameUpdateRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "e32fd8c7-db74-4b8d-bf7c-b2c72a0b2fde",
                "parentUUID": "659fe879-60f2-4c44-af0d-0c40a44d73ab",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "uuid": "659fe879-60f2-4c44-af0d-0c40a44d73ab",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostTeamNameUpdateRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "c878e9a4-513d-4b52-ac4a-63b19963f09d",
                "parentUUID": "659fe879-60f2-4c44-af0d-0c40a44d73ab",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostTeamNameUpdateRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "e32fd8c7-db74-4b8d-bf7c-b2c72a0b2fde",
                "parentUUID": "659fe879-60f2-4c44-af0d-0c40a44d73ab",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
        "uuid": "9108938f-ceec-46d7-ab3d-bb4d611841af",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "InquireTeamLeaderResponseMessage",
        "suites": [
          {
            "title": "#decision",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #decision should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.data._decision.should.be.true();",
                "isRoot": false,
                "uuid": "6563e6ed-cd00-4f7f-be39-1f03f86b6412",
                "parentUUID": "f7c98ebd-07b3-45e1-a204-e8090d686a25",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #decision should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._decision = <span class=\"hljs-literal\">true</span>;<br>m.decision.should.be.true();",
                "isRoot": false,
                "uuid": "d6bc9047-e52c-42c0-8a31-522b38092431",
                "parentUUID": "f7c98ebd-07b3-45e1-a204-e8090d686a25",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "uuid": "f7c98ebd-07b3-45e1-a204-e8090d686a25",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #decision should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.data._decision.should.be.true();",
                "isRoot": false,
                "uuid": "6563e6ed-cd00-4f7f-be39-1f03f86b6412",
                "parentUUID": "f7c98ebd-07b3-45e1-a204-e8090d686a25",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #decision should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._decision = <span class=\"hljs-literal\">true</span>;<br>m.decision.should.be.true();",
                "isRoot": false,
                "uuid": "d6bc9047-e52c-42c0-8a31-522b38092431",
                "parentUUID": "f7c98ebd-07b3-45e1-a204-e8090d686a25",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "875046d7-b247-4a1e-874e-e69db413e7df",
                "parentUUID": "3234d42a-40c4-4d43-98c0-3df9f59c3e1a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e1f3439c-5faf-4034-bdbb-476b16aa2ffa",
                "parentUUID": "3234d42a-40c4-4d43-98c0-3df9f59c3e1a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "uuid": "3234d42a-40c4-4d43-98c0-3df9f59c3e1a",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "875046d7-b247-4a1e-874e-e69db413e7df",
                "parentUUID": "3234d42a-40c4-4d43-98c0-3df9f59c3e1a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e1f3439c-5faf-4034-bdbb-476b16aa2ffa",
                "parentUUID": "3234d42a-40c4-4d43-98c0-3df9f59c3e1a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#contestantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "70267515-8288-4019-816c-ded0e895e55e",
                "parentUUID": "b35a231f-a436-4d5d-9380-fc8c02d61114",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "4e17ebb6-0a5b-4f67-9487-4254b5410991",
                "parentUUID": "b35a231f-a436-4d5d-9380-fc8c02d61114",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "uuid": "b35a231f-a436-4d5d-9380-fc8c02d61114",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "70267515-8288-4019-816c-ded0e895e55e",
                "parentUUID": "b35a231f-a436-4d5d-9380-fc8c02d61114",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "4e17ebb6-0a5b-4f67-9487-4254b5410991",
                "parentUUID": "b35a231f-a436-4d5d-9380-fc8c02d61114",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "InquireTeamLeaderResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "2b91c2d5-61c0-4762-91d2-1e6207b6b3fb",
                "parentUUID": "f5c9d41b-f913-471f-9e27-feb2a1e79d5c",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "InquireTeamLeaderResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "c3af8805-1b02-4ef0-a969-a4c238ea9a32",
                "parentUUID": "f5c9d41b-f913-471f-9e27-feb2a1e79d5c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "uuid": "f5c9d41b-f913-471f-9e27-feb2a1e79d5c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "InquireTeamLeaderResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "2b91c2d5-61c0-4762-91d2-1e6207b6b3fb",
                "parentUUID": "f5c9d41b-f913-471f-9e27-feb2a1e79d5c",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "InquireTeamLeaderResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "c3af8805-1b02-4ef0-a969-a4c238ea9a32",
                "parentUUID": "f5c9d41b-f913-471f-9e27-feb2a1e79d5c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
        "uuid": "2ec8e9a7-d024-4877-8c5f-a4c7ac3e165b",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ObserverUpdateMessage",
        "suites": [
          {
            "title": "#gameState",
            "suites": [],
            "tests": [
              {
                "title": "should get value",
                "fullTitle": "ObserverUpdateMessage #gameState should get value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.gameState.should.be.Object();",
                "isRoot": false,
                "uuid": "1b5dc663-296a-426d-bf40-05eab966db6f",
                "parentUUID": "27a85419-e66e-4076-bfd2-faad984d41eb",
                "skipped": false
              },
              {
                "title": "should not have ids",
                "fullTitle": "ObserverUpdateMessage #gameState should not have ids",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState.id);<br>should.not.exist(m.gameState.host.id);",
                "isRoot": false,
                "uuid": "f6e021d8-a8fe-4a90-8630-eafd6c6de317",
                "parentUUID": "27a85419-e66e-4076-bfd2-faad984d41eb",
                "skipped": false
              },
              {
                "title": "should promote private field _ to public field",
                "fullTitle": "ObserverUpdateMessage #gameState should promote private field _ to public field",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState._host);<br>should.not.exist(m.gameState._settings);<br>should.exist(m.gameState.host);<br>should.exist(m.gameState.settings);<br>should.exist(m.gameState.settings.teamLeaderSelectionMethod);",
                "isRoot": false,
                "uuid": "98348d97-909e-4f6d-9841-8f9e61b93bf6",
                "parentUUID": "27a85419-e66e-4076-bfd2-faad984d41eb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
            "uuid": "27a85419-e66e-4076-bfd2-faad984d41eb",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
            "passes": [
              {
                "title": "should get value",
                "fullTitle": "ObserverUpdateMessage #gameState should get value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.gameState.should.be.Object();",
                "isRoot": false,
                "uuid": "1b5dc663-296a-426d-bf40-05eab966db6f",
                "parentUUID": "27a85419-e66e-4076-bfd2-faad984d41eb",
                "skipped": false
              },
              {
                "title": "should not have ids",
                "fullTitle": "ObserverUpdateMessage #gameState should not have ids",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState.id);<br>should.not.exist(m.gameState.host.id);",
                "isRoot": false,
                "uuid": "f6e021d8-a8fe-4a90-8630-eafd6c6de317",
                "parentUUID": "27a85419-e66e-4076-bfd2-faad984d41eb",
                "skipped": false
              },
              {
                "title": "should promote private field _ to public field",
                "fullTitle": "ObserverUpdateMessage #gameState should promote private field _ to public field",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState._host);<br>should.not.exist(m.gameState._settings);<br>should.exist(m.gameState.host);<br>should.exist(m.gameState.settings);<br>should.exist(m.gameState.settings.teamLeaderSelectionMethod);",
                "isRoot": false,
                "uuid": "98348d97-909e-4f6d-9841-8f9e61b93bf6",
                "parentUUID": "27a85419-e66e-4076-bfd2-faad984d41eb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "ObserverUpdateMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "6a9d1c31-cb46-4615-8253-e6847cee0e0b",
                "parentUUID": "29fa3ca5-d15b-4383-a620-dde6aaf8d9d5",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ObserverUpdateMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 15,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "00d62282-3841-49ed-866a-6935e9443a7a",
                "parentUUID": "29fa3ca5-d15b-4383-a620-dde6aaf8d9d5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
            "uuid": "29fa3ca5-d15b-4383-a620-dde6aaf8d9d5",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "ObserverUpdateMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "6a9d1c31-cb46-4615-8253-e6847cee0e0b",
                "parentUUID": "29fa3ca5-d15b-4383-a620-dde6aaf8d9d5",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ObserverUpdateMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 15,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "00d62282-3841-49ed-866a-6935e9443a7a",
                "parentUUID": "29fa3ca5-d15b-4383-a620-dde6aaf8d9d5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 16
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
        "uuid": "e0405fbe-60ac-4b9e-b2cf-8e0b65c17b04",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "RejoinSessionMessage",
        "suites": [
          {
            "title": "#rejoinAs",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #rejoinAs should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.rejoinAs = constants.rejoinAs.HOST;<br>m.data._rejoinAs.should.equal(constants.rejoinAs.HOST);",
                "isRoot": false,
                "uuid": "15d9a3a8-9374-4d5f-995a-aa3b62133525",
                "parentUUID": "3911146c-998b-4eb9-8e0e-04b87702c67a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #rejoinAs should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._rejoinAs = constants.rejoinAs.HOST;<br>m.rejoinAs.should.equal(constants.rejoinAs.HOST);",
                "isRoot": false,
                "uuid": "d47b5e4a-b2cf-4f13-8e14-d46c8007ffe4",
                "parentUUID": "3911146c-998b-4eb9-8e0e-04b87702c67a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "uuid": "3911146c-998b-4eb9-8e0e-04b87702c67a",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #rejoinAs should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.rejoinAs = constants.rejoinAs.HOST;<br>m.data._rejoinAs.should.equal(constants.rejoinAs.HOST);",
                "isRoot": false,
                "uuid": "15d9a3a8-9374-4d5f-995a-aa3b62133525",
                "parentUUID": "3911146c-998b-4eb9-8e0e-04b87702c67a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #rejoinAs should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._rejoinAs = constants.rejoinAs.HOST;<br>m.rejoinAs.should.equal(constants.rejoinAs.HOST);",
                "isRoot": false,
                "uuid": "d47b5e4a-b2cf-4f13-8e14-d46c8007ffe4",
                "parentUUID": "3911146c-998b-4eb9-8e0e-04b87702c67a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "d321951b-257e-4afb-a2e2-3893c19805e9",
                "parentUUID": "f615c602-b9d9-4823-ad9a-855414a43427",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #sessionId should get value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5fb7cb31-f61a-4241-8bfc-1bad4c2ce7f6",
                "parentUUID": "f615c602-b9d9-4823-ad9a-855414a43427",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "uuid": "f615c602-b9d9-4823-ad9a-855414a43427",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "d321951b-257e-4afb-a2e2-3893c19805e9",
                "parentUUID": "f615c602-b9d9-4823-ad9a-855414a43427",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #sessionId should get value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5fb7cb31-f61a-4241-8bfc-1bad4c2ce7f6",
                "parentUUID": "f615c602-b9d9-4823-ad9a-855414a43427",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#participantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #participantId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e84a6247-f6dd-4018-9a30-e34c9b12172c",
                "parentUUID": "c81490d4-cd59-4abc-80e4-390440db6d8c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #participantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "37f4de47-c6a0-4ac5-b947-941d187e8f58",
                "parentUUID": "c81490d4-cd59-4abc-80e4-390440db6d8c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "uuid": "c81490d4-cd59-4abc-80e4-390440db6d8c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #participantId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e84a6247-f6dd-4018-9a30-e34c9b12172c",
                "parentUUID": "c81490d4-cd59-4abc-80e4-390440db6d8c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #participantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "37f4de47-c6a0-4ac5-b947-941d187e8f58",
                "parentUUID": "c81490d4-cd59-4abc-80e4-390440db6d8c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "RejoinSessionMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.rejoinAs = constants.rejoinAs.OBSERVER;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "ff47365d-0998-4277-a67c-99445319d3a7",
                "parentUUID": "085077e0-dfc1-4f43-8a20-ad5f859adf8c",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "RejoinSessionMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "5b4ec456-0b09-4019-b59c-2b0ff36bb5d1",
                "parentUUID": "085077e0-dfc1-4f43-8a20-ad5f859adf8c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "uuid": "085077e0-dfc1-4f43-8a20-ad5f859adf8c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "RejoinSessionMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.rejoinAs = constants.rejoinAs.OBSERVER;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "ff47365d-0998-4277-a67c-99445319d3a7",
                "parentUUID": "085077e0-dfc1-4f43-8a20-ad5f859adf8c",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "RejoinSessionMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "5b4ec456-0b09-4019-b59c-2b0ff36bb5d1",
                "parentUUID": "085077e0-dfc1-4f43-8a20-ad5f859adf8c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/RejoinSessionMessageTests.js",
        "uuid": "7278c7c1-f2ba-483a-8dcf-d56f1e9e91ec",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RejoinSessionMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "RoundWonMessage",
        "suites": [
          {
            "title": "#username",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "RoundWonMessage #username should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5314af6b-280e-4154-871d-b8c2da761ee6",
                "parentUUID": "dd7f283e-0acf-46d6-afac-4f476d0cf50f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RoundWonMessage #username should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "302136a7-c03d-42ba-a7a6-7c25d0232d9c",
                "parentUUID": "dd7f283e-0acf-46d6-afac-4f476d0cf50f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RoundWonMessageTests.js",
            "uuid": "dd7f283e-0acf-46d6-afac-4f476d0cf50f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RoundWonMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "RoundWonMessage #username should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5314af6b-280e-4154-871d-b8c2da761ee6",
                "parentUUID": "dd7f283e-0acf-46d6-afac-4f476d0cf50f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RoundWonMessage #username should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "302136a7-c03d-42ba-a7a6-7c25d0232d9c",
                "parentUUID": "dd7f283e-0acf-46d6-afac-4f476d0cf50f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#teamName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "RoundWonMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "3b53a81a-c530-40a1-9600-ffc6d9e0b878",
                "parentUUID": "53510103-c773-4496-bb72-e43b09c0b05c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RoundWonMessage #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "922d577f-38f5-4cef-99e0-1eed6c08ce14",
                "parentUUID": "53510103-c773-4496-bb72-e43b09c0b05c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RoundWonMessageTests.js",
            "uuid": "53510103-c773-4496-bb72-e43b09c0b05c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RoundWonMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "RoundWonMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "3b53a81a-c530-40a1-9600-ffc6d9e0b878",
                "parentUUID": "53510103-c773-4496-bb72-e43b09c0b05c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RoundWonMessage #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "922d577f-38f5-4cef-99e0-1eed6c08ce14",
                "parentUUID": "53510103-c773-4496-bb72-e43b09c0b05c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "RoundWonMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "d6a7c03f-717e-422a-83d4-436be21e3287",
                "parentUUID": "dfc0e229-e749-4982-a2f3-1148e2ab2d85",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "RoundWonMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "bdcaab3c-16f7-427f-8808-8db3fbaee7ae",
                "parentUUID": "dfc0e229-e749-4982-a2f3-1148e2ab2d85",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RoundWonMessageTests.js",
            "uuid": "dfc0e229-e749-4982-a2f3-1148e2ab2d85",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RoundWonMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "RoundWonMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "d6a7c03f-717e-422a-83d4-436be21e3287",
                "parentUUID": "dfc0e229-e749-4982-a2f3-1148e2ab2d85",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "RoundWonMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "bdcaab3c-16f7-427f-8808-8db3fbaee7ae",
                "parentUUID": "dfc0e229-e749-4982-a2f3-1148e2ab2d85",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/RoundWonMessageTests.js",
        "uuid": "4dbc5308-dc66-4b79-8449-a04797e5cec8",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RoundWonMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SessionCompleted",
        "suites": [
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionCompleted #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionCompleted();<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "112ae1c0-daae-42cb-9853-ae012cd2f9d4",
                "parentUUID": "ffeddfd5-c8eb-40d5-a900-49682772fc03",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionCompletedTests.js",
            "uuid": "ffeddfd5-c8eb-40d5-a900-49682772fc03",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompletedTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionCompleted #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionCompleted();<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "112ae1c0-daae-42cb-9853-ae012cd2f9d4",
                "parentUUID": "ffeddfd5-c8eb-40d5-a900-49682772fc03",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SessionCompletedTests.js",
        "uuid": "22353ba4-ff2c-4135-a85c-9c27edbf5c68",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompletedTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SessionComplete",
        "suites": [
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SessionComplete #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "67d820db-07c3-4e32-aaad-acb18468524b",
                "parentUUID": "ee3e8389-2fe9-4d52-9470-1997453d1c8e",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionComplete #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "a93ce21a-e889-432f-9241-fe8d02b498e0",
                "parentUUID": "ee3e8389-2fe9-4d52-9470-1997453d1c8e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionCompleteTests.js",
            "uuid": "ee3e8389-2fe9-4d52-9470-1997453d1c8e",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompleteTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SessionComplete #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "67d820db-07c3-4e32-aaad-acb18468524b",
                "parentUUID": "ee3e8389-2fe9-4d52-9470-1997453d1c8e",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionComplete #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "a93ce21a-e889-432f-9241-fe8d02b498e0",
                "parentUUID": "ee3e8389-2fe9-4d52-9470-1997453d1c8e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SessionComplete #hostId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "7a2ca4c7-7e0b-4325-a523-d03ca838f68e",
                "parentUUID": "30f93a67-b188-45ce-ae95-a7ae68a296c6",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionComplete #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "3e019f7a-08f8-4a39-b451-bec34c31f903",
                "parentUUID": "30f93a67-b188-45ce-ae95-a7ae68a296c6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionCompleteTests.js",
            "uuid": "30f93a67-b188-45ce-ae95-a7ae68a296c6",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompleteTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SessionComplete #hostId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "7a2ca4c7-7e0b-4325-a523-d03ca838f68e",
                "parentUUID": "30f93a67-b188-45ce-ae95-a7ae68a296c6",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionComplete #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "3e019f7a-08f8-4a39-b451-bec34c31f903",
                "parentUUID": "30f93a67-b188-45ce-ae95-a7ae68a296c6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionComplete #isValid() should return true when valid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "be4e9918-692b-4d36-8aef-77cf44ce167f",
                "parentUUID": "999260ce-28a4-41aa-965f-c154bdb4e202",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionComplete #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "2a1a1a13-1faa-4315-9bf9-2e3647aac2c6",
                "parentUUID": "999260ce-28a4-41aa-965f-c154bdb4e202",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionCompleteTests.js",
            "uuid": "999260ce-28a4-41aa-965f-c154bdb4e202",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompleteTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionComplete #isValid() should return true when valid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "be4e9918-692b-4d36-8aef-77cf44ce167f",
                "parentUUID": "999260ce-28a4-41aa-965f-c154bdb4e202",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionComplete #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "2a1a1a13-1faa-4315-9bf9-2e3647aac2c6",
                "parentUUID": "999260ce-28a4-41aa-965f-c154bdb4e202",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SessionCompleteTests.js",
        "uuid": "a1a6255e-426d-4ceb-bac2-91801c67898a",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompleteTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SessionInformationRequestMessage",
        "suites": [
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SessionInformationRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "3662bbbd-4698-45f3-a2da-463ebe7f97c5",
                "parentUUID": "53de5802-c478-4343-81ee-5a90fa844130",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionInformationRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "665e18fc-d7db-40c3-8aa7-0bc69da4da3b",
                "parentUUID": "53de5802-c478-4343-81ee-5a90fa844130",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "uuid": "53de5802-c478-4343-81ee-5a90fa844130",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SessionInformationRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "3662bbbd-4698-45f3-a2da-463ebe7f97c5",
                "parentUUID": "53de5802-c478-4343-81ee-5a90fa844130",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionInformationRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "665e18fc-d7db-40c3-8aa7-0bc69da4da3b",
                "parentUUID": "53de5802-c478-4343-81ee-5a90fa844130",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#participantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SessionInformationRequestMessage #participantId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "b6d0f024-2d73-4411-bd7a-c173cdb85b46",
                "parentUUID": "1f89f4fe-63c4-4dad-8c04-e500a7389fbd",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionInformationRequestMessage #participantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5d498fb7-8d91-4577-9e39-63b892672277",
                "parentUUID": "1f89f4fe-63c4-4dad-8c04-e500a7389fbd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "uuid": "1f89f4fe-63c4-4dad-8c04-e500a7389fbd",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SessionInformationRequestMessage #participantId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "b6d0f024-2d73-4411-bd7a-c173cdb85b46",
                "parentUUID": "1f89f4fe-63c4-4dad-8c04-e500a7389fbd",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionInformationRequestMessage #participantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5d498fb7-8d91-4577-9e39-63b892672277",
                "parentUUID": "1f89f4fe-63c4-4dad-8c04-e500a7389fbd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionInformationRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "feccb1bb-7c4c-48b7-a561-b8e144230aad",
                "parentUUID": "e9d9c5a1-63c9-4aa6-a76e-c35f4a776b87",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionInformationRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "2005d4fb-f056-4ba1-993c-c1c901e1a8a6",
                "parentUUID": "e9d9c5a1-63c9-4aa6-a76e-c35f4a776b87",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "uuid": "e9d9c5a1-63c9-4aa6-a76e-c35f4a776b87",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionInformationRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "feccb1bb-7c4c-48b7-a561-b8e144230aad",
                "parentUUID": "e9d9c5a1-63c9-4aa6-a76e-c35f4a776b87",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionInformationRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "2005d4fb-f056-4ba1-993c-c1c901e1a8a6",
                "parentUUID": "e9d9c5a1-63c9-4aa6-a76e-c35f4a776b87",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
        "uuid": "f66db30f-92e8-4cb8-8bbd-af467dffec16",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SessionInformationResponseMessage",
        "suites": [
          {
            "title": "#info",
            "suites": [],
            "tests": [
              {
                "title": "should get value",
                "fullTitle": "SessionInformationResponseMessage #info should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.should.be.Object();",
                "isRoot": false,
                "uuid": "48f87019-e1ca-459f-859b-31f7eed9d5a9",
                "parentUUID": "971c693f-5eab-47a8-9a8e-0d7e88bfb065",
                "skipped": false
              },
              {
                "title": "should not have ids",
                "fullTitle": "SessionInformationResponseMessage #info should not have ids",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.host.should.not.be.null();<br>should.not.exist(m.info.host.id);",
                "isRoot": false,
                "uuid": "26020223-dd5f-406d-90e3-b33d18accd33",
                "parentUUID": "971c693f-5eab-47a8-9a8e-0d7e88bfb065",
                "skipped": false
              },
              {
                "title": "should promote private field _ to public field",
                "fullTitle": "SessionInformationResponseMessage #info should promote private field _ to public field",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>should.not.exist(m.info._host);<br>should.not.exist(m.info._session);<br>should.exist(m.info.host);<br>should.exist(m.info.session);<br>should.exist(m.info.session.settings.teamLeaderSelectionMethod);",
                "isRoot": false,
                "uuid": "9c1fa114-263b-41c5-ae0a-c8aef56e4d77",
                "parentUUID": "971c693f-5eab-47a8-9a8e-0d7e88bfb065",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
            "uuid": "971c693f-5eab-47a8-9a8e-0d7e88bfb065",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
            "passes": [
              {
                "title": "should get value",
                "fullTitle": "SessionInformationResponseMessage #info should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.should.be.Object();",
                "isRoot": false,
                "uuid": "48f87019-e1ca-459f-859b-31f7eed9d5a9",
                "parentUUID": "971c693f-5eab-47a8-9a8e-0d7e88bfb065",
                "skipped": false
              },
              {
                "title": "should not have ids",
                "fullTitle": "SessionInformationResponseMessage #info should not have ids",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.host.should.not.be.null();<br>should.not.exist(m.info.host.id);",
                "isRoot": false,
                "uuid": "26020223-dd5f-406d-90e3-b33d18accd33",
                "parentUUID": "971c693f-5eab-47a8-9a8e-0d7e88bfb065",
                "skipped": false
              },
              {
                "title": "should promote private field _ to public field",
                "fullTitle": "SessionInformationResponseMessage #info should promote private field _ to public field",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>should.not.exist(m.info._host);<br>should.not.exist(m.info._session);<br>should.exist(m.info.host);<br>should.exist(m.info.session);<br>should.exist(m.info.session.settings.teamLeaderSelectionMethod);",
                "isRoot": false,
                "uuid": "9c1fa114-263b-41c5-ae0a-c8aef56e4d77",
                "parentUUID": "971c693f-5eab-47a8-9a8e-0d7e88bfb065",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionInformationResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "112ffffd-f656-4b91-ac9a-add312383060",
                "parentUUID": "4b36a919-649f-4064-8d5d-7b2c23c234f6",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionInformationResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "0ab1e206-f5f0-4f1e-bd51-bba6848bbb7a",
                "parentUUID": "4b36a919-649f-4064-8d5d-7b2c23c234f6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
            "uuid": "4b36a919-649f-4064-8d5d-7b2c23c234f6",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionInformationResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "112ffffd-f656-4b91-ac9a-add312383060",
                "parentUUID": "4b36a919-649f-4064-8d5d-7b2c23c234f6",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionInformationResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "0ab1e206-f5f0-4f1e-bd51-bba6848bbb7a",
                "parentUUID": "4b36a919-649f-4064-8d5d-7b2c23c234f6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
        "uuid": "381a0581-0b8a-4d8a-b6ad-324a1fb197a6",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SetTeamNameRequestMessage",
        "suites": [
          {
            "title": "#teamName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "be7b8d8a-3ca8-4f32-888a-c5e7563bfc10",
                "parentUUID": "d78114bb-2995-4a1e-a5c9-99d93c7de631",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "cff63cd8-c593-49c4-a0bb-8b61bc56c821",
                "parentUUID": "d78114bb-2995-4a1e-a5c9-99d93c7de631",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "uuid": "d78114bb-2995-4a1e-a5c9-99d93c7de631",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "be7b8d8a-3ca8-4f32-888a-c5e7563bfc10",
                "parentUUID": "d78114bb-2995-4a1e-a5c9-99d93c7de631",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "cff63cd8-c593-49c4-a0bb-8b61bc56c821",
                "parentUUID": "d78114bb-2995-4a1e-a5c9-99d93c7de631",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "759bbf5c-5c5a-4ac3-9793-8ac92bd9b9ff",
                "parentUUID": "cc272c8a-d6a7-438f-adab-0c85204fa0c2",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e7c25c43-7e2b-4f30-b7f4-0421f65a8d72",
                "parentUUID": "cc272c8a-d6a7-438f-adab-0c85204fa0c2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "uuid": "cc272c8a-d6a7-438f-adab-0c85204fa0c2",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "759bbf5c-5c5a-4ac3-9793-8ac92bd9b9ff",
                "parentUUID": "cc272c8a-d6a7-438f-adab-0c85204fa0c2",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e7c25c43-7e2b-4f30-b7f4-0421f65a8d72",
                "parentUUID": "cc272c8a-d6a7-438f-adab-0c85204fa0c2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#contestantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "140a08b5-6b7b-4531-b309-2c932157cfa0",
                "parentUUID": "fc8f6926-2e5a-4036-90f0-ffb4c62d8505",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "0b01c64a-dcfa-4e2d-b6b5-c2cf8b1b6176",
                "parentUUID": "fc8f6926-2e5a-4036-90f0-ffb4c62d8505",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "uuid": "fc8f6926-2e5a-4036-90f0-ffb4c62d8505",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "140a08b5-6b7b-4531-b309-2c932157cfa0",
                "parentUUID": "fc8f6926-2e5a-4036-90f0-ffb4c62d8505",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "0b01c64a-dcfa-4e2d-b6b5-c2cf8b1b6176",
                "parentUUID": "fc8f6926-2e5a-4036-90f0-ffb4c62d8505",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SetTeamNameRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.contestantId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "d5ce82eb-c7e7-4dc0-82d9-20c2bcad38a0",
                "parentUUID": "674d48e4-5621-4cc4-bab9-9ab13b31bd77",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SetTeamNameRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "d4e880fe-db39-43d0-b7b3-19536c01e360",
                "parentUUID": "674d48e4-5621-4cc4-bab9-9ab13b31bd77",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "uuid": "674d48e4-5621-4cc4-bab9-9ab13b31bd77",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SetTeamNameRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.contestantId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "d5ce82eb-c7e7-4dc0-82d9-20c2bcad38a0",
                "parentUUID": "674d48e4-5621-4cc4-bab9-9ab13b31bd77",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SetTeamNameRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "d4e880fe-db39-43d0-b7b3-19536c01e360",
                "parentUUID": "674d48e4-5621-4cc4-bab9-9ab13b31bd77",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
        "uuid": "0f112f0d-f633-4f5f-aef6-bd000758d0a0",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SuccessMessage",
        "suites": [
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SuccessMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SuccessMessage();<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "d3e7ac6c-3f42-459b-88ef-3747856f6bb9",
                "parentUUID": "d6a0a904-41de-49d9-b78e-fcb2445236dc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SuccessMessageTests.js",
            "uuid": "d6a0a904-41de-49d9-b78e-fcb2445236dc",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SuccessMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SuccessMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SuccessMessage();<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "d3e7ac6c-3f42-459b-88ef-3747856f6bb9",
                "parentUUID": "d6a0a904-41de-49d9-b78e-fcb2445236dc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SuccessMessageTests.js",
        "uuid": "fe9fd8f4-3d8a-4c60-8c7d-213de9ab1b1a",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SuccessMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ParamCheck",
        "suites": [
          {
            "title": "#isInstanceAndTypeOf()",
            "suites": [],
            "tests": [
              {
                "title": "should return false when not referenced",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when not referenced",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf().should.be.false();",
                "isRoot": false,
                "uuid": "3914c90a-7acc-41f7-9526-a4ee58370285",
                "parentUUID": "30905ae6-4283-4a41-9eb9-b762bc3c4128",
                "skipped": false
              },
              {
                "title": "should return false when null",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when null",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">''</span>).should.be.false();",
                "isRoot": false,
                "uuid": "a426c6ad-6438-405f-be6f-a8d05dcd7042",
                "parentUUID": "30905ae6-4283-4a41-9eb9-b762bc3c4128",
                "skipped": false
              },
              {
                "title": "should return false when not the correct type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when not the correct type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'Int'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "55823c7d-3725-4329-b176-722f3c17d6ba",
                "parentUUID": "30905ae6-4283-4a41-9eb9-b762bc3c4128",
                "skipped": false
              },
              {
                "title": "should return true when is a built-in type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return true when is a built-in type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'Number'</span>).should.be.true();",
                "isRoot": false,
                "uuid": "d001c02d-36fc-4b6f-b490-6a09951d400d",
                "parentUUID": "30905ae6-4283-4a41-9eb9-b762bc3c4128",
                "skipped": false
              },
              {
                "title": "should return true when is user defined type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return true when is user defined type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-keyword\">new</span> UserDefinedType(),<br>    UserDefinedType).should.be.true();",
                "isRoot": false,
                "uuid": "70f83180-c34a-4516-85fa-33153e31d800",
                "parentUUID": "30905ae6-4283-4a41-9eb9-b762bc3c4128",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParamCheckTests.js",
            "uuid": "30905ae6-4283-4a41-9eb9-b762bc3c4128",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParamCheckTests.js",
            "passes": [
              {
                "title": "should return false when not referenced",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when not referenced",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf().should.be.false();",
                "isRoot": false,
                "uuid": "3914c90a-7acc-41f7-9526-a4ee58370285",
                "parentUUID": "30905ae6-4283-4a41-9eb9-b762bc3c4128",
                "skipped": false
              },
              {
                "title": "should return false when null",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when null",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">''</span>).should.be.false();",
                "isRoot": false,
                "uuid": "a426c6ad-6438-405f-be6f-a8d05dcd7042",
                "parentUUID": "30905ae6-4283-4a41-9eb9-b762bc3c4128",
                "skipped": false
              },
              {
                "title": "should return false when not the correct type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when not the correct type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'Int'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "55823c7d-3725-4329-b176-722f3c17d6ba",
                "parentUUID": "30905ae6-4283-4a41-9eb9-b762bc3c4128",
                "skipped": false
              },
              {
                "title": "should return true when is a built-in type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return true when is a built-in type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'Number'</span>).should.be.true();",
                "isRoot": false,
                "uuid": "d001c02d-36fc-4b6f-b490-6a09951d400d",
                "parentUUID": "30905ae6-4283-4a41-9eb9-b762bc3c4128",
                "skipped": false
              },
              {
                "title": "should return true when is user defined type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return true when is user defined type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-keyword\">new</span> UserDefinedType(),<br>    UserDefinedType).should.be.true();",
                "isRoot": false,
                "uuid": "70f83180-c34a-4516-85fa-33153e31d800",
                "parentUUID": "30905ae6-4283-4a41-9eb9-b762bc3c4128",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/ParamCheckTests.js",
        "uuid": "6385912b-8951-4e97-85d6-7ea60d89933a",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParamCheckTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Participants",
        "suites": [
          {
            "title": "#all",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participants #all should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "f4e274ce-f595-4d61-a92d-fd4334b89e61",
                "parentUUID": "e0ae8a3d-1549-4ad8-b5f2-4a1345e27bc7",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participants #all should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "a2e8aa95-4eb7-43b8-9283-b61facd01fd8",
                "parentUUID": "e0ae8a3d-1549-4ad8-b5f2-4a1345e27bc7",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Participants #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all.pop();<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "ca54c97d-e2e1-4fd2-9d1d-15d3fcfd3208",
                "parentUUID": "e0ae8a3d-1549-4ad8-b5f2-4a1345e27bc7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "e0ae8a3d-1549-4ad8-b5f2-4a1345e27bc7",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participants #all should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "f4e274ce-f595-4d61-a92d-fd4334b89e61",
                "parentUUID": "e0ae8a3d-1549-4ad8-b5f2-4a1345e27bc7",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participants #all should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "a2e8aa95-4eb7-43b8-9283-b61facd01fd8",
                "parentUUID": "e0ae8a3d-1549-4ad8-b5f2-4a1345e27bc7",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Participants #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all.pop();<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "ca54c97d-e2e1-4fd2-9d1d-15d3fcfd3208",
                "parentUUID": "e0ae8a3d-1549-4ad8-b5f2-4a1345e27bc7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#length",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participants #length should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.length = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "edf23dcb-47f0-4e91-a786-86b5ee5bb68c",
                "parentUUID": "fc00268c-277a-4a5d-9217-8963c5a29194",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participants #length should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "e25db090-ac88-4398-8f41-1f8cc470b8be",
                "parentUUID": "fc00268c-277a-4a5d-9217-8963c5a29194",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "fc00268c-277a-4a5d-9217-8963c5a29194",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participants #length should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.length = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "edf23dcb-47f0-4e91-a786-86b5ee5bb68c",
                "parentUUID": "fc00268c-277a-4a5d-9217-8963c5a29194",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participants #length should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "e25db090-ac88-4398-8f41-1f8cc470b8be",
                "parentUUID": "fc00268c-277a-4a5d-9217-8963c5a29194",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#contains(id)",
            "suites": [],
            "tests": [
              {
                "title": "should return true when id does exist",
                "fullTitle": "Participants #contains(id) should return true when id does exist",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(p.id).should.be.true();",
                "isRoot": false,
                "uuid": "ed48b72a-5b16-4e1b-9981-7952140175c8",
                "parentUUID": "40e3d6b1-15f3-4fe0-a00a-161b224bd37e",
                "skipped": false
              },
              {
                "title": "should return false when id does not exist",
                "fullTitle": "Participants #contains(id) should return false when id does not exist",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(<span class=\"hljs-string\">'p2'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "23f4ed27-adbb-406a-96a8-bcc83f0d3f89",
                "parentUUID": "40e3d6b1-15f3-4fe0-a00a-161b224bd37e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "40e3d6b1-15f3-4fe0-a00a-161b224bd37e",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should return true when id does exist",
                "fullTitle": "Participants #contains(id) should return true when id does exist",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(p.id).should.be.true();",
                "isRoot": false,
                "uuid": "ed48b72a-5b16-4e1b-9981-7952140175c8",
                "parentUUID": "40e3d6b1-15f3-4fe0-a00a-161b224bd37e",
                "skipped": false
              },
              {
                "title": "should return false when id does not exist",
                "fullTitle": "Participants #contains(id) should return false when id does not exist",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(<span class=\"hljs-string\">'p2'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "23f4ed27-adbb-406a-96a8-bcc83f0d3f89",
                "parentUUID": "40e3d6b1-15f3-4fe0-a00a-161b224bd37e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#add(participant)",
            "suites": [],
            "tests": [
              {
                "title": "should add the given participant",
                "fullTitle": "Participants #add(participant) should add the given participant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc._participants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc._participants[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "661ab90a-1a53-4a5c-8bcc-13fad39a3ea0",
                "parentUUID": "3b9a6a0d-dee6-45bc-9b79-ca4cb9f90e32",
                "skipped": false
              },
              {
                "title": "should error if participant with id already exists",
                "fullTitle": "Participants #add(participant) should error if participant with id already exists",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.add(p);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "cbbc7300-2b17-4e57-aa15-758faa0506c6",
                "parentUUID": "3b9a6a0d-dee6-45bc-9b79-ca4cb9f90e32",
                "skipped": false
              },
              {
                "title": "should emit add event",
                "fullTitle": "Participants #add(participant) should emit add event",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.on(<span class=\"hljs-string\">'add'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">participant</span>) </span>{<br>    participant.should.equal(p);<br>    done();<br>});<br>pc.add(p);",
                "isRoot": false,
                "uuid": "678d1372-7c74-4539-9116-364e9312ca0e",
                "parentUUID": "3b9a6a0d-dee6-45bc-9b79-ca4cb9f90e32",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "3b9a6a0d-dee6-45bc-9b79-ca4cb9f90e32",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should add the given participant",
                "fullTitle": "Participants #add(participant) should add the given participant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc._participants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc._participants[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "661ab90a-1a53-4a5c-8bcc-13fad39a3ea0",
                "parentUUID": "3b9a6a0d-dee6-45bc-9b79-ca4cb9f90e32",
                "skipped": false
              },
              {
                "title": "should error if participant with id already exists",
                "fullTitle": "Participants #add(participant) should error if participant with id already exists",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.add(p);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "cbbc7300-2b17-4e57-aa15-758faa0506c6",
                "parentUUID": "3b9a6a0d-dee6-45bc-9b79-ca4cb9f90e32",
                "skipped": false
              },
              {
                "title": "should emit add event",
                "fullTitle": "Participants #add(participant) should emit add event",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.on(<span class=\"hljs-string\">'add'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">participant</span>) </span>{<br>    participant.should.equal(p);<br>    done();<br>});<br>pc.add(p);",
                "isRoot": false,
                "uuid": "678d1372-7c74-4539-9116-364e9312ca0e",
                "parentUUID": "3b9a6a0d-dee6-45bc-9b79-ca4cb9f90e32",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#remove(participant)",
            "suites": [],
            "tests": [
              {
                "title": "should remove the existing participant",
                "fullTitle": "Participants #remove(participant) should remove the existing participant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "b623398c-386c-41b2-9ebb-25d156dfbe07",
                "parentUUID": "0ce16193-cf9d-4e92-a36d-7265ef300667",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing participant",
                "fullTitle": "Participants #remove(participant) should not remove the non-existing participant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p1).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "f71d70b4-6077-44aa-a884-83c7d38ff854",
                "parentUUID": "0ce16193-cf9d-4e92-a36d-7265ef300667",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "0ce16193-cf9d-4e92-a36d-7265ef300667",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should remove the existing participant",
                "fullTitle": "Participants #remove(participant) should remove the existing participant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "b623398c-386c-41b2-9ebb-25d156dfbe07",
                "parentUUID": "0ce16193-cf9d-4e92-a36d-7265ef300667",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing participant",
                "fullTitle": "Participants #remove(participant) should not remove the non-existing participant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p1).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "f71d70b4-6077-44aa-a884-83c7d38ff854",
                "parentUUID": "0ce16193-cf9d-4e92-a36d-7265ef300667",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#removeById(id)",
            "suites": [],
            "tests": [
              {
                "title": "should remove the existing participant",
                "fullTitle": "Participants #removeById(id) should remove the existing participant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p.id).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "f7152d36-8d21-48a0-9292-0fe6198d4dbd",
                "parentUUID": "4d2982b6-0420-45d9-82c0-f5b2e33c2e44",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing participant",
                "fullTitle": "Participants #removeById(id) should not remove the non-existing participant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p1.id).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "71279915-d4c3-4a84-bb4b-f7982374affa",
                "parentUUID": "4d2982b6-0420-45d9-82c0-f5b2e33c2e44",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "4d2982b6-0420-45d9-82c0-f5b2e33c2e44",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should remove the existing participant",
                "fullTitle": "Participants #removeById(id) should remove the existing participant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p.id).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "f7152d36-8d21-48a0-9292-0fe6198d4dbd",
                "parentUUID": "4d2982b6-0420-45d9-82c0-f5b2e33c2e44",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing participant",
                "fullTitle": "Participants #removeById(id) should not remove the non-existing participant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p1.id).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "71279915-d4c3-4a84-bb4b-f7982374affa",
                "parentUUID": "4d2982b6-0420-45d9-82c0-f5b2e33c2e44",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/ParticipantsTests.js",
        "uuid": "2c4ebd6f-8e78-4812-9199-f66fcbeea7b0",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Participant",
        "suites": [
          {
            "title": "#id",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Participant #id should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'id_test'</span>;<br>p._id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "ad8d448b-edfa-44ab-92da-157141a14f71",
                "parentUUID": "13d47fa4-00c7-4ff0-a1f1-b2e2f892aad2",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participant #id should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "f9220f11-ec08-4339-9334-d308b24f34ce",
                "parentUUID": "13d47fa4-00c7-4ff0-a1f1-b2e2f892aad2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantTests.js",
            "uuid": "13d47fa4-00c7-4ff0-a1f1-b2e2f892aad2",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Participant #id should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'id_test'</span>;<br>p._id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "ad8d448b-edfa-44ab-92da-157141a14f71",
                "parentUUID": "13d47fa4-00c7-4ff0-a1f1-b2e2f892aad2",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participant #id should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "f9220f11-ec08-4339-9334-d308b24f34ce",
                "parentUUID": "13d47fa4-00c7-4ff0-a1f1-b2e2f892aad2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isDisconnected",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participant #isDisconnected should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    p.isDisconnected = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "f7998bfd-7f52-4bc0-9e72-daf4a7ff7f33",
                "parentUUID": "d43ac891-eb7c-489a-b879-b857694c9c8b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participant #isDisconnected should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "4c56d82c-dd1e-4015-8601-bd62295ecd51",
                "parentUUID": "d43ac891-eb7c-489a-b879-b857694c9c8b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantTests.js",
            "uuid": "d43ac891-eb7c-489a-b879-b857694c9c8b",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participant #isDisconnected should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    p.isDisconnected = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "f7998bfd-7f52-4bc0-9e72-daf4a7ff7f33",
                "parentUUID": "d43ac891-eb7c-489a-b879-b857694c9c8b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participant #isDisconnected should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "4c56d82c-dd1e-4015-8601-bd62295ecd51",
                "parentUUID": "d43ac891-eb7c-489a-b879-b857694c9c8b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#disconnect()",
            "suites": [],
            "tests": [
              {
                "title": "should change participant state to disconnected",
                "fullTitle": "Participant #disconnect() should change participant state to disconnected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">false</span>;<br>p.disconnect();<br>p.isDisconnected.should.be.true();",
                "isRoot": false,
                "uuid": "df0f2e58-bb84-4e9d-a31b-cc0d651d9a20",
                "parentUUID": "50af584c-f42e-45ac-894c-7a184c8d6414",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantTests.js",
            "uuid": "50af584c-f42e-45ac-894c-7a184c8d6414",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantTests.js",
            "passes": [
              {
                "title": "should change participant state to disconnected",
                "fullTitle": "Participant #disconnect() should change participant state to disconnected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">false</span>;<br>p.disconnect();<br>p.isDisconnected.should.be.true();",
                "isRoot": false,
                "uuid": "df0f2e58-bb84-4e9d-a31b-cc0d651d9a20",
                "parentUUID": "50af584c-f42e-45ac-894c-7a184c8d6414",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#reconnect()",
            "suites": [],
            "tests": [
              {
                "title": "should change participant state to connected",
                "fullTitle": "Participant #reconnect() should change participant state to connected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">true</span>;<br>p.reconnect();<br>p.isDisconnected.should.be.false();",
                "isRoot": false,
                "uuid": "7ff55f27-d9a0-40f1-9b57-0945fab20507",
                "parentUUID": "0192dd0e-5e7d-4ec1-9d51-b7d593536f97",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantTests.js",
            "uuid": "0192dd0e-5e7d-4ec1-9d51-b7d593536f97",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantTests.js",
            "passes": [
              {
                "title": "should change participant state to connected",
                "fullTitle": "Participant #reconnect() should change participant state to connected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">true</span>;<br>p.reconnect();<br>p.isDisconnected.should.be.false();",
                "isRoot": false,
                "uuid": "7ff55f27-d9a0-40f1-9b57-0945fab20507",
                "parentUUID": "0192dd0e-5e7d-4ec1-9d51-b7d593536f97",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/ParticipantTests.js",
        "uuid": "fa3818ad-9e85-471f-aa65-a6255a9cf11f",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Sessions",
        "suites": [
          {
            "title": "#all",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Sessions #all should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    sc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "c12da7d8-7470-4392-a1cc-9a2acf3cac15",
                "parentUUID": "39b29604-83ba-4006-ae66-595dba0a6ead",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Sessions #all should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
                "isRoot": false,
                "uuid": "43faec0a-84d5-47ad-85ed-2b7aab269c52",
                "parentUUID": "39b29604-83ba-4006-ae66-595dba0a6ead",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Sessions #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all.pop();<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
                "isRoot": false,
                "uuid": "536ce079-02d2-4aec-a0db-772389409a8e",
                "parentUUID": "39b29604-83ba-4006-ae66-595dba0a6ead",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionsTests.js",
            "uuid": "39b29604-83ba-4006-ae66-595dba0a6ead",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionsTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Sessions #all should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    sc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "c12da7d8-7470-4392-a1cc-9a2acf3cac15",
                "parentUUID": "39b29604-83ba-4006-ae66-595dba0a6ead",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Sessions #all should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
                "isRoot": false,
                "uuid": "43faec0a-84d5-47ad-85ed-2b7aab269c52",
                "parentUUID": "39b29604-83ba-4006-ae66-595dba0a6ead",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Sessions #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all.pop();<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
                "isRoot": false,
                "uuid": "536ce079-02d2-4aec-a0db-772389409a8e",
                "parentUUID": "39b29604-83ba-4006-ae66-595dba0a6ead",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#add(host, settings)",
            "suites": [],
            "tests": [
              {
                "title": "add and return session",
                "fullTitle": "Sessions #add(host, settings) add and return session",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-keyword\">var</span> ses = sc.add(h, s);<br>ses.should.be.instanceof(Session);",
                "isRoot": false,
                "uuid": "0e4c1690-4cff-4a46-9098-239e80645c69",
                "parentUUID": "f96fece1-a4dc-4c18-98e2-a7469c4cdd6e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionsTests.js",
            "uuid": "f96fece1-a4dc-4c18-98e2-a7469c4cdd6e",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionsTests.js",
            "passes": [
              {
                "title": "add and return session",
                "fullTitle": "Sessions #add(host, settings) add and return session",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-keyword\">var</span> ses = sc.add(h, s);<br>ses.should.be.instanceof(Session);",
                "isRoot": false,
                "uuid": "0e4c1690-4cff-4a46-9098-239e80645c69",
                "parentUUID": "f96fece1-a4dc-4c18-98e2-a7469c4cdd6e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#getById(id)",
            "suites": [],
            "tests": [
              {
                "title": "when given valid id should return session",
                "fullTitle": "Sessions #getById(id) when given valid id should return session",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-comment\">/* eslint-disable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses1 = sc.add(h, s);<br><span class=\"hljs-comment\">/* eslint-enable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses2 = sc.add(h, s);<br><span class=\"hljs-keyword\">var</span> sessionLocate = sc.getById(ses2.id);<br>sessionLocate.should.be.instanceof(Session)<br>    .and.equal(ses2);",
                "isRoot": false,
                "uuid": "c7822b9c-4604-4030-9ac3-22483a935ef0",
                "parentUUID": "6f0818bb-875e-4238-9be8-f384c42a70a6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionsTests.js",
            "uuid": "6f0818bb-875e-4238-9be8-f384c42a70a6",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionsTests.js",
            "passes": [
              {
                "title": "when given valid id should return session",
                "fullTitle": "Sessions #getById(id) when given valid id should return session",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-comment\">/* eslint-disable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses1 = sc.add(h, s);<br><span class=\"hljs-comment\">/* eslint-enable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses2 = sc.add(h, s);<br><span class=\"hljs-keyword\">var</span> sessionLocate = sc.getById(ses2.id);<br>sessionLocate.should.be.instanceof(Session)<br>    .and.equal(ses2);",
                "isRoot": false,
                "uuid": "c7822b9c-4604-4030-9ac3-22483a935ef0",
                "parentUUID": "6f0818bb-875e-4238-9be8-f384c42a70a6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#purgeCompleted()",
            "suites": [],
            "tests": [
              {
                "title": "should remove complete sc",
                "fullTitle": "Sessions #purgeCompleted() should remove complete sc",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.all[<span class=\"hljs-number\">0</span>].complete();<br>sc.all[<span class=\"hljs-number\">1</span>].complete();<br>sc.purgeCompleted();<br>sc.all.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "8c3cf10d-4be1-4a7f-a161-80f63cdaae56",
                "parentUUID": "77c4bb76-3350-40e7-9c4e-a5345e4d6e4e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionsTests.js",
            "uuid": "77c4bb76-3350-40e7-9c4e-a5345e4d6e4e",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionsTests.js",
            "passes": [
              {
                "title": "should remove complete sc",
                "fullTitle": "Sessions #purgeCompleted() should remove complete sc",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.all[<span class=\"hljs-number\">0</span>].complete();<br>sc.all[<span class=\"hljs-number\">1</span>].complete();<br>sc.purgeCompleted();<br>sc.all.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "8c3cf10d-4be1-4a7f-a161-80f63cdaae56",
                "parentUUID": "77c4bb76-3350-40e7-9c4e-a5345e4d6e4e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/SessionsTests.js",
        "uuid": "e8bdf695-5278-44f9-a4cc-7a994ecab0a3",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionsTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Session",
        "suites": [
          {
            "title": "#constructor",
            "suites": [],
            "tests": [
              {
                "title": "should create teams",
                "fullTitle": "Session #constructor should create teams",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "49e2c445-8a2e-4d97-ba2d-4b4045bc8508",
                "parentUUID": "c9fbe38c-8a01-446c-8e73-d771785957e7",
                "skipped": false
              },
              {
                "title": "should not create teams",
                "fullTitle": "Session #constructor should not create teams",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>should(s.teams).be.null();",
                "isRoot": false,
                "uuid": "bfb0f6ab-01ab-42ef-a9f5-4d58e362b913",
                "parentUUID": "c9fbe38c-8a01-446c-8e73-d771785957e7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "c9fbe38c-8a01-446c-8e73-d771785957e7",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should create teams",
                "fullTitle": "Session #constructor should create teams",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "49e2c445-8a2e-4d97-ba2d-4b4045bc8508",
                "parentUUID": "c9fbe38c-8a01-446c-8e73-d771785957e7",
                "skipped": false
              },
              {
                "title": "should not create teams",
                "fullTitle": "Session #constructor should not create teams",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>should(s.teams).be.null();",
                "isRoot": false,
                "uuid": "bfb0f6ab-01ab-42ef-a9f5-4d58e362b913",
                "parentUUID": "c9fbe38c-8a01-446c-8e73-d771785957e7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "#id",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #id should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.id = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "dd239392-bfce-48ac-8d09-57b9cf361c2e",
                "parentUUID": "5828e78b-e477-4467-a114-b2c3ae93eb87",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #id should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "8317ee5d-f531-4605-b705-ba570b3ce183",
                "parentUUID": "5828e78b-e477-4467-a114-b2c3ae93eb87",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "5828e78b-e477-4467-a114-b2c3ae93eb87",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #id should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.id = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "dd239392-bfce-48ac-8d09-57b9cf361c2e",
                "parentUUID": "5828e78b-e477-4467-a114-b2c3ae93eb87",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #id should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "8317ee5d-f531-4605-b705-ba570b3ce183",
                "parentUUID": "5828e78b-e477-4467-a114-b2c3ae93eb87",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#roundsPlayed",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #roundsPlayed should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundsPlayed = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "a578b1ba-0c9f-4955-b23e-74c64482720d",
                "parentUUID": "b24eb933-9aae-47ae-a0ba-0424b704e257",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #roundsPlayed should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "41b9852a-a0f2-44f0-9df2-4b5aec62c1e2",
                "parentUUID": "b24eb933-9aae-47ae-a0ba-0424b704e257",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "b24eb933-9aae-47ae-a0ba-0424b704e257",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #roundsPlayed should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundsPlayed = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "a578b1ba-0c9f-4955-b23e-74c64482720d",
                "parentUUID": "b24eb933-9aae-47ae-a0ba-0424b704e257",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #roundsPlayed should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "41b9852a-a0f2-44f0-9df2-4b5aec62c1e2",
                "parentUUID": "b24eb933-9aae-47ae-a0ba-0424b704e257",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#previousWinners",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #previousWinners should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.previousWinners = [<span class=\"hljs-string\">'SomeWinner'</span>];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "5b69452c-90f6-468c-8023-fb3c2b22c96f",
                "parentUUID": "38197ed5-bfc5-48d2-b531-a96b5bdf6de5",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #previousWinners should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._previousWinners = [<span class=\"hljs-string\">'Winner1'</span>, <span class=\"hljs-string\">'Winner2'</span>];<br>s.previousWinners.should.be.Array();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
                "isRoot": false,
                "uuid": "c14ecd4c-28c8-4ba1-aaac-efb0343fa438",
                "parentUUID": "38197ed5-bfc5-48d2-b531-a96b5bdf6de5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "38197ed5-bfc5-48d2-b531-a96b5bdf6de5",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #previousWinners should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.previousWinners = [<span class=\"hljs-string\">'SomeWinner'</span>];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "5b69452c-90f6-468c-8023-fb3c2b22c96f",
                "parentUUID": "38197ed5-bfc5-48d2-b531-a96b5bdf6de5",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #previousWinners should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._previousWinners = [<span class=\"hljs-string\">'Winner1'</span>, <span class=\"hljs-string\">'Winner2'</span>];<br>s.previousWinners.should.be.Array();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
                "isRoot": false,
                "uuid": "c14ecd4c-28c8-4ba1-aaac-efb0343fa438",
                "parentUUID": "38197ed5-bfc5-48d2-b531-a96b5bdf6de5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#roundWinner",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #roundWinner should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundWinner = <span class=\"hljs-string\">'SomeWinner'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "8628a6ef-4f12-4060-a945-0ab8ff429025",
                "parentUUID": "ccebf1a5-19cf-4d43-a33c-1440fd06d19b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #roundWinner should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundWinner = <span class=\"hljs-string\">'Winner1'</span>;<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
                "isRoot": false,
                "uuid": "73ec07db-39c3-4395-8d66-cdce6b9f98df",
                "parentUUID": "ccebf1a5-19cf-4d43-a33c-1440fd06d19b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "ccebf1a5-19cf-4d43-a33c-1440fd06d19b",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #roundWinner should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundWinner = <span class=\"hljs-string\">'SomeWinner'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "8628a6ef-4f12-4060-a945-0ab8ff429025",
                "parentUUID": "ccebf1a5-19cf-4d43-a33c-1440fd06d19b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #roundWinner should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundWinner = <span class=\"hljs-string\">'Winner1'</span>;<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
                "isRoot": false,
                "uuid": "73ec07db-39c3-4395-8d66-cdce6b9f98df",
                "parentUUID": "ccebf1a5-19cf-4d43-a33c-1440fd06d19b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isSessionCompleted",
            "suites": [],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "caf7fa25-ba7c-4c42-925d-1d07c2bbe139",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasSuites": false,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#observers",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #observers should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.observers = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "3638a1cf-4a13-4d4e-a96a-8490628c6ff6",
                "parentUUID": "3d63b119-911f-4369-97f6-b25c8c731e6a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #observers should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.observers.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.observers[<span class=\"hljs-number\">0</span>].should.equal(observer);",
                "isRoot": false,
                "uuid": "addfc944-b7aa-4a4f-b4ac-6df7bf410434",
                "parentUUID": "3d63b119-911f-4369-97f6-b25c8c731e6a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "3d63b119-911f-4369-97f6-b25c8c731e6a",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #observers should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.observers = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "3638a1cf-4a13-4d4e-a96a-8490628c6ff6",
                "parentUUID": "3d63b119-911f-4369-97f6-b25c8c731e6a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #observers should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.observers.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.observers[<span class=\"hljs-number\">0</span>].should.equal(observer);",
                "isRoot": false,
                "uuid": "addfc944-b7aa-4a4f-b4ac-6df7bf410434",
                "parentUUID": "3d63b119-911f-4369-97f6-b25c8c731e6a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#contestants",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #contestants should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.contestants = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "f3a4c0a5-2e7c-45bc-a782-6cf96c2d0097",
                "parentUUID": "b3e61a8e-63c3-445d-938d-432832417056",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #contestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.contestants[<span class=\"hljs-number\">0</span>].should.equal(contestant);",
                "isRoot": false,
                "uuid": "e6ac0e63-e03c-4358-8958-fbf52ced7fa4",
                "parentUUID": "b3e61a8e-63c3-445d-938d-432832417056",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "b3e61a8e-63c3-445d-938d-432832417056",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #contestants should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.contestants = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "f3a4c0a5-2e7c-45bc-a782-6cf96c2d0097",
                "parentUUID": "b3e61a8e-63c3-445d-938d-432832417056",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #contestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.contestants[<span class=\"hljs-number\">0</span>].should.equal(contestant);",
                "isRoot": false,
                "uuid": "e6ac0e63-e03c-4358-8958-fbf52ced7fa4",
                "parentUUID": "b3e61a8e-63c3-445d-938d-432832417056",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#host",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #host should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.host = host;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "53bc3ac4-753e-4ad4-a117-b2838cc38db7",
                "parentUUID": "361b12c4-5371-4a0e-9b81-6d8b63761db0",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #host should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.host.should.equal(host);",
                "isRoot": false,
                "uuid": "bd42ba65-7aa0-4298-b40e-592c640bfb4c",
                "parentUUID": "361b12c4-5371-4a0e-9b81-6d8b63761db0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "361b12c4-5371-4a0e-9b81-6d8b63761db0",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #host should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.host = host;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "53bc3ac4-753e-4ad4-a117-b2838cc38db7",
                "parentUUID": "361b12c4-5371-4a0e-9b81-6d8b63761db0",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #host should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.host.should.equal(host);",
                "isRoot": false,
                "uuid": "bd42ba65-7aa0-4298-b40e-592c640bfb4c",
                "parentUUID": "361b12c4-5371-4a0e-9b81-6d8b63761db0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#currentState",
            "suites": [],
            "tests": [
              {
                "title": "should get value",
                "fullTitle": "Session #currentState should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
                "isRoot": false,
                "uuid": "a174024c-7646-4d8e-9820-876781e023be",
                "parentUUID": "548bb93a-547a-4217-bfa4-435ce2658c17",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "548bb93a-547a-4217-bfa4-435ce2658c17",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should get value",
                "fullTitle": "Session #currentState should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
                "isRoot": false,
                "uuid": "a174024c-7646-4d8e-9820-876781e023be",
                "parentUUID": "548bb93a-547a-4217-bfa4-435ce2658c17",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#incrementRoundsPlayed()",
            "suites": [],
            "tests": [
              {
                "title": "should increment rounds played",
                "fullTitle": "Session #incrementRoundsPlayed() should increment rounds played",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.incrementRoundsPlayed();<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "a664863c-8faa-4c8c-a679-a254cd66f2ac",
                "parentUUID": "ea5645a0-1045-4a6f-a00e-c97584e35330",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "ea5645a0-1045-4a6f-a00e-c97584e35330",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should increment rounds played",
                "fullTitle": "Session #incrementRoundsPlayed() should increment rounds played",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.incrementRoundsPlayed();<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "a664863c-8faa-4c8c-a679-a254cd66f2ac",
                "parentUUID": "ea5645a0-1045-4a6f-a00e-c97584e35330",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#addContestant(contestant)",
            "suites": [
              {
                "title": "when in individual mode",
                "suites": [],
                "tests": [
                  {
                    "title": "should add contestant when session is not full",
                    "fullTitle": "#addContestant(contestant) when in individual mode should add contestant when session is not full",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
                    "isRoot": false,
                    "uuid": "effc5e67-219b-4009-8f6a-c80f3a7e5bfe",
                    "parentUUID": "10b83dd9-938d-40eb-b857-84408720b96f",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when session is full",
                    "fullTitle": "#addContestant(contestant) when in individual mode should not add contestant when session is full",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br>s.addContestant(c2);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();",
                    "isRoot": false,
                    "uuid": "132a1432-d3ae-46d9-a13b-5f76e54ae16c",
                    "parentUUID": "10b83dd9-938d-40eb-b857-84408720b96f",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when username is already taken",
                    "fullTitle": "#addContestant(contestant) when in individual mode should not add contestant when username is already taken",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "4f258d03-e754-4f42-9713-e23758c0e79b",
                    "parentUUID": "10b83dd9-938d-40eb-b857-84408720b96f",
                    "skipped": false
                  },
                  {
                    "title": "BUG# username case should not matter",
                    "fullTitle": "#addContestant(contestant) when in individual mode BUG# username case should not matter",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'abc1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'ABC1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "f693e818-4b9f-4f33-8076-2b0f20c7f744",
                    "parentUUID": "10b83dd9-938d-40eb-b857-84408720b96f",
                    "skipped": false
                  },
                  {
                    "title": "should allow unlimited contestants when max is set to constants.UNLIMITED",
                    "fullTitle": "#addContestant(contestant) when in individual mode should allow unlimited contestants when max is set to constants.UNLIMITED",
                    "timedOut": false,
                    "duration": 539,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = constants.UNLIMITED;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    <span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>    c.username = <span class=\"hljs-string\">'c'</span> + i;<br>    <span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>    response.wasSuccessful.should.be.true();<br>}",
                    "isRoot": false,
                    "uuid": "640f90b1-c038-408c-ad2f-61de23c1726f",
                    "parentUUID": "10b83dd9-938d-40eb-b857-84408720b96f",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "10b83dd9-938d-40eb-b857-84408720b96f",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should add contestant when session is not full",
                    "fullTitle": "#addContestant(contestant) when in individual mode should add contestant when session is not full",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
                    "isRoot": false,
                    "uuid": "effc5e67-219b-4009-8f6a-c80f3a7e5bfe",
                    "parentUUID": "10b83dd9-938d-40eb-b857-84408720b96f",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when session is full",
                    "fullTitle": "#addContestant(contestant) when in individual mode should not add contestant when session is full",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br>s.addContestant(c2);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();",
                    "isRoot": false,
                    "uuid": "132a1432-d3ae-46d9-a13b-5f76e54ae16c",
                    "parentUUID": "10b83dd9-938d-40eb-b857-84408720b96f",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when username is already taken",
                    "fullTitle": "#addContestant(contestant) when in individual mode should not add contestant when username is already taken",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "4f258d03-e754-4f42-9713-e23758c0e79b",
                    "parentUUID": "10b83dd9-938d-40eb-b857-84408720b96f",
                    "skipped": false
                  },
                  {
                    "title": "BUG# username case should not matter",
                    "fullTitle": "#addContestant(contestant) when in individual mode BUG# username case should not matter",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'abc1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'ABC1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "f693e818-4b9f-4f33-8076-2b0f20c7f744",
                    "parentUUID": "10b83dd9-938d-40eb-b857-84408720b96f",
                    "skipped": false
                  },
                  {
                    "title": "should allow unlimited contestants when max is set to constants.UNLIMITED",
                    "fullTitle": "#addContestant(contestant) when in individual mode should allow unlimited contestants when max is set to constants.UNLIMITED",
                    "timedOut": false,
                    "duration": 539,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = constants.UNLIMITED;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    <span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>    c.username = <span class=\"hljs-string\">'c'</span> + i;<br>    <span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>    response.wasSuccessful.should.be.true();<br>}",
                    "isRoot": false,
                    "uuid": "640f90b1-c038-408c-ad2f-61de23c1726f",
                    "parentUUID": "10b83dd9-938d-40eb-b857-84408720b96f",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 5,
                "totalPasses": 5,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 541
              },
              {
                "title": "when in team mode",
                "suites": [],
                "tests": [
                  {
                    "title": "should add contestant when teams is not full",
                    "fullTitle": "#addContestant(contestant) when in team mode should add contestant when teams is not full",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
                    "isRoot": false,
                    "uuid": "8cf426cc-67a5-490c-8db7-46fd5ce2ba3b",
                    "parentUUID": "475073d3-cb90-4265-8389-c3d1847fcdb6",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when teams are full",
                    "fullTitle": "#addContestant(contestant) when in team mode should not add contestant when teams are full",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.TEAMS_ARE_FULL);",
                    "isRoot": false,
                    "uuid": "7c0c1327-67a7-455b-beef-6d8cad652371",
                    "parentUUID": "475073d3-cb90-4265-8389-c3d1847fcdb6",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when username is already taken",
                    "fullTitle": "#addContestant(contestant) when in team mode should not add contestant when username is already taken",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "2041fd88-0ccd-4301-bbe7-f9d29e40bdec",
                    "parentUUID": "475073d3-cb90-4265-8389-c3d1847fcdb6",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "475073d3-cb90-4265-8389-c3d1847fcdb6",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should add contestant when teams is not full",
                    "fullTitle": "#addContestant(contestant) when in team mode should add contestant when teams is not full",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
                    "isRoot": false,
                    "uuid": "8cf426cc-67a5-490c-8db7-46fd5ce2ba3b",
                    "parentUUID": "475073d3-cb90-4265-8389-c3d1847fcdb6",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when teams are full",
                    "fullTitle": "#addContestant(contestant) when in team mode should not add contestant when teams are full",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.TEAMS_ARE_FULL);",
                    "isRoot": false,
                    "uuid": "7c0c1327-67a7-455b-beef-6d8cad652371",
                    "parentUUID": "475073d3-cb90-4265-8389-c3d1847fcdb6",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when username is already taken",
                    "fullTitle": "#addContestant(contestant) when in team mode should not add contestant when username is already taken",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "2041fd88-0ccd-4301-bbe7-f9d29e40bdec",
                    "parentUUID": "475073d3-cb90-4265-8389-c3d1847fcdb6",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 5
              }
            ],
            "tests": [
              {
                "title": "should not allow a contestant username with bad words",
                "fullTitle": "Session #addContestant(contestant) should not allow a contestant username with bad words",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Penis #YOLO'</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_CONTAINS_PROFANITY);",
                "isRoot": false,
                "uuid": "0e7b7c28-6a47-4934-b98c-4694405b47c3",
                "parentUUID": "721b96d3-0f1a-4610-b536-774c459741df",
                "skipped": false
              },
              {
                "title": "should not allow when username is empty",
                "fullTitle": "Session #addContestant(contestant) should not allow when username is empty",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">' '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_IS_REQUIRED);",
                "isRoot": false,
                "uuid": "47633779-0d3b-4b1f-b758-c67f64c53ff4",
                "parentUUID": "721b96d3-0f1a-4610-b536-774c459741df",
                "skipped": false
              },
              {
                "title": "should trim username",
                "fullTitle": "Session #addContestant(contestant) should trim username",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Wade  '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>c.username.should.equal(<span class=\"hljs-string\">'Wade'</span>);",
                "isRoot": false,
                "uuid": "73ce1e61-c979-493c-be68-0e6b4ba0fc1b",
                "parentUUID": "721b96d3-0f1a-4610-b536-774c459741df",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "721b96d3-0f1a-4610-b536-774c459741df",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should not allow a contestant username with bad words",
                "fullTitle": "Session #addContestant(contestant) should not allow a contestant username with bad words",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Penis #YOLO'</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_CONTAINS_PROFANITY);",
                "isRoot": false,
                "uuid": "0e7b7c28-6a47-4934-b98c-4694405b47c3",
                "parentUUID": "721b96d3-0f1a-4610-b536-774c459741df",
                "skipped": false
              },
              {
                "title": "should not allow when username is empty",
                "fullTitle": "Session #addContestant(contestant) should not allow when username is empty",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">' '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_IS_REQUIRED);",
                "isRoot": false,
                "uuid": "47633779-0d3b-4b1f-b758-c67f64c53ff4",
                "parentUUID": "721b96d3-0f1a-4610-b536-774c459741df",
                "skipped": false
              },
              {
                "title": "should trim username",
                "fullTitle": "Session #addContestant(contestant) should trim username",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Wade  '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>c.username.should.equal(<span class=\"hljs-string\">'Wade'</span>);",
                "isRoot": false,
                "uuid": "73ce1e61-c979-493c-be68-0e6b4ba0fc1b",
                "parentUUID": "721b96d3-0f1a-4610-b536-774c459741df",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 8
          },
          {
            "title": "#subscribeForStateChange(event, callback)",
            "suites": [],
            "tests": [
              {
                "title": "should subscribe callback to the correct event",
                "fullTitle": "Session #subscribeForStateChange(event, callback) should subscribe callback to the correct event",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> r = s.addContestant(c);<br>r.wasSuccessful.should.be.true();<br>s.subscribeForStateChange(<span class=\"hljs-string\">'onpending'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">session, event, from, to</span>) </span>{<br>    session.should.equal(s);<br>    event.should.equal(<span class=\"hljs-string\">'buzzerPressed'</span>);<br>    from.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>    to.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>    done();<br>});<br>s.tryBuzzerPressRegister(c.id).should.be.true();",
                "isRoot": false,
                "uuid": "04a09a58-e50c-426a-af2d-998de56740cd",
                "parentUUID": "c82920c4-eaa6-4b4c-819d-940f6a0bac96",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "c82920c4-eaa6-4b4c-819d-940f6a0bac96",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should subscribe callback to the correct event",
                "fullTitle": "Session #subscribeForStateChange(event, callback) should subscribe callback to the correct event",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> r = s.addContestant(c);<br>r.wasSuccessful.should.be.true();<br>s.subscribeForStateChange(<span class=\"hljs-string\">'onpending'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">session, event, from, to</span>) </span>{<br>    session.should.equal(s);<br>    event.should.equal(<span class=\"hljs-string\">'buzzerPressed'</span>);<br>    from.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>    to.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>    done();<br>});<br>s.tryBuzzerPressRegister(c.id).should.be.true();",
                "isRoot": false,
                "uuid": "04a09a58-e50c-426a-af2d-998de56740cd",
                "parentUUID": "c82920c4-eaa6-4b4c-819d-940f6a0bac96",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "tryBuzzerPressRegister(contestantId)",
            "suites": [],
            "tests": [
              {
                "title": "should register when state is ready",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should register when state is ready",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);",
                "isRoot": false,
                "uuid": "60d33cff-4f13-4fc2-a105-ca31c6a6aaea",
                "parentUUID": "fd193ff5-64b3-4c1d-9247-decabf549249",
                "skipped": false
              },
              {
                "title": "should not register when state is not ready",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not register when state is not ready",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.false();",
                "isRoot": false,
                "uuid": "94541ec5-6ef9-4427-88c2-02499251bba3",
                "parentUUID": "fd193ff5-64b3-4c1d-9247-decabf549249",
                "skipped": false
              },
              {
                "title": "should not register when contestant does not exist",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not register when contestant does not exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(idUtility.generateParticipantId()).should.be.false();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
                "isRoot": false,
                "uuid": "7950f0e5-0981-470f-a355-43dfd7841dc6",
                "parentUUID": "fd193ff5-64b3-4c1d-9247-decabf549249",
                "skipped": false
              },
              {
                "title": "should not replace previous round winner with pending contestant",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not replace previous round winner with pending contestant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                "isRoot": false,
                "uuid": "04a37cb5-c48b-4aa5-b1bb-ee58c66d4ff4",
                "parentUUID": "fd193ff5-64b3-4c1d-9247-decabf549249",
                "skipped": false
              },
              {
                "title": "should not add previous round winner to winners list",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not add previous round winner to winners list",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "176ee8f3-dd5e-4227-afbf-4d2887124029",
                "parentUUID": "fd193ff5-64b3-4c1d-9247-decabf549249",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "fd193ff5-64b3-4c1d-9247-decabf549249",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should register when state is ready",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should register when state is ready",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);",
                "isRoot": false,
                "uuid": "60d33cff-4f13-4fc2-a105-ca31c6a6aaea",
                "parentUUID": "fd193ff5-64b3-4c1d-9247-decabf549249",
                "skipped": false
              },
              {
                "title": "should not register when state is not ready",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not register when state is not ready",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.false();",
                "isRoot": false,
                "uuid": "94541ec5-6ef9-4427-88c2-02499251bba3",
                "parentUUID": "fd193ff5-64b3-4c1d-9247-decabf549249",
                "skipped": false
              },
              {
                "title": "should not register when contestant does not exist",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not register when contestant does not exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(idUtility.generateParticipantId()).should.be.false();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
                "isRoot": false,
                "uuid": "7950f0e5-0981-470f-a355-43dfd7841dc6",
                "parentUUID": "fd193ff5-64b3-4c1d-9247-decabf549249",
                "skipped": false
              },
              {
                "title": "should not replace previous round winner with pending contestant",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not replace previous round winner with pending contestant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                "isRoot": false,
                "uuid": "04a37cb5-c48b-4aa5-b1bb-ee58c66d4ff4",
                "parentUUID": "fd193ff5-64b3-4c1d-9247-decabf549249",
                "skipped": false
              },
              {
                "title": "should not add previous round winner to winners list",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not add previous round winner to winners list",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "176ee8f3-dd5e-4227-afbf-4d2887124029",
                "parentUUID": "fd193ff5-64b3-4c1d-9247-decabf549249",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "tryBuzzerAction(action)",
            "suites": [
              {
                "title": "action->ACCEPT",
                "suites": [],
                "tests": [
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should allow when game state is pending",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();",
                    "isRoot": false,
                    "uuid": "902efc95-b372-449e-a7e7-38c7278a9900",
                    "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not pending",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should not allow when game state is not pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.false();",
                    "isRoot": false,
                    "uuid": "384962e3-72c9-4af2-a12c-ab832b962422",
                    "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
                    "skipped": false
                  },
                  {
                    "title": "should update contestant's score",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should update contestant's score",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "7bec81ee-5ee5-4980-bb00-578b34e1e346",
                    "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
                    "skipped": false
                  },
                  {
                    "title": "should update contestant's team score",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should update contestant's team score",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>s.teams.all[<span class=\"hljs-number\">0</span>].score.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "32f769da-9df4-4a7b-bc24-fc0530c80b4d",
                    "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "936d2e43-88ea-4238-8c7e-eaf84895ab2c",
                    "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should change game state back to ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "8c3fdede-0ade-45b0-bcb1-b30f934dbb1b",
                    "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
                    "skipped": false
                  },
                  {
                    "title": "should clear pending winner",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should clear pending winner",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>should(s.pendingWinner).be.null();",
                    "isRoot": false,
                    "uuid": "8c6cca0c-f57f-41cf-b3ae-caef9e27481c",
                    "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "97fdda70-d6f7-46c5-a119-5183aa66be06",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should allow when game state is pending",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();",
                    "isRoot": false,
                    "uuid": "902efc95-b372-449e-a7e7-38c7278a9900",
                    "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not pending",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should not allow when game state is not pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.false();",
                    "isRoot": false,
                    "uuid": "384962e3-72c9-4af2-a12c-ab832b962422",
                    "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
                    "skipped": false
                  },
                  {
                    "title": "should update contestant's score",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should update contestant's score",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "7bec81ee-5ee5-4980-bb00-578b34e1e346",
                    "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
                    "skipped": false
                  },
                  {
                    "title": "should update contestant's team score",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should update contestant's team score",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>s.teams.all[<span class=\"hljs-number\">0</span>].score.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "32f769da-9df4-4a7b-bc24-fc0530c80b4d",
                    "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "936d2e43-88ea-4238-8c7e-eaf84895ab2c",
                    "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should change game state back to ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "8c3fdede-0ade-45b0-bcb1-b30f934dbb1b",
                    "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
                    "skipped": false
                  },
                  {
                    "title": "should clear pending winner",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should clear pending winner",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>should(s.pendingWinner).be.null();",
                    "isRoot": false,
                    "uuid": "8c6cca0c-f57f-41cf-b3ae-caef9e27481c",
                    "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 7,
                "totalPasses": 7,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 4
              },
              {
                "title": "action->REJECT",
                "suites": [],
                "tests": [
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should allow when game state is pending",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();",
                    "isRoot": false,
                    "uuid": "f4cef039-a55b-4a6b-8481-6b89b84ba105",
                    "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not pending",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not allow when game state is not pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.false();",
                    "isRoot": false,
                    "uuid": "558709ed-c5c9-4ed0-8304-9792e495ada9",
                    "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
                    "skipped": false
                  },
                  {
                    "title": "should not replace round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not replace round winner with pending contestant",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "b5fb6466-eccd-44d7-9170-e1ffe75dd631",
                    "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
                    "skipped": false
                  },
                  {
                    "title": "should not update pending contestant's score",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not update pending contestant's score",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.score.should.equal(<span class=\"hljs-number\">0</span>);",
                    "isRoot": false,
                    "uuid": "c5171f42-bfb1-4e93-8b95-3e048e9ed311",
                    "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
                    "skipped": false
                  },
                  {
                    "title": "should add round winner to previous winners list",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should add round winner to previous winners list",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "1135df99-43b5-4003-b994-66bb16262b27",
                    "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should change game state back to ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "91b443b5-ae60-4fd1-b81d-43e95b598449",
                    "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should allow when game state is pending",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();",
                    "isRoot": false,
                    "uuid": "f4cef039-a55b-4a6b-8481-6b89b84ba105",
                    "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not pending",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not allow when game state is not pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.false();",
                    "isRoot": false,
                    "uuid": "558709ed-c5c9-4ed0-8304-9792e495ada9",
                    "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
                    "skipped": false
                  },
                  {
                    "title": "should not replace round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not replace round winner with pending contestant",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "b5fb6466-eccd-44d7-9170-e1ffe75dd631",
                    "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
                    "skipped": false
                  },
                  {
                    "title": "should not update pending contestant's score",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not update pending contestant's score",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.score.should.equal(<span class=\"hljs-number\">0</span>);",
                    "isRoot": false,
                    "uuid": "c5171f42-bfb1-4e93-8b95-3e048e9ed311",
                    "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
                    "skipped": false
                  },
                  {
                    "title": "should add round winner to previous winners list",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should add round winner to previous winners list",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "1135df99-43b5-4003-b994-66bb16262b27",
                    "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should change game state back to ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "91b443b5-ae60-4fd1-b81d-43e95b598449",
                    "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 6,
                "totalPasses": 6,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 4
              },
              {
                "title": "action->RESET",
                "suites": [],
                "tests": [
                  {
                    "title": "should allow when game state is ready",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should allow when game state is ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
                    "isRoot": false,
                    "uuid": "925140c4-28ae-4609-9877-766bf040bcb0",
                    "parentUUID": "ec6fea85-5456-4624-926c-86ab7b040c04",
                    "skipped": false
                  },
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should allow when game state is pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
                    "isRoot": false,
                    "uuid": "2d4bf9fe-7c64-4dc2-b8d2-811da0cad893",
                    "parentUUID": "ec6fea85-5456-4624-926c-86ab7b040c04",
                    "skipped": false
                  },
                  {
                    "title": "should not replace previous round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should not replace previous round winner with pending contestant",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "e3d7303f-2757-4036-80cf-9a17804d3903",
                    "parentUUID": "ec6fea85-5456-4624-926c-86ab7b040c04",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "2c22abd7-8b65-4a67-80cc-e9f73e6aba1c",
                    "parentUUID": "ec6fea85-5456-4624-926c-86ab7b040c04",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should change game state back to ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "acd34f17-e314-48b3-8df4-06c95a36e430",
                    "parentUUID": "ec6fea85-5456-4624-926c-86ab7b040c04",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "ec6fea85-5456-4624-926c-86ab7b040c04",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should allow when game state is ready",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should allow when game state is ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
                    "isRoot": false,
                    "uuid": "925140c4-28ae-4609-9877-766bf040bcb0",
                    "parentUUID": "ec6fea85-5456-4624-926c-86ab7b040c04",
                    "skipped": false
                  },
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should allow when game state is pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
                    "isRoot": false,
                    "uuid": "2d4bf9fe-7c64-4dc2-b8d2-811da0cad893",
                    "parentUUID": "ec6fea85-5456-4624-926c-86ab7b040c04",
                    "skipped": false
                  },
                  {
                    "title": "should not replace previous round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should not replace previous round winner with pending contestant",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "e3d7303f-2757-4036-80cf-9a17804d3903",
                    "parentUUID": "ec6fea85-5456-4624-926c-86ab7b040c04",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "2c22abd7-8b65-4a67-80cc-e9f73e6aba1c",
                    "parentUUID": "ec6fea85-5456-4624-926c-86ab7b040c04",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should change game state back to ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "acd34f17-e314-48b3-8df4-06c95a36e430",
                    "parentUUID": "ec6fea85-5456-4624-926c-86ab7b040c04",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 5,
                "totalPasses": 5,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 3
              },
              {
                "title": "action->DISABLE",
                "suites": [],
                "tests": [
                  {
                    "title": "should allow when game state is ready",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should allow when game state is ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "5f0b5f78-2ab1-4e58-ab89-b53f021ec5cb",
                    "parentUUID": "2b6b1632-48bc-4560-a376-474493d0dee7",
                    "skipped": false
                  },
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should allow when game state is pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "6f8ffaf6-fcbb-4877-8b2d-dc2a90b693bd",
                    "parentUUID": "2b6b1632-48bc-4560-a376-474493d0dee7",
                    "skipped": false
                  },
                  {
                    "title": "should not replace previous round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should not replace previous round winner with pending contestant",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "283e16d4-4142-410c-8894-f0951370e400",
                    "parentUUID": "2b6b1632-48bc-4560-a376-474493d0dee7",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "1eff6550-41fe-4ecd-9027-c7fadf19f947",
                    "parentUUID": "2b6b1632-48bc-4560-a376-474493d0dee7",
                    "skipped": false
                  },
                  {
                    "title": "should change game state to buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should change game state to buzzerLock",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.BUZZER_LOCK);",
                    "isRoot": false,
                    "uuid": "e93ccacb-e660-44b7-a0fc-dfd78f6c460d",
                    "parentUUID": "2b6b1632-48bc-4560-a376-474493d0dee7",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "2b6b1632-48bc-4560-a376-474493d0dee7",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should allow when game state is ready",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should allow when game state is ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "5f0b5f78-2ab1-4e58-ab89-b53f021ec5cb",
                    "parentUUID": "2b6b1632-48bc-4560-a376-474493d0dee7",
                    "skipped": false
                  },
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should allow when game state is pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "6f8ffaf6-fcbb-4877-8b2d-dc2a90b693bd",
                    "parentUUID": "2b6b1632-48bc-4560-a376-474493d0dee7",
                    "skipped": false
                  },
                  {
                    "title": "should not replace previous round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should not replace previous round winner with pending contestant",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "283e16d4-4142-410c-8894-f0951370e400",
                    "parentUUID": "2b6b1632-48bc-4560-a376-474493d0dee7",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "1eff6550-41fe-4ecd-9027-c7fadf19f947",
                    "parentUUID": "2b6b1632-48bc-4560-a376-474493d0dee7",
                    "skipped": false
                  },
                  {
                    "title": "should change game state to buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should change game state to buzzerLock",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.BUZZER_LOCK);",
                    "isRoot": false,
                    "uuid": "e93ccacb-e660-44b7-a0fc-dfd78f6c460d",
                    "parentUUID": "2b6b1632-48bc-4560-a376-474493d0dee7",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 5,
                "totalPasses": 5,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 6
              },
              {
                "title": "action->ENABLE",
                "suites": [],
                "tests": [
                  {
                    "title": "should allow when game state is buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should allow when game state is buzzerLock",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "57245c29-f697-4e75-9a80-82e5f541783a",
                    "parentUUID": "e8e1e7bd-6809-4d22-bdb2-b4dcbe77bca6",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should not allow when game state is not buzzerLock",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.false();",
                    "isRoot": false,
                    "uuid": "2251d21a-1e7f-4292-844f-c72068c777c3",
                    "parentUUID": "e8e1e7bd-6809-4d22-bdb2-b4dcbe77bca6",
                    "skipped": false
                  },
                  {
                    "title": "should change game state to ready",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should change game state to ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "6970410e-4bcc-4d72-8a78-375ac14d1213",
                    "parentUUID": "e8e1e7bd-6809-4d22-bdb2-b4dcbe77bca6",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "e8e1e7bd-6809-4d22-bdb2-b4dcbe77bca6",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should allow when game state is buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should allow when game state is buzzerLock",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "57245c29-f697-4e75-9a80-82e5f541783a",
                    "parentUUID": "e8e1e7bd-6809-4d22-bdb2-b4dcbe77bca6",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should not allow when game state is not buzzerLock",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.false();",
                    "isRoot": false,
                    "uuid": "2251d21a-1e7f-4292-844f-c72068c777c3",
                    "parentUUID": "e8e1e7bd-6809-4d22-bdb2-b4dcbe77bca6",
                    "skipped": false
                  },
                  {
                    "title": "should change game state to ready",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should change game state to ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "6970410e-4bcc-4d72-8a78-375ac14d1213",
                    "parentUUID": "e8e1e7bd-6809-4d22-bdb2-b4dcbe77bca6",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "4748a6a4-28d0-4ee7-902d-df0bca18db0c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#pendingWinner",
            "suites": [],
            "tests": [
              {
                "title": "should return the pending winner",
                "fullTitle": "Session #pendingWinner should return the pending winner",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.pendingWinner.should.equal(<span class=\"hljs-string\">'testUser'</span>);",
                "isRoot": false,
                "uuid": "6b067e53-d3c4-4af8-98a7-fdd591207adb",
                "parentUUID": "7568deaf-8601-4c12-a316-cfa6b7f593e5",
                "skipped": false
              },
              {
                "title": "should not return the pending winner",
                "fullTitle": "Session #pendingWinner should not return the pending winner",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>should(s.pendingWinner).be.null();",
                "isRoot": false,
                "uuid": "3a7fc60a-c2e2-4820-b67e-7b7690401cde",
                "parentUUID": "7568deaf-8601-4c12-a316-cfa6b7f593e5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "7568deaf-8601-4c12-a316-cfa6b7f593e5",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should return the pending winner",
                "fullTitle": "Session #pendingWinner should return the pending winner",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.pendingWinner.should.equal(<span class=\"hljs-string\">'testUser'</span>);",
                "isRoot": false,
                "uuid": "6b067e53-d3c4-4af8-98a7-fdd591207adb",
                "parentUUID": "7568deaf-8601-4c12-a316-cfa6b7f593e5",
                "skipped": false
              },
              {
                "title": "should not return the pending winner",
                "fullTitle": "Session #pendingWinner should not return the pending winner",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>should(s.pendingWinner).be.null();",
                "isRoot": false,
                "uuid": "3a7fc60a-c2e2-4820-b67e-7b7690401cde",
                "parentUUID": "7568deaf-8601-4c12-a316-cfa6b7f593e5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#updateSessionName(name)",
            "suites": [],
            "tests": [
              {
                "title": "should update session name",
                "fullTitle": "Session #updateSessionName(name) should update session name",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.updateSessionName(<span class=\"hljs-string\">'session2'</span>);<br>settings.sessionName.should.equal(<span class=\"hljs-string\">'session2'</span>);",
                "isRoot": false,
                "uuid": "e51a35c7-76cf-42ed-bfd8-3f3b5dbbf496",
                "parentUUID": "f197c682-d1fa-4eeb-843e-df28e025f318",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "f197c682-d1fa-4eeb-843e-df28e025f318",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should update session name",
                "fullTitle": "Session #updateSessionName(name) should update session name",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.updateSessionName(<span class=\"hljs-string\">'session2'</span>);<br>settings.sessionName.should.equal(<span class=\"hljs-string\">'session2'</span>);",
                "isRoot": false,
                "uuid": "e51a35c7-76cf-42ed-bfd8-3f3b5dbbf496",
                "parentUUID": "f197c682-d1fa-4eeb-843e-df28e025f318",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#updateMaxContestants(maxContestants)",
            "suites": [],
            "tests": [
              {
                "title": "should update max contestants",
                "fullTitle": "Session #updateMaxContestants(maxContestants) should update max contestants",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "1938586c-0539-40df-8dab-e0e5b10707ec",
                "parentUUID": "1c4aa9ca-e52a-4a18-9b5c-12abe01edebf",
                "skipped": false
              },
              {
                "title": "should not allow below current connected amount",
                "fullTitle": "Session #updateMaxContestants(maxContestants) should not allow below current connected amount",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>s.addContestant(c1).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>s.addContestant(c2).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">1</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_CONTESTANTS_MUST_BE_GREATER_THAN_ALREADY_CONNECTED);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "517fb501-749e-4ff3-8142-c4fd44e98806",
                "parentUUID": "1c4aa9ca-e52a-4a18-9b5c-12abe01edebf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "1c4aa9ca-e52a-4a18-9b5c-12abe01edebf",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should update max contestants",
                "fullTitle": "Session #updateMaxContestants(maxContestants) should update max contestants",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "1938586c-0539-40df-8dab-e0e5b10707ec",
                "parentUUID": "1c4aa9ca-e52a-4a18-9b5c-12abe01edebf",
                "skipped": false
              },
              {
                "title": "should not allow below current connected amount",
                "fullTitle": "Session #updateMaxContestants(maxContestants) should not allow below current connected amount",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>s.addContestant(c1).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>s.addContestant(c2).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">1</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_CONTESTANTS_MUST_BE_GREATER_THAN_ALREADY_CONNECTED);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "517fb501-749e-4ff3-8142-c4fd44e98806",
                "parentUUID": "1c4aa9ca-e52a-4a18-9b5c-12abe01edebf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#updateTeamSize(teamSize)",
            "suites": [],
            "tests": [
              {
                "title": "should update team size",
                "fullTitle": "Session #updateTeamSize(teamSize) should update team size",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.teamSize.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "eb4ca93a-d6e1-43d1-bc70-1dff66088d4c",
                "parentUUID": "7061222a-87a1-480f-849e-758c402bc275",
                "skipped": false
              },
              {
                "title": "should not allow below current setting",
                "fullTitle": "Session #updateTeamSize(teamSize) should not allow below current setting",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.TEAM_SIZE_MUST_BE_GREATER_THAN_ALREADY_SET);",
                "isRoot": false,
                "uuid": "69d749c9-1c0c-44a9-b432-5ce643994078",
                "parentUUID": "7061222a-87a1-480f-849e-758c402bc275",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "7061222a-87a1-480f-849e-758c402bc275",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should update team size",
                "fullTitle": "Session #updateTeamSize(teamSize) should update team size",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.teamSize.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "eb4ca93a-d6e1-43d1-bc70-1dff66088d4c",
                "parentUUID": "7061222a-87a1-480f-849e-758c402bc275",
                "skipped": false
              },
              {
                "title": "should not allow below current setting",
                "fullTitle": "Session #updateTeamSize(teamSize) should not allow below current setting",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.TEAM_SIZE_MUST_BE_GREATER_THAN_ALREADY_SET);",
                "isRoot": false,
                "uuid": "69d749c9-1c0c-44a9-b432-5ce643994078",
                "parentUUID": "7061222a-87a1-480f-849e-758c402bc275",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#updateMaxTeams(maxTeams)",
            "suites": [],
            "tests": [
              {
                "title": "should update max teams",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should update max teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxTeams.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "ba3aecbf-53aa-42bd-8896-587d336a9da5",
                "parentUUID": "fac8cb05-7e0e-4438-93db-a6a0ee59c703",
                "skipped": false
              },
              {
                "title": "should add teams",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should add teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">5</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "ec424685-d6ee-4373-b873-38ea985ea353",
                "parentUUID": "fac8cb05-7e0e-4438-93db-a6a0ee59c703",
                "skipped": false
              },
              {
                "title": "should not allow below current setting",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should not allow below current setting",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_MUST_BE_GREATER_THAN_ALREADY_SET);",
                "isRoot": false,
                "uuid": "1a29cc0f-3b74-4091-a16b-bb1137255bb0",
                "parentUUID": "fac8cb05-7e0e-4438-93db-a6a0ee59c703",
                "skipped": false
              },
              {
                "title": "should not allow if teams are PLAYER_CHOICE",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should not allow if teams are PLAYER_CHOICE",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">6</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_CANNOT_BE_CHANGED_WHEN_PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "5ae3e80c-1178-42c9-ae4b-ff81c8734e45",
                "parentUUID": "fac8cb05-7e0e-4438-93db-a6a0ee59c703",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "fac8cb05-7e0e-4438-93db-a6a0ee59c703",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should update max teams",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should update max teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxTeams.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "ba3aecbf-53aa-42bd-8896-587d336a9da5",
                "parentUUID": "fac8cb05-7e0e-4438-93db-a6a0ee59c703",
                "skipped": false
              },
              {
                "title": "should add teams",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should add teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">5</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "ec424685-d6ee-4373-b873-38ea985ea353",
                "parentUUID": "fac8cb05-7e0e-4438-93db-a6a0ee59c703",
                "skipped": false
              },
              {
                "title": "should not allow below current setting",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should not allow below current setting",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_MUST_BE_GREATER_THAN_ALREADY_SET);",
                "isRoot": false,
                "uuid": "1a29cc0f-3b74-4091-a16b-bb1137255bb0",
                "parentUUID": "fac8cb05-7e0e-4438-93db-a6a0ee59c703",
                "skipped": false
              },
              {
                "title": "should not allow if teams are PLAYER_CHOICE",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should not allow if teams are PLAYER_CHOICE",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">6</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_CANNOT_BE_CHANGED_WHEN_PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "5ae3e80c-1178-42c9-ae4b-ff81c8734e45",
                "parentUUID": "fac8cb05-7e0e-4438-93db-a6a0ee59c703",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/SessionTests.js",
        "uuid": "a680968c-84bf-4e49-ac3a-e12176f62542",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Settings",
        "suites": [
          {
            "title": "#hasTeams",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #hasTeams should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s._hasTeams.should.be.true();",
                "isRoot": false,
                "uuid": "eb77ea8e-51d6-4489-a979-7b1a9f842253",
                "parentUUID": "54770865-7089-4516-b325-26cd60cfb940",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #hasTeams should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.hasTeams.should.be.true();",
                "isRoot": false,
                "uuid": "5237ddfa-32fb-44a6-a697-045d727649e2",
                "parentUUID": "54770865-7089-4516-b325-26cd60cfb940",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "54770865-7089-4516-b325-26cd60cfb940",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #hasTeams should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s._hasTeams.should.be.true();",
                "isRoot": false,
                "uuid": "eb77ea8e-51d6-4489-a979-7b1a9f842253",
                "parentUUID": "54770865-7089-4516-b325-26cd60cfb940",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #hasTeams should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.hasTeams.should.be.true();",
                "isRoot": false,
                "uuid": "5237ddfa-32fb-44a6-a697-045d727649e2",
                "parentUUID": "54770865-7089-4516-b325-26cd60cfb940",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#teamSize",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamSize should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s._teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "eda0724c-cab7-4a9d-8f00-db536f0b9527",
                "parentUUID": "d668a542-f7f6-4193-baf3-7128f3ca94a3",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamSize should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamSize = <span class=\"hljs-number\">1</span>;<br>s.teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "b1de7bbf-e402-4918-86a7-f338cfb52d44",
                "parentUUID": "d668a542-f7f6-4193-baf3-7128f3ca94a3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "d668a542-f7f6-4193-baf3-7128f3ca94a3",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamSize should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s._teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "eda0724c-cab7-4a9d-8f00-db536f0b9527",
                "parentUUID": "d668a542-f7f6-4193-baf3-7128f3ca94a3",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamSize should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamSize = <span class=\"hljs-number\">1</span>;<br>s.teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "b1de7bbf-e402-4918-86a7-f338cfb52d44",
                "parentUUID": "d668a542-f7f6-4193-baf3-7128f3ca94a3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#maxTeams",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #maxTeams should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s._maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "b2b9c4db-7e94-4b6c-acb7-299a0f5bf441",
                "parentUUID": "c9e80cae-172f-488b-8f05-b3d9e9397429",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #maxTeams should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-number\">1</span>;<br>s.maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "339f94c5-ba0c-4bdf-8308-84dddc410c20",
                "parentUUID": "c9e80cae-172f-488b-8f05-b3d9e9397429",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "c9e80cae-172f-488b-8f05-b3d9e9397429",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #maxTeams should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s._maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "b2b9c4db-7e94-4b6c-acb7-299a0f5bf441",
                "parentUUID": "c9e80cae-172f-488b-8f05-b3d9e9397429",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #maxTeams should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-number\">1</span>;<br>s.maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "339f94c5-ba0c-4bdf-8308-84dddc410c20",
                "parentUUID": "c9e80cae-172f-488b-8f05-b3d9e9397429",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#teamLeaderSelectionMethod",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamLeaderSelectionMethod should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s._teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "9eb1d093-c578-4929-9a6a-b099d8885dd3",
                "parentUUID": "154b0918-93a9-40fc-a2a4-608c14038879",
                "skipped": false
              },
              {
                "title": "should throw on set when constant value is invalid",
                "fullTitle": "Settings #teamLeaderSelectionMethod should throw on set when constant value is invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamLeaderSelectionMethod.all.slice().sort(<br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, b</span>) </span>{<br>            <span class=\"hljs-keyword\">return</span> a - b;<br>        }).pop();<br>    s.teamLeaderSelectionMethod = ++high;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "bbfeeea5-ebeb-48d0-a983-2443a3e02303",
                "parentUUID": "154b0918-93a9-40fc-a2a4-608c14038879",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamLeaderSelectionMethod should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s.teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "67547abf-dd10-44dc-aabd-4c03a6358091",
                "parentUUID": "154b0918-93a9-40fc-a2a4-608c14038879",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "154b0918-93a9-40fc-a2a4-608c14038879",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamLeaderSelectionMethod should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s._teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "9eb1d093-c578-4929-9a6a-b099d8885dd3",
                "parentUUID": "154b0918-93a9-40fc-a2a4-608c14038879",
                "skipped": false
              },
              {
                "title": "should throw on set when constant value is invalid",
                "fullTitle": "Settings #teamLeaderSelectionMethod should throw on set when constant value is invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamLeaderSelectionMethod.all.slice().sort(<br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, b</span>) </span>{<br>            <span class=\"hljs-keyword\">return</span> a - b;<br>        }).pop();<br>    s.teamLeaderSelectionMethod = ++high;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "bbfeeea5-ebeb-48d0-a983-2443a3e02303",
                "parentUUID": "154b0918-93a9-40fc-a2a4-608c14038879",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamLeaderSelectionMethod should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s.teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "67547abf-dd10-44dc-aabd-4c03a6358091",
                "parentUUID": "154b0918-93a9-40fc-a2a4-608c14038879",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#teamNameEdit",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamNameEdit should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br>s._teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
                "isRoot": false,
                "uuid": "54f4bf98-78a9-49a3-8afc-3499e0fc801b",
                "parentUUID": "308abbd4-cc58-43c6-aac2-77161aaadc1f",
                "skipped": false
              },
              {
                "title": "should throw on set when constant value is invalid",
                "fullTitle": "Settings #teamNameEdit should throw on set when constant value is invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamNameEdit.all.slice().sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a,<br>        b</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> a - b;<br>    }).pop();<br>    s.teamNameEdit = ++high;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "e025a9af-4c2d-4fbb-b148-4e9d989dfabb",
                "parentUUID": "308abbd4-cc58-43c6-aac2-77161aaadc1f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamNameEdit should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNameEdit = constants.teamNameEdit.ALLOW;<br>s.teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
                "isRoot": false,
                "uuid": "072699d6-b8b8-4177-adec-3f1413cd15af",
                "parentUUID": "308abbd4-cc58-43c6-aac2-77161aaadc1f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "308abbd4-cc58-43c6-aac2-77161aaadc1f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamNameEdit should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br>s._teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
                "isRoot": false,
                "uuid": "54f4bf98-78a9-49a3-8afc-3499e0fc801b",
                "parentUUID": "308abbd4-cc58-43c6-aac2-77161aaadc1f",
                "skipped": false
              },
              {
                "title": "should throw on set when constant value is invalid",
                "fullTitle": "Settings #teamNameEdit should throw on set when constant value is invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamNameEdit.all.slice().sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a,<br>        b</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> a - b;<br>    }).pop();<br>    s.teamNameEdit = ++high;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "e025a9af-4c2d-4fbb-b148-4e9d989dfabb",
                "parentUUID": "308abbd4-cc58-43c6-aac2-77161aaadc1f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamNameEdit should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNameEdit = constants.teamNameEdit.ALLOW;<br>s.teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
                "isRoot": false,
                "uuid": "072699d6-b8b8-4177-adec-3f1413cd15af",
                "parentUUID": "308abbd4-cc58-43c6-aac2-77161aaadc1f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#maxContestants",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #maxContestants should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxContestants = <span class=\"hljs-number\">1</span>;<br>s._maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "99e2d71d-774f-464a-b4cd-e4da3caf88b9",
                "parentUUID": "2a4c8e43-41c1-452c-a285-d2a7beace4cb",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #maxContestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxContestants = <span class=\"hljs-number\">1</span>;<br>s.maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "80a3574b-f123-4d03-9c49-085134705080",
                "parentUUID": "2a4c8e43-41c1-452c-a285-d2a7beace4cb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "2a4c8e43-41c1-452c-a285-d2a7beace4cb",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #maxContestants should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxContestants = <span class=\"hljs-number\">1</span>;<br>s._maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "99e2d71d-774f-464a-b4cd-e4da3caf88b9",
                "parentUUID": "2a4c8e43-41c1-452c-a285-d2a7beace4cb",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #maxContestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxContestants = <span class=\"hljs-number\">1</span>;<br>s.maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "80a3574b-f123-4d03-9c49-085134705080",
                "parentUUID": "2a4c8e43-41c1-452c-a285-d2a7beace4cb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#sessionName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #sessionName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s._sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
                "isRoot": false,
                "uuid": "413857fb-75d2-4ada-a3c0-001a5db2b8ef",
                "parentUUID": "8feb85b0-7569-4123-bd45-d82073ebc9da",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #sessionName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s.sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
                "isRoot": false,
                "uuid": "40ce2d8c-e45e-4be1-8083-62ee257ab1df",
                "parentUUID": "8feb85b0-7569-4123-bd45-d82073ebc9da",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "8feb85b0-7569-4123-bd45-d82073ebc9da",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #sessionName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s._sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
                "isRoot": false,
                "uuid": "413857fb-75d2-4ada-a3c0-001a5db2b8ef",
                "parentUUID": "8feb85b0-7569-4123-bd45-d82073ebc9da",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #sessionName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s.sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
                "isRoot": false,
                "uuid": "40ce2d8c-e45e-4be1-8083-62ee257ab1df",
                "parentUUID": "8feb85b0-7569-4123-bd45-d82073ebc9da",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#teamNames",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamNames should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s._teamNames.should.be.Array();<br>s._teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s._teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
                "isRoot": false,
                "uuid": "b8a93492-2a6f-4119-9072-8031a6a3b5f4",
                "parentUUID": "a5ac4be8-2d77-448d-beea-1ac8111c0330",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamNames should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s.teamNames.should.be.Array();<br>s.teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
                "isRoot": false,
                "uuid": "ba6c874c-a162-40d2-ba5e-60bcb7aa5b87",
                "parentUUID": "a5ac4be8-2d77-448d-beea-1ac8111c0330",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "a5ac4be8-2d77-448d-beea-1ac8111c0330",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamNames should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s._teamNames.should.be.Array();<br>s._teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s._teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
                "isRoot": false,
                "uuid": "b8a93492-2a6f-4119-9072-8031a6a3b5f4",
                "parentUUID": "a5ac4be8-2d77-448d-beea-1ac8111c0330",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamNames should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s.teamNames.should.be.Array();<br>s.teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
                "isRoot": false,
                "uuid": "ba6c874c-a162-40d2-ba5e-60bcb7aa5b87",
                "parentUUID": "a5ac4be8-2d77-448d-beea-1ac8111c0330",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/SettingsTests.js",
        "uuid": "7c633bd9-052a-479a-b103-040bb810229f",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "TeamFactory",
        "suites": [
          {
            "title": "#create(teams, settings)",
            "suites": [],
            "tests": [
              {
                "title": "should throw when settings.maxTeams is less than 1",
                "fullTitle": "TeamFactory #create(teams, settings) should throw when settings.maxTeams is less than 1",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    teamFactory.create(tc, s);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "0ca92ba2-51ab-4e57-a02b-79471169c2b0",
                "parentUUID": "3042e722-b117-4091-9315-5f437fffc83b",
                "skipped": false
              },
              {
                "title": "should create the correct amount of teams",
                "fullTitle": "TeamFactory #create(teams, settings) should create the correct amount of teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "c0437d60-c1c4-40c6-a2a1-8ef8b68da368",
                "parentUUID": "3042e722-b117-4091-9315-5f437fffc83b",
                "skipped": false
              },
              {
                "title": "should not fail with a large team size",
                "fullTitle": "TeamFactory #create(teams, settings) should not fail with a large team size",
                "timedOut": false,
                "duration": 40,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">500</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">500</span>);<br><span class=\"hljs-comment\">// ensure team names are unique</span><br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> i = names.indexOf(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> n === t.teamName;<br>    });<br>    i.should.equal(-<span class=\"hljs-number\">1</span>);<br>    names.push(t.teamName);<br>});",
                "isRoot": false,
                "uuid": "40f0a23e-a100-4248-a37c-bffc5c8eef6a",
                "parentUUID": "3042e722-b117-4091-9315-5f437fffc83b",
                "skipped": false
              },
              {
                "title": "should use settings.teamNames first, before random selection",
                "fullTitle": "TeamFactory #create(teams, settings) should use settings.teamNames first, before random selection",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">10</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>, <span class=\"hljs-string\">'t3'</span>, <span class=\"hljs-string\">'t4'</span>, <span class=\"hljs-string\">'t5'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);<br>tc.all[<span class=\"hljs-number\">2</span>].teamName.should.equal(<span class=\"hljs-string\">'t3'</span>);<br>tc.all[<span class=\"hljs-number\">3</span>].teamName.should.equal(<span class=\"hljs-string\">'t4'</span>);<br>tc.all[<span class=\"hljs-number\">4</span>].teamName.should.equal(<span class=\"hljs-string\">'t5'</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">5</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">6</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">7</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">8</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">9</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "8a2fc7da-c2b6-4274-95b4-8b3425778a21",
                "parentUUID": "3042e722-b117-4091-9315-5f437fffc83b",
                "skipped": false
              },
              {
                "title": "should only create a single team when using unlimited teams",
                "fullTitle": "TeamFactory #create(teams, settings) should only create a single team when using unlimited teams",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "2f3ec7d9-d997-4229-8989-55de8f9781f3",
                "parentUUID": "3042e722-b117-4091-9315-5f437fffc83b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamFactoryTests.js",
            "uuid": "3042e722-b117-4091-9315-5f437fffc83b",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamFactoryTests.js",
            "passes": [
              {
                "title": "should throw when settings.maxTeams is less than 1",
                "fullTitle": "TeamFactory #create(teams, settings) should throw when settings.maxTeams is less than 1",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    teamFactory.create(tc, s);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "0ca92ba2-51ab-4e57-a02b-79471169c2b0",
                "parentUUID": "3042e722-b117-4091-9315-5f437fffc83b",
                "skipped": false
              },
              {
                "title": "should create the correct amount of teams",
                "fullTitle": "TeamFactory #create(teams, settings) should create the correct amount of teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "c0437d60-c1c4-40c6-a2a1-8ef8b68da368",
                "parentUUID": "3042e722-b117-4091-9315-5f437fffc83b",
                "skipped": false
              },
              {
                "title": "should not fail with a large team size",
                "fullTitle": "TeamFactory #create(teams, settings) should not fail with a large team size",
                "timedOut": false,
                "duration": 40,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">500</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">500</span>);<br><span class=\"hljs-comment\">// ensure team names are unique</span><br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> i = names.indexOf(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> n === t.teamName;<br>    });<br>    i.should.equal(-<span class=\"hljs-number\">1</span>);<br>    names.push(t.teamName);<br>});",
                "isRoot": false,
                "uuid": "40f0a23e-a100-4248-a37c-bffc5c8eef6a",
                "parentUUID": "3042e722-b117-4091-9315-5f437fffc83b",
                "skipped": false
              },
              {
                "title": "should use settings.teamNames first, before random selection",
                "fullTitle": "TeamFactory #create(teams, settings) should use settings.teamNames first, before random selection",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">10</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>, <span class=\"hljs-string\">'t3'</span>, <span class=\"hljs-string\">'t4'</span>, <span class=\"hljs-string\">'t5'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);<br>tc.all[<span class=\"hljs-number\">2</span>].teamName.should.equal(<span class=\"hljs-string\">'t3'</span>);<br>tc.all[<span class=\"hljs-number\">3</span>].teamName.should.equal(<span class=\"hljs-string\">'t4'</span>);<br>tc.all[<span class=\"hljs-number\">4</span>].teamName.should.equal(<span class=\"hljs-string\">'t5'</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">5</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">6</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">7</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">8</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">9</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "8a2fc7da-c2b6-4274-95b4-8b3425778a21",
                "parentUUID": "3042e722-b117-4091-9315-5f437fffc83b",
                "skipped": false
              },
              {
                "title": "should only create a single team when using unlimited teams",
                "fullTitle": "TeamFactory #create(teams, settings) should only create a single team when using unlimited teams",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "2f3ec7d9-d997-4229-8989-55de8f9781f3",
                "parentUUID": "3042e722-b117-4091-9315-5f437fffc83b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 43
          },
          {
            "title": "#add(teams, settings)",
            "suites": [],
            "tests": [
              {
                "title": "should add a team",
                "fullTitle": "TeamFactory #add(teams, settings) should add a team",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>teamFactory.add(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "57e4e828-8365-436e-843e-50375738afd7",
                "parentUUID": "d54db1d8-e116-4d9c-8a61-03dcf70866a4",
                "skipped": false
              },
              {
                "title": "should reuse team names specified in settings",
                "fullTitle": "TeamFactory #add(teams, settings) should reuse team names specified in settings",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>teamFactory.add(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);",
                "isRoot": false,
                "uuid": "6d994805-0a2e-41c1-80aa-caed48587887",
                "parentUUID": "d54db1d8-e116-4d9c-8a61-03dcf70866a4",
                "skipped": false
              },
              {
                "title": "should factor in team names which are already in use",
                "fullTitle": "TeamFactory #add(teams, settings) should factor in team names which are already in use",
                "timedOut": false,
                "duration": 256,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    teamFactory.add(tc, s);<br>}<br>tc.all.length.should.equal(<span class=\"hljs-number\">1001</span>);<br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    names.push(t.teamName);<br>});<br><span class=\"hljs-keyword\">var</span> uniqueNames = unique(names);<br>names.length.should.equal(uniqueNames.length);",
                "isRoot": false,
                "uuid": "183987b3-9a2e-44d4-8a07-b10ce522e3a2",
                "parentUUID": "d54db1d8-e116-4d9c-8a61-03dcf70866a4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamFactoryTests.js",
            "uuid": "d54db1d8-e116-4d9c-8a61-03dcf70866a4",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamFactoryTests.js",
            "passes": [
              {
                "title": "should add a team",
                "fullTitle": "TeamFactory #add(teams, settings) should add a team",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>teamFactory.add(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "57e4e828-8365-436e-843e-50375738afd7",
                "parentUUID": "d54db1d8-e116-4d9c-8a61-03dcf70866a4",
                "skipped": false
              },
              {
                "title": "should reuse team names specified in settings",
                "fullTitle": "TeamFactory #add(teams, settings) should reuse team names specified in settings",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>teamFactory.add(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);",
                "isRoot": false,
                "uuid": "6d994805-0a2e-41c1-80aa-caed48587887",
                "parentUUID": "d54db1d8-e116-4d9c-8a61-03dcf70866a4",
                "skipped": false
              },
              {
                "title": "should factor in team names which are already in use",
                "fullTitle": "TeamFactory #add(teams, settings) should factor in team names which are already in use",
                "timedOut": false,
                "duration": 256,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    teamFactory.add(tc, s);<br>}<br>tc.all.length.should.equal(<span class=\"hljs-number\">1001</span>);<br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    names.push(t.teamName);<br>});<br><span class=\"hljs-keyword\">var</span> uniqueNames = unique(names);<br>names.length.should.equal(uniqueNames.length);",
                "isRoot": false,
                "uuid": "183987b3-9a2e-44d4-8a07-b10ce522e3a2",
                "parentUUID": "d54db1d8-e116-4d9c-8a61-03dcf70866a4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 257
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/TeamFactoryTests.js",
        "uuid": "0992a05b-c852-47d2-9612-f8125b06d3e6",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamFactoryTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Teams",
        "suites": [
          {
            "title": "#contains(teamName)",
            "suites": [],
            "tests": [
              {
                "title": "should return true when team with teamName does exist",
                "fullTitle": "Teams #contains(teamName) should return true when team with teamName does exist",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(t.teamName).should.be.true();",
                "isRoot": false,
                "uuid": "70d39cbe-c726-481d-9c34-ba8b773924f9",
                "parentUUID": "7329908d-e9af-4dbe-a964-42d94f9e693d",
                "skipped": false
              },
              {
                "title": "should return false when no team with teamName does exist",
                "fullTitle": "Teams #contains(teamName) should return false when no team with teamName does exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(<span class=\"hljs-string\">'other team name'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "d130a036-705b-4d80-94b0-995dede9d826",
                "parentUUID": "7329908d-e9af-4dbe-a964-42d94f9e693d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "7329908d-e9af-4dbe-a964-42d94f9e693d",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should return true when team with teamName does exist",
                "fullTitle": "Teams #contains(teamName) should return true when team with teamName does exist",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(t.teamName).should.be.true();",
                "isRoot": false,
                "uuid": "70d39cbe-c726-481d-9c34-ba8b773924f9",
                "parentUUID": "7329908d-e9af-4dbe-a964-42d94f9e693d",
                "skipped": false
              },
              {
                "title": "should return false when no team with teamName does exist",
                "fullTitle": "Teams #contains(teamName) should return false when no team with teamName does exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(<span class=\"hljs-string\">'other team name'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "d130a036-705b-4d80-94b0-995dede9d826",
                "parentUUID": "7329908d-e9af-4dbe-a964-42d94f9e693d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#all",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Teams #all should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "86109b1b-c01a-460b-8844-b9b0ee28abc5",
                "parentUUID": "c01491ab-810c-41ac-ad20-2f235d8d4f77",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Teams #all should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "5b90c149-81cc-4104-a635-3b2863c61569",
                "parentUUID": "c01491ab-810c-41ac-ad20-2f235d8d4f77",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Teams #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all.pop();<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "16d7849e-bcd6-4cd8-b883-5d2f8d4fda66",
                "parentUUID": "c01491ab-810c-41ac-ad20-2f235d8d4f77",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "c01491ab-810c-41ac-ad20-2f235d8d4f77",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Teams #all should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "86109b1b-c01a-460b-8844-b9b0ee28abc5",
                "parentUUID": "c01491ab-810c-41ac-ad20-2f235d8d4f77",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Teams #all should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "5b90c149-81cc-4104-a635-3b2863c61569",
                "parentUUID": "c01491ab-810c-41ac-ad20-2f235d8d4f77",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Teams #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all.pop();<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "16d7849e-bcd6-4cd8-b883-5d2f8d4fda66",
                "parentUUID": "c01491ab-810c-41ac-ad20-2f235d8d4f77",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#length",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Teams #length should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.length = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "86723358-d001-4e58-854e-caefc2151d43",
                "parentUUID": "b5d3758b-e381-4377-b8a3-d29d4e9cb523",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Teams #length should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "145f2242-46b6-4317-9fae-5d7e2d5c0174",
                "parentUUID": "b5d3758b-e381-4377-b8a3-d29d4e9cb523",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "b5d3758b-e381-4377-b8a3-d29d4e9cb523",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Teams #length should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.length = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "86723358-d001-4e58-854e-caefc2151d43",
                "parentUUID": "b5d3758b-e381-4377-b8a3-d29d4e9cb523",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Teams #length should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "145f2242-46b6-4317-9fae-5d7e2d5c0174",
                "parentUUID": "b5d3758b-e381-4377-b8a3-d29d4e9cb523",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#add(team)",
            "suites": [],
            "tests": [
              {
                "title": "should add the given team",
                "fullTitle": "Teams #add(team) should add the given team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "51fe56e7-f510-4ace-b0d6-59fbab2242d1",
                "parentUUID": "a7583f3e-333b-4d0d-8ced-adfeacb5e7c1",
                "skipped": false
              },
              {
                "title": "should error if team with teamName already exists",
                "fullTitle": "Teams #add(team) should error if team with teamName already exists",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.add(t);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "a52fc74f-9256-4b68-a8e6-ca24cf2f64c6",
                "parentUUID": "a7583f3e-333b-4d0d-8ced-adfeacb5e7c1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "a7583f3e-333b-4d0d-8ced-adfeacb5e7c1",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should add the given team",
                "fullTitle": "Teams #add(team) should add the given team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "51fe56e7-f510-4ace-b0d6-59fbab2242d1",
                "parentUUID": "a7583f3e-333b-4d0d-8ced-adfeacb5e7c1",
                "skipped": false
              },
              {
                "title": "should error if team with teamName already exists",
                "fullTitle": "Teams #add(team) should error if team with teamName already exists",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.add(t);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "a52fc74f-9256-4b68-a8e6-ca24cf2f64c6",
                "parentUUID": "a7583f3e-333b-4d0d-8ced-adfeacb5e7c1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#remove(team)",
            "suites": [],
            "tests": [
              {
                "title": "should remove the existing team",
                "fullTitle": "Teams #remove(team) should remove the existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "edc7f561-9f21-41ad-b44c-95d491b7b9f8",
                "parentUUID": "27b32a0f-1860-4e3a-93e8-adfa71fc8eba",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing team",
                "fullTitle": "Teams #remove(team) should not remove the non-existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t1).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "48087a8c-866e-4006-a1c8-9f7064632dbd",
                "parentUUID": "27b32a0f-1860-4e3a-93e8-adfa71fc8eba",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "27b32a0f-1860-4e3a-93e8-adfa71fc8eba",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should remove the existing team",
                "fullTitle": "Teams #remove(team) should remove the existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "edc7f561-9f21-41ad-b44c-95d491b7b9f8",
                "parentUUID": "27b32a0f-1860-4e3a-93e8-adfa71fc8eba",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing team",
                "fullTitle": "Teams #remove(team) should not remove the non-existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t1).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "48087a8c-866e-4006-a1c8-9f7064632dbd",
                "parentUUID": "27b32a0f-1860-4e3a-93e8-adfa71fc8eba",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#removeByTeamName(team)",
            "suites": [],
            "tests": [
              {
                "title": "should remove the existing team",
                "fullTitle": "Teams #removeByTeamName(team) should remove the existing team",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t.teamName).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "e9186579-86d9-4076-8cc4-ab950f6d5523",
                "parentUUID": "b8bba0d1-f0e6-4964-9fdb-448207d5b2dd",
                "skipped": false
              },
              {
                "title": "should ignore team name case",
                "fullTitle": "Teams #removeByTeamName(team) should ignore team name case",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'abc1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(<span class=\"hljs-string\">'ABC1'</span>).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "8b55631e-cb72-4929-9022-3aad6b28da00",
                "parentUUID": "b8bba0d1-f0e6-4964-9fdb-448207d5b2dd",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing team",
                "fullTitle": "Teams #removeByTeamName(team) should not remove the non-existing team",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t1.teamName).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "fe8d7e09-d603-4128-90a8-a804364ead87",
                "parentUUID": "b8bba0d1-f0e6-4964-9fdb-448207d5b2dd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "b8bba0d1-f0e6-4964-9fdb-448207d5b2dd",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should remove the existing team",
                "fullTitle": "Teams #removeByTeamName(team) should remove the existing team",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t.teamName).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "e9186579-86d9-4076-8cc4-ab950f6d5523",
                "parentUUID": "b8bba0d1-f0e6-4964-9fdb-448207d5b2dd",
                "skipped": false
              },
              {
                "title": "should ignore team name case",
                "fullTitle": "Teams #removeByTeamName(team) should ignore team name case",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'abc1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(<span class=\"hljs-string\">'ABC1'</span>).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "8b55631e-cb72-4929-9022-3aad6b28da00",
                "parentUUID": "b8bba0d1-f0e6-4964-9fdb-448207d5b2dd",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing team",
                "fullTitle": "Teams #removeByTeamName(team) should not remove the non-existing team",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t1.teamName).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "fe8d7e09-d603-4128-90a8-a804364ead87",
                "parentUUID": "b8bba0d1-f0e6-4964-9fdb-448207d5b2dd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5
          },
          {
            "title": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName)",
            "suites": [
              {
                "title": "when teams are full",
                "suites": [],
                "tests": [
                  {
                    "title": "should return a valid response",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teams are full should return a valid response",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);",
                    "isRoot": false,
                    "uuid": "e82fc196-402b-469b-88cb-bae7942c21ca",
                    "parentUUID": "357709cd-2e54-40e2-a757-27863598fa27",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamsTests.js",
                "uuid": "357709cd-2e54-40e2-a757-27863598fa27",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
                "passes": [
                  {
                    "title": "should return a valid response",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teams are full should return a valid response",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);",
                    "isRoot": false,
                    "uuid": "e82fc196-402b-469b-88cb-bae7942c21ca",
                    "parentUUID": "357709cd-2e54-40e2-a757-27863598fa27",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1
              },
              {
                "title": "when teamLeader selection is PLAYER_CHOICE",
                "suites": [],
                "tests": [
                  {
                    "title": "should inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should inquire for team leader",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> inquired = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    inquired = <span class=\"hljs-literal\">true</span>;<br>});<br>r.should.be.true();<br>inquired.should.be.true();",
                    "isRoot": false,
                    "uuid": "ce48447f-655d-4cb3-969d-a88c3bc4a365",
                    "parentUUID": "5973e1c9-e8f8-4093-9004-2011d7dbc7e7",
                    "skipped": false
                  },
                  {
                    "title": "should not inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should not inquire for team leader",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>tc.all[<span class=\"hljs-number\">0</span>].teamLeader = c1;<br><span class=\"hljs-keyword\">var</span> didNotInquire = <span class=\"hljs-literal\">true</span>;<br>tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    didNotInquire = <span class=\"hljs-literal\">false</span>;<br>});<br>didNotInquire.should.be.true();<br>t.teamLeader.should.equal(c1);",
                    "isRoot": false,
                    "uuid": "9e06ee4f-de00-43e3-a8b5-3b5800a11bc9",
                    "parentUUID": "5973e1c9-e8f8-4093-9004-2011d7dbc7e7",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant as teamLeader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should not add contestant as teamLeader",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should(t.teamLeader).be.null();",
                    "isRoot": false,
                    "uuid": "6fea612a-47ee-4f6f-bdde-dfde2579bd46",
                    "parentUUID": "5973e1c9-e8f8-4093-9004-2011d7dbc7e7",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamsTests.js",
                "uuid": "5973e1c9-e8f8-4093-9004-2011d7dbc7e7",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
                "passes": [
                  {
                    "title": "should inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should inquire for team leader",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> inquired = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    inquired = <span class=\"hljs-literal\">true</span>;<br>});<br>r.should.be.true();<br>inquired.should.be.true();",
                    "isRoot": false,
                    "uuid": "ce48447f-655d-4cb3-969d-a88c3bc4a365",
                    "parentUUID": "5973e1c9-e8f8-4093-9004-2011d7dbc7e7",
                    "skipped": false
                  },
                  {
                    "title": "should not inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should not inquire for team leader",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>tc.all[<span class=\"hljs-number\">0</span>].teamLeader = c1;<br><span class=\"hljs-keyword\">var</span> didNotInquire = <span class=\"hljs-literal\">true</span>;<br>tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    didNotInquire = <span class=\"hljs-literal\">false</span>;<br>});<br>didNotInquire.should.be.true();<br>t.teamLeader.should.equal(c1);",
                    "isRoot": false,
                    "uuid": "9e06ee4f-de00-43e3-a8b5-3b5800a11bc9",
                    "parentUUID": "5973e1c9-e8f8-4093-9004-2011d7dbc7e7",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant as teamLeader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should not add contestant as teamLeader",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should(t.teamLeader).be.null();",
                    "isRoot": false,
                    "uuid": "6fea612a-47ee-4f6f-bdde-dfde2579bd46",
                    "parentUUID": "5973e1c9-e8f8-4093-9004-2011d7dbc7e7",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 3
              },
              {
                "title": "when teamLeader selection is RANDOM",
                "suites": [],
                "tests": [
                  {
                    "title": "should not inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should not inquire for team leader",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> notInquired = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    notInquired = <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>r.should.be.true();<br>notInquired.should.be.true();",
                    "isRoot": false,
                    "uuid": "ece1cb72-ae96-4853-b36e-a7a1372afc2f",
                    "parentUUID": "833e16db-cbcd-4173-9913-7331feec72aa",
                    "skipped": false
                  },
                  {
                    "title": "should automatically add team leader when team is filled",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should automatically add team leader when team is filled",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).not.be.null();<br>});",
                    "isRoot": false,
                    "uuid": "b2128de6-2275-4d55-a2cb-2b6fcff25c66",
                    "parentUUID": "833e16db-cbcd-4173-9913-7331feec72aa",
                    "skipped": false
                  },
                  {
                    "title": "should not automatically add team leader when team is not filled",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should not automatically add team leader when team is not filled",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).be.null();<br>});",
                    "isRoot": false,
                    "uuid": "9f15c01c-a4ab-4949-b675-b81f643dd2d7",
                    "parentUUID": "833e16db-cbcd-4173-9913-7331feec72aa",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamsTests.js",
                "uuid": "833e16db-cbcd-4173-9913-7331feec72aa",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
                "passes": [
                  {
                    "title": "should not inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should not inquire for team leader",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> notInquired = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    notInquired = <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>r.should.be.true();<br>notInquired.should.be.true();",
                    "isRoot": false,
                    "uuid": "ece1cb72-ae96-4853-b36e-a7a1372afc2f",
                    "parentUUID": "833e16db-cbcd-4173-9913-7331feec72aa",
                    "skipped": false
                  },
                  {
                    "title": "should automatically add team leader when team is filled",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should automatically add team leader when team is filled",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).not.be.null();<br>});",
                    "isRoot": false,
                    "uuid": "b2128de6-2275-4d55-a2cb-2b6fcff25c66",
                    "parentUUID": "833e16db-cbcd-4173-9913-7331feec72aa",
                    "skipped": false
                  },
                  {
                    "title": "should not automatically add team leader when team is not filled",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should not automatically add team leader when team is not filled",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).be.null();<br>});",
                    "isRoot": false,
                    "uuid": "9f15c01c-a4ab-4949-b675-b81f643dd2d7",
                    "parentUUID": "833e16db-cbcd-4173-9913-7331feec72aa",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 3
              },
              {
                "title": "when set to use unlimited teams",
                "suites": [],
                "tests": [
                  {
                    "title": "should add team when teams are full",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when set to use unlimited teams should add team when teams are full",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
                    "isRoot": false,
                    "uuid": "4fd04715-f1d4-485e-a81d-95474eaf38c6",
                    "parentUUID": "ace03a87-29dc-49ed-9fa5-7dbe792948be",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamsTests.js",
                "uuid": "ace03a87-29dc-49ed-9fa5-7dbe792948be",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
                "passes": [
                  {
                    "title": "should add team when teams are full",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when set to use unlimited teams should add team when teams are full",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
                    "isRoot": false,
                    "uuid": "4fd04715-f1d4-485e-a81d-95474eaf38c6",
                    "parentUUID": "ace03a87-29dc-49ed-9fa5-7dbe792948be",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1
              },
              {
                "title": "when team selection method is PLAYER_CHOICE",
                "suites": [],
                "tests": [
                  {
                    "title": "should throw when no team name is given",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should throw when no team name is given",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>}).should.throw();",
                    "isRoot": false,
                    "uuid": "6eb4485b-e6bb-4120-906d-52ceca81cae9",
                    "parentUUID": "8bd9d227-a04e-4ddd-8c7b-4649698c6010",
                    "skipped": false
                  },
                  {
                    "title": "should add contestant to correct team",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should add contestant to correct team",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "2f868040-d588-49ea-8f97-8a2725a5f829",
                    "parentUUID": "8bd9d227-a04e-4ddd-8c7b-4649698c6010",
                    "skipped": false
                  },
                  {
                    "title": "should not add to full team",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should not add to full team",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "91431eca-9d12-4e47-8c4f-7685b33433e0",
                    "parentUUID": "8bd9d227-a04e-4ddd-8c7b-4649698c6010",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamsTests.js",
                "uuid": "8bd9d227-a04e-4ddd-8c7b-4649698c6010",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
                "passes": [
                  {
                    "title": "should throw when no team name is given",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should throw when no team name is given",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>}).should.throw();",
                    "isRoot": false,
                    "uuid": "6eb4485b-e6bb-4120-906d-52ceca81cae9",
                    "parentUUID": "8bd9d227-a04e-4ddd-8c7b-4649698c6010",
                    "skipped": false
                  },
                  {
                    "title": "should add contestant to correct team",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should add contestant to correct team",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "2f868040-d588-49ea-8f97-8a2725a5f829",
                    "parentUUID": "8bd9d227-a04e-4ddd-8c7b-4649698c6010",
                    "skipped": false
                  },
                  {
                    "title": "should not add to full team",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should not add to full team",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "91431eca-9d12-4e47-8c4f-7685b33433e0",
                    "parentUUID": "8bd9d227-a04e-4ddd-8c7b-4649698c6010",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1
              }
            ],
            "tests": [
              {
                "title": "should give contestant an id",
                "fullTitle": "Teams addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) should give contestant an id",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Username'</span>;<br>should(c.id).be.null();<br>tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>should(c.id).not.be.null();",
                "isRoot": false,
                "uuid": "a3ed42c5-e464-4dd2-ac1f-e875ee7761cd",
                "parentUUID": "b0c81a21-267a-4727-a74a-0075fe3d27db",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "b0c81a21-267a-4727-a74a-0075fe3d27db",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should give contestant an id",
                "fullTitle": "Teams addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) should give contestant an id",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Username'</span>;<br>should(c.id).be.null();<br>tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>should(c.id).not.be.null();",
                "isRoot": false,
                "uuid": "a3ed42c5-e464-4dd2-ac1f-e875ee7761cd",
                "parentUUID": "b0c81a21-267a-4727-a74a-0075fe3d27db",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "getByContestant(contestant)",
            "suites": [],
            "tests": [
              {
                "title": "should get team of contestant",
                "fullTitle": "Teams getByContestant(contestant) should get team of contestant",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">5</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>    r.should.be.true();<br>});<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">4</span>]);<br>t.should.not.be.null();<br>t.contestants.getById(cc[<span class=\"hljs-number\">4</span>].id).should.equal(cc[<span class=\"hljs-number\">4</span>]);",
                "isRoot": false,
                "uuid": "5ddb7f77-a158-4010-893b-b37e24ac6c36",
                "parentUUID": "4f9c58c6-353b-4dbb-9264-06df3e198484",
                "skipped": false
              },
              {
                "title": "should not get team of contestant",
                "fullTitle": "Teams getByContestant(contestant) should not get team of contestant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">1</span>);<br>cc[<span class=\"hljs-number\">0</span>].id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">0</span>]);<br>should(t).be.null();",
                "isRoot": false,
                "uuid": "ef02c3ee-39fd-45fb-899d-1c5e20849e8d",
                "parentUUID": "4f9c58c6-353b-4dbb-9264-06df3e198484",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "4f9c58c6-353b-4dbb-9264-06df3e198484",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should get team of contestant",
                "fullTitle": "Teams getByContestant(contestant) should get team of contestant",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">5</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>    r.should.be.true();<br>});<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">4</span>]);<br>t.should.not.be.null();<br>t.contestants.getById(cc[<span class=\"hljs-number\">4</span>].id).should.equal(cc[<span class=\"hljs-number\">4</span>]);",
                "isRoot": false,
                "uuid": "5ddb7f77-a158-4010-893b-b37e24ac6c36",
                "parentUUID": "4f9c58c6-353b-4dbb-9264-06df3e198484",
                "skipped": false
              },
              {
                "title": "should not get team of contestant",
                "fullTitle": "Teams getByContestant(contestant) should not get team of contestant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">1</span>);<br>cc[<span class=\"hljs-number\">0</span>].id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">0</span>]);<br>should(t).be.null();",
                "isRoot": false,
                "uuid": "ef02c3ee-39fd-45fb-899d-1c5e20849e8d",
                "parentUUID": "4f9c58c6-353b-4dbb-9264-06df3e198484",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "getByTeamName(temName)",
            "suites": [],
            "tests": [
              {
                "title": "should get team when team with name exists",
                "fullTitle": "Teams getByTeamName(temName) should get team when team with name exists",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t1 = tc.all[<span class=\"hljs-number\">0</span>];<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(t1.teamName);<br>t.should.equal(t1);",
                "isRoot": false,
                "uuid": "04156bcc-f242-40b1-aeba-124937b0762f",
                "parentUUID": "ca9d057f-6da6-42a9-968a-d512a0f5c9c4",
                "skipped": false
              },
              {
                "title": "should not get team when team with name does not exist",
                "fullTitle": "Teams getByTeamName(temName) should not get team when team with name does not exist",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(<span class=\"hljs-string\">'Not a team name that exists'</span>);<br>should(t).be.null();",
                "isRoot": false,
                "uuid": "ccaa123b-88f5-4bd2-a586-2c263fd06fd6",
                "parentUUID": "ca9d057f-6da6-42a9-968a-d512a0f5c9c4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "ca9d057f-6da6-42a9-968a-d512a0f5c9c4",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should get team when team with name exists",
                "fullTitle": "Teams getByTeamName(temName) should get team when team with name exists",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t1 = tc.all[<span class=\"hljs-number\">0</span>];<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(t1.teamName);<br>t.should.equal(t1);",
                "isRoot": false,
                "uuid": "04156bcc-f242-40b1-aeba-124937b0762f",
                "parentUUID": "ca9d057f-6da6-42a9-968a-d512a0f5c9c4",
                "skipped": false
              },
              {
                "title": "should not get team when team with name does not exist",
                "fullTitle": "Teams getByTeamName(temName) should not get team when team with name does not exist",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(<span class=\"hljs-string\">'Not a team name that exists'</span>);<br>should(t).be.null();",
                "isRoot": false,
                "uuid": "ccaa123b-88f5-4bd2-a586-2c263fd06fd6",
                "parentUUID": "ca9d057f-6da6-42a9-968a-d512a0f5c9c4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "getAvailable(settings)",
            "suites": [],
            "tests": [
              {
                "title": "should not return full teams",
                "fullTitle": "Teams getAvailable(settings) should not return full teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">2</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "0d5bf7ee-8d82-4095-a2e6-422b68faed4a",
                "parentUUID": "48b6bfbb-f219-469f-a032-a921aeefc1e9",
                "skipped": false
              },
              {
                "title": "should return teams with space",
                "fullTitle": "Teams getAvailable(settings) should return teams with space",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "928e2cf4-cb1e-4a02-bfc0-a39ffd598497",
                "parentUUID": "48b6bfbb-f219-469f-a032-a921aeefc1e9",
                "skipped": false
              },
              {
                "title": "should return teams with unlimited space",
                "fullTitle": "Teams getAvailable(settings) should return teams with unlimited space",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = constants.UNLIMITED;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "7ae35e73-3d6a-4bd7-8c40-6de2a943bdeb",
                "parentUUID": "48b6bfbb-f219-469f-a032-a921aeefc1e9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "48b6bfbb-f219-469f-a032-a921aeefc1e9",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should not return full teams",
                "fullTitle": "Teams getAvailable(settings) should not return full teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">2</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "0d5bf7ee-8d82-4095-a2e6-422b68faed4a",
                "parentUUID": "48b6bfbb-f219-469f-a032-a921aeefc1e9",
                "skipped": false
              },
              {
                "title": "should return teams with space",
                "fullTitle": "Teams getAvailable(settings) should return teams with space",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "928e2cf4-cb1e-4a02-bfc0-a39ffd598497",
                "parentUUID": "48b6bfbb-f219-469f-a032-a921aeefc1e9",
                "skipped": false
              },
              {
                "title": "should return teams with unlimited space",
                "fullTitle": "Teams getAvailable(settings) should return teams with unlimited space",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = constants.UNLIMITED;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "7ae35e73-3d6a-4bd7-8c40-6de2a943bdeb",
                "parentUUID": "48b6bfbb-f219-469f-a032-a921aeefc1e9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/TeamsTests.js",
        "uuid": "d7079849-6576-470b-b170-ad041a8538dd",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Team",
        "suites": [
          {
            "title": "#teamName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Team #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t._teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
                "isRoot": false,
                "uuid": "86cdfd7f-617c-4e87-9cfd-9f5625a10264",
                "parentUUID": "81973d85-baaa-479d-aa48-9b09de6a6480",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #teamName should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t._teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t.teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
                "isRoot": false,
                "uuid": "f2dbbffc-f12a-4963-a88b-02c3bb76595a",
                "parentUUID": "81973d85-baaa-479d-aa48-9b09de6a6480",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "81973d85-baaa-479d-aa48-9b09de6a6480",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Team #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t._teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
                "isRoot": false,
                "uuid": "86cdfd7f-617c-4e87-9cfd-9f5625a10264",
                "parentUUID": "81973d85-baaa-479d-aa48-9b09de6a6480",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #teamName should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t._teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t.teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
                "isRoot": false,
                "uuid": "f2dbbffc-f12a-4963-a88b-02c3bb76595a",
                "parentUUID": "81973d85-baaa-479d-aa48-9b09de6a6480",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#teamLeader",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Team #teamLeader should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t.teamLeader = c;<br>t._teamLeader.should.equal(c);",
                "isRoot": false,
                "uuid": "9f45e764-fe14-4e7f-927d-4c6d4b1b2218",
                "parentUUID": "bba4cacc-ff4d-44b2-84b3-5bd9ac10e85c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #teamLeader should get value",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t._teamLeader = c;<br>t.teamLeader.should.equal(c);",
                "isRoot": false,
                "uuid": "845315e9-b0a4-4f88-a991-deb4e937c8a5",
                "parentUUID": "bba4cacc-ff4d-44b2-84b3-5bd9ac10e85c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "bba4cacc-ff4d-44b2-84b3-5bd9ac10e85c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Team #teamLeader should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t.teamLeader = c;<br>t._teamLeader.should.equal(c);",
                "isRoot": false,
                "uuid": "9f45e764-fe14-4e7f-927d-4c6d4b1b2218",
                "parentUUID": "bba4cacc-ff4d-44b2-84b3-5bd9ac10e85c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #teamLeader should get value",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t._teamLeader = c;<br>t.teamLeader.should.equal(c);",
                "isRoot": false,
                "uuid": "845315e9-b0a4-4f88-a991-deb4e937c8a5",
                "parentUUID": "bba4cacc-ff4d-44b2-84b3-5bd9ac10e85c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 9
          },
          {
            "title": "#score",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Team #score should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "90a9bf98-fd0e-48db-9a6a-6014ec38bc09",
                "parentUUID": "d2e729bc-652a-4779-93f4-b0dc4c34eee9",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #score should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br>p._score = <span class=\"hljs-number\">5</span>;<br>p.score.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "a9172fcf-90ab-4006-892e-f0099e21aa26",
                "parentUUID": "d2e729bc-652a-4779-93f4-b0dc4c34eee9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "d2e729bc-652a-4779-93f4-b0dc4c34eee9",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Team #score should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "90a9bf98-fd0e-48db-9a6a-6014ec38bc09",
                "parentUUID": "d2e729bc-652a-4779-93f4-b0dc4c34eee9",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #score should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br>p._score = <span class=\"hljs-number\">5</span>;<br>p.score.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "a9172fcf-90ab-4006-892e-f0099e21aa26",
                "parentUUID": "d2e729bc-652a-4779-93f4-b0dc4c34eee9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#contestants",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Team #contestants should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "efea8bd9-c363-4793-a168-0feba47fa30a",
                "parentUUID": "be622b90-7752-4ebc-8d1b-35a108ed98ac",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #contestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = p.contestants;<br>c.should.be.instanceOf(Participants);",
                "isRoot": false,
                "uuid": "ec6fb11b-2293-47e3-9f1a-87f39ce1f925",
                "parentUUID": "be622b90-7752-4ebc-8d1b-35a108ed98ac",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "be622b90-7752-4ebc-8d1b-35a108ed98ac",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Team #contestants should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "efea8bd9-c363-4793-a168-0feba47fa30a",
                "parentUUID": "be622b90-7752-4ebc-8d1b-35a108ed98ac",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #contestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = p.contestants;<br>c.should.be.instanceOf(Participants);",
                "isRoot": false,
                "uuid": "ec6fb11b-2293-47e3-9f1a-87f39ce1f925",
                "parentUUID": "be622b90-7752-4ebc-8d1b-35a108ed98ac",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "when a contestant scores",
            "suites": [],
            "tests": [
              {
                "title": "should update the teams score",
                "fullTitle": "Team when a contestant scores should update the teams score",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br>c1.incrementScore();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.incrementScore();<br>c2.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "fb42fb83-c458-42d8-a872-9220f7a12e6b",
                "parentUUID": "9aa041d8-a689-4797-b52a-1eb88ee0e6af",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "9aa041d8-a689-4797-b52a-1eb88ee0e6af",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should update the teams score",
                "fullTitle": "Team when a contestant scores should update the teams score",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br>c1.incrementScore();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.incrementScore();<br>c2.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "fb42fb83-c458-42d8-a872-9220f7a12e6b",
                "parentUUID": "9aa041d8-a689-4797-b52a-1eb88ee0e6af",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "tryAssignTeamLeader(contestant, hostOverride)",
            "suites": [],
            "tests": [
              {
                "title": "should allow it when no team leader is set",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should allow it when no team leader is set",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.id = <span class=\"hljs-string\">'c1'</span>;<br>t.contestants.add(c);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);",
                "isRoot": false,
                "uuid": "9013bc91-8d48-4fb3-beee-c1b46eccf8a5",
                "parentUUID": "fd54c112-7b40-41fd-9506-67e56422ce31",
                "skipped": false
              },
              {
                "title": "should not allow it when a team leader is set",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should not allow it when a team leader is set",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_FULFILLED);",
                "isRoot": false,
                "uuid": "a775a95c-0666-409c-a2ce-f7c2f90ab978",
                "parentUUID": "fd54c112-7b40-41fd-9506-67e56422ce31",
                "skipped": false
              },
              {
                "title": "should not allow it when a contestant is not in team",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should not allow it when a contestant is not in team",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_NOT_CONTESTANT);",
                "isRoot": false,
                "uuid": "b99087f2-338f-4188-9fc0-6c8dc50c5b72",
                "parentUUID": "fd54c112-7b40-41fd-9506-67e56422ce31",
                "skipped": false
              },
              {
                "title": "should allow it when a team leader is set and host override is flagged",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should allow it when a team leader is set and host override is flagged",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">true</span>);<br>r.should.be.true();<br>should.not.exist(m);",
                "isRoot": false,
                "uuid": "62f0bfac-7af6-4261-a0b0-e795676ce0e9",
                "parentUUID": "fd54c112-7b40-41fd-9506-67e56422ce31",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "fd54c112-7b40-41fd-9506-67e56422ce31",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should allow it when no team leader is set",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should allow it when no team leader is set",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.id = <span class=\"hljs-string\">'c1'</span>;<br>t.contestants.add(c);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);",
                "isRoot": false,
                "uuid": "9013bc91-8d48-4fb3-beee-c1b46eccf8a5",
                "parentUUID": "fd54c112-7b40-41fd-9506-67e56422ce31",
                "skipped": false
              },
              {
                "title": "should not allow it when a team leader is set",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should not allow it when a team leader is set",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_FULFILLED);",
                "isRoot": false,
                "uuid": "a775a95c-0666-409c-a2ce-f7c2f90ab978",
                "parentUUID": "fd54c112-7b40-41fd-9506-67e56422ce31",
                "skipped": false
              },
              {
                "title": "should not allow it when a contestant is not in team",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should not allow it when a contestant is not in team",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_NOT_CONTESTANT);",
                "isRoot": false,
                "uuid": "b99087f2-338f-4188-9fc0-6c8dc50c5b72",
                "parentUUID": "fd54c112-7b40-41fd-9506-67e56422ce31",
                "skipped": false
              },
              {
                "title": "should allow it when a team leader is set and host override is flagged",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should allow it when a team leader is set and host override is flagged",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">true</span>);<br>r.should.be.true();<br>should.not.exist(m);",
                "isRoot": false,
                "uuid": "62f0bfac-7af6-4261-a0b0-e795676ce0e9",
                "parentUUID": "fd54c112-7b40-41fd-9506-67e56422ce31",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "tryChangeTeamName(teamName, settings, hostOverride)",
            "suites": [
              {
                "title": "when host override",
                "suites": [],
                "tests": [
                  {
                    "title": "should change name when request is valid",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when request is valid",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "c57c249a-408f-46e2-b756-ed9819a2639e",
                    "parentUUID": "2fbc0a21-444d-4bdc-9965-e8874fb91e9c",
                    "skipped": false
                  },
                  {
                    "title": "should change name when setting do not allow it",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when setting do not allow it",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "c313a3ad-36d9-4ff2-b8dc-6330b9a36f2d",
                    "parentUUID": "2fbc0a21-444d-4bdc-9965-e8874fb91e9c",
                    "skipped": false
                  },
                  {
                    "title": "should change name when name contains profanity",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when name contains profanity",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "d0c8a6c2-fbba-4549-ac7d-371c1c315ba1",
                    "parentUUID": "2fbc0a21-444d-4bdc-9965-e8874fb91e9c",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamTests.js",
                "uuid": "2fbc0a21-444d-4bdc-9965-e8874fb91e9c",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
                "passes": [
                  {
                    "title": "should change name when request is valid",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when request is valid",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "c57c249a-408f-46e2-b756-ed9819a2639e",
                    "parentUUID": "2fbc0a21-444d-4bdc-9965-e8874fb91e9c",
                    "skipped": false
                  },
                  {
                    "title": "should change name when setting do not allow it",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when setting do not allow it",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "c313a3ad-36d9-4ff2-b8dc-6330b9a36f2d",
                    "parentUUID": "2fbc0a21-444d-4bdc-9965-e8874fb91e9c",
                    "skipped": false
                  },
                  {
                    "title": "should change name when name contains profanity",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when name contains profanity",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "d0c8a6c2-fbba-4549-ac7d-371c1c315ba1",
                    "parentUUID": "2fbc0a21-444d-4bdc-9965-e8874fb91e9c",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1
              }
            ],
            "tests": [
              {
                "title": "should change name when request is valid",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should change name when request is valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                "isRoot": false,
                "uuid": "7acb7c09-932f-4cb1-bf29-83b8fa6cd88e",
                "parentUUID": "76b6b25d-4e8f-4ca5-814a-682e12ef8920",
                "skipped": false
              },
              {
                "title": "should not change name when setting do not allow it",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should not change name when setting do not allow it",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_SETTINGS_NOT_ALLOW);<br>r.should.be.false();",
                "isRoot": false,
                "uuid": "0e12969e-9b87-45cf-8c20-7588e9fda2b2",
                "parentUUID": "76b6b25d-4e8f-4ca5-814a-682e12ef8920",
                "skipped": false
              },
              {
                "title": "should not change name when name contains profanity",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should not change name when name contains profanity",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_CONTAINS_PROFANITY);<br>r.should.be.false();",
                "isRoot": false,
                "uuid": "0fcc90cc-539f-4e6f-83e2-2a96e1d60564",
                "parentUUID": "76b6b25d-4e8f-4ca5-814a-682e12ef8920",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "76b6b25d-4e8f-4ca5-814a-682e12ef8920",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should change name when request is valid",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should change name when request is valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                "isRoot": false,
                "uuid": "7acb7c09-932f-4cb1-bf29-83b8fa6cd88e",
                "parentUUID": "76b6b25d-4e8f-4ca5-814a-682e12ef8920",
                "skipped": false
              },
              {
                "title": "should not change name when setting do not allow it",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should not change name when setting do not allow it",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_SETTINGS_NOT_ALLOW);<br>r.should.be.false();",
                "isRoot": false,
                "uuid": "0e12969e-9b87-45cf-8c20-7588e9fda2b2",
                "parentUUID": "76b6b25d-4e8f-4ca5-814a-682e12ef8920",
                "skipped": false
              },
              {
                "title": "should not change name when name contains profanity",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should not change name when name contains profanity",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_CONTAINS_PROFANITY);<br>r.should.be.false();",
                "isRoot": false,
                "uuid": "0fcc90cc-539f-4e6f-83e2-2a96e1d60564",
                "parentUUID": "76b6b25d-4e8f-4ca5-814a-682e12ef8920",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "getContestantByUsername(username)",
            "suites": [],
            "tests": [
              {
                "title": "should get contestant when contest with username exists",
                "fullTitle": "Team getContestantByUsername(username) should get contestant when contest with username exists",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(c1.username);<br>c.should.equal(c1);<br>c = t.getContestantByUsername(<span class=\"hljs-string\">'c1abc'</span>);<br>c.should.equal(c1);",
                "isRoot": false,
                "uuid": "cc144739-34e1-4790-956b-a61284e4f8eb",
                "parentUUID": "f077b841-62e9-46a8-8701-d11a119e31ea",
                "skipped": false
              },
              {
                "title": "should not get contestant when contest with username does not exist",
                "fullTitle": "Team getContestantByUsername(username) should not get contestant when contest with username does not exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(<span class=\"hljs-string\">'John Doe'</span>);<br>should(c).be.null();",
                "isRoot": false,
                "uuid": "f03e4988-a534-402a-964f-80e39a7817ed",
                "parentUUID": "f077b841-62e9-46a8-8701-d11a119e31ea",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "f077b841-62e9-46a8-8701-d11a119e31ea",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should get contestant when contest with username exists",
                "fullTitle": "Team getContestantByUsername(username) should get contestant when contest with username exists",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(c1.username);<br>c.should.equal(c1);<br>c = t.getContestantByUsername(<span class=\"hljs-string\">'c1abc'</span>);<br>c.should.equal(c1);",
                "isRoot": false,
                "uuid": "cc144739-34e1-4790-956b-a61284e4f8eb",
                "parentUUID": "f077b841-62e9-46a8-8701-d11a119e31ea",
                "skipped": false
              },
              {
                "title": "should not get contestant when contest with username does not exist",
                "fullTitle": "Team getContestantByUsername(username) should not get contestant when contest with username does not exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(<span class=\"hljs-string\">'John Doe'</span>);<br>should(c).be.null();",
                "isRoot": false,
                "uuid": "f03e4988-a534-402a-964f-80e39a7817ed",
                "parentUUID": "f077b841-62e9-46a8-8701-d11a119e31ea",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/TeamTests.js",
        "uuid": "b3dbfeee-624f-4f03-8b55-5175ca372e91",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "d78f200f-3e89-4df5-aa35-1ae4dac55e1f",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should throw on set value",
      "fullTitle": "#wasSuccessful should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.wasSuccessful = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "7d566855-e8e9-462b-b454-c6fd599bdd4f",
      "parentUUID": "0a8e7dc5-2a8a-4d1c-94cc-d529b6b4ff0d",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#wasSuccessful should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>r.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "bd351ca4-8739-4d65-a6e6-c491ebc04457",
      "parentUUID": "0a8e7dc5-2a8a-4d1c-94cc-d529b6b4ff0d",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#enquireForTeamLeaderPosition should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r._enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "9f6a2b61-4ef5-462e-a976-f483d93e7153",
      "parentUUID": "401b1087-0135-4ebf-bfb1-bce71aa3599f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#enquireForTeamLeaderPosition should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r.enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "8f2f4f29-85e6-430a-a568-35c0d4b975b3",
      "parentUUID": "401b1087-0135-4ebf-bfb1-bce71aa3599f",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#errorMessage should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.errorMessage = <span class=\"hljs-string\">'test'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "9ce466eb-1926-4b49-8fd5-8a1641e72291",
      "parentUUID": "081d9403-cdb7-4cf5-8fdc-662d50d202af",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#errorMessage should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._errorMessage = <span class=\"hljs-string\">'errorMessage_test'</span>;<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'errorMessage_test'</span>);",
      "isRoot": false,
      "uuid": "ee98b821-f6df-41d3-bd08-ab2325410326",
      "parentUUID": "081d9403-cdb7-4cf5-8fdc-662d50d202af",
      "skipped": false
    },
    {
      "title": "should change the state to not successful",
      "fullTitle": "#setNotSuccessful(errorMessage) should change the state to not successful",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.setNotSuccessful(<span class=\"hljs-string\">'Test error message'</span>);<br>r.wasSuccessful.should.be.false();<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'Test error message'</span>);",
      "isRoot": false,
      "uuid": "ed7bc2c2-d350-4b02-826b-bf5ac692d063",
      "parentUUID": "d21e99ca-cce3-48dc-be17-5904aeaa69fb",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'username_test'</span>;<br>c._username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
      "isRoot": false,
      "uuid": "cfa5a723-13ab-4104-9716-014c040f9892",
      "parentUUID": "14578bb9-8e96-45b2-9e49-6f3f63bc6b23",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._username = <span class=\"hljs-string\">'username_test'</span>;<br>c.username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
      "isRoot": false,
      "uuid": "f043d59a-c449-449f-b5cc-13176b653240",
      "parentUUID": "14578bb9-8e96-45b2-9e49-6f3f63bc6b23",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#score should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    c.score = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "9dececa1-87b1-4dbb-ac1a-0def1e24c4e8",
      "parentUUID": "58995496-7a78-480b-9d0c-c5e4da0fad81",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#score should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._score = <span class=\"hljs-number\">1</span>;<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "6e072a0f-6769-41a8-a5ba-ac0413477775",
      "parentUUID": "58995496-7a78-480b-9d0c-c5e4da0fad81",
      "skipped": false
    },
    {
      "title": "should increment the contestant's score",
      "fullTitle": "#incrementScore() should increment the contestant's score",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.incrementScore();<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "d1491428-1275-49c0-947a-73364fe9a150",
      "parentUUID": "6fe54eec-3f1a-42db-8e20-544954b1ab92",
      "skipped": false
    },
    {
      "title": "should emit scoreUpdate event",
      "fullTitle": "#incrementScore() should emit scoreUpdate event",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.on(<span class=\"hljs-string\">'scoreUpdate'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>});<br>c.incrementScore();",
      "isRoot": false,
      "uuid": "39fa02e5-f933-43e9-886b-ae31bed4e487",
      "parentUUID": "6fe54eec-3f1a-42db-8e20-544954b1ab92",
      "skipped": false
    },
    {
      "title": "should return a non-null non-empty key",
      "fullTitle": "#generateSessionId() should return a non-null non-empty key",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateSessionId().should.not.be.equal(<span class=\"hljs-string\">''</span>).and.not.be.equal(<span class=\"hljs-literal\">null</span>);",
      "isRoot": false,
      "uuid": "c4bc49ee-d2a2-44b1-bd4d-bf620dda32d2",
      "parentUUID": "158ae8e1-8bd6-4346-993b-e5eac0258d80",
      "skipped": false
    },
    {
      "title": "should return a id of the correct length",
      "fullTitle": "#generateSessionId() should return a id of the correct length",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateSessionId()<br>    .length.should.be.Number().and.equal(idUtility.keyLength);",
      "isRoot": false,
      "uuid": "3ca51f2a-5ea2-45e0-b5de-525c4bb30ba9",
      "parentUUID": "158ae8e1-8bd6-4346-993b-e5eac0258d80",
      "skipped": false
    },
    {
      "title": "should record id so it cannot be reused.",
      "fullTitle": "#generateSessionId() should record id so it cannot be reused.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> id = idUtility.generateSessionId();<br>idUtility._sessionKeysInUse.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">cachedId</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> cachedId === id;<br>}).should.equal(id);",
      "isRoot": false,
      "uuid": "2b01e9e8-7370-42e6-b0c7-adc0c7d49f89",
      "parentUUID": "158ae8e1-8bd6-4346-993b-e5eac0258d80",
      "skipped": false
    },
    {
      "title": "should return a UUID",
      "fullTitle": "#generateParticipantId() should return a UUID",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateParticipantId()<br>    .should.match(<span class=\"hljs-regexp\">/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i</span>);",
      "isRoot": false,
      "uuid": "e58ddb9e-e6dc-4324-9c68-04942c5d4678",
      "parentUUID": "b06f902c-9f8a-4ca8-8cc2-28af3b520901",
      "skipped": false
    },
    {
      "title": "should store the ids to stop reuse",
      "fullTitle": "#registerSessionIdsInUse(ids) should store the ids to stop reuse",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.length.should.be.aboveOrEqual(<span class=\"hljs-number\">2</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "354e3b9e-ef3c-4dac-89b3-deb1a94fa706",
      "parentUUID": "4defc731-7bb1-40e7-a285-705beb772381",
      "skipped": false
    },
    {
      "title": "should return a UUID",
      "fullTitle": "#releaseSessionId(id) should return a UUID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility.releaseSessionId(<span class=\"hljs-string\">'111AAA'</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.equal(-<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "0d1f79cd-f4e2-4e4d-8b90-26793a263a93",
      "parentUUID": "9a802584-3fef-47ff-ac18-4ce69c14fea8",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#action should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.data._action.should.equal(constants.buzzerActionCommands.RESET);",
      "isRoot": false,
      "uuid": "22787df4-c493-4afc-8101-1154f0e9566d",
      "parentUUID": "a7a3ef90-05aa-42d3-95cf-4dd3e8cdecfe",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#action should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._action = constants.buzzerActionCommands.RESET;<br>m.action.should.equal(constants.buzzerActionCommands.RESET);",
      "isRoot": false,
      "uuid": "a90af435-7bec-4c6c-9e54-07022de5fa92",
      "parentUUID": "a7a3ef90-05aa-42d3-95cf-4dd3e8cdecfe",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "29d20001-fd3b-4168-97ac-a74595472281",
      "parentUUID": "4471cf59-bb1a-4d0f-95d8-e20d152c6adc",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "a9a353cd-bfa9-46bd-9a15-93b11a2eb74e",
      "parentUUID": "4471cf59-bb1a-4d0f-95d8-e20d152c6adc",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b8aa3384-b8ce-4e89-8c02-8bb50442138c",
      "parentUUID": "d2ee4ee3-3310-4052-a4a0-d4a128f62922",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "825af6f3-d665-40ab-9a7c-57ca3aa818a8",
      "parentUUID": "d2ee4ee3-3310-4052-a4a0-d4a128f62922",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'yyy123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "555391dd-7a36-43ae-96f6-8f2161a1c713",
      "parentUUID": "26a9982d-72f6-4cf8-98bd-7862deef5490",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = <span class=\"hljs-number\">99</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "7ffcfcf3-7eaa-4c38-b4c3-77b1bb20836a",
      "parentUUID": "26a9982d-72f6-4cf8-98bd-7862deef5490",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "efe903be-76a2-440d-9e30-e5cf594268fc",
      "parentUUID": "0a30a7f9-b2ae-43ab-a846-14d89de75b1d",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "8537ac7e-3766-4932-b5e5-316a79490381",
      "parentUUID": "0a30a7f9-b2ae-43ab-a846-14d89de75b1d",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "c7cce1eb-39ef-497f-bf18-8b6d9906cd0e",
      "parentUUID": "1b52aba6-bb9c-42c7-9648-23c2c8ad96cc",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "79e78f84-6191-41a8-8434-b0424dd62169",
      "parentUUID": "1b52aba6-bb9c-42c7-9648-23c2c8ad96cc",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "455073fc-bfe5-4a32-b9da-616943b66538",
      "parentUUID": "8b2f5c0e-341a-435a-b0de-a72633641bc2",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "8d6c034b-44c3-4390-beba-bd1f5debf1c0",
      "parentUUID": "8b2f5c0e-341a-435a-b0de-a72633641bc2",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.username = <span class=\"hljs-string\">'test123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
      "isRoot": false,
      "uuid": "82566e2a-5915-43cf-8ac5-1320cb2a9bee",
      "parentUUID": "c5f74e2d-0190-4b34-b303-77c89102c523",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._username = <span class=\"hljs-string\">'test123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
      "isRoot": false,
      "uuid": "c229e20e-9327-4975-82d3-7e15d3a1086e",
      "parentUUID": "c5f74e2d-0190-4b34-b303-77c89102c523",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "5edc1fcd-9e41-4c51-9d43-a865c7ac0c83",
      "parentUUID": "a1dd9a4b-1725-42b1-b92a-b9b1d1346f5b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "4c4fee10-a77c-4bc2-a751-530fbf8aeb42",
      "parentUUID": "a1dd9a4b-1725-42b1-b92a-b9b1d1346f5b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "d022f806-4dd4-4ba0-a595-fd5c86987d9a",
      "parentUUID": "54183cdd-fac6-4d4e-8fc1-34411251a44a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "c6a8f7d8-a0ff-4be6-93af-76567795b296",
      "parentUUID": "54183cdd-fac6-4d4e-8fc1-34411251a44a",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "856c7c36-df29-4217-920d-17c4125f0818",
      "parentUUID": "37d094e2-6ccb-43a4-b35b-35f7839e3b0f",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "0c80dbeb-b16b-400c-a5ed-1f40b382f025",
      "parentUUID": "37d094e2-6ccb-43a4-b35b-35f7839e3b0f",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#wasSuccessful should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.data._wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "fba5ccee-e0c3-4f5c-932e-02404955778a",
      "parentUUID": "cc2b29b4-3c65-4881-aa45-70d7cdf9503c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#wasSuccessful should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "5ac13cb6-175e-4e3f-a350-f0ef81e1b90f",
      "parentUUID": "cc2b29b4-3c65-4881-aa45-70d7cdf9503c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#enquireForTeamLeaderPosition should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.data._enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "b1c8b030-40ca-4492-a512-289ab8df2807",
      "parentUUID": "a18fe140-77d8-44b2-8cc9-69dfe83e8121",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#enquireForTeamLeaderPosition should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "f868d0c4-ea13-4fd3-9141-75edab3f301d",
      "parentUUID": "a18fe140-77d8-44b2-8cc9-69dfe83e8121",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#failedRequestReason should set value",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.data._failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
      "isRoot": false,
      "uuid": "b5ae37e1-51ea-499b-8853-3d969b0f4613",
      "parentUUID": "baf79c79-fd95-4aeb-8b5a-0d148a1cb0d5",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#failedRequestReason should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
      "isRoot": false,
      "uuid": "2622aef5-7323-4eda-a833-fa542bf39b88",
      "parentUUID": "baf79c79-fd95-4aeb-8b5a-0d148a1cb0d5",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "98284b70-92c6-422f-af10-0e7f5d84425d",
      "parentUUID": "4e5896cf-ff88-47de-bc8f-65820170d398",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "9a651971-dafe-4d34-af76-6f93d52c0fae",
      "parentUUID": "4e5896cf-ff88-47de-bc8f-65820170d398",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#mustChooseTeam should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.data._mustChooseTeam.should.be.true();",
      "isRoot": false,
      "uuid": "fe6b4e66-d33d-42c5-bfac-9942daebdc1f",
      "parentUUID": "e3dc90d0-4ba6-465d-a0d1-2c65f372e030",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#mustChooseTeam should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.mustChooseTeam.should.be.true();",
      "isRoot": false,
      "uuid": "7e6eb42c-64df-4cbe-a0ba-c97d57b9bdac",
      "parentUUID": "e3dc90d0-4ba6-465d-a0d1-2c65f372e030",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teams should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.data._teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
      "isRoot": false,
      "uuid": "cd03edf2-0d6b-4d5a-9148-7f92b11950a8",
      "parentUUID": "92b4bbba-a826-45e4-9edf-20193a753c67",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teams should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
      "isRoot": false,
      "uuid": "aa0b5138-6ecd-49a1-8bc5-2ecdc008658e",
      "parentUUID": "92b4bbba-a826-45e4-9edf-20193a753c67",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "1c5d8dc6-2082-45aa-a174-6539d7f5f13c",
      "parentUUID": "ad713153-df73-49b2-a2bd-124ea79846d7",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "d36500d2-8dc2-4b56-930a-1d1db0c0fc3f",
      "parentUUID": "ad713153-df73-49b2-a2bd-124ea79846d7",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#settings should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.data._settings.should.equal(s);",
      "isRoot": false,
      "uuid": "4fa26b71-4ab4-4d15-8518-83688163a24e",
      "parentUUID": "ac9a8afb-59cb-4fdc-a422-c2c77e4710d4",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#settings should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.data._settings = s;<br>m.settings.should.equal(s);",
      "isRoot": false,
      "uuid": "ec391e5e-be0d-45e0-af65-afb548b8fbeb",
      "parentUUID": "ac9a8afb-59cb-4fdc-a422-c2c77e4710d4",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "eff02b1a-8588-4001-bb3e-084bacd1c279",
      "parentUUID": "fe7c8225-06ce-4066-af1c-c9a81ab8560b",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-string\">'invalid'</span>;<br>m.settings = s;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "b6e842be-3717-4f6e-8c6a-b66e260aeec8",
      "parentUUID": "fe7c8225-06ce-4066-af1c-c9a81ab8560b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "4776fbd4-6e8d-4f0a-bbc9-f6f286547e70",
      "parentUUID": "e9ad758a-5717-45ea-9356-0010ef79a500",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "6709c002-81c2-408d-8d56-cc0cde2fef7e",
      "parentUUID": "e9ad758a-5717-45ea-9356-0010ef79a500",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "71758c32-15cc-45c4-8549-afe7112401c4",
      "parentUUID": "dd778764-7448-48e2-ad10-cba658704400",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f6b25aa6-35fc-4815-838c-8c7150c3d671",
      "parentUUID": "dd778764-7448-48e2-ad10-cba658704400",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "e9e0323c-6407-4df8-9c3b-e08812f187bf",
      "parentUUID": "a59be9a8-6cf0-4997-accd-13079a568a8d",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "dc5f9560-6414-42c9-afb8-d01def79d731",
      "parentUUID": "a59be9a8-6cf0-4997-accd-13079a568a8d",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#message should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "cead38b1-0321-4767-9ef3-d6a802110c59",
      "parentUUID": "37c264f3-39b5-4043-868a-85e400786eeb",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#message should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.data._error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "e107133d-b038-4271-9e3f-10cabfd06d5a",
      "parentUUID": "37c264f3-39b5-4043-868a-85e400786eeb",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "451b36dd-fd52-49d8-a4af-2f11909b032c",
      "parentUUID": "31062d66-7ec0-45fc-ba81-fca242607ef7",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "6bd8c410-b105-4c81-934d-4f3953ff860b",
      "parentUUID": "31062d66-7ec0-45fc-ba81-fca242607ef7",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "559fa7da-25e1-4636-a162-26c12570a577",
      "parentUUID": "9053e230-5716-4467-9494-a0e3d5da2b9b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "410fbad8-99bc-428f-ac73-456bbec4c56c",
      "parentUUID": "9053e230-5716-4467-9494-a0e3d5da2b9b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxTeams should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxTeams = <span class=\"hljs-number\">5</span>;<br>m.data._maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "c43f8ea4-c6ae-4815-8124-03df97b74535",
      "parentUUID": "9d95ac3f-19ea-4e18-ad01-350bb6b0b995",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxTeams should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxTeams = <span class=\"hljs-number\">5</span>;<br>m.maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "2e298d3d-e27b-477f-a190-25a2a083ad64",
      "parentUUID": "9d95ac3f-19ea-4e18-ad01-350bb6b0b995",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamSize should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.teamSize = <span class=\"hljs-number\">5</span>;<br>m.data._teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "7dd75f82-18f0-46e2-84b0-1de2d4d4246d",
      "parentUUID": "82b3e071-5619-46af-a60b-7634f0d96655",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamSize should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._teamSize = <span class=\"hljs-number\">5</span>;<br>m.teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "b025c85d-f1b5-4c25-96a1-79c03b8246c9",
      "parentUUID": "82b3e071-5619-46af-a60b-7634f0d96655",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxContestants should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxContestants = <span class=\"hljs-number\">5</span>;<br>m.data._maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "0e96a08f-539c-4499-b514-a72c3ee4f2e5",
      "parentUUID": "1fb8a35e-c9b1-4139-8f70-a0d74b7a9f91",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxContestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxContestants = <span class=\"hljs-number\">5</span>;<br>m.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "50e098ae-2243-4905-98b2-30955defe50d",
      "parentUUID": "1fb8a35e-c9b1-4139-8f70-a0d74b7a9f91",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "1a5ea097-74ee-4ed7-9455-0b72312d422a",
      "parentUUID": "858201ed-c1e6-4887-b522-474f1840b804",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "d7dba4fa-a044-4d24-a5be-06d0f1fe0c88",
      "parentUUID": "858201ed-c1e6-4887-b522-474f1840b804",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "5dece548-dd86-472f-b288-4255797d952a",
      "parentUUID": "e829ae45-944d-4f49-acf8-204a78ddb4f3",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b41b5290-dc7c-4993-82f2-15c77aecb1d6",
      "parentUUID": "e829ae45-944d-4f49-acf8-204a78ddb4f3",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "9e387361-4f72-4a1c-8479-974e78cc8d42",
      "parentUUID": "414d589d-35d1-4120-b283-018cd0ed2745",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "44080519-6a56-4784-8604-3c2cdf7a8ddb",
      "parentUUID": "414d589d-35d1-4120-b283-018cd0ed2745",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "ff8da154-00c9-4e59-960c-6f898fbf5d3b",
      "parentUUID": "7691d04d-7e66-4f2b-8452-ddf27d5967cc",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "edd88988-55a5-4033-b74e-6dea19312c97",
      "parentUUID": "7691d04d-7e66-4f2b-8452-ddf27d5967cc",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeaderUsername should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "646a295d-a3f6-44c6-b1c5-421b6e82ab4f",
      "parentUUID": "94ab5598-afe2-4297-a540-0e9b7270f076",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeaderUsername should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "81b161d8-c4ab-46f4-82e0-115f4d68f14f",
      "parentUUID": "94ab5598-afe2-4297-a540-0e9b7270f076",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "d89a0fad-b364-4941-8dfc-97e958420ce5",
      "parentUUID": "d8af4d4e-991d-4399-aea8-bf591b4bf51b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "001218de-2b5a-4272-ac8c-49596272b415",
      "parentUUID": "d8af4d4e-991d-4399-aea8-bf591b4bf51b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "cc32a36d-a81d-4126-99f3-d32e4ac6a737",
      "parentUUID": "06de98c6-f06e-447f-a7a6-c11ec8233775",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "22c168fe-38e0-47c2-8875-c1417edb94cd",
      "parentUUID": "06de98c6-f06e-447f-a7a6-c11ec8233775",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "355dafc9-0585-4efb-9e1b-017f9b9c4015",
      "parentUUID": "97e3d3c5-a5fa-4ab2-b27d-35457383dfb1",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "edb90625-58c0-44f7-b949-88fc99faf493",
      "parentUUID": "97e3d3c5-a5fa-4ab2-b27d-35457383dfb1",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameFrom should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "d5104cf9-0a49-4e4d-96da-88d29de08576",
      "parentUUID": "bd358368-16b4-4c57-a0bc-b0b200e7b0b5",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameFrom should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b88b45f3-5e7a-47e8-90c1-eb543fd75036",
      "parentUUID": "bd358368-16b4-4c57-a0bc-b0b200e7b0b5",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameTo should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f9760878-341b-417a-8fa7-d6a60e292de9",
      "parentUUID": "4d07ff74-a448-4db7-a6ba-cb870d58249e",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameTo should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "6b3c57b3-80bf-4cd5-ad0e-33e275c3036f",
      "parentUUID": "4d07ff74-a448-4db7-a6ba-cb870d58249e",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "5a0b7da2-d80e-4418-9bd3-72a5e7a97a4c",
      "parentUUID": "a032917e-8022-43c1-a2c6-ef0d946b3af0",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "4f4a7e09-cd6e-4c80-afe2-20627a3daf86",
      "parentUUID": "a032917e-8022-43c1-a2c6-ef0d946b3af0",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "33123f95-a325-4333-89e7-a3a75efa4d53",
      "parentUUID": "1e7f63f6-771e-4249-817e-301a8abf452c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "323cdde1-9541-4736-a14a-da4b565bb8c7",
      "parentUUID": "1e7f63f6-771e-4249-817e-301a8abf452c",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "806ded3e-1d7e-4b83-acb8-9a695cc04035",
      "parentUUID": "659fe879-60f2-4c44-af0d-0c40a44d73ab",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "e7e03f22-bee9-492b-b61d-c2c14d26e3af",
      "parentUUID": "659fe879-60f2-4c44-af0d-0c40a44d73ab",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#decision should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.data._decision.should.be.true();",
      "isRoot": false,
      "uuid": "352c9d75-7598-4859-b3f9-151f9329497b",
      "parentUUID": "f7c98ebd-07b3-45e1-a204-e8090d686a25",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#decision should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._decision = <span class=\"hljs-literal\">true</span>;<br>m.decision.should.be.true();",
      "isRoot": false,
      "uuid": "aabc4b6f-6c42-4f49-a6c3-35b660616cec",
      "parentUUID": "f7c98ebd-07b3-45e1-a204-e8090d686a25",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "ed3af0d5-d445-4a0c-bedc-6c595e880d91",
      "parentUUID": "3234d42a-40c4-4d43-98c0-3df9f59c3e1a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "644d9e07-30d3-40e9-a41a-2d42487eba10",
      "parentUUID": "3234d42a-40c4-4d43-98c0-3df9f59c3e1a",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "46ebdcea-b1b1-4a85-90a2-2ec08f435e26",
      "parentUUID": "b35a231f-a436-4d5d-9380-fc8c02d61114",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "4f9ed96c-2ae2-4384-899f-141518211427",
      "parentUUID": "b35a231f-a436-4d5d-9380-fc8c02d61114",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "b941637c-84aa-409b-b71b-b437a642059a",
      "parentUUID": "f5c9d41b-f913-471f-9e27-feb2a1e79d5c",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "cd803fb6-824e-4c8e-b564-002b573fcbb3",
      "parentUUID": "f5c9d41b-f913-471f-9e27-feb2a1e79d5c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#gameState should get value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.gameState.should.be.Object();",
      "isRoot": false,
      "uuid": "c7217eca-953c-41bf-9e56-a67a8c9d2a00",
      "parentUUID": "27a85419-e66e-4076-bfd2-faad984d41eb",
      "skipped": false
    },
    {
      "title": "should not have ids",
      "fullTitle": "#gameState should not have ids",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState.id);<br>should.not.exist(m.gameState.host.id);",
      "isRoot": false,
      "uuid": "6897efdf-0424-43ba-a061-de092f8c02f0",
      "parentUUID": "27a85419-e66e-4076-bfd2-faad984d41eb",
      "skipped": false
    },
    {
      "title": "should promote private field _ to public field",
      "fullTitle": "#gameState should promote private field _ to public field",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState._host);<br>should.not.exist(m.gameState._settings);<br>should.exist(m.gameState.host);<br>should.exist(m.gameState.settings);<br>should.exist(m.gameState.settings.teamLeaderSelectionMethod);",
      "isRoot": false,
      "uuid": "3c1c3e7c-a1ce-4b5b-a0df-4e23365af498",
      "parentUUID": "27a85419-e66e-4076-bfd2-faad984d41eb",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "7ef0307e-3b3b-4c48-abca-45122adf6bbf",
      "parentUUID": "29fa3ca5-d15b-4383-a620-dde6aaf8d9d5",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 15,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "9b52b70d-4680-4c12-bca2-5ae7edf30ea7",
      "parentUUID": "29fa3ca5-d15b-4383-a620-dde6aaf8d9d5",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#rejoinAs should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.rejoinAs = constants.rejoinAs.HOST;<br>m.data._rejoinAs.should.equal(constants.rejoinAs.HOST);",
      "isRoot": false,
      "uuid": "66d06635-c867-4d08-a72b-904c698f7311",
      "parentUUID": "3911146c-998b-4eb9-8e0e-04b87702c67a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#rejoinAs should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._rejoinAs = constants.rejoinAs.HOST;<br>m.rejoinAs.should.equal(constants.rejoinAs.HOST);",
      "isRoot": false,
      "uuid": "3d54af20-34ca-4464-88a3-483a0d8e8ef0",
      "parentUUID": "3911146c-998b-4eb9-8e0e-04b87702c67a",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "bdec4c89-3564-44f9-a9e0-a6410e7d211a",
      "parentUUID": "f615c602-b9d9-4823-ad9a-855414a43427",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "e8c39d57-d888-4a8f-bc34-247709123e8c",
      "parentUUID": "f615c602-b9d9-4823-ad9a-855414a43427",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#participantId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "dc567e9b-d471-4bb3-97ed-575dc830d05c",
      "parentUUID": "c81490d4-cd59-4abc-80e4-390440db6d8c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#participantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "6e19a8ac-bf81-450e-b8d6-0ac23f9f16c8",
      "parentUUID": "c81490d4-cd59-4abc-80e4-390440db6d8c",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.rejoinAs = constants.rejoinAs.OBSERVER;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "09e97229-56e1-4ec3-a301-a66bc6eb9cee",
      "parentUUID": "085077e0-dfc1-4f43-8a20-ad5f859adf8c",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "5364a2ef-637c-47bf-be00-605b1007d2b0",
      "parentUUID": "085077e0-dfc1-4f43-8a20-ad5f859adf8c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "ad6c7438-11ad-4124-af75-7fd2f537c764",
      "parentUUID": "dd7f283e-0acf-46d6-afac-4f476d0cf50f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "d984954c-8495-4332-b3df-2489ce97e495",
      "parentUUID": "dd7f283e-0acf-46d6-afac-4f476d0cf50f",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "6af2fb4d-1139-4708-929c-07f18edb8abc",
      "parentUUID": "53510103-c773-4496-bb72-e43b09c0b05c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "5835641c-0449-45a1-a8b5-cf236be06272",
      "parentUUID": "53510103-c773-4496-bb72-e43b09c0b05c",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "da133a1e-8762-4d2d-a68d-5a8cb3bc081e",
      "parentUUID": "dfc0e229-e749-4982-a2f3-1148e2ab2d85",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "7331ad4e-82a9-4459-94be-caf9346a8990",
      "parentUUID": "dfc0e229-e749-4982-a2f3-1148e2ab2d85",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionCompleted();<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "18f385ce-a5a3-4a5f-a3f5-e253944a77c7",
      "parentUUID": "ffeddfd5-c8eb-40d5-a900-49682772fc03",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f50e7ff1-d07b-48da-b15e-7f08ce4257bd",
      "parentUUID": "ee3e8389-2fe9-4d52-9470-1997453d1c8e",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "0596536f-caba-4668-b946-1f43dbecdf43",
      "parentUUID": "ee3e8389-2fe9-4d52-9470-1997453d1c8e",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "92ee805e-807a-495c-949d-7f0670d72c0b",
      "parentUUID": "30f93a67-b188-45ce-ae95-a7ae68a296c6",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "80789dac-4b36-4192-bd6a-67ed86b0bb17",
      "parentUUID": "30f93a67-b188-45ce-ae95-a7ae68a296c6",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "f34b2cb4-b91a-463c-b08b-73ae9bf90b33",
      "parentUUID": "999260ce-28a4-41aa-965f-c154bdb4e202",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "05079fec-75d7-4a23-9e3f-fe88382a6237",
      "parentUUID": "999260ce-28a4-41aa-965f-c154bdb4e202",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "396cfdce-2be3-42bc-abf5-b55e8f91056d",
      "parentUUID": "53de5802-c478-4343-81ee-5a90fa844130",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f1dcfb12-7844-4a91-bee4-e9d723768086",
      "parentUUID": "53de5802-c478-4343-81ee-5a90fa844130",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#participantId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "1662a683-726b-41d6-bcf2-a073da2a3838",
      "parentUUID": "1f89f4fe-63c4-4dad-8c04-e500a7389fbd",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#participantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "838cbb83-11df-4ab2-890f-958e42639fc4",
      "parentUUID": "1f89f4fe-63c4-4dad-8c04-e500a7389fbd",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "23e53fef-5895-43a5-afa0-466347d3dd26",
      "parentUUID": "e9d9c5a1-63c9-4aa6-a76e-c35f4a776b87",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "d809639c-78be-4cb0-a32f-35dab4f06693",
      "parentUUID": "e9d9c5a1-63c9-4aa6-a76e-c35f4a776b87",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#info should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.should.be.Object();",
      "isRoot": false,
      "uuid": "5c540770-8de8-48da-b400-8a1c3aa4448d",
      "parentUUID": "971c693f-5eab-47a8-9a8e-0d7e88bfb065",
      "skipped": false
    },
    {
      "title": "should not have ids",
      "fullTitle": "#info should not have ids",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.host.should.not.be.null();<br>should.not.exist(m.info.host.id);",
      "isRoot": false,
      "uuid": "64b85c07-d023-43bb-9122-2076c33a92d2",
      "parentUUID": "971c693f-5eab-47a8-9a8e-0d7e88bfb065",
      "skipped": false
    },
    {
      "title": "should promote private field _ to public field",
      "fullTitle": "#info should promote private field _ to public field",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>should.not.exist(m.info._host);<br>should.not.exist(m.info._session);<br>should.exist(m.info.host);<br>should.exist(m.info.session);<br>should.exist(m.info.session.settings.teamLeaderSelectionMethod);",
      "isRoot": false,
      "uuid": "0396c711-5844-4014-b764-147722ee8b6c",
      "parentUUID": "971c693f-5eab-47a8-9a8e-0d7e88bfb065",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "be895eb8-4ada-442c-8a15-9ee49b0a8613",
      "parentUUID": "4b36a919-649f-4064-8d5d-7b2c23c234f6",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "bdc9b665-502d-47bc-97c3-ab4168202b55",
      "parentUUID": "4b36a919-649f-4064-8d5d-7b2c23c234f6",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "1c161082-779c-4c7c-a600-faca4c5642b8",
      "parentUUID": "d78114bb-2995-4a1e-a5c9-99d93c7de631",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "26d57148-5dd6-4b91-a3c1-bee464d1ebd7",
      "parentUUID": "d78114bb-2995-4a1e-a5c9-99d93c7de631",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "77778828-4d47-4c81-b494-25b3535c296b",
      "parentUUID": "cc272c8a-d6a7-438f-adab-0c85204fa0c2",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "8fff09af-b3a8-4220-9b95-de7407b1a373",
      "parentUUID": "cc272c8a-d6a7-438f-adab-0c85204fa0c2",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "a5f37a51-d390-4fa9-a779-74bb47495867",
      "parentUUID": "fc8f6926-2e5a-4036-90f0-ffb4c62d8505",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "48c75351-8999-41ed-8bb9-942cacfab6e6",
      "parentUUID": "fc8f6926-2e5a-4036-90f0-ffb4c62d8505",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.contestantId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "c596fc9f-9e49-4600-99af-544dba49034b",
      "parentUUID": "674d48e4-5621-4cc4-bab9-9ab13b31bd77",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "bac224ec-5079-4b0d-a07c-46fa13c81ee6",
      "parentUUID": "674d48e4-5621-4cc4-bab9-9ab13b31bd77",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SuccessMessage();<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "cb441851-4d46-4e65-8fa4-62967ba969b5",
      "parentUUID": "d6a0a904-41de-49d9-b78e-fcb2445236dc",
      "skipped": false
    },
    {
      "title": "should return false when not referenced",
      "fullTitle": "#isInstanceAndTypeOf() should return false when not referenced",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf().should.be.false();",
      "isRoot": false,
      "uuid": "23ed17df-9177-4576-8553-093b0eca43c2",
      "parentUUID": "30905ae6-4283-4a41-9eb9-b762bc3c4128",
      "skipped": false
    },
    {
      "title": "should return false when null",
      "fullTitle": "#isInstanceAndTypeOf() should return false when null",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">''</span>).should.be.false();",
      "isRoot": false,
      "uuid": "cd176cf8-9737-4f02-a8b9-f5482df3c604",
      "parentUUID": "30905ae6-4283-4a41-9eb9-b762bc3c4128",
      "skipped": false
    },
    {
      "title": "should return false when not the correct type",
      "fullTitle": "#isInstanceAndTypeOf() should return false when not the correct type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'Int'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "70db498e-164c-42c2-9755-acd1b1f09dbc",
      "parentUUID": "30905ae6-4283-4a41-9eb9-b762bc3c4128",
      "skipped": false
    },
    {
      "title": "should return true when is a built-in type",
      "fullTitle": "#isInstanceAndTypeOf() should return true when is a built-in type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'Number'</span>).should.be.true();",
      "isRoot": false,
      "uuid": "81a6aef0-933e-4db9-8657-842f6e2b6c08",
      "parentUUID": "30905ae6-4283-4a41-9eb9-b762bc3c4128",
      "skipped": false
    },
    {
      "title": "should return true when is user defined type",
      "fullTitle": "#isInstanceAndTypeOf() should return true when is user defined type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-keyword\">new</span> UserDefinedType(),<br>    UserDefinedType).should.be.true();",
      "isRoot": false,
      "uuid": "c796da92-8c0a-4481-a8b5-c2c7bf8679b4",
      "parentUUID": "30905ae6-4283-4a41-9eb9-b762bc3c4128",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "c69b734c-34bb-4091-88d7-40cda400e565",
      "parentUUID": "e0ae8a3d-1549-4ad8-b5f2-4a1345e27bc7",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "ecf18f66-ce80-42e5-90e2-ac1d88c7587a",
      "parentUUID": "e0ae8a3d-1549-4ad8-b5f2-4a1345e27bc7",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all.pop();<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "8bac95ed-b6d6-4d7a-b72e-4e5f05fb97f6",
      "parentUUID": "e0ae8a3d-1549-4ad8-b5f2-4a1345e27bc7",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#length should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.length = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "dc776d1c-4860-434a-8e6c-a1a897b41b7a",
      "parentUUID": "fc00268c-277a-4a5d-9217-8963c5a29194",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#length should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "b1fe29f3-d6bb-41db-b0a4-b381d96e61e5",
      "parentUUID": "fc00268c-277a-4a5d-9217-8963c5a29194",
      "skipped": false
    },
    {
      "title": "should return true when id does exist",
      "fullTitle": "#contains(id) should return true when id does exist",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(p.id).should.be.true();",
      "isRoot": false,
      "uuid": "2d43c3f0-d288-438c-ab8d-fdc2827d77ed",
      "parentUUID": "40e3d6b1-15f3-4fe0-a00a-161b224bd37e",
      "skipped": false
    },
    {
      "title": "should return false when id does not exist",
      "fullTitle": "#contains(id) should return false when id does not exist",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(<span class=\"hljs-string\">'p2'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "be359396-c2dc-4e95-afc0-ab6a66f06dc2",
      "parentUUID": "40e3d6b1-15f3-4fe0-a00a-161b224bd37e",
      "skipped": false
    },
    {
      "title": "should add the given participant",
      "fullTitle": "#add(participant) should add the given participant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc._participants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc._participants[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "8dfc3876-5590-4b68-8199-4894b21c02e8",
      "parentUUID": "3b9a6a0d-dee6-45bc-9b79-ca4cb9f90e32",
      "skipped": false
    },
    {
      "title": "should error if participant with id already exists",
      "fullTitle": "#add(participant) should error if participant with id already exists",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.add(p);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "18eebe2d-4662-401d-8812-d84afcbc065b",
      "parentUUID": "3b9a6a0d-dee6-45bc-9b79-ca4cb9f90e32",
      "skipped": false
    },
    {
      "title": "should emit add event",
      "fullTitle": "#add(participant) should emit add event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.on(<span class=\"hljs-string\">'add'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">participant</span>) </span>{<br>    participant.should.equal(p);<br>    done();<br>});<br>pc.add(p);",
      "isRoot": false,
      "uuid": "ac59acad-9777-46ef-83f0-cc7f80b3485b",
      "parentUUID": "3b9a6a0d-dee6-45bc-9b79-ca4cb9f90e32",
      "skipped": false
    },
    {
      "title": "should remove the existing participant",
      "fullTitle": "#remove(participant) should remove the existing participant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "90f76a27-41ea-4f65-be44-938aa5f0e96a",
      "parentUUID": "0ce16193-cf9d-4e92-a36d-7265ef300667",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing participant",
      "fullTitle": "#remove(participant) should not remove the non-existing participant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p1).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "bfcb6a36-cafb-4eed-ba83-86f1d332d8a0",
      "parentUUID": "0ce16193-cf9d-4e92-a36d-7265ef300667",
      "skipped": false
    },
    {
      "title": "should remove the existing participant",
      "fullTitle": "#removeById(id) should remove the existing participant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p.id).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "b68cb03c-5f61-4451-9c73-200d3ada6ce4",
      "parentUUID": "4d2982b6-0420-45d9-82c0-f5b2e33c2e44",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing participant",
      "fullTitle": "#removeById(id) should not remove the non-existing participant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p1.id).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "8d9e4db8-2731-417d-8a0c-dc9b62224054",
      "parentUUID": "4d2982b6-0420-45d9-82c0-f5b2e33c2e44",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#id should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'id_test'</span>;<br>p._id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "bfe3fb86-f197-4f00-b644-8f59aaf410a7",
      "parentUUID": "13d47fa4-00c7-4ff0-a1f1-b2e2f892aad2",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#id should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "ef2d15a3-1830-464a-ba2b-a3cd0bd38854",
      "parentUUID": "13d47fa4-00c7-4ff0-a1f1-b2e2f892aad2",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#isDisconnected should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    p.isDisconnected = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "6846c3de-a167-43bd-9681-c96cf0960867",
      "parentUUID": "d43ac891-eb7c-489a-b879-b857694c9c8b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#isDisconnected should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "1bc23086-c635-49aa-aee8-62b816032ae6",
      "parentUUID": "d43ac891-eb7c-489a-b879-b857694c9c8b",
      "skipped": false
    },
    {
      "title": "should change participant state to disconnected",
      "fullTitle": "#disconnect() should change participant state to disconnected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">false</span>;<br>p.disconnect();<br>p.isDisconnected.should.be.true();",
      "isRoot": false,
      "uuid": "29fce2bd-78cf-4d82-b908-3ad03f25c59e",
      "parentUUID": "50af584c-f42e-45ac-894c-7a184c8d6414",
      "skipped": false
    },
    {
      "title": "should change participant state to connected",
      "fullTitle": "#reconnect() should change participant state to connected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">true</span>;<br>p.reconnect();<br>p.isDisconnected.should.be.false();",
      "isRoot": false,
      "uuid": "e1f2ddd2-9182-49e7-96a5-9036fff27d7e",
      "parentUUID": "0192dd0e-5e7d-4ec1-9d51-b7d593536f97",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    sc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "a432948c-e42a-4879-9316-92c76f2ed050",
      "parentUUID": "39b29604-83ba-4006-ae66-595dba0a6ead",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
      "isRoot": false,
      "uuid": "ced57779-bb10-438a-8243-1f486d3178d0",
      "parentUUID": "39b29604-83ba-4006-ae66-595dba0a6ead",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all.pop();<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
      "isRoot": false,
      "uuid": "385da1c2-cbbb-40c1-8cef-791c087ed6db",
      "parentUUID": "39b29604-83ba-4006-ae66-595dba0a6ead",
      "skipped": false
    },
    {
      "title": "add and return session",
      "fullTitle": "#add(host, settings) add and return session",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-keyword\">var</span> ses = sc.add(h, s);<br>ses.should.be.instanceof(Session);",
      "isRoot": false,
      "uuid": "d17c1c06-f8c7-4d89-9a8c-e426f13aeb23",
      "parentUUID": "f96fece1-a4dc-4c18-98e2-a7469c4cdd6e",
      "skipped": false
    },
    {
      "title": "when given valid id should return session",
      "fullTitle": "#getById(id) when given valid id should return session",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-comment\">/* eslint-disable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses1 = sc.add(h, s);<br><span class=\"hljs-comment\">/* eslint-enable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses2 = sc.add(h, s);<br><span class=\"hljs-keyword\">var</span> sessionLocate = sc.getById(ses2.id);<br>sessionLocate.should.be.instanceof(Session)<br>    .and.equal(ses2);",
      "isRoot": false,
      "uuid": "c8377a0f-4d7b-4097-a5e9-92dc6ead0194",
      "parentUUID": "6f0818bb-875e-4238-9be8-f384c42a70a6",
      "skipped": false
    },
    {
      "title": "should remove complete sc",
      "fullTitle": "#purgeCompleted() should remove complete sc",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.all[<span class=\"hljs-number\">0</span>].complete();<br>sc.all[<span class=\"hljs-number\">1</span>].complete();<br>sc.purgeCompleted();<br>sc.all.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "4dcf595b-1598-4ea7-befc-94f6622524a9",
      "parentUUID": "77c4bb76-3350-40e7-9c4e-a5345e4d6e4e",
      "skipped": false
    },
    {
      "title": "should create teams",
      "fullTitle": "#constructor should create teams",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "92c82403-5a32-441a-9381-fd97af2aa84e",
      "parentUUID": "c9fbe38c-8a01-446c-8e73-d771785957e7",
      "skipped": false
    },
    {
      "title": "should not create teams",
      "fullTitle": "#constructor should not create teams",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>should(s.teams).be.null();",
      "isRoot": false,
      "uuid": "37c79d61-a014-4680-a4fc-c9e779f92749",
      "parentUUID": "c9fbe38c-8a01-446c-8e73-d771785957e7",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#id should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.id = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "f78c0049-126e-43b9-b095-cceb20f1531c",
      "parentUUID": "5828e78b-e477-4467-a114-b2c3ae93eb87",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#id should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "033805b6-9333-44cc-9d30-cbd235c227dc",
      "parentUUID": "5828e78b-e477-4467-a114-b2c3ae93eb87",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#roundsPlayed should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundsPlayed = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "3bb8c51e-086e-4b3c-a591-fd52c1f6061d",
      "parentUUID": "b24eb933-9aae-47ae-a0ba-0424b704e257",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#roundsPlayed should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "413b1717-ca8c-41c3-8365-8559ec55d82a",
      "parentUUID": "b24eb933-9aae-47ae-a0ba-0424b704e257",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#previousWinners should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.previousWinners = [<span class=\"hljs-string\">'SomeWinner'</span>];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "516651dd-a076-4756-b24e-67d5c433259d",
      "parentUUID": "38197ed5-bfc5-48d2-b531-a96b5bdf6de5",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#previousWinners should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._previousWinners = [<span class=\"hljs-string\">'Winner1'</span>, <span class=\"hljs-string\">'Winner2'</span>];<br>s.previousWinners.should.be.Array();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
      "isRoot": false,
      "uuid": "49e5424d-af93-43e3-bcc7-ae81075561c1",
      "parentUUID": "38197ed5-bfc5-48d2-b531-a96b5bdf6de5",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#roundWinner should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundWinner = <span class=\"hljs-string\">'SomeWinner'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "517e5a96-05f7-412c-a4d2-71b550e3985a",
      "parentUUID": "ccebf1a5-19cf-4d43-a33c-1440fd06d19b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#roundWinner should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundWinner = <span class=\"hljs-string\">'Winner1'</span>;<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
      "isRoot": false,
      "uuid": "e7a1d43a-d58d-4e74-ade4-83cffbd628ea",
      "parentUUID": "ccebf1a5-19cf-4d43-a33c-1440fd06d19b",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#observers should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.observers = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "feca4da3-c38e-4f05-a64e-5dd963d742df",
      "parentUUID": "3d63b119-911f-4369-97f6-b25c8c731e6a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#observers should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.observers.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.observers[<span class=\"hljs-number\">0</span>].should.equal(observer);",
      "isRoot": false,
      "uuid": "35a2fcd4-1f23-4e8d-bcbe-8b2e2ea4deed",
      "parentUUID": "3d63b119-911f-4369-97f6-b25c8c731e6a",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#contestants should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.contestants = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "c8077848-48d9-4d1f-b76e-5bffc5f24915",
      "parentUUID": "b3e61a8e-63c3-445d-938d-432832417056",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.contestants[<span class=\"hljs-number\">0</span>].should.equal(contestant);",
      "isRoot": false,
      "uuid": "287a3f4d-b5b0-4e7f-ad33-35e5498bdc6a",
      "parentUUID": "b3e61a8e-63c3-445d-938d-432832417056",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#host should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.host = host;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "0a4db9ec-4f8d-4063-a458-88ea0fa86862",
      "parentUUID": "361b12c4-5371-4a0e-9b81-6d8b63761db0",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#host should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.host.should.equal(host);",
      "isRoot": false,
      "uuid": "dfd44d8f-338a-45b4-8df9-02732ea41d0a",
      "parentUUID": "361b12c4-5371-4a0e-9b81-6d8b63761db0",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#currentState should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
      "isRoot": false,
      "uuid": "bd176dd3-6c66-44e7-9049-dd11ace6f9a1",
      "parentUUID": "548bb93a-547a-4217-bfa4-435ce2658c17",
      "skipped": false
    },
    {
      "title": "should increment rounds played",
      "fullTitle": "#incrementRoundsPlayed() should increment rounds played",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.incrementRoundsPlayed();<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "ee789d5d-29ec-4805-a128-84aaaaf465ec",
      "parentUUID": "ea5645a0-1045-4a6f-a00e-c97584e35330",
      "skipped": false
    },
    {
      "title": "should not allow a contestant username with bad words",
      "fullTitle": "#addContestant(contestant) should not allow a contestant username with bad words",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Penis #YOLO'</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_CONTAINS_PROFANITY);",
      "isRoot": false,
      "uuid": "a438b052-7f44-47af-ba1d-aa6470faa497",
      "parentUUID": "721b96d3-0f1a-4610-b536-774c459741df",
      "skipped": false
    },
    {
      "title": "should not allow when username is empty",
      "fullTitle": "#addContestant(contestant) should not allow when username is empty",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">' '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_IS_REQUIRED);",
      "isRoot": false,
      "uuid": "31587e68-b6f1-4569-bb58-af1b6f73b71b",
      "parentUUID": "721b96d3-0f1a-4610-b536-774c459741df",
      "skipped": false
    },
    {
      "title": "should trim username",
      "fullTitle": "#addContestant(contestant) should trim username",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Wade  '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>c.username.should.equal(<span class=\"hljs-string\">'Wade'</span>);",
      "isRoot": false,
      "uuid": "6ec55039-4264-4d98-a460-b43f180a06c7",
      "parentUUID": "721b96d3-0f1a-4610-b536-774c459741df",
      "skipped": false
    },
    {
      "title": "should add contestant when session is not full",
      "fullTitle": "when in individual mode should add contestant when session is not full",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "9277cebf-6900-47b2-8d07-0e6b07720a27",
      "parentUUID": "10b83dd9-938d-40eb-b857-84408720b96f",
      "skipped": false
    },
    {
      "title": "should not add contestant when session is full",
      "fullTitle": "when in individual mode should not add contestant when session is full",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br>s.addContestant(c2);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();",
      "isRoot": false,
      "uuid": "a9a35bf4-e215-478a-a843-bdb365ddf522",
      "parentUUID": "10b83dd9-938d-40eb-b857-84408720b96f",
      "skipped": false
    },
    {
      "title": "should not add contestant when username is already taken",
      "fullTitle": "when in individual mode should not add contestant when username is already taken",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "f5a0de97-8665-40d0-8f5b-f6525ca4a773",
      "parentUUID": "10b83dd9-938d-40eb-b857-84408720b96f",
      "skipped": false
    },
    {
      "title": "BUG# username case should not matter",
      "fullTitle": "when in individual mode BUG# username case should not matter",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'abc1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'ABC1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "7ded3bf6-7eb2-4e04-9033-af3a7c9d3244",
      "parentUUID": "10b83dd9-938d-40eb-b857-84408720b96f",
      "skipped": false
    },
    {
      "title": "should allow unlimited contestants when max is set to constants.UNLIMITED",
      "fullTitle": "when in individual mode should allow unlimited contestants when max is set to constants.UNLIMITED",
      "timedOut": false,
      "duration": 539,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = constants.UNLIMITED;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    <span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>    c.username = <span class=\"hljs-string\">'c'</span> + i;<br>    <span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>    response.wasSuccessful.should.be.true();<br>}",
      "isRoot": false,
      "uuid": "a949e70f-bdb6-47bf-a1f1-93fb44dc1a32",
      "parentUUID": "10b83dd9-938d-40eb-b857-84408720b96f",
      "skipped": false
    },
    {
      "title": "should add contestant when teams is not full",
      "fullTitle": "when in team mode should add contestant when teams is not full",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "f4557cbe-7f9c-40cf-a4ac-cb95a823015e",
      "parentUUID": "475073d3-cb90-4265-8389-c3d1847fcdb6",
      "skipped": false
    },
    {
      "title": "should not add contestant when teams are full",
      "fullTitle": "when in team mode should not add contestant when teams are full",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.TEAMS_ARE_FULL);",
      "isRoot": false,
      "uuid": "26b8580b-199d-4ea4-bd97-80e9af20eb8c",
      "parentUUID": "475073d3-cb90-4265-8389-c3d1847fcdb6",
      "skipped": false
    },
    {
      "title": "should not add contestant when username is already taken",
      "fullTitle": "when in team mode should not add contestant when username is already taken",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "3ebc37d7-930a-4ae5-be86-836a8ca047c1",
      "parentUUID": "475073d3-cb90-4265-8389-c3d1847fcdb6",
      "skipped": false
    },
    {
      "title": "should subscribe callback to the correct event",
      "fullTitle": "#subscribeForStateChange(event, callback) should subscribe callback to the correct event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> r = s.addContestant(c);<br>r.wasSuccessful.should.be.true();<br>s.subscribeForStateChange(<span class=\"hljs-string\">'onpending'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">session, event, from, to</span>) </span>{<br>    session.should.equal(s);<br>    event.should.equal(<span class=\"hljs-string\">'buzzerPressed'</span>);<br>    from.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>    to.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>    done();<br>});<br>s.tryBuzzerPressRegister(c.id).should.be.true();",
      "isRoot": false,
      "uuid": "96a8f256-bf97-4eff-9764-bacab2870a77",
      "parentUUID": "c82920c4-eaa6-4b4c-819d-940f6a0bac96",
      "skipped": false
    },
    {
      "title": "should register when state is ready",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should register when state is ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);",
      "isRoot": false,
      "uuid": "f5ef8492-9fee-49bb-94fc-91a701431682",
      "parentUUID": "fd193ff5-64b3-4c1d-9247-decabf549249",
      "skipped": false
    },
    {
      "title": "should not register when state is not ready",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not register when state is not ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.false();",
      "isRoot": false,
      "uuid": "3a2a6f88-0570-47b6-af47-e5a0c2251c88",
      "parentUUID": "fd193ff5-64b3-4c1d-9247-decabf549249",
      "skipped": false
    },
    {
      "title": "should not register when contestant does not exist",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not register when contestant does not exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(idUtility.generateParticipantId()).should.be.false();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
      "isRoot": false,
      "uuid": "328da6be-4d9d-4027-b349-6ed29a8b4e2f",
      "parentUUID": "fd193ff5-64b3-4c1d-9247-decabf549249",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "90a99ca0-788d-49a7-b9bc-2e05f6a5f720",
      "parentUUID": "fd193ff5-64b3-4c1d-9247-decabf549249",
      "skipped": false
    },
    {
      "title": "should not add previous round winner to winners list",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not add previous round winner to winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "b75189b9-4940-446d-9b78-e598d6dd4935",
      "parentUUID": "fd193ff5-64b3-4c1d-9247-decabf549249",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->ACCEPT should allow when game state is pending",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();",
      "isRoot": false,
      "uuid": "c4ae9ffa-fb02-4ad2-8c9f-f321de0167b3",
      "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not pending",
      "fullTitle": "action->ACCEPT should not allow when game state is not pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.false();",
      "isRoot": false,
      "uuid": "97f5f11f-f49e-4b96-ab6e-6692a31699ec",
      "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
      "skipped": false
    },
    {
      "title": "should update contestant's score",
      "fullTitle": "action->ACCEPT should update contestant's score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "89cd5071-b5b0-43c0-a2f6-72ffe2b19a73",
      "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
      "skipped": false
    },
    {
      "title": "should update contestant's team score",
      "fullTitle": "action->ACCEPT should update contestant's team score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>s.teams.all[<span class=\"hljs-number\">0</span>].score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "bdad90cd-01b0-4e4e-bf0d-b45c0d18a2e2",
      "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->ACCEPT should add previous round winner to winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "3f66586c-8e7e-4a80-ae78-93f12a182468",
      "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->ACCEPT should change game state back to ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "290d53ce-59d6-4f95-879c-2761af3a4893",
      "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
      "skipped": false
    },
    {
      "title": "should clear pending winner",
      "fullTitle": "action->ACCEPT should clear pending winner",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>should(s.pendingWinner).be.null();",
      "isRoot": false,
      "uuid": "360d8db4-558b-4f24-9ce0-8f50fe5bdbda",
      "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->REJECT should allow when game state is pending",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();",
      "isRoot": false,
      "uuid": "200089c8-9a65-4e7d-b588-08901adae7a3",
      "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not pending",
      "fullTitle": "action->REJECT should not allow when game state is not pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.false();",
      "isRoot": false,
      "uuid": "213cb6d2-4c17-4c8f-ab19-3c87788ac879",
      "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
      "skipped": false
    },
    {
      "title": "should not replace round winner with pending contestant",
      "fullTitle": "action->REJECT should not replace round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "3dd10cd4-72a2-44a4-9931-0f326175f276",
      "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
      "skipped": false
    },
    {
      "title": "should not update pending contestant's score",
      "fullTitle": "action->REJECT should not update pending contestant's score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.score.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "1b224826-28c6-439a-8f47-491ed82e55ad",
      "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
      "skipped": false
    },
    {
      "title": "should add round winner to previous winners list",
      "fullTitle": "action->REJECT should add round winner to previous winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "94bcfdce-df43-4d63-ad61-c5deefd91818",
      "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->REJECT should change game state back to ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "66ea030c-2b3f-4ffb-82bb-2c4e176392df",
      "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
      "skipped": false
    },
    {
      "title": "should allow when game state is ready",
      "fullTitle": "action->RESET should allow when game state is ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
      "isRoot": false,
      "uuid": "c8057eb7-e8b7-45c2-bd87-fbd543f0e935",
      "parentUUID": "ec6fea85-5456-4624-926c-86ab7b040c04",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->RESET should allow when game state is pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
      "isRoot": false,
      "uuid": "46bfc750-aa58-4f0a-8fcc-bff3160c67d5",
      "parentUUID": "ec6fea85-5456-4624-926c-86ab7b040c04",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "action->RESET should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "a6ba3652-a24d-4d54-b2f0-bcd72cbaab71",
      "parentUUID": "ec6fea85-5456-4624-926c-86ab7b040c04",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->RESET should add previous round winner to winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "06d90382-27e1-4367-82eb-df567e31f3a7",
      "parentUUID": "ec6fea85-5456-4624-926c-86ab7b040c04",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->RESET should change game state back to ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "5a20873c-a853-45c4-a4e8-4fc7247229b1",
      "parentUUID": "ec6fea85-5456-4624-926c-86ab7b040c04",
      "skipped": false
    },
    {
      "title": "should allow when game state is ready",
      "fullTitle": "action->DISABLE should allow when game state is ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
      "isRoot": false,
      "uuid": "901c5365-0da7-49c4-88f1-0791c6cb6031",
      "parentUUID": "2b6b1632-48bc-4560-a376-474493d0dee7",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->DISABLE should allow when game state is pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
      "isRoot": false,
      "uuid": "d280e144-655e-45c1-ba2e-88e7d0b5a744",
      "parentUUID": "2b6b1632-48bc-4560-a376-474493d0dee7",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "action->DISABLE should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "628cf25f-b065-4946-a99e-ca585a366000",
      "parentUUID": "2b6b1632-48bc-4560-a376-474493d0dee7",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->DISABLE should add previous round winner to winners list",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "f6727736-aa2b-49ad-975a-87396254ec56",
      "parentUUID": "2b6b1632-48bc-4560-a376-474493d0dee7",
      "skipped": false
    },
    {
      "title": "should change game state to buzzerLock",
      "fullTitle": "action->DISABLE should change game state to buzzerLock",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.BUZZER_LOCK);",
      "isRoot": false,
      "uuid": "4fb86276-abe4-4caa-abfa-959dc8e54c8a",
      "parentUUID": "2b6b1632-48bc-4560-a376-474493d0dee7",
      "skipped": false
    },
    {
      "title": "should allow when game state is buzzerLock",
      "fullTitle": "action->ENABLE should allow when game state is buzzerLock",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();",
      "isRoot": false,
      "uuid": "9fc8ff20-135a-430a-b86d-4b309598f0e9",
      "parentUUID": "e8e1e7bd-6809-4d22-bdb2-b4dcbe77bca6",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not buzzerLock",
      "fullTitle": "action->ENABLE should not allow when game state is not buzzerLock",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.false();",
      "isRoot": false,
      "uuid": "7ad47ea5-1d05-497d-ac19-3c7fdef02429",
      "parentUUID": "e8e1e7bd-6809-4d22-bdb2-b4dcbe77bca6",
      "skipped": false
    },
    {
      "title": "should change game state to ready",
      "fullTitle": "action->ENABLE should change game state to ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "ecaf152b-9933-429b-ab58-75c8fce65c26",
      "parentUUID": "e8e1e7bd-6809-4d22-bdb2-b4dcbe77bca6",
      "skipped": false
    },
    {
      "title": "should return the pending winner",
      "fullTitle": "#pendingWinner should return the pending winner",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.pendingWinner.should.equal(<span class=\"hljs-string\">'testUser'</span>);",
      "isRoot": false,
      "uuid": "e9da5bca-8bc4-452b-b19b-869dfdb73639",
      "parentUUID": "7568deaf-8601-4c12-a316-cfa6b7f593e5",
      "skipped": false
    },
    {
      "title": "should not return the pending winner",
      "fullTitle": "#pendingWinner should not return the pending winner",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>should(s.pendingWinner).be.null();",
      "isRoot": false,
      "uuid": "ae3037e6-c58e-4d3e-9369-0c0a19469bdc",
      "parentUUID": "7568deaf-8601-4c12-a316-cfa6b7f593e5",
      "skipped": false
    },
    {
      "title": "should update session name",
      "fullTitle": "#updateSessionName(name) should update session name",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.updateSessionName(<span class=\"hljs-string\">'session2'</span>);<br>settings.sessionName.should.equal(<span class=\"hljs-string\">'session2'</span>);",
      "isRoot": false,
      "uuid": "bf881194-fd0e-468e-ae82-f9e7ee436bbb",
      "parentUUID": "f197c682-d1fa-4eeb-843e-df28e025f318",
      "skipped": false
    },
    {
      "title": "should update max contestants",
      "fullTitle": "#updateMaxContestants(maxContestants) should update max contestants",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "0c6e6c05-8f7d-4547-a80d-f0509591e065",
      "parentUUID": "1c4aa9ca-e52a-4a18-9b5c-12abe01edebf",
      "skipped": false
    },
    {
      "title": "should not allow below current connected amount",
      "fullTitle": "#updateMaxContestants(maxContestants) should not allow below current connected amount",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>s.addContestant(c1).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>s.addContestant(c2).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">1</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_CONTESTANTS_MUST_BE_GREATER_THAN_ALREADY_CONNECTED);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "78003642-5fc1-4cfb-b9c3-aa6fa23672c2",
      "parentUUID": "1c4aa9ca-e52a-4a18-9b5c-12abe01edebf",
      "skipped": false
    },
    {
      "title": "should update team size",
      "fullTitle": "#updateTeamSize(teamSize) should update team size",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.teamSize.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "610dd0c7-f3c8-49da-b23f-4616ead93b90",
      "parentUUID": "7061222a-87a1-480f-849e-758c402bc275",
      "skipped": false
    },
    {
      "title": "should not allow below current setting",
      "fullTitle": "#updateTeamSize(teamSize) should not allow below current setting",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.TEAM_SIZE_MUST_BE_GREATER_THAN_ALREADY_SET);",
      "isRoot": false,
      "uuid": "2fd5bafb-34f2-481a-a4fd-3fd124902bd7",
      "parentUUID": "7061222a-87a1-480f-849e-758c402bc275",
      "skipped": false
    },
    {
      "title": "should update max teams",
      "fullTitle": "#updateMaxTeams(maxTeams) should update max teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxTeams.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "e7f5ce6e-546c-4c3f-a118-81be8555f8b9",
      "parentUUID": "fac8cb05-7e0e-4438-93db-a6a0ee59c703",
      "skipped": false
    },
    {
      "title": "should add teams",
      "fullTitle": "#updateMaxTeams(maxTeams) should add teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">5</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "65c58126-a207-47e8-a7d0-2ecf8863a8f3",
      "parentUUID": "fac8cb05-7e0e-4438-93db-a6a0ee59c703",
      "skipped": false
    },
    {
      "title": "should not allow below current setting",
      "fullTitle": "#updateMaxTeams(maxTeams) should not allow below current setting",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_MUST_BE_GREATER_THAN_ALREADY_SET);",
      "isRoot": false,
      "uuid": "8afd4767-5932-487b-b54e-9b070f89b3b7",
      "parentUUID": "fac8cb05-7e0e-4438-93db-a6a0ee59c703",
      "skipped": false
    },
    {
      "title": "should not allow if teams are PLAYER_CHOICE",
      "fullTitle": "#updateMaxTeams(maxTeams) should not allow if teams are PLAYER_CHOICE",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">6</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_CANNOT_BE_CHANGED_WHEN_PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "46538256-412b-46c6-8030-c967eabce1b3",
      "parentUUID": "fac8cb05-7e0e-4438-93db-a6a0ee59c703",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hasTeams should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s._hasTeams.should.be.true();",
      "isRoot": false,
      "uuid": "3e2fdbfb-8ef7-4f81-9968-4903d97c1b19",
      "parentUUID": "54770865-7089-4516-b325-26cd60cfb940",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hasTeams should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.hasTeams.should.be.true();",
      "isRoot": false,
      "uuid": "3146586d-112c-4477-94d6-43f83387e668",
      "parentUUID": "54770865-7089-4516-b325-26cd60cfb940",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamSize should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s._teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "90ffe698-3183-49a7-9475-a94744575997",
      "parentUUID": "d668a542-f7f6-4193-baf3-7128f3ca94a3",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamSize should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamSize = <span class=\"hljs-number\">1</span>;<br>s.teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "f0dfc40b-340e-4f14-bc8f-7b1bcc7b24fd",
      "parentUUID": "d668a542-f7f6-4193-baf3-7128f3ca94a3",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxTeams should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s._maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "5de53c93-0fa2-4c77-85ff-f594d2579198",
      "parentUUID": "c9e80cae-172f-488b-8f05-b3d9e9397429",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxTeams should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-number\">1</span>;<br>s.maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "3df286aa-2328-4769-9824-abb028fa9293",
      "parentUUID": "c9e80cae-172f-488b-8f05-b3d9e9397429",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeaderSelectionMethod should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s._teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "690ef535-6c7f-4411-9cab-eb0b5ece53fc",
      "parentUUID": "154b0918-93a9-40fc-a2a4-608c14038879",
      "skipped": false
    },
    {
      "title": "should throw on set when constant value is invalid",
      "fullTitle": "#teamLeaderSelectionMethod should throw on set when constant value is invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamLeaderSelectionMethod.all.slice().sort(<br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, b</span>) </span>{<br>            <span class=\"hljs-keyword\">return</span> a - b;<br>        }).pop();<br>    s.teamLeaderSelectionMethod = ++high;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "7759af93-adfe-4248-99fa-c90f520bb3c4",
      "parentUUID": "154b0918-93a9-40fc-a2a4-608c14038879",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeaderSelectionMethod should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s.teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "cff97198-8f24-40d2-bdce-a42cb4f73725",
      "parentUUID": "154b0918-93a9-40fc-a2a4-608c14038879",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameEdit should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br>s._teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
      "isRoot": false,
      "uuid": "99240b0d-34cc-441c-a765-11c1e4b99173",
      "parentUUID": "308abbd4-cc58-43c6-aac2-77161aaadc1f",
      "skipped": false
    },
    {
      "title": "should throw on set when constant value is invalid",
      "fullTitle": "#teamNameEdit should throw on set when constant value is invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamNameEdit.all.slice().sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a,<br>        b</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> a - b;<br>    }).pop();<br>    s.teamNameEdit = ++high;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "c47dbbd6-8a0b-427d-b303-37cc21c9bd22",
      "parentUUID": "308abbd4-cc58-43c6-aac2-77161aaadc1f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameEdit should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNameEdit = constants.teamNameEdit.ALLOW;<br>s.teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
      "isRoot": false,
      "uuid": "2923ce6c-4da1-446b-a9b0-793354165e35",
      "parentUUID": "308abbd4-cc58-43c6-aac2-77161aaadc1f",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxContestants should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxContestants = <span class=\"hljs-number\">1</span>;<br>s._maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "dd6e4612-4a04-4c5f-8091-aab89395b3da",
      "parentUUID": "2a4c8e43-41c1-452c-a285-d2a7beace4cb",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxContestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxContestants = <span class=\"hljs-number\">1</span>;<br>s.maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "f7ef3904-8ab4-4b52-92f3-b69825c2c2bd",
      "parentUUID": "2a4c8e43-41c1-452c-a285-d2a7beace4cb",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s._sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
      "isRoot": false,
      "uuid": "5e39d33b-f309-4acb-aca8-dc692545f84f",
      "parentUUID": "8feb85b0-7569-4123-bd45-d82073ebc9da",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s.sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
      "isRoot": false,
      "uuid": "c824f2f0-b990-4037-a286-796e0f6feddb",
      "parentUUID": "8feb85b0-7569-4123-bd45-d82073ebc9da",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNames should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s._teamNames.should.be.Array();<br>s._teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s._teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
      "isRoot": false,
      "uuid": "325ab5d2-6938-4769-b9e3-cd1b215da436",
      "parentUUID": "a5ac4be8-2d77-448d-beea-1ac8111c0330",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNames should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s.teamNames.should.be.Array();<br>s.teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
      "isRoot": false,
      "uuid": "25ad7cf4-55a6-4056-aa2b-ad24b3d7aa23",
      "parentUUID": "a5ac4be8-2d77-448d-beea-1ac8111c0330",
      "skipped": false
    },
    {
      "title": "should throw when settings.maxTeams is less than 1",
      "fullTitle": "#create(teams, settings) should throw when settings.maxTeams is less than 1",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    teamFactory.create(tc, s);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "6b9d8d07-52ec-4f5a-ae39-2b5b28b7b401",
      "parentUUID": "3042e722-b117-4091-9315-5f437fffc83b",
      "skipped": false
    },
    {
      "title": "should create the correct amount of teams",
      "fullTitle": "#create(teams, settings) should create the correct amount of teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "61423024-a9de-4a16-b15f-5b5c8aef6d12",
      "parentUUID": "3042e722-b117-4091-9315-5f437fffc83b",
      "skipped": false
    },
    {
      "title": "should not fail with a large team size",
      "fullTitle": "#create(teams, settings) should not fail with a large team size",
      "timedOut": false,
      "duration": 40,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">500</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">500</span>);<br><span class=\"hljs-comment\">// ensure team names are unique</span><br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> i = names.indexOf(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> n === t.teamName;<br>    });<br>    i.should.equal(-<span class=\"hljs-number\">1</span>);<br>    names.push(t.teamName);<br>});",
      "isRoot": false,
      "uuid": "15654c2b-5384-463c-9632-3816115c93a4",
      "parentUUID": "3042e722-b117-4091-9315-5f437fffc83b",
      "skipped": false
    },
    {
      "title": "should use settings.teamNames first, before random selection",
      "fullTitle": "#create(teams, settings) should use settings.teamNames first, before random selection",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">10</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>, <span class=\"hljs-string\">'t3'</span>, <span class=\"hljs-string\">'t4'</span>, <span class=\"hljs-string\">'t5'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);<br>tc.all[<span class=\"hljs-number\">2</span>].teamName.should.equal(<span class=\"hljs-string\">'t3'</span>);<br>tc.all[<span class=\"hljs-number\">3</span>].teamName.should.equal(<span class=\"hljs-string\">'t4'</span>);<br>tc.all[<span class=\"hljs-number\">4</span>].teamName.should.equal(<span class=\"hljs-string\">'t5'</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">5</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">6</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">7</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">8</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">9</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "3131d512-bdb2-4131-9e22-f066369d393c",
      "parentUUID": "3042e722-b117-4091-9315-5f437fffc83b",
      "skipped": false
    },
    {
      "title": "should only create a single team when using unlimited teams",
      "fullTitle": "#create(teams, settings) should only create a single team when using unlimited teams",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "69e04a01-5b97-436f-9ac9-9bd2fae43ecb",
      "parentUUID": "3042e722-b117-4091-9315-5f437fffc83b",
      "skipped": false
    },
    {
      "title": "should add a team",
      "fullTitle": "#add(teams, settings) should add a team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>teamFactory.add(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "f7156abd-f95a-4b31-a183-8eea8f1be9fb",
      "parentUUID": "d54db1d8-e116-4d9c-8a61-03dcf70866a4",
      "skipped": false
    },
    {
      "title": "should reuse team names specified in settings",
      "fullTitle": "#add(teams, settings) should reuse team names specified in settings",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>teamFactory.add(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);",
      "isRoot": false,
      "uuid": "73e47d86-53dc-4a69-9e00-7d48d5caeb5b",
      "parentUUID": "d54db1d8-e116-4d9c-8a61-03dcf70866a4",
      "skipped": false
    },
    {
      "title": "should factor in team names which are already in use",
      "fullTitle": "#add(teams, settings) should factor in team names which are already in use",
      "timedOut": false,
      "duration": 256,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    teamFactory.add(tc, s);<br>}<br>tc.all.length.should.equal(<span class=\"hljs-number\">1001</span>);<br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    names.push(t.teamName);<br>});<br><span class=\"hljs-keyword\">var</span> uniqueNames = unique(names);<br>names.length.should.equal(uniqueNames.length);",
      "isRoot": false,
      "uuid": "c6ff8386-b664-4763-a2a5-98ee62f02095",
      "parentUUID": "d54db1d8-e116-4d9c-8a61-03dcf70866a4",
      "skipped": false
    },
    {
      "title": "should return true when team with teamName does exist",
      "fullTitle": "#contains(teamName) should return true when team with teamName does exist",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(t.teamName).should.be.true();",
      "isRoot": false,
      "uuid": "77c9f3af-c8ab-4722-8878-a77a10052bc6",
      "parentUUID": "7329908d-e9af-4dbe-a964-42d94f9e693d",
      "skipped": false
    },
    {
      "title": "should return false when no team with teamName does exist",
      "fullTitle": "#contains(teamName) should return false when no team with teamName does exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(<span class=\"hljs-string\">'other team name'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "8c9e9303-5399-4346-8dc9-646c58098e98",
      "parentUUID": "7329908d-e9af-4dbe-a964-42d94f9e693d",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "41a41cdc-442b-4a12-99d0-07edaf374102",
      "parentUUID": "c01491ab-810c-41ac-ad20-2f235d8d4f77",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "d91a4069-7d41-4a1d-a5e5-d2c793e1ec1f",
      "parentUUID": "c01491ab-810c-41ac-ad20-2f235d8d4f77",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all.pop();<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "6a000e3d-5079-4b6c-9406-99f67158763f",
      "parentUUID": "c01491ab-810c-41ac-ad20-2f235d8d4f77",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#length should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.length = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "0c6983e4-5378-4fc9-9323-dc6f368b9bd6",
      "parentUUID": "b5d3758b-e381-4377-b8a3-d29d4e9cb523",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#length should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "3c2b8120-519e-4564-870b-2fa24d3791bd",
      "parentUUID": "b5d3758b-e381-4377-b8a3-d29d4e9cb523",
      "skipped": false
    },
    {
      "title": "should add the given team",
      "fullTitle": "#add(team) should add the given team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "5f6ea57b-a704-4aa9-bab7-e8e573e9cd58",
      "parentUUID": "a7583f3e-333b-4d0d-8ced-adfeacb5e7c1",
      "skipped": false
    },
    {
      "title": "should error if team with teamName already exists",
      "fullTitle": "#add(team) should error if team with teamName already exists",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.add(t);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "c7281deb-75ac-4de1-8546-2fbca41e2f7d",
      "parentUUID": "a7583f3e-333b-4d0d-8ced-adfeacb5e7c1",
      "skipped": false
    },
    {
      "title": "should remove the existing team",
      "fullTitle": "#remove(team) should remove the existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "dc0e24b3-a1b7-42a9-aa05-1a50aa5ae981",
      "parentUUID": "27b32a0f-1860-4e3a-93e8-adfa71fc8eba",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing team",
      "fullTitle": "#remove(team) should not remove the non-existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t1).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "d81133b2-5c60-45ff-b759-0d368512df5d",
      "parentUUID": "27b32a0f-1860-4e3a-93e8-adfa71fc8eba",
      "skipped": false
    },
    {
      "title": "should remove the existing team",
      "fullTitle": "#removeByTeamName(team) should remove the existing team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t.teamName).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "1053434f-1f58-4824-beac-7170e87402ae",
      "parentUUID": "b8bba0d1-f0e6-4964-9fdb-448207d5b2dd",
      "skipped": false
    },
    {
      "title": "should ignore team name case",
      "fullTitle": "#removeByTeamName(team) should ignore team name case",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'abc1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(<span class=\"hljs-string\">'ABC1'</span>).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "3c350aac-21eb-4417-9f95-f9ccf5df4c67",
      "parentUUID": "b8bba0d1-f0e6-4964-9fdb-448207d5b2dd",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing team",
      "fullTitle": "#removeByTeamName(team) should not remove the non-existing team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t1.teamName).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "7d89cc35-5642-4030-b901-95277bca8472",
      "parentUUID": "b8bba0d1-f0e6-4964-9fdb-448207d5b2dd",
      "skipped": false
    },
    {
      "title": "should give contestant an id",
      "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) should give contestant an id",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Username'</span>;<br>should(c.id).be.null();<br>tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>should(c.id).not.be.null();",
      "isRoot": false,
      "uuid": "a076bcbe-39a6-4af0-9e6e-28babb82079e",
      "parentUUID": "b0c81a21-267a-4727-a74a-0075fe3d27db",
      "skipped": false
    },
    {
      "title": "should return a valid response",
      "fullTitle": "when teams are full should return a valid response",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);",
      "isRoot": false,
      "uuid": "1829bace-7d4c-4bbe-95d4-24a224de55dd",
      "parentUUID": "357709cd-2e54-40e2-a757-27863598fa27",
      "skipped": false
    },
    {
      "title": "should inquire for team leader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should inquire for team leader",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> inquired = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    inquired = <span class=\"hljs-literal\">true</span>;<br>});<br>r.should.be.true();<br>inquired.should.be.true();",
      "isRoot": false,
      "uuid": "5e531921-b67b-4cc0-a0fd-ff9571050126",
      "parentUUID": "5973e1c9-e8f8-4093-9004-2011d7dbc7e7",
      "skipped": false
    },
    {
      "title": "should not inquire for team leader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should not inquire for team leader",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>tc.all[<span class=\"hljs-number\">0</span>].teamLeader = c1;<br><span class=\"hljs-keyword\">var</span> didNotInquire = <span class=\"hljs-literal\">true</span>;<br>tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    didNotInquire = <span class=\"hljs-literal\">false</span>;<br>});<br>didNotInquire.should.be.true();<br>t.teamLeader.should.equal(c1);",
      "isRoot": false,
      "uuid": "c1c9fcc5-4542-4c1f-928f-53a773571d73",
      "parentUUID": "5973e1c9-e8f8-4093-9004-2011d7dbc7e7",
      "skipped": false
    },
    {
      "title": "should not add contestant as teamLeader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should not add contestant as teamLeader",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should(t.teamLeader).be.null();",
      "isRoot": false,
      "uuid": "1362690b-3a10-4946-93e5-8f9ba9f683fe",
      "parentUUID": "5973e1c9-e8f8-4093-9004-2011d7dbc7e7",
      "skipped": false
    },
    {
      "title": "should not inquire for team leader",
      "fullTitle": "when teamLeader selection is RANDOM should not inquire for team leader",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> notInquired = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    notInquired = <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>r.should.be.true();<br>notInquired.should.be.true();",
      "isRoot": false,
      "uuid": "e5a026ed-b18f-4e29-88fb-420669c643f1",
      "parentUUID": "833e16db-cbcd-4173-9913-7331feec72aa",
      "skipped": false
    },
    {
      "title": "should automatically add team leader when team is filled",
      "fullTitle": "when teamLeader selection is RANDOM should automatically add team leader when team is filled",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).not.be.null();<br>});",
      "isRoot": false,
      "uuid": "3a8f7642-76c5-4de4-b843-42486451e061",
      "parentUUID": "833e16db-cbcd-4173-9913-7331feec72aa",
      "skipped": false
    },
    {
      "title": "should not automatically add team leader when team is not filled",
      "fullTitle": "when teamLeader selection is RANDOM should not automatically add team leader when team is not filled",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).be.null();<br>});",
      "isRoot": false,
      "uuid": "1200373c-ca87-479a-b56f-df40226dd1cd",
      "parentUUID": "833e16db-cbcd-4173-9913-7331feec72aa",
      "skipped": false
    },
    {
      "title": "should add team when teams are full",
      "fullTitle": "when set to use unlimited teams should add team when teams are full",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "62f87272-0ff4-4467-9653-4105eb4aff90",
      "parentUUID": "ace03a87-29dc-49ed-9fa5-7dbe792948be",
      "skipped": false
    },
    {
      "title": "should throw when no team name is given",
      "fullTitle": "when team selection method is PLAYER_CHOICE should throw when no team name is given",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>}).should.throw();",
      "isRoot": false,
      "uuid": "fb536542-f5aa-45fb-957c-8d9c2fa2dcd3",
      "parentUUID": "8bd9d227-a04e-4ddd-8c7b-4649698c6010",
      "skipped": false
    },
    {
      "title": "should add contestant to correct team",
      "fullTitle": "when team selection method is PLAYER_CHOICE should add contestant to correct team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "89718dbb-2dc0-4fae-82be-4a1a3a12eb1c",
      "parentUUID": "8bd9d227-a04e-4ddd-8c7b-4649698c6010",
      "skipped": false
    },
    {
      "title": "should not add to full team",
      "fullTitle": "when team selection method is PLAYER_CHOICE should not add to full team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "c17e4b7b-e34f-4091-8bdf-12009d1a191b",
      "parentUUID": "8bd9d227-a04e-4ddd-8c7b-4649698c6010",
      "skipped": false
    },
    {
      "title": "should get team of contestant",
      "fullTitle": "getByContestant(contestant) should get team of contestant",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">5</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>    r.should.be.true();<br>});<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">4</span>]);<br>t.should.not.be.null();<br>t.contestants.getById(cc[<span class=\"hljs-number\">4</span>].id).should.equal(cc[<span class=\"hljs-number\">4</span>]);",
      "isRoot": false,
      "uuid": "3a53c27e-f10d-4441-82a7-28a40eb9a494",
      "parentUUID": "4f9c58c6-353b-4dbb-9264-06df3e198484",
      "skipped": false
    },
    {
      "title": "should not get team of contestant",
      "fullTitle": "getByContestant(contestant) should not get team of contestant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">1</span>);<br>cc[<span class=\"hljs-number\">0</span>].id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">0</span>]);<br>should(t).be.null();",
      "isRoot": false,
      "uuid": "d70a953d-b6d9-4de4-a147-46a9eb19caa0",
      "parentUUID": "4f9c58c6-353b-4dbb-9264-06df3e198484",
      "skipped": false
    },
    {
      "title": "should get team when team with name exists",
      "fullTitle": "getByTeamName(temName) should get team when team with name exists",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t1 = tc.all[<span class=\"hljs-number\">0</span>];<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(t1.teamName);<br>t.should.equal(t1);",
      "isRoot": false,
      "uuid": "7bcec7da-02d9-4a28-a7eb-7200f7f1dd6f",
      "parentUUID": "ca9d057f-6da6-42a9-968a-d512a0f5c9c4",
      "skipped": false
    },
    {
      "title": "should not get team when team with name does not exist",
      "fullTitle": "getByTeamName(temName) should not get team when team with name does not exist",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(<span class=\"hljs-string\">'Not a team name that exists'</span>);<br>should(t).be.null();",
      "isRoot": false,
      "uuid": "1eacd9bd-c6fb-4836-8c12-fcf71f2459a5",
      "parentUUID": "ca9d057f-6da6-42a9-968a-d512a0f5c9c4",
      "skipped": false
    },
    {
      "title": "should not return full teams",
      "fullTitle": "getAvailable(settings) should not return full teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">2</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "dccdf270-f44e-4784-b162-38fb77fdc414",
      "parentUUID": "48b6bfbb-f219-469f-a032-a921aeefc1e9",
      "skipped": false
    },
    {
      "title": "should return teams with space",
      "fullTitle": "getAvailable(settings) should return teams with space",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "5595ecf6-a337-4876-a8eb-65d5aa593113",
      "parentUUID": "48b6bfbb-f219-469f-a032-a921aeefc1e9",
      "skipped": false
    },
    {
      "title": "should return teams with unlimited space",
      "fullTitle": "getAvailable(settings) should return teams with unlimited space",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = constants.UNLIMITED;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "72c86242-ea2c-44ae-9292-99670ec8203d",
      "parentUUID": "48b6bfbb-f219-469f-a032-a921aeefc1e9",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t._teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
      "isRoot": false,
      "uuid": "f3f34167-bca5-4424-8e3d-6c00b961e520",
      "parentUUID": "81973d85-baaa-479d-aa48-9b09de6a6480",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t._teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t.teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
      "isRoot": false,
      "uuid": "be8a1719-662b-4960-a04d-c3a1c053b682",
      "parentUUID": "81973d85-baaa-479d-aa48-9b09de6a6480",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeader should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t.teamLeader = c;<br>t._teamLeader.should.equal(c);",
      "isRoot": false,
      "uuid": "71d04d21-4e4d-4570-8138-5b7df6334ab3",
      "parentUUID": "bba4cacc-ff4d-44b2-84b3-5bd9ac10e85c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeader should get value",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t._teamLeader = c;<br>t.teamLeader.should.equal(c);",
      "isRoot": false,
      "uuid": "f1baf833-b2cf-4f8e-85df-06348943a659",
      "parentUUID": "bba4cacc-ff4d-44b2-84b3-5bd9ac10e85c",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#score should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "e92f60ef-2cd5-46cf-9a00-6a4c72c51df6",
      "parentUUID": "d2e729bc-652a-4779-93f4-b0dc4c34eee9",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#score should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br>p._score = <span class=\"hljs-number\">5</span>;<br>p.score.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "97758c16-59f5-4048-8ad4-14ddcb67d6ee",
      "parentUUID": "d2e729bc-652a-4779-93f4-b0dc4c34eee9",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#contestants should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "b219ed95-6b67-41d6-86af-3c66c989118c",
      "parentUUID": "be622b90-7752-4ebc-8d1b-35a108ed98ac",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = p.contestants;<br>c.should.be.instanceOf(Participants);",
      "isRoot": false,
      "uuid": "046df78e-da0f-41c2-b52e-745231614568",
      "parentUUID": "be622b90-7752-4ebc-8d1b-35a108ed98ac",
      "skipped": false
    },
    {
      "title": "should update the teams score",
      "fullTitle": "when a contestant scores should update the teams score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br>c1.incrementScore();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.incrementScore();<br>c2.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "2d699707-7873-4eaf-a636-066cb5072a7e",
      "parentUUID": "9aa041d8-a689-4797-b52a-1eb88ee0e6af",
      "skipped": false
    },
    {
      "title": "should allow it when no team leader is set",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should allow it when no team leader is set",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.id = <span class=\"hljs-string\">'c1'</span>;<br>t.contestants.add(c);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);",
      "isRoot": false,
      "uuid": "4e774c3c-ab52-4aae-a91f-56194b8859f7",
      "parentUUID": "fd54c112-7b40-41fd-9506-67e56422ce31",
      "skipped": false
    },
    {
      "title": "should not allow it when a team leader is set",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should not allow it when a team leader is set",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_FULFILLED);",
      "isRoot": false,
      "uuid": "3970df3d-0d43-4d53-ad49-35d6954392b9",
      "parentUUID": "fd54c112-7b40-41fd-9506-67e56422ce31",
      "skipped": false
    },
    {
      "title": "should not allow it when a contestant is not in team",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should not allow it when a contestant is not in team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_NOT_CONTESTANT);",
      "isRoot": false,
      "uuid": "6972e710-72c5-4675-8c9f-d48970cf5400",
      "parentUUID": "fd54c112-7b40-41fd-9506-67e56422ce31",
      "skipped": false
    },
    {
      "title": "should allow it when a team leader is set and host override is flagged",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should allow it when a team leader is set and host override is flagged",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">true</span>);<br>r.should.be.true();<br>should.not.exist(m);",
      "isRoot": false,
      "uuid": "7e9dd004-ef99-45bd-b0dc-3f32670b3a76",
      "parentUUID": "fd54c112-7b40-41fd-9506-67e56422ce31",
      "skipped": false
    },
    {
      "title": "should change name when request is valid",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should change name when request is valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "ebca966e-0d1a-4338-9cd4-39279115611f",
      "parentUUID": "76b6b25d-4e8f-4ca5-814a-682e12ef8920",
      "skipped": false
    },
    {
      "title": "should not change name when setting do not allow it",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should not change name when setting do not allow it",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_SETTINGS_NOT_ALLOW);<br>r.should.be.false();",
      "isRoot": false,
      "uuid": "a66ef445-5d51-4701-b26c-5c0d3be39d17",
      "parentUUID": "76b6b25d-4e8f-4ca5-814a-682e12ef8920",
      "skipped": false
    },
    {
      "title": "should not change name when name contains profanity",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should not change name when name contains profanity",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_CONTAINS_PROFANITY);<br>r.should.be.false();",
      "isRoot": false,
      "uuid": "7015fee2-17be-4090-8393-84e4ddfa230f",
      "parentUUID": "76b6b25d-4e8f-4ca5-814a-682e12ef8920",
      "skipped": false
    },
    {
      "title": "should change name when request is valid",
      "fullTitle": "when host override should change name when request is valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "66ff0f2a-69ea-42ec-9007-6993696feeeb",
      "parentUUID": "2fbc0a21-444d-4bdc-9965-e8874fb91e9c",
      "skipped": false
    },
    {
      "title": "should change name when setting do not allow it",
      "fullTitle": "when host override should change name when setting do not allow it",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "cd308ef0-b122-4035-9a5a-a01c0847b264",
      "parentUUID": "2fbc0a21-444d-4bdc-9965-e8874fb91e9c",
      "skipped": false
    },
    {
      "title": "should change name when name contains profanity",
      "fullTitle": "when host override should change name when name contains profanity",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "f8a8de2f-032a-46d3-aa9b-f8d732a7c4f0",
      "parentUUID": "2fbc0a21-444d-4bdc-9965-e8874fb91e9c",
      "skipped": false
    },
    {
      "title": "should get contestant when contest with username exists",
      "fullTitle": "getContestantByUsername(username) should get contestant when contest with username exists",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(c1.username);<br>c.should.equal(c1);<br>c = t.getContestantByUsername(<span class=\"hljs-string\">'c1abc'</span>);<br>c.should.equal(c1);",
      "isRoot": false,
      "uuid": "765e26b9-3b52-4701-90e2-a65da84f06b1",
      "parentUUID": "f077b841-62e9-46a8-8701-d11a119e31ea",
      "skipped": false
    },
    {
      "title": "should not get contestant when contest with username does not exist",
      "fullTitle": "getContestantByUsername(username) should not get contestant when contest with username does not exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(<span class=\"hljs-string\">'John Doe'</span>);<br>should(c).be.null();",
      "isRoot": false,
      "uuid": "7331270e-38b3-4d32-9755-fafd378356ba",
      "parentUUID": "f077b841-62e9-46a8-8701-d11a119e31ea",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should throw on set value",
      "fullTitle": "#wasSuccessful should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.wasSuccessful = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "9a8fb4b4-ce01-460a-a593-770584e32bc9",
      "parentUUID": "0a8e7dc5-2a8a-4d1c-94cc-d529b6b4ff0d",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#wasSuccessful should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>r.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "4b46ae65-2037-415b-b5b3-c1e24374a8b1",
      "parentUUID": "0a8e7dc5-2a8a-4d1c-94cc-d529b6b4ff0d",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#enquireForTeamLeaderPosition should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r._enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "b732a075-73b5-47c7-98a1-ba4d316b510a",
      "parentUUID": "401b1087-0135-4ebf-bfb1-bce71aa3599f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#enquireForTeamLeaderPosition should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r.enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "9821c5ea-6c02-429e-8347-a23a42178cf5",
      "parentUUID": "401b1087-0135-4ebf-bfb1-bce71aa3599f",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#errorMessage should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.errorMessage = <span class=\"hljs-string\">'test'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "3970a6a2-5647-45de-815c-6598bc94ab46",
      "parentUUID": "081d9403-cdb7-4cf5-8fdc-662d50d202af",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#errorMessage should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._errorMessage = <span class=\"hljs-string\">'errorMessage_test'</span>;<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'errorMessage_test'</span>);",
      "isRoot": false,
      "uuid": "5a311801-eac8-4188-810f-32658d9df84e",
      "parentUUID": "081d9403-cdb7-4cf5-8fdc-662d50d202af",
      "skipped": false
    },
    {
      "title": "should change the state to not successful",
      "fullTitle": "#setNotSuccessful(errorMessage) should change the state to not successful",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.setNotSuccessful(<span class=\"hljs-string\">'Test error message'</span>);<br>r.wasSuccessful.should.be.false();<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'Test error message'</span>);",
      "isRoot": false,
      "uuid": "7a749368-d422-4514-8146-18824829c4a3",
      "parentUUID": "d21e99ca-cce3-48dc-be17-5904aeaa69fb",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'username_test'</span>;<br>c._username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
      "isRoot": false,
      "uuid": "8a9e3369-028f-47cd-96b1-6f39d867003e",
      "parentUUID": "14578bb9-8e96-45b2-9e49-6f3f63bc6b23",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._username = <span class=\"hljs-string\">'username_test'</span>;<br>c.username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
      "isRoot": false,
      "uuid": "c5138a44-d3e6-4926-a2e5-163be45771a5",
      "parentUUID": "14578bb9-8e96-45b2-9e49-6f3f63bc6b23",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#score should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    c.score = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "934859b4-952c-4c03-b8bc-03061ace2c6f",
      "parentUUID": "58995496-7a78-480b-9d0c-c5e4da0fad81",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#score should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._score = <span class=\"hljs-number\">1</span>;<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "8af1e61d-d7df-4c32-8c82-f9ab820e86b1",
      "parentUUID": "58995496-7a78-480b-9d0c-c5e4da0fad81",
      "skipped": false
    },
    {
      "title": "should increment the contestant's score",
      "fullTitle": "#incrementScore() should increment the contestant's score",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.incrementScore();<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "9ee5d76c-cd7b-480e-80f1-fc4f10aaf022",
      "parentUUID": "6fe54eec-3f1a-42db-8e20-544954b1ab92",
      "skipped": false
    },
    {
      "title": "should emit scoreUpdate event",
      "fullTitle": "#incrementScore() should emit scoreUpdate event",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.on(<span class=\"hljs-string\">'scoreUpdate'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>});<br>c.incrementScore();",
      "isRoot": false,
      "uuid": "0d22aff6-7423-4056-a9b8-9e059ae8e120",
      "parentUUID": "6fe54eec-3f1a-42db-8e20-544954b1ab92",
      "skipped": false
    },
    {
      "title": "should return a non-null non-empty key",
      "fullTitle": "#generateSessionId() should return a non-null non-empty key",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateSessionId().should.not.be.equal(<span class=\"hljs-string\">''</span>).and.not.be.equal(<span class=\"hljs-literal\">null</span>);",
      "isRoot": false,
      "uuid": "ca2449d8-51c7-4eb7-9c5d-8c9dc23116a0",
      "parentUUID": "158ae8e1-8bd6-4346-993b-e5eac0258d80",
      "skipped": false
    },
    {
      "title": "should return a id of the correct length",
      "fullTitle": "#generateSessionId() should return a id of the correct length",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateSessionId()<br>    .length.should.be.Number().and.equal(idUtility.keyLength);",
      "isRoot": false,
      "uuid": "a83d984d-4af7-4134-8855-f2a76513657d",
      "parentUUID": "158ae8e1-8bd6-4346-993b-e5eac0258d80",
      "skipped": false
    },
    {
      "title": "should record id so it cannot be reused.",
      "fullTitle": "#generateSessionId() should record id so it cannot be reused.",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> id = idUtility.generateSessionId();<br>idUtility._sessionKeysInUse.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">cachedId</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> cachedId === id;<br>}).should.equal(id);",
      "isRoot": false,
      "uuid": "43150798-df2b-49d3-bfb7-87afaf0e7b75",
      "parentUUID": "158ae8e1-8bd6-4346-993b-e5eac0258d80",
      "skipped": false
    },
    {
      "title": "should return a UUID",
      "fullTitle": "#generateParticipantId() should return a UUID",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateParticipantId()<br>    .should.match(<span class=\"hljs-regexp\">/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i</span>);",
      "isRoot": false,
      "uuid": "d8caf382-50dd-4ac0-92c3-03f3f62348af",
      "parentUUID": "b06f902c-9f8a-4ca8-8cc2-28af3b520901",
      "skipped": false
    },
    {
      "title": "should store the ids to stop reuse",
      "fullTitle": "#registerSessionIdsInUse(ids) should store the ids to stop reuse",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.length.should.be.aboveOrEqual(<span class=\"hljs-number\">2</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "0aa5daa5-5e96-428c-98b4-b2f2e14a7da9",
      "parentUUID": "4defc731-7bb1-40e7-a285-705beb772381",
      "skipped": false
    },
    {
      "title": "should return a UUID",
      "fullTitle": "#releaseSessionId(id) should return a UUID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility.releaseSessionId(<span class=\"hljs-string\">'111AAA'</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.equal(-<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "aa446f1e-5432-4461-9c83-80cb1bc453da",
      "parentUUID": "9a802584-3fef-47ff-ac18-4ce69c14fea8",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#action should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.data._action.should.equal(constants.buzzerActionCommands.RESET);",
      "isRoot": false,
      "uuid": "27380ee7-79de-497c-b989-a9e8f77d86cf",
      "parentUUID": "a7a3ef90-05aa-42d3-95cf-4dd3e8cdecfe",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#action should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._action = constants.buzzerActionCommands.RESET;<br>m.action.should.equal(constants.buzzerActionCommands.RESET);",
      "isRoot": false,
      "uuid": "acde9d35-f49e-4195-90b7-6ef22e7b9f63",
      "parentUUID": "a7a3ef90-05aa-42d3-95cf-4dd3e8cdecfe",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "c7e5ab14-b3ea-43de-953f-8f856e1ef1dc",
      "parentUUID": "4471cf59-bb1a-4d0f-95d8-e20d152c6adc",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "a6e8b5aa-65ed-4edd-9c84-b1dd1e141e5e",
      "parentUUID": "4471cf59-bb1a-4d0f-95d8-e20d152c6adc",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "2fe5e8e4-be7c-406f-bf22-e41e7ea3ab30",
      "parentUUID": "d2ee4ee3-3310-4052-a4a0-d4a128f62922",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "52f379c7-db9a-4898-9213-3fda7a63f7c4",
      "parentUUID": "d2ee4ee3-3310-4052-a4a0-d4a128f62922",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'yyy123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "00e521cf-97a5-40df-9224-c006dfb7b1ce",
      "parentUUID": "26a9982d-72f6-4cf8-98bd-7862deef5490",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = <span class=\"hljs-number\">99</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "4e3277ff-edf1-49f3-9a79-1239e73da095",
      "parentUUID": "26a9982d-72f6-4cf8-98bd-7862deef5490",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "71924308-c623-4662-b6b1-057fde3d5eea",
      "parentUUID": "0a30a7f9-b2ae-43ab-a846-14d89de75b1d",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "dcabfcbd-a7a6-4df2-987b-75ec48bdaf83",
      "parentUUID": "0a30a7f9-b2ae-43ab-a846-14d89de75b1d",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "d12f32c7-bb86-463a-b4e9-0af304d6e942",
      "parentUUID": "1b52aba6-bb9c-42c7-9648-23c2c8ad96cc",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "dbad13fe-e380-49fd-aa2b-f2f222b867d2",
      "parentUUID": "1b52aba6-bb9c-42c7-9648-23c2c8ad96cc",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "67b1d228-2c70-410c-bf93-20864a014440",
      "parentUUID": "8b2f5c0e-341a-435a-b0de-a72633641bc2",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "6df7afe1-5c74-458c-b71f-8c89b49757dc",
      "parentUUID": "8b2f5c0e-341a-435a-b0de-a72633641bc2",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.username = <span class=\"hljs-string\">'test123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
      "isRoot": false,
      "uuid": "388c99f9-69a7-4c57-8bb6-0dd54951476a",
      "parentUUID": "c5f74e2d-0190-4b34-b303-77c89102c523",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._username = <span class=\"hljs-string\">'test123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
      "isRoot": false,
      "uuid": "fc32c991-3c4b-4cc4-a7f4-50a879432fd3",
      "parentUUID": "c5f74e2d-0190-4b34-b303-77c89102c523",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "eb3446aa-ce1d-4349-a955-00dcb5ba7d68",
      "parentUUID": "a1dd9a4b-1725-42b1-b92a-b9b1d1346f5b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "cb009792-22d3-4c16-8057-925c787d0180",
      "parentUUID": "a1dd9a4b-1725-42b1-b92a-b9b1d1346f5b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "769be0b9-b090-4f59-8653-da362e51af30",
      "parentUUID": "54183cdd-fac6-4d4e-8fc1-34411251a44a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "8d6b16f6-11d0-4a5c-a867-8dc4b62ee4c1",
      "parentUUID": "54183cdd-fac6-4d4e-8fc1-34411251a44a",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "bceaafc2-945b-4f9c-a7f3-49c233907988",
      "parentUUID": "37d094e2-6ccb-43a4-b35b-35f7839e3b0f",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "a6eaa141-2a12-480e-aa59-266fcc20498d",
      "parentUUID": "37d094e2-6ccb-43a4-b35b-35f7839e3b0f",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#wasSuccessful should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.data._wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "615e6fe3-afee-4db9-a2c6-91695422d3dc",
      "parentUUID": "cc2b29b4-3c65-4881-aa45-70d7cdf9503c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#wasSuccessful should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "6224b82f-2d85-4044-8716-dfa6a1e4d4e5",
      "parentUUID": "cc2b29b4-3c65-4881-aa45-70d7cdf9503c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#enquireForTeamLeaderPosition should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.data._enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "252b1c67-431f-4520-9826-073608a0270f",
      "parentUUID": "a18fe140-77d8-44b2-8cc9-69dfe83e8121",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#enquireForTeamLeaderPosition should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "51d15c8f-96a7-4a47-a24a-8110d74b863a",
      "parentUUID": "a18fe140-77d8-44b2-8cc9-69dfe83e8121",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#failedRequestReason should set value",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.data._failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
      "isRoot": false,
      "uuid": "79e8ff09-49b9-4124-9f10-b183657372a6",
      "parentUUID": "baf79c79-fd95-4aeb-8b5a-0d148a1cb0d5",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#failedRequestReason should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
      "isRoot": false,
      "uuid": "dd9ed381-c858-4d4a-9508-bc6b01a015d1",
      "parentUUID": "baf79c79-fd95-4aeb-8b5a-0d148a1cb0d5",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "7dd2da14-86dd-4d19-a53d-4ccdda323307",
      "parentUUID": "4e5896cf-ff88-47de-bc8f-65820170d398",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "78c9bbeb-eb7a-45aa-8923-76943e123e81",
      "parentUUID": "4e5896cf-ff88-47de-bc8f-65820170d398",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#mustChooseTeam should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.data._mustChooseTeam.should.be.true();",
      "isRoot": false,
      "uuid": "c7d35c6f-fa60-4e5f-9282-61036a5396c0",
      "parentUUID": "e3dc90d0-4ba6-465d-a0d1-2c65f372e030",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#mustChooseTeam should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.mustChooseTeam.should.be.true();",
      "isRoot": false,
      "uuid": "9fb68ce1-0057-41ab-bca4-0506d2a0c17d",
      "parentUUID": "e3dc90d0-4ba6-465d-a0d1-2c65f372e030",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teams should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.data._teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
      "isRoot": false,
      "uuid": "c69e9b67-08e0-4e00-8570-b8fa0d435234",
      "parentUUID": "92b4bbba-a826-45e4-9edf-20193a753c67",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teams should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
      "isRoot": false,
      "uuid": "da951b14-743f-4dfc-b0cf-a528b467ed8e",
      "parentUUID": "92b4bbba-a826-45e4-9edf-20193a753c67",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "606feedc-5475-4d5e-849a-60860d12e873",
      "parentUUID": "ad713153-df73-49b2-a2bd-124ea79846d7",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "898248b4-991c-4170-a505-0e68d68020a9",
      "parentUUID": "ad713153-df73-49b2-a2bd-124ea79846d7",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#settings should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.data._settings.should.equal(s);",
      "isRoot": false,
      "uuid": "f237e362-7c78-48c2-82e4-faff03f653f6",
      "parentUUID": "ac9a8afb-59cb-4fdc-a422-c2c77e4710d4",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#settings should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.data._settings = s;<br>m.settings.should.equal(s);",
      "isRoot": false,
      "uuid": "233acc89-133e-456b-850d-a576015bb1a2",
      "parentUUID": "ac9a8afb-59cb-4fdc-a422-c2c77e4710d4",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "05494705-309e-487f-ae73-b9e14e8bc0c9",
      "parentUUID": "fe7c8225-06ce-4066-af1c-c9a81ab8560b",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-string\">'invalid'</span>;<br>m.settings = s;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "90925aac-2737-44ac-8bdd-5ab1ae7fa005",
      "parentUUID": "fe7c8225-06ce-4066-af1c-c9a81ab8560b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "e4eca311-5e1b-4d1e-ba68-5fbd8d3df809",
      "parentUUID": "e9ad758a-5717-45ea-9356-0010ef79a500",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "2ac9c7df-e08e-417d-a2a5-93bc04d4bf6c",
      "parentUUID": "e9ad758a-5717-45ea-9356-0010ef79a500",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "a0f1fa83-d0ef-43bb-88b6-ba85263b97f0",
      "parentUUID": "dd778764-7448-48e2-ad10-cba658704400",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b1909680-161e-49e0-abfe-70a482815899",
      "parentUUID": "dd778764-7448-48e2-ad10-cba658704400",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "c7b54082-3b17-41aa-8f83-8ca72396d759",
      "parentUUID": "a59be9a8-6cf0-4997-accd-13079a568a8d",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "810334d2-2dee-455b-92c5-e19e3abcf0f7",
      "parentUUID": "a59be9a8-6cf0-4997-accd-13079a568a8d",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#message should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "a473416c-6247-4803-b448-72d88dbd9d8d",
      "parentUUID": "37c264f3-39b5-4043-868a-85e400786eeb",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#message should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.data._error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "917597aa-d362-4a86-a2be-7364a13eeca6",
      "parentUUID": "37c264f3-39b5-4043-868a-85e400786eeb",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "98c2acbc-0153-40d5-9379-00c237091170",
      "parentUUID": "31062d66-7ec0-45fc-ba81-fca242607ef7",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 11,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "1b455f4a-bb40-4ba9-847d-44e894a3dd9f",
      "parentUUID": "31062d66-7ec0-45fc-ba81-fca242607ef7",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "25c4c618-68f8-4a31-a1f6-4393368abb9d",
      "parentUUID": "9053e230-5716-4467-9494-a0e3d5da2b9b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b20f839c-74f8-497f-958d-372d0a68d817",
      "parentUUID": "9053e230-5716-4467-9494-a0e3d5da2b9b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxTeams should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxTeams = <span class=\"hljs-number\">5</span>;<br>m.data._maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "b1a28068-6d8d-406b-93bb-f49591ed7afe",
      "parentUUID": "9d95ac3f-19ea-4e18-ad01-350bb6b0b995",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxTeams should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxTeams = <span class=\"hljs-number\">5</span>;<br>m.maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "eaef8f6e-517c-4e79-b317-be19194adbd0",
      "parentUUID": "9d95ac3f-19ea-4e18-ad01-350bb6b0b995",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamSize should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.teamSize = <span class=\"hljs-number\">5</span>;<br>m.data._teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "842245dd-451d-4e26-85c1-f928e83e4c3a",
      "parentUUID": "82b3e071-5619-46af-a60b-7634f0d96655",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamSize should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._teamSize = <span class=\"hljs-number\">5</span>;<br>m.teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "9fe7c906-e7c1-4158-8eb1-86c285e6ffec",
      "parentUUID": "82b3e071-5619-46af-a60b-7634f0d96655",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxContestants should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxContestants = <span class=\"hljs-number\">5</span>;<br>m.data._maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "503a1092-9e62-47c3-adff-401c80948327",
      "parentUUID": "1fb8a35e-c9b1-4139-8f70-a0d74b7a9f91",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxContestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxContestants = <span class=\"hljs-number\">5</span>;<br>m.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "76582846-1908-42cb-ad17-2a274e0ff790",
      "parentUUID": "1fb8a35e-c9b1-4139-8f70-a0d74b7a9f91",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "2c451706-edce-443f-b623-da54256a0fc3",
      "parentUUID": "858201ed-c1e6-4887-b522-474f1840b804",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "3242c6fe-8bf5-4e4e-8e90-41e0528211f6",
      "parentUUID": "858201ed-c1e6-4887-b522-474f1840b804",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "001b6008-7ae3-4285-9802-d04c4eda17d8",
      "parentUUID": "e829ae45-944d-4f49-acf8-204a78ddb4f3",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "c4cd2321-b7a6-4cad-8171-c9f8bc91faa2",
      "parentUUID": "e829ae45-944d-4f49-acf8-204a78ddb4f3",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "364deaa5-03b8-43b5-ac96-811bf0df1ed8",
      "parentUUID": "414d589d-35d1-4120-b283-018cd0ed2745",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "2c59ca58-2774-4e43-b59f-0ba66666aac8",
      "parentUUID": "414d589d-35d1-4120-b283-018cd0ed2745",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "58295197-f907-48da-8071-664e27e444bf",
      "parentUUID": "7691d04d-7e66-4f2b-8452-ddf27d5967cc",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "0ddbfae8-5b2f-47c8-b7a1-ef78dd5e1d1e",
      "parentUUID": "7691d04d-7e66-4f2b-8452-ddf27d5967cc",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeaderUsername should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "de783171-8540-4b82-a511-57a4d94d9f20",
      "parentUUID": "94ab5598-afe2-4297-a540-0e9b7270f076",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeaderUsername should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "d49019b8-1afb-4795-a7b3-318463f9bda6",
      "parentUUID": "94ab5598-afe2-4297-a540-0e9b7270f076",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "59d7674b-5a69-4135-b809-8165856c6d6e",
      "parentUUID": "d8af4d4e-991d-4399-aea8-bf591b4bf51b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "395ca2f4-06b4-4e73-b8b6-e21a0a6e7516",
      "parentUUID": "d8af4d4e-991d-4399-aea8-bf591b4bf51b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "82b21cdf-25d2-4b3e-92a7-1faa1fa8e394",
      "parentUUID": "06de98c6-f06e-447f-a7a6-c11ec8233775",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "fd3814dd-9997-4f47-b778-153fc3bb3e81",
      "parentUUID": "06de98c6-f06e-447f-a7a6-c11ec8233775",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "54971ae2-2ca9-4a4d-82fe-e6e381f303a3",
      "parentUUID": "97e3d3c5-a5fa-4ab2-b27d-35457383dfb1",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "a6f43144-3b73-4177-a55c-c675bbd09927",
      "parentUUID": "97e3d3c5-a5fa-4ab2-b27d-35457383dfb1",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameFrom should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "0052c0a7-9339-4a02-b6e6-62ab3b530718",
      "parentUUID": "bd358368-16b4-4c57-a0bc-b0b200e7b0b5",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameFrom should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "a8df6c7a-bc5b-4fde-bbfb-d54b14e011ec",
      "parentUUID": "bd358368-16b4-4c57-a0bc-b0b200e7b0b5",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameTo should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "bf6648a8-42f2-4f48-b5a2-c83a7dd10fa9",
      "parentUUID": "4d07ff74-a448-4db7-a6ba-cb870d58249e",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameTo should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "e38c8ac6-8e90-4fa6-9b17-3a284e65e06e",
      "parentUUID": "4d07ff74-a448-4db7-a6ba-cb870d58249e",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "fd278fc3-618b-4625-96c5-88f04ade76c3",
      "parentUUID": "a032917e-8022-43c1-a2c6-ef0d946b3af0",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "e281867c-5b7a-4ef8-9847-73e7a59a9489",
      "parentUUID": "a032917e-8022-43c1-a2c6-ef0d946b3af0",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "d03aa225-4c4a-4995-b5ff-e525d2c0eb8c",
      "parentUUID": "1e7f63f6-771e-4249-817e-301a8abf452c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "cf5a064e-32f2-4a52-ba11-64e0987cb9d3",
      "parentUUID": "1e7f63f6-771e-4249-817e-301a8abf452c",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "dea933ee-a6d3-44e7-8980-259e6b18a50c",
      "parentUUID": "659fe879-60f2-4c44-af0d-0c40a44d73ab",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "f873d2ab-27b8-46c7-a423-a7be0b7930bd",
      "parentUUID": "659fe879-60f2-4c44-af0d-0c40a44d73ab",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#decision should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.data._decision.should.be.true();",
      "isRoot": false,
      "uuid": "608bed80-edf1-42e4-9231-4e37ac005d4e",
      "parentUUID": "f7c98ebd-07b3-45e1-a204-e8090d686a25",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#decision should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._decision = <span class=\"hljs-literal\">true</span>;<br>m.decision.should.be.true();",
      "isRoot": false,
      "uuid": "b2e3d9fe-22a5-462f-8d3b-1e5cb4ac5d0f",
      "parentUUID": "f7c98ebd-07b3-45e1-a204-e8090d686a25",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "779da8a0-cccc-4ab8-b531-4be5daada25c",
      "parentUUID": "3234d42a-40c4-4d43-98c0-3df9f59c3e1a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "5fdeb63d-01cf-4b6d-b4ad-2de0052fb2b5",
      "parentUUID": "3234d42a-40c4-4d43-98c0-3df9f59c3e1a",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b54882e4-adff-41dd-9c5d-769ea9272c8d",
      "parentUUID": "b35a231f-a436-4d5d-9380-fc8c02d61114",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "cb5a498e-2363-473a-9c3b-dc1c5ffd85c1",
      "parentUUID": "b35a231f-a436-4d5d-9380-fc8c02d61114",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "4cceedfd-ab27-48f6-8d94-9575b0b38078",
      "parentUUID": "f5c9d41b-f913-471f-9e27-feb2a1e79d5c",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "916c22eb-61a0-46bc-8c5f-4466813e533c",
      "parentUUID": "f5c9d41b-f913-471f-9e27-feb2a1e79d5c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#gameState should get value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.gameState.should.be.Object();",
      "isRoot": false,
      "uuid": "d5d3e43f-333d-48f7-8e25-27c7d30feda1",
      "parentUUID": "27a85419-e66e-4076-bfd2-faad984d41eb",
      "skipped": false
    },
    {
      "title": "should not have ids",
      "fullTitle": "#gameState should not have ids",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState.id);<br>should.not.exist(m.gameState.host.id);",
      "isRoot": false,
      "uuid": "32946ea6-9766-47f3-8af9-d04337b85b05",
      "parentUUID": "27a85419-e66e-4076-bfd2-faad984d41eb",
      "skipped": false
    },
    {
      "title": "should promote private field _ to public field",
      "fullTitle": "#gameState should promote private field _ to public field",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState._host);<br>should.not.exist(m.gameState._settings);<br>should.exist(m.gameState.host);<br>should.exist(m.gameState.settings);<br>should.exist(m.gameState.settings.teamLeaderSelectionMethod);",
      "isRoot": false,
      "uuid": "8e41c083-dcd4-4709-91e6-ca9813540021",
      "parentUUID": "27a85419-e66e-4076-bfd2-faad984d41eb",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "deff1f0c-7613-408d-ab3c-dbb895864f7b",
      "parentUUID": "29fa3ca5-d15b-4383-a620-dde6aaf8d9d5",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 15,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "561173e0-6a5b-4c0e-81cb-e3aa50db804a",
      "parentUUID": "29fa3ca5-d15b-4383-a620-dde6aaf8d9d5",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#rejoinAs should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.rejoinAs = constants.rejoinAs.HOST;<br>m.data._rejoinAs.should.equal(constants.rejoinAs.HOST);",
      "isRoot": false,
      "uuid": "b0beda40-ec13-4dba-992b-64583c29999e",
      "parentUUID": "3911146c-998b-4eb9-8e0e-04b87702c67a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#rejoinAs should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._rejoinAs = constants.rejoinAs.HOST;<br>m.rejoinAs.should.equal(constants.rejoinAs.HOST);",
      "isRoot": false,
      "uuid": "b678f559-7d2d-41dd-8e90-8a040d2f6fc6",
      "parentUUID": "3911146c-998b-4eb9-8e0e-04b87702c67a",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "7822b248-c67e-4948-9a45-2a2d2cd313c8",
      "parentUUID": "f615c602-b9d9-4823-ad9a-855414a43427",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "609e8dde-b178-49de-8942-178de2e9d999",
      "parentUUID": "f615c602-b9d9-4823-ad9a-855414a43427",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#participantId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "50bd384f-7043-4d77-878a-0f6ab20de957",
      "parentUUID": "c81490d4-cd59-4abc-80e4-390440db6d8c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#participantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "2cc942b9-7f10-48c9-8c22-1f87c7beb819",
      "parentUUID": "c81490d4-cd59-4abc-80e4-390440db6d8c",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.rejoinAs = constants.rejoinAs.OBSERVER;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "1bba13c2-5a73-452f-85db-28e0e20e625a",
      "parentUUID": "085077e0-dfc1-4f43-8a20-ad5f859adf8c",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "e2eeabba-c0e1-4573-bcbb-c2b5d511964c",
      "parentUUID": "085077e0-dfc1-4f43-8a20-ad5f859adf8c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "9902be9e-ff63-4816-8935-4aa637db707d",
      "parentUUID": "dd7f283e-0acf-46d6-afac-4f476d0cf50f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "2cd59523-1fd9-476f-9561-28d9fe5fcd8d",
      "parentUUID": "dd7f283e-0acf-46d6-afac-4f476d0cf50f",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "a089c969-74c4-4665-95fa-7ac4f95583c1",
      "parentUUID": "53510103-c773-4496-bb72-e43b09c0b05c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "79a2665d-d3f3-4a3f-943d-67962a0d3f24",
      "parentUUID": "53510103-c773-4496-bb72-e43b09c0b05c",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "a29b10cc-6e04-45d3-b5db-7a369cbc90ca",
      "parentUUID": "dfc0e229-e749-4982-a2f3-1148e2ab2d85",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "f501ec31-1f31-47d8-abb6-31473defe824",
      "parentUUID": "dfc0e229-e749-4982-a2f3-1148e2ab2d85",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionCompleted();<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "b699af26-cf77-4bdf-a392-30d1c9e68f5a",
      "parentUUID": "ffeddfd5-c8eb-40d5-a900-49682772fc03",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "3cddac12-ad8e-4046-8d5e-9fab90f6293b",
      "parentUUID": "ee3e8389-2fe9-4d52-9470-1997453d1c8e",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "8b924ddd-62ac-4c68-9e23-175ce834ff81",
      "parentUUID": "ee3e8389-2fe9-4d52-9470-1997453d1c8e",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "d1a95e04-5159-4b42-9ff5-18dc49131b50",
      "parentUUID": "30f93a67-b188-45ce-ae95-a7ae68a296c6",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "7e114ac3-019f-4d7e-b5f5-8f3f1a71b84f",
      "parentUUID": "30f93a67-b188-45ce-ae95-a7ae68a296c6",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "31d3a292-95fa-4a34-8683-cd0eda405f00",
      "parentUUID": "999260ce-28a4-41aa-965f-c154bdb4e202",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "3071eb95-3632-4a60-89a5-8cbe218530ea",
      "parentUUID": "999260ce-28a4-41aa-965f-c154bdb4e202",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "5833509b-9744-4164-a226-e817b36d2b44",
      "parentUUID": "53de5802-c478-4343-81ee-5a90fa844130",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "a750e72a-5efb-48ed-b487-cf8769c1732b",
      "parentUUID": "53de5802-c478-4343-81ee-5a90fa844130",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#participantId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "605bc22b-17f3-42fb-953b-478a186a0974",
      "parentUUID": "1f89f4fe-63c4-4dad-8c04-e500a7389fbd",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#participantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "0645589a-6913-443c-b020-0b010547838a",
      "parentUUID": "1f89f4fe-63c4-4dad-8c04-e500a7389fbd",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "05061aed-7fb7-4db6-a5da-33ffae0342bd",
      "parentUUID": "e9d9c5a1-63c9-4aa6-a76e-c35f4a776b87",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "d43f438e-ccff-401e-9203-45775b5ac086",
      "parentUUID": "e9d9c5a1-63c9-4aa6-a76e-c35f4a776b87",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#info should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.should.be.Object();",
      "isRoot": false,
      "uuid": "c24c91a7-b299-4711-a97d-a55b0e829692",
      "parentUUID": "971c693f-5eab-47a8-9a8e-0d7e88bfb065",
      "skipped": false
    },
    {
      "title": "should not have ids",
      "fullTitle": "#info should not have ids",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.host.should.not.be.null();<br>should.not.exist(m.info.host.id);",
      "isRoot": false,
      "uuid": "c4d79f69-bd44-4204-96f3-9f4fae26e5eb",
      "parentUUID": "971c693f-5eab-47a8-9a8e-0d7e88bfb065",
      "skipped": false
    },
    {
      "title": "should promote private field _ to public field",
      "fullTitle": "#info should promote private field _ to public field",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>should.not.exist(m.info._host);<br>should.not.exist(m.info._session);<br>should.exist(m.info.host);<br>should.exist(m.info.session);<br>should.exist(m.info.session.settings.teamLeaderSelectionMethod);",
      "isRoot": false,
      "uuid": "07fd0012-b6cc-4faf-8d8b-c9305984636b",
      "parentUUID": "971c693f-5eab-47a8-9a8e-0d7e88bfb065",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "a0b0e46c-9992-4f9a-8364-ac43756b03e4",
      "parentUUID": "4b36a919-649f-4064-8d5d-7b2c23c234f6",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "1c7f85c2-dd71-49d4-8f16-f56890ab4a78",
      "parentUUID": "4b36a919-649f-4064-8d5d-7b2c23c234f6",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "6eaf7f8d-f73e-404e-baf5-ed11f6eada14",
      "parentUUID": "d78114bb-2995-4a1e-a5c9-99d93c7de631",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "2dd4cecb-8d31-4717-bd3b-d3b7f2547531",
      "parentUUID": "d78114bb-2995-4a1e-a5c9-99d93c7de631",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "604bf8bf-defd-4bf3-b705-edbd452f7629",
      "parentUUID": "cc272c8a-d6a7-438f-adab-0c85204fa0c2",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "098a3375-79df-4fcf-bab2-36b0d206cfaf",
      "parentUUID": "cc272c8a-d6a7-438f-adab-0c85204fa0c2",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "8cff43e3-777e-4ab8-947b-87d06ab596ef",
      "parentUUID": "fc8f6926-2e5a-4036-90f0-ffb4c62d8505",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "968c2c1b-ef36-4093-90bd-666e3df883eb",
      "parentUUID": "fc8f6926-2e5a-4036-90f0-ffb4c62d8505",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.contestantId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "788fa257-24b4-4a79-94d9-6c450b4c406c",
      "parentUUID": "674d48e4-5621-4cc4-bab9-9ab13b31bd77",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "f538d9a3-92ab-40de-9eee-33cba7b9043f",
      "parentUUID": "674d48e4-5621-4cc4-bab9-9ab13b31bd77",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SuccessMessage();<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "33ab5b0c-c802-429c-8a55-66c7302da9ed",
      "parentUUID": "d6a0a904-41de-49d9-b78e-fcb2445236dc",
      "skipped": false
    },
    {
      "title": "should return false when not referenced",
      "fullTitle": "#isInstanceAndTypeOf() should return false when not referenced",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf().should.be.false();",
      "isRoot": false,
      "uuid": "db84ac54-18a0-4c92-9414-aedff48ff97d",
      "parentUUID": "30905ae6-4283-4a41-9eb9-b762bc3c4128",
      "skipped": false
    },
    {
      "title": "should return false when null",
      "fullTitle": "#isInstanceAndTypeOf() should return false when null",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">''</span>).should.be.false();",
      "isRoot": false,
      "uuid": "8a8b6975-73b8-4513-94b7-729770a779ac",
      "parentUUID": "30905ae6-4283-4a41-9eb9-b762bc3c4128",
      "skipped": false
    },
    {
      "title": "should return false when not the correct type",
      "fullTitle": "#isInstanceAndTypeOf() should return false when not the correct type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'Int'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "a2d5c59b-bb02-4804-8e5f-35a9b457a714",
      "parentUUID": "30905ae6-4283-4a41-9eb9-b762bc3c4128",
      "skipped": false
    },
    {
      "title": "should return true when is a built-in type",
      "fullTitle": "#isInstanceAndTypeOf() should return true when is a built-in type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'Number'</span>).should.be.true();",
      "isRoot": false,
      "uuid": "1e5cf46e-d236-4080-bdb7-37baae553a17",
      "parentUUID": "30905ae6-4283-4a41-9eb9-b762bc3c4128",
      "skipped": false
    },
    {
      "title": "should return true when is user defined type",
      "fullTitle": "#isInstanceAndTypeOf() should return true when is user defined type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-keyword\">new</span> UserDefinedType(),<br>    UserDefinedType).should.be.true();",
      "isRoot": false,
      "uuid": "4c17b108-df08-4a18-881f-65356d3f4fd2",
      "parentUUID": "30905ae6-4283-4a41-9eb9-b762bc3c4128",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "a4fe0b0a-2ee0-4ba4-831a-231496232fac",
      "parentUUID": "e0ae8a3d-1549-4ad8-b5f2-4a1345e27bc7",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "5a88fc1f-5048-4c27-b600-e5009dbb93f3",
      "parentUUID": "e0ae8a3d-1549-4ad8-b5f2-4a1345e27bc7",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all.pop();<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "23d3895c-9bb7-4789-9bee-489d44f23149",
      "parentUUID": "e0ae8a3d-1549-4ad8-b5f2-4a1345e27bc7",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#length should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.length = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "c195ed5f-fca8-4916-b2fb-2152da993c78",
      "parentUUID": "fc00268c-277a-4a5d-9217-8963c5a29194",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#length should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "a7927e83-0724-4bb6-b370-5e43ce5ecda3",
      "parentUUID": "fc00268c-277a-4a5d-9217-8963c5a29194",
      "skipped": false
    },
    {
      "title": "should return true when id does exist",
      "fullTitle": "#contains(id) should return true when id does exist",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(p.id).should.be.true();",
      "isRoot": false,
      "uuid": "52f42c01-0197-4e00-ad49-d42e155a9fc7",
      "parentUUID": "40e3d6b1-15f3-4fe0-a00a-161b224bd37e",
      "skipped": false
    },
    {
      "title": "should return false when id does not exist",
      "fullTitle": "#contains(id) should return false when id does not exist",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(<span class=\"hljs-string\">'p2'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "d54a478b-3a86-41fb-80ff-e6eda8a18389",
      "parentUUID": "40e3d6b1-15f3-4fe0-a00a-161b224bd37e",
      "skipped": false
    },
    {
      "title": "should add the given participant",
      "fullTitle": "#add(participant) should add the given participant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc._participants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc._participants[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "1d43235c-3b75-456c-b09b-bc27dfc255c0",
      "parentUUID": "3b9a6a0d-dee6-45bc-9b79-ca4cb9f90e32",
      "skipped": false
    },
    {
      "title": "should error if participant with id already exists",
      "fullTitle": "#add(participant) should error if participant with id already exists",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.add(p);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "955b1476-f9c6-40e0-80c1-6fc1d949d657",
      "parentUUID": "3b9a6a0d-dee6-45bc-9b79-ca4cb9f90e32",
      "skipped": false
    },
    {
      "title": "should emit add event",
      "fullTitle": "#add(participant) should emit add event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.on(<span class=\"hljs-string\">'add'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">participant</span>) </span>{<br>    participant.should.equal(p);<br>    done();<br>});<br>pc.add(p);",
      "isRoot": false,
      "uuid": "a1c38424-3fd3-4818-98f5-acfd2c96be5b",
      "parentUUID": "3b9a6a0d-dee6-45bc-9b79-ca4cb9f90e32",
      "skipped": false
    },
    {
      "title": "should remove the existing participant",
      "fullTitle": "#remove(participant) should remove the existing participant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "aab9ac7a-19df-4b9f-bb5e-79245294468b",
      "parentUUID": "0ce16193-cf9d-4e92-a36d-7265ef300667",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing participant",
      "fullTitle": "#remove(participant) should not remove the non-existing participant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p1).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "66f68166-b8b9-418b-8899-8255d9c0c3e5",
      "parentUUID": "0ce16193-cf9d-4e92-a36d-7265ef300667",
      "skipped": false
    },
    {
      "title": "should remove the existing participant",
      "fullTitle": "#removeById(id) should remove the existing participant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p.id).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "f845b81b-70ce-4d3c-92ed-36060507606e",
      "parentUUID": "4d2982b6-0420-45d9-82c0-f5b2e33c2e44",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing participant",
      "fullTitle": "#removeById(id) should not remove the non-existing participant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p1.id).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "450436cb-114b-4448-9f30-33e0127e89cb",
      "parentUUID": "4d2982b6-0420-45d9-82c0-f5b2e33c2e44",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#id should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'id_test'</span>;<br>p._id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "fa487246-37de-4e05-81f2-45a7f6685d46",
      "parentUUID": "13d47fa4-00c7-4ff0-a1f1-b2e2f892aad2",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#id should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "b3fe0891-eaa1-4b49-b908-13daac8990c6",
      "parentUUID": "13d47fa4-00c7-4ff0-a1f1-b2e2f892aad2",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#isDisconnected should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    p.isDisconnected = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "55694e22-5658-4fb3-bbaf-26b201962b60",
      "parentUUID": "d43ac891-eb7c-489a-b879-b857694c9c8b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#isDisconnected should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "e6cd7876-cd86-40fd-bc56-38302967aac6",
      "parentUUID": "d43ac891-eb7c-489a-b879-b857694c9c8b",
      "skipped": false
    },
    {
      "title": "should change participant state to disconnected",
      "fullTitle": "#disconnect() should change participant state to disconnected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">false</span>;<br>p.disconnect();<br>p.isDisconnected.should.be.true();",
      "isRoot": false,
      "uuid": "849e83aa-74e3-4c66-bd8a-a5aa6a36890e",
      "parentUUID": "50af584c-f42e-45ac-894c-7a184c8d6414",
      "skipped": false
    },
    {
      "title": "should change participant state to connected",
      "fullTitle": "#reconnect() should change participant state to connected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">true</span>;<br>p.reconnect();<br>p.isDisconnected.should.be.false();",
      "isRoot": false,
      "uuid": "cd947b7e-a16d-47ab-8f0e-56be1ba801a4",
      "parentUUID": "0192dd0e-5e7d-4ec1-9d51-b7d593536f97",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    sc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "90d961f6-162b-411c-bd63-d3af6510bd15",
      "parentUUID": "39b29604-83ba-4006-ae66-595dba0a6ead",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
      "isRoot": false,
      "uuid": "76042c8e-7441-41af-8155-3c7c4c8ecd72",
      "parentUUID": "39b29604-83ba-4006-ae66-595dba0a6ead",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all.pop();<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
      "isRoot": false,
      "uuid": "40e75276-38e5-4910-b5bb-ec2526849871",
      "parentUUID": "39b29604-83ba-4006-ae66-595dba0a6ead",
      "skipped": false
    },
    {
      "title": "add and return session",
      "fullTitle": "#add(host, settings) add and return session",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-keyword\">var</span> ses = sc.add(h, s);<br>ses.should.be.instanceof(Session);",
      "isRoot": false,
      "uuid": "a774116f-075a-40a5-9ad4-2e53ec93a9f2",
      "parentUUID": "f96fece1-a4dc-4c18-98e2-a7469c4cdd6e",
      "skipped": false
    },
    {
      "title": "when given valid id should return session",
      "fullTitle": "#getById(id) when given valid id should return session",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-comment\">/* eslint-disable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses1 = sc.add(h, s);<br><span class=\"hljs-comment\">/* eslint-enable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses2 = sc.add(h, s);<br><span class=\"hljs-keyword\">var</span> sessionLocate = sc.getById(ses2.id);<br>sessionLocate.should.be.instanceof(Session)<br>    .and.equal(ses2);",
      "isRoot": false,
      "uuid": "787744a4-b450-4105-9024-c46242be74fd",
      "parentUUID": "6f0818bb-875e-4238-9be8-f384c42a70a6",
      "skipped": false
    },
    {
      "title": "should remove complete sc",
      "fullTitle": "#purgeCompleted() should remove complete sc",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.all[<span class=\"hljs-number\">0</span>].complete();<br>sc.all[<span class=\"hljs-number\">1</span>].complete();<br>sc.purgeCompleted();<br>sc.all.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "808880d8-3f9a-41ac-a571-edcfe0914640",
      "parentUUID": "77c4bb76-3350-40e7-9c4e-a5345e4d6e4e",
      "skipped": false
    },
    {
      "title": "should create teams",
      "fullTitle": "#constructor should create teams",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "3c36c02c-c61a-4102-8835-2bb2d3bcdb1f",
      "parentUUID": "c9fbe38c-8a01-446c-8e73-d771785957e7",
      "skipped": false
    },
    {
      "title": "should not create teams",
      "fullTitle": "#constructor should not create teams",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>should(s.teams).be.null();",
      "isRoot": false,
      "uuid": "3e372206-1c92-44ee-a119-d9c7da6bd486",
      "parentUUID": "c9fbe38c-8a01-446c-8e73-d771785957e7",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#id should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.id = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "02da604b-15ee-44ce-a4a3-7e40bec634c4",
      "parentUUID": "5828e78b-e477-4467-a114-b2c3ae93eb87",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#id should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "0e5a4880-ea64-4eeb-81ae-cb721b7b4948",
      "parentUUID": "5828e78b-e477-4467-a114-b2c3ae93eb87",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#roundsPlayed should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundsPlayed = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "92950ca9-daa5-4d04-a8b2-266cb20d61c0",
      "parentUUID": "b24eb933-9aae-47ae-a0ba-0424b704e257",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#roundsPlayed should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "d8442e12-6e33-4faa-aef4-2873405322c7",
      "parentUUID": "b24eb933-9aae-47ae-a0ba-0424b704e257",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#previousWinners should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.previousWinners = [<span class=\"hljs-string\">'SomeWinner'</span>];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "75881c17-94f3-48f1-bc81-17afddebbbe9",
      "parentUUID": "38197ed5-bfc5-48d2-b531-a96b5bdf6de5",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#previousWinners should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._previousWinners = [<span class=\"hljs-string\">'Winner1'</span>, <span class=\"hljs-string\">'Winner2'</span>];<br>s.previousWinners.should.be.Array();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
      "isRoot": false,
      "uuid": "c9dff753-cae1-4040-8aa2-ce1ce64bc74a",
      "parentUUID": "38197ed5-bfc5-48d2-b531-a96b5bdf6de5",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#roundWinner should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundWinner = <span class=\"hljs-string\">'SomeWinner'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "931b7f55-703e-45c7-ba4d-ceb3aeab5d53",
      "parentUUID": "ccebf1a5-19cf-4d43-a33c-1440fd06d19b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#roundWinner should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundWinner = <span class=\"hljs-string\">'Winner1'</span>;<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
      "isRoot": false,
      "uuid": "bda2c0a4-8c24-4013-b7fb-dcdcf6cbd901",
      "parentUUID": "ccebf1a5-19cf-4d43-a33c-1440fd06d19b",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#observers should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.observers = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "0051bab0-b551-454b-9bde-7a5f5d1af196",
      "parentUUID": "3d63b119-911f-4369-97f6-b25c8c731e6a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#observers should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.observers.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.observers[<span class=\"hljs-number\">0</span>].should.equal(observer);",
      "isRoot": false,
      "uuid": "ebd55b5f-79a8-4161-a783-74484be9bb43",
      "parentUUID": "3d63b119-911f-4369-97f6-b25c8c731e6a",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#contestants should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.contestants = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "08d96830-d3ac-43bb-9e63-d93f882ba4bc",
      "parentUUID": "b3e61a8e-63c3-445d-938d-432832417056",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.contestants[<span class=\"hljs-number\">0</span>].should.equal(contestant);",
      "isRoot": false,
      "uuid": "7736dd12-b2c4-4f51-b2ad-586be199f907",
      "parentUUID": "b3e61a8e-63c3-445d-938d-432832417056",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#host should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.host = host;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "36961eab-3bbb-4c62-b2d5-f3cdd970b203",
      "parentUUID": "361b12c4-5371-4a0e-9b81-6d8b63761db0",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#host should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.host.should.equal(host);",
      "isRoot": false,
      "uuid": "43e2ac23-9611-4966-8a1f-c609382478b9",
      "parentUUID": "361b12c4-5371-4a0e-9b81-6d8b63761db0",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#currentState should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
      "isRoot": false,
      "uuid": "8b8e4c34-8dde-4a8e-89be-af5e605a5389",
      "parentUUID": "548bb93a-547a-4217-bfa4-435ce2658c17",
      "skipped": false
    },
    {
      "title": "should increment rounds played",
      "fullTitle": "#incrementRoundsPlayed() should increment rounds played",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.incrementRoundsPlayed();<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "a8fa993b-038a-4e34-a236-9c943b9d6757",
      "parentUUID": "ea5645a0-1045-4a6f-a00e-c97584e35330",
      "skipped": false
    },
    {
      "title": "should not allow a contestant username with bad words",
      "fullTitle": "#addContestant(contestant) should not allow a contestant username with bad words",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Penis #YOLO'</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_CONTAINS_PROFANITY);",
      "isRoot": false,
      "uuid": "448a4b1c-7308-4b4e-bf97-3a0b43531e4f",
      "parentUUID": "721b96d3-0f1a-4610-b536-774c459741df",
      "skipped": false
    },
    {
      "title": "should not allow when username is empty",
      "fullTitle": "#addContestant(contestant) should not allow when username is empty",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">' '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_IS_REQUIRED);",
      "isRoot": false,
      "uuid": "57803467-a5d0-4d96-8e61-e0ac505ea29f",
      "parentUUID": "721b96d3-0f1a-4610-b536-774c459741df",
      "skipped": false
    },
    {
      "title": "should trim username",
      "fullTitle": "#addContestant(contestant) should trim username",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Wade  '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>c.username.should.equal(<span class=\"hljs-string\">'Wade'</span>);",
      "isRoot": false,
      "uuid": "2f8439fc-4bd1-405e-a365-ef157c672d05",
      "parentUUID": "721b96d3-0f1a-4610-b536-774c459741df",
      "skipped": false
    },
    {
      "title": "should add contestant when session is not full",
      "fullTitle": "when in individual mode should add contestant when session is not full",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "5747e0a5-3621-4a82-ace7-e5e0b829a92c",
      "parentUUID": "10b83dd9-938d-40eb-b857-84408720b96f",
      "skipped": false
    },
    {
      "title": "should not add contestant when session is full",
      "fullTitle": "when in individual mode should not add contestant when session is full",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br>s.addContestant(c2);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();",
      "isRoot": false,
      "uuid": "02b6681f-4500-4372-9fe1-7f314b89c776",
      "parentUUID": "10b83dd9-938d-40eb-b857-84408720b96f",
      "skipped": false
    },
    {
      "title": "should not add contestant when username is already taken",
      "fullTitle": "when in individual mode should not add contestant when username is already taken",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "40778d8f-53f0-4825-9475-dc9360a95a75",
      "parentUUID": "10b83dd9-938d-40eb-b857-84408720b96f",
      "skipped": false
    },
    {
      "title": "BUG# username case should not matter",
      "fullTitle": "when in individual mode BUG# username case should not matter",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'abc1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'ABC1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "f78efa5a-e9c9-48c1-a081-981ab34af400",
      "parentUUID": "10b83dd9-938d-40eb-b857-84408720b96f",
      "skipped": false
    },
    {
      "title": "should allow unlimited contestants when max is set to constants.UNLIMITED",
      "fullTitle": "when in individual mode should allow unlimited contestants when max is set to constants.UNLIMITED",
      "timedOut": false,
      "duration": 539,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = constants.UNLIMITED;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    <span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>    c.username = <span class=\"hljs-string\">'c'</span> + i;<br>    <span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>    response.wasSuccessful.should.be.true();<br>}",
      "isRoot": false,
      "uuid": "30a4be0d-72ac-4aa6-a8b9-e617fe4d2b0e",
      "parentUUID": "10b83dd9-938d-40eb-b857-84408720b96f",
      "skipped": false
    },
    {
      "title": "should add contestant when teams is not full",
      "fullTitle": "when in team mode should add contestant when teams is not full",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "df703726-614b-460f-8300-84950720c8b0",
      "parentUUID": "475073d3-cb90-4265-8389-c3d1847fcdb6",
      "skipped": false
    },
    {
      "title": "should not add contestant when teams are full",
      "fullTitle": "when in team mode should not add contestant when teams are full",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.TEAMS_ARE_FULL);",
      "isRoot": false,
      "uuid": "ff8f5edd-0983-4e3c-ae08-36bbbad8ee36",
      "parentUUID": "475073d3-cb90-4265-8389-c3d1847fcdb6",
      "skipped": false
    },
    {
      "title": "should not add contestant when username is already taken",
      "fullTitle": "when in team mode should not add contestant when username is already taken",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "6bdd6f77-6e05-4afb-a1d9-2fb8e8a9fdf5",
      "parentUUID": "475073d3-cb90-4265-8389-c3d1847fcdb6",
      "skipped": false
    },
    {
      "title": "should subscribe callback to the correct event",
      "fullTitle": "#subscribeForStateChange(event, callback) should subscribe callback to the correct event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> r = s.addContestant(c);<br>r.wasSuccessful.should.be.true();<br>s.subscribeForStateChange(<span class=\"hljs-string\">'onpending'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">session, event, from, to</span>) </span>{<br>    session.should.equal(s);<br>    event.should.equal(<span class=\"hljs-string\">'buzzerPressed'</span>);<br>    from.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>    to.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>    done();<br>});<br>s.tryBuzzerPressRegister(c.id).should.be.true();",
      "isRoot": false,
      "uuid": "8d5ee82b-856c-435d-99d7-c8de23fd5a5a",
      "parentUUID": "c82920c4-eaa6-4b4c-819d-940f6a0bac96",
      "skipped": false
    },
    {
      "title": "should register when state is ready",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should register when state is ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);",
      "isRoot": false,
      "uuid": "cc54448c-e00a-4775-a118-9c6df062253a",
      "parentUUID": "fd193ff5-64b3-4c1d-9247-decabf549249",
      "skipped": false
    },
    {
      "title": "should not register when state is not ready",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not register when state is not ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.false();",
      "isRoot": false,
      "uuid": "5b99a6b2-990a-4c96-b2c9-0d59edfcf959",
      "parentUUID": "fd193ff5-64b3-4c1d-9247-decabf549249",
      "skipped": false
    },
    {
      "title": "should not register when contestant does not exist",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not register when contestant does not exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(idUtility.generateParticipantId()).should.be.false();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
      "isRoot": false,
      "uuid": "98223ef6-a65a-48db-a977-53a47c7f2050",
      "parentUUID": "fd193ff5-64b3-4c1d-9247-decabf549249",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "31f2120a-ea14-4a0d-9a86-9294d634ccff",
      "parentUUID": "fd193ff5-64b3-4c1d-9247-decabf549249",
      "skipped": false
    },
    {
      "title": "should not add previous round winner to winners list",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not add previous round winner to winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "82e8fb29-efca-421d-93b5-04a4590c5176",
      "parentUUID": "fd193ff5-64b3-4c1d-9247-decabf549249",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->ACCEPT should allow when game state is pending",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();",
      "isRoot": false,
      "uuid": "55968c0c-1326-4a34-95e3-0cbfba3e77ea",
      "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not pending",
      "fullTitle": "action->ACCEPT should not allow when game state is not pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.false();",
      "isRoot": false,
      "uuid": "400793ad-a837-43a1-b2e4-2f5918409b46",
      "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
      "skipped": false
    },
    {
      "title": "should update contestant's score",
      "fullTitle": "action->ACCEPT should update contestant's score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "40b2be48-27aa-4d34-9ed6-311511f3cc12",
      "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
      "skipped": false
    },
    {
      "title": "should update contestant's team score",
      "fullTitle": "action->ACCEPT should update contestant's team score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>s.teams.all[<span class=\"hljs-number\">0</span>].score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "d742fae8-d65c-4a06-af20-f4fdc4f64285",
      "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->ACCEPT should add previous round winner to winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "a70b8994-6da2-4f5a-a2e0-05de0a61c904",
      "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->ACCEPT should change game state back to ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "4e43849c-8c44-44c5-a65f-d3a70ebb4b8f",
      "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
      "skipped": false
    },
    {
      "title": "should clear pending winner",
      "fullTitle": "action->ACCEPT should clear pending winner",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>should(s.pendingWinner).be.null();",
      "isRoot": false,
      "uuid": "54be5a17-0669-4c21-a6c4-762e888cc018",
      "parentUUID": "97fdda70-d6f7-46c5-a119-5183aa66be06",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->REJECT should allow when game state is pending",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();",
      "isRoot": false,
      "uuid": "ceafc525-6ce0-4bb2-a648-aa831d13e51c",
      "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not pending",
      "fullTitle": "action->REJECT should not allow when game state is not pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.false();",
      "isRoot": false,
      "uuid": "129d7596-5b27-4037-b276-8b0cc41eb132",
      "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
      "skipped": false
    },
    {
      "title": "should not replace round winner with pending contestant",
      "fullTitle": "action->REJECT should not replace round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "45130167-61e9-410e-abae-2eef150aa4a1",
      "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
      "skipped": false
    },
    {
      "title": "should not update pending contestant's score",
      "fullTitle": "action->REJECT should not update pending contestant's score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.score.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "577cbac1-29e0-4183-b66e-42fc84bf12b6",
      "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
      "skipped": false
    },
    {
      "title": "should add round winner to previous winners list",
      "fullTitle": "action->REJECT should add round winner to previous winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "3c8e1bfe-1053-495b-a0ff-a2ff1567ff71",
      "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->REJECT should change game state back to ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "5ac4b9ef-f24e-4ad8-8bb0-3117691e2842",
      "parentUUID": "a7bd9b42-53f9-45b6-bd60-ee2af97971d9",
      "skipped": false
    },
    {
      "title": "should allow when game state is ready",
      "fullTitle": "action->RESET should allow when game state is ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
      "isRoot": false,
      "uuid": "7dfe9c59-c61a-496a-b830-67d76f1f3e29",
      "parentUUID": "ec6fea85-5456-4624-926c-86ab7b040c04",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->RESET should allow when game state is pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
      "isRoot": false,
      "uuid": "8a9886c1-4258-4d38-aaa2-0f1d71d42ca6",
      "parentUUID": "ec6fea85-5456-4624-926c-86ab7b040c04",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "action->RESET should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "de8a584c-6a52-408b-a0d3-bd5dba8e7838",
      "parentUUID": "ec6fea85-5456-4624-926c-86ab7b040c04",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->RESET should add previous round winner to winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "861d5c60-a479-4322-b047-097a820fa82d",
      "parentUUID": "ec6fea85-5456-4624-926c-86ab7b040c04",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->RESET should change game state back to ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "d7f2221d-9617-428d-8ad7-c6de1832b70a",
      "parentUUID": "ec6fea85-5456-4624-926c-86ab7b040c04",
      "skipped": false
    },
    {
      "title": "should allow when game state is ready",
      "fullTitle": "action->DISABLE should allow when game state is ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
      "isRoot": false,
      "uuid": "8a6a5287-bb37-4331-be98-352f4a7c17d9",
      "parentUUID": "2b6b1632-48bc-4560-a376-474493d0dee7",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->DISABLE should allow when game state is pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
      "isRoot": false,
      "uuid": "18622ca4-8868-497e-be32-50073f47838c",
      "parentUUID": "2b6b1632-48bc-4560-a376-474493d0dee7",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "action->DISABLE should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "547828f9-b2f4-4d8f-8ccb-a3b9ba664db5",
      "parentUUID": "2b6b1632-48bc-4560-a376-474493d0dee7",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->DISABLE should add previous round winner to winners list",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "049d1d2d-d46c-4e7b-938e-c0b3df758d6f",
      "parentUUID": "2b6b1632-48bc-4560-a376-474493d0dee7",
      "skipped": false
    },
    {
      "title": "should change game state to buzzerLock",
      "fullTitle": "action->DISABLE should change game state to buzzerLock",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.BUZZER_LOCK);",
      "isRoot": false,
      "uuid": "74575422-e1d4-4fa9-9a09-878006acc8c8",
      "parentUUID": "2b6b1632-48bc-4560-a376-474493d0dee7",
      "skipped": false
    },
    {
      "title": "should allow when game state is buzzerLock",
      "fullTitle": "action->ENABLE should allow when game state is buzzerLock",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();",
      "isRoot": false,
      "uuid": "6a4feafa-a4bd-46ff-bea9-2030434838d9",
      "parentUUID": "e8e1e7bd-6809-4d22-bdb2-b4dcbe77bca6",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not buzzerLock",
      "fullTitle": "action->ENABLE should not allow when game state is not buzzerLock",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.false();",
      "isRoot": false,
      "uuid": "0fa4f37a-0aa5-4696-96b5-2e54eb2d0b56",
      "parentUUID": "e8e1e7bd-6809-4d22-bdb2-b4dcbe77bca6",
      "skipped": false
    },
    {
      "title": "should change game state to ready",
      "fullTitle": "action->ENABLE should change game state to ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "9520aa4b-d391-46c1-a8b9-c48ee4538147",
      "parentUUID": "e8e1e7bd-6809-4d22-bdb2-b4dcbe77bca6",
      "skipped": false
    },
    {
      "title": "should return the pending winner",
      "fullTitle": "#pendingWinner should return the pending winner",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.pendingWinner.should.equal(<span class=\"hljs-string\">'testUser'</span>);",
      "isRoot": false,
      "uuid": "e6f65ccd-18c8-4a66-b4c7-fe8de3a0cfa0",
      "parentUUID": "7568deaf-8601-4c12-a316-cfa6b7f593e5",
      "skipped": false
    },
    {
      "title": "should not return the pending winner",
      "fullTitle": "#pendingWinner should not return the pending winner",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>should(s.pendingWinner).be.null();",
      "isRoot": false,
      "uuid": "414928e4-0f9d-445a-a75e-3398bdccbbec",
      "parentUUID": "7568deaf-8601-4c12-a316-cfa6b7f593e5",
      "skipped": false
    },
    {
      "title": "should update session name",
      "fullTitle": "#updateSessionName(name) should update session name",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.updateSessionName(<span class=\"hljs-string\">'session2'</span>);<br>settings.sessionName.should.equal(<span class=\"hljs-string\">'session2'</span>);",
      "isRoot": false,
      "uuid": "2644f80f-a0b2-4c08-b33c-ad72b5218579",
      "parentUUID": "f197c682-d1fa-4eeb-843e-df28e025f318",
      "skipped": false
    },
    {
      "title": "should update max contestants",
      "fullTitle": "#updateMaxContestants(maxContestants) should update max contestants",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "b04c0422-9c9a-4d87-93f8-ad0b14ca928e",
      "parentUUID": "1c4aa9ca-e52a-4a18-9b5c-12abe01edebf",
      "skipped": false
    },
    {
      "title": "should not allow below current connected amount",
      "fullTitle": "#updateMaxContestants(maxContestants) should not allow below current connected amount",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>s.addContestant(c1).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>s.addContestant(c2).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">1</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_CONTESTANTS_MUST_BE_GREATER_THAN_ALREADY_CONNECTED);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "1aa8cfa5-a23e-4475-9d74-73df56f0112d",
      "parentUUID": "1c4aa9ca-e52a-4a18-9b5c-12abe01edebf",
      "skipped": false
    },
    {
      "title": "should update team size",
      "fullTitle": "#updateTeamSize(teamSize) should update team size",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.teamSize.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "d7281ef0-3bbc-45d7-a10b-da858e60a1bc",
      "parentUUID": "7061222a-87a1-480f-849e-758c402bc275",
      "skipped": false
    },
    {
      "title": "should not allow below current setting",
      "fullTitle": "#updateTeamSize(teamSize) should not allow below current setting",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.TEAM_SIZE_MUST_BE_GREATER_THAN_ALREADY_SET);",
      "isRoot": false,
      "uuid": "f2d64283-fea8-49f7-ac60-2d6ee9ab367b",
      "parentUUID": "7061222a-87a1-480f-849e-758c402bc275",
      "skipped": false
    },
    {
      "title": "should update max teams",
      "fullTitle": "#updateMaxTeams(maxTeams) should update max teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxTeams.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "64e4e9eb-f40f-4e79-8225-cc259dbf6c0c",
      "parentUUID": "fac8cb05-7e0e-4438-93db-a6a0ee59c703",
      "skipped": false
    },
    {
      "title": "should add teams",
      "fullTitle": "#updateMaxTeams(maxTeams) should add teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">5</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "64121f66-6bac-4104-b2ec-7dc4d6b67fdc",
      "parentUUID": "fac8cb05-7e0e-4438-93db-a6a0ee59c703",
      "skipped": false
    },
    {
      "title": "should not allow below current setting",
      "fullTitle": "#updateMaxTeams(maxTeams) should not allow below current setting",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_MUST_BE_GREATER_THAN_ALREADY_SET);",
      "isRoot": false,
      "uuid": "950219de-59a2-488e-8398-0d95be38c833",
      "parentUUID": "fac8cb05-7e0e-4438-93db-a6a0ee59c703",
      "skipped": false
    },
    {
      "title": "should not allow if teams are PLAYER_CHOICE",
      "fullTitle": "#updateMaxTeams(maxTeams) should not allow if teams are PLAYER_CHOICE",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">6</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_CANNOT_BE_CHANGED_WHEN_PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "c9f839f6-6b93-4a38-97dd-2ae377b1f84c",
      "parentUUID": "fac8cb05-7e0e-4438-93db-a6a0ee59c703",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hasTeams should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s._hasTeams.should.be.true();",
      "isRoot": false,
      "uuid": "d97322ef-5de4-4429-8edf-c061fd1ed5f6",
      "parentUUID": "54770865-7089-4516-b325-26cd60cfb940",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hasTeams should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.hasTeams.should.be.true();",
      "isRoot": false,
      "uuid": "c97f3423-1ae3-43cd-8176-b9bc6bccc1d7",
      "parentUUID": "54770865-7089-4516-b325-26cd60cfb940",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamSize should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s._teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "94c5b8d9-b239-45e8-bfe4-293db02c0419",
      "parentUUID": "d668a542-f7f6-4193-baf3-7128f3ca94a3",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamSize should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamSize = <span class=\"hljs-number\">1</span>;<br>s.teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "564a8567-9681-4f4c-bd7d-b2937cf90751",
      "parentUUID": "d668a542-f7f6-4193-baf3-7128f3ca94a3",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxTeams should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s._maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "419bcb44-0740-4207-bc56-4fbfdb37dce8",
      "parentUUID": "c9e80cae-172f-488b-8f05-b3d9e9397429",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxTeams should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-number\">1</span>;<br>s.maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "5c1440dc-9ad8-463b-b4d0-4408d35668e2",
      "parentUUID": "c9e80cae-172f-488b-8f05-b3d9e9397429",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeaderSelectionMethod should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s._teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "161b82f9-2a8e-40c6-8317-d08f3b8e00a2",
      "parentUUID": "154b0918-93a9-40fc-a2a4-608c14038879",
      "skipped": false
    },
    {
      "title": "should throw on set when constant value is invalid",
      "fullTitle": "#teamLeaderSelectionMethod should throw on set when constant value is invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamLeaderSelectionMethod.all.slice().sort(<br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, b</span>) </span>{<br>            <span class=\"hljs-keyword\">return</span> a - b;<br>        }).pop();<br>    s.teamLeaderSelectionMethod = ++high;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "fbfb6d7e-2e05-4a22-a8b6-778cbe79cf99",
      "parentUUID": "154b0918-93a9-40fc-a2a4-608c14038879",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeaderSelectionMethod should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s.teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "1930cbae-449e-4aa6-9117-83471347da17",
      "parentUUID": "154b0918-93a9-40fc-a2a4-608c14038879",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameEdit should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br>s._teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
      "isRoot": false,
      "uuid": "e2ba56bb-d0ad-4011-8e97-a4ba984be688",
      "parentUUID": "308abbd4-cc58-43c6-aac2-77161aaadc1f",
      "skipped": false
    },
    {
      "title": "should throw on set when constant value is invalid",
      "fullTitle": "#teamNameEdit should throw on set when constant value is invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamNameEdit.all.slice().sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a,<br>        b</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> a - b;<br>    }).pop();<br>    s.teamNameEdit = ++high;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "8dc95604-bccf-4d5c-aeb7-fb92ce46f490",
      "parentUUID": "308abbd4-cc58-43c6-aac2-77161aaadc1f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameEdit should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNameEdit = constants.teamNameEdit.ALLOW;<br>s.teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
      "isRoot": false,
      "uuid": "17921480-8f9a-4b68-a58c-ac73a2ad96e6",
      "parentUUID": "308abbd4-cc58-43c6-aac2-77161aaadc1f",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxContestants should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxContestants = <span class=\"hljs-number\">1</span>;<br>s._maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "ac438283-074d-46f9-9622-4ab3423f3a3b",
      "parentUUID": "2a4c8e43-41c1-452c-a285-d2a7beace4cb",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxContestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxContestants = <span class=\"hljs-number\">1</span>;<br>s.maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "73b31262-e8c6-4790-875c-ea264dd2c428",
      "parentUUID": "2a4c8e43-41c1-452c-a285-d2a7beace4cb",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s._sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
      "isRoot": false,
      "uuid": "4308b5df-9357-45e7-9c5a-0d5c8f59a76f",
      "parentUUID": "8feb85b0-7569-4123-bd45-d82073ebc9da",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s.sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
      "isRoot": false,
      "uuid": "cc80bce9-16bc-440e-af3d-ab1e15ed38fa",
      "parentUUID": "8feb85b0-7569-4123-bd45-d82073ebc9da",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNames should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s._teamNames.should.be.Array();<br>s._teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s._teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
      "isRoot": false,
      "uuid": "0da408d6-6e26-4078-b78c-cddb825896cc",
      "parentUUID": "a5ac4be8-2d77-448d-beea-1ac8111c0330",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNames should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s.teamNames.should.be.Array();<br>s.teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
      "isRoot": false,
      "uuid": "6d50ff25-0446-4065-b8d0-e77c6dad7707",
      "parentUUID": "a5ac4be8-2d77-448d-beea-1ac8111c0330",
      "skipped": false
    },
    {
      "title": "should throw when settings.maxTeams is less than 1",
      "fullTitle": "#create(teams, settings) should throw when settings.maxTeams is less than 1",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    teamFactory.create(tc, s);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "030981df-34d2-4034-9a2d-8759695696eb",
      "parentUUID": "3042e722-b117-4091-9315-5f437fffc83b",
      "skipped": false
    },
    {
      "title": "should create the correct amount of teams",
      "fullTitle": "#create(teams, settings) should create the correct amount of teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "e79cbcd1-52fa-4599-a093-ea29cc1169da",
      "parentUUID": "3042e722-b117-4091-9315-5f437fffc83b",
      "skipped": false
    },
    {
      "title": "should not fail with a large team size",
      "fullTitle": "#create(teams, settings) should not fail with a large team size",
      "timedOut": false,
      "duration": 40,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">500</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">500</span>);<br><span class=\"hljs-comment\">// ensure team names are unique</span><br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> i = names.indexOf(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> n === t.teamName;<br>    });<br>    i.should.equal(-<span class=\"hljs-number\">1</span>);<br>    names.push(t.teamName);<br>});",
      "isRoot": false,
      "uuid": "a26fbd25-4c7c-4c4d-a44d-74b31c28912e",
      "parentUUID": "3042e722-b117-4091-9315-5f437fffc83b",
      "skipped": false
    },
    {
      "title": "should use settings.teamNames first, before random selection",
      "fullTitle": "#create(teams, settings) should use settings.teamNames first, before random selection",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">10</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>, <span class=\"hljs-string\">'t3'</span>, <span class=\"hljs-string\">'t4'</span>, <span class=\"hljs-string\">'t5'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);<br>tc.all[<span class=\"hljs-number\">2</span>].teamName.should.equal(<span class=\"hljs-string\">'t3'</span>);<br>tc.all[<span class=\"hljs-number\">3</span>].teamName.should.equal(<span class=\"hljs-string\">'t4'</span>);<br>tc.all[<span class=\"hljs-number\">4</span>].teamName.should.equal(<span class=\"hljs-string\">'t5'</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">5</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">6</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">7</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">8</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">9</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "86cc28e6-352f-4a8c-a3c6-bb9843991d10",
      "parentUUID": "3042e722-b117-4091-9315-5f437fffc83b",
      "skipped": false
    },
    {
      "title": "should only create a single team when using unlimited teams",
      "fullTitle": "#create(teams, settings) should only create a single team when using unlimited teams",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "a9b085ac-03ef-45e9-9a04-1791fd66dfd6",
      "parentUUID": "3042e722-b117-4091-9315-5f437fffc83b",
      "skipped": false
    },
    {
      "title": "should add a team",
      "fullTitle": "#add(teams, settings) should add a team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>teamFactory.add(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "c0fa3a1b-484e-42fd-a880-ece284d4236e",
      "parentUUID": "d54db1d8-e116-4d9c-8a61-03dcf70866a4",
      "skipped": false
    },
    {
      "title": "should reuse team names specified in settings",
      "fullTitle": "#add(teams, settings) should reuse team names specified in settings",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>teamFactory.add(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);",
      "isRoot": false,
      "uuid": "1932bba3-702b-444d-8b0d-ae6039972436",
      "parentUUID": "d54db1d8-e116-4d9c-8a61-03dcf70866a4",
      "skipped": false
    },
    {
      "title": "should factor in team names which are already in use",
      "fullTitle": "#add(teams, settings) should factor in team names which are already in use",
      "timedOut": false,
      "duration": 256,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    teamFactory.add(tc, s);<br>}<br>tc.all.length.should.equal(<span class=\"hljs-number\">1001</span>);<br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    names.push(t.teamName);<br>});<br><span class=\"hljs-keyword\">var</span> uniqueNames = unique(names);<br>names.length.should.equal(uniqueNames.length);",
      "isRoot": false,
      "uuid": "7987cb93-8066-47b4-a1c2-8caa45d24e34",
      "parentUUID": "d54db1d8-e116-4d9c-8a61-03dcf70866a4",
      "skipped": false
    },
    {
      "title": "should return true when team with teamName does exist",
      "fullTitle": "#contains(teamName) should return true when team with teamName does exist",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(t.teamName).should.be.true();",
      "isRoot": false,
      "uuid": "557bd96b-5706-41d2-bdab-d150f652048f",
      "parentUUID": "7329908d-e9af-4dbe-a964-42d94f9e693d",
      "skipped": false
    },
    {
      "title": "should return false when no team with teamName does exist",
      "fullTitle": "#contains(teamName) should return false when no team with teamName does exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(<span class=\"hljs-string\">'other team name'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "60662ae9-c56f-4c76-8479-ab3aed9d847e",
      "parentUUID": "7329908d-e9af-4dbe-a964-42d94f9e693d",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "84b64942-6ba3-4b5e-996b-7ef1ace092df",
      "parentUUID": "c01491ab-810c-41ac-ad20-2f235d8d4f77",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "1c9c930f-88b1-41d9-a37b-553529bd4881",
      "parentUUID": "c01491ab-810c-41ac-ad20-2f235d8d4f77",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all.pop();<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "b5a02a2b-4239-4032-82c8-1dd9235b35de",
      "parentUUID": "c01491ab-810c-41ac-ad20-2f235d8d4f77",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#length should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.length = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "6f63677a-9dea-460d-bc92-18fb6091741a",
      "parentUUID": "b5d3758b-e381-4377-b8a3-d29d4e9cb523",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#length should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "3e59a095-4c67-4fd4-962a-e0ce348e21f6",
      "parentUUID": "b5d3758b-e381-4377-b8a3-d29d4e9cb523",
      "skipped": false
    },
    {
      "title": "should add the given team",
      "fullTitle": "#add(team) should add the given team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "5837e5f1-9f6c-420e-a8f5-7f7d18882265",
      "parentUUID": "a7583f3e-333b-4d0d-8ced-adfeacb5e7c1",
      "skipped": false
    },
    {
      "title": "should error if team with teamName already exists",
      "fullTitle": "#add(team) should error if team with teamName already exists",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.add(t);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "4ffdc680-cc1f-4675-b3bd-6c8103aba546",
      "parentUUID": "a7583f3e-333b-4d0d-8ced-adfeacb5e7c1",
      "skipped": false
    },
    {
      "title": "should remove the existing team",
      "fullTitle": "#remove(team) should remove the existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "764aa45e-d2b8-44bd-adff-1e3a03fa718b",
      "parentUUID": "27b32a0f-1860-4e3a-93e8-adfa71fc8eba",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing team",
      "fullTitle": "#remove(team) should not remove the non-existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t1).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "c96deb5f-ba38-45cc-9f83-98759afc03e8",
      "parentUUID": "27b32a0f-1860-4e3a-93e8-adfa71fc8eba",
      "skipped": false
    },
    {
      "title": "should remove the existing team",
      "fullTitle": "#removeByTeamName(team) should remove the existing team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t.teamName).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "f3e210c7-8d00-463c-9ea2-b6c9808bc46b",
      "parentUUID": "b8bba0d1-f0e6-4964-9fdb-448207d5b2dd",
      "skipped": false
    },
    {
      "title": "should ignore team name case",
      "fullTitle": "#removeByTeamName(team) should ignore team name case",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'abc1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(<span class=\"hljs-string\">'ABC1'</span>).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "2afca17f-5a7f-4fd1-b918-3dcd1fb4a37e",
      "parentUUID": "b8bba0d1-f0e6-4964-9fdb-448207d5b2dd",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing team",
      "fullTitle": "#removeByTeamName(team) should not remove the non-existing team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t1.teamName).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "5f8ec7d8-5e3b-42fc-b2c7-1a3f49cf025b",
      "parentUUID": "b8bba0d1-f0e6-4964-9fdb-448207d5b2dd",
      "skipped": false
    },
    {
      "title": "should give contestant an id",
      "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) should give contestant an id",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Username'</span>;<br>should(c.id).be.null();<br>tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>should(c.id).not.be.null();",
      "isRoot": false,
      "uuid": "7767344e-037e-4cb8-ba93-ed4e3b83c8ad",
      "parentUUID": "b0c81a21-267a-4727-a74a-0075fe3d27db",
      "skipped": false
    },
    {
      "title": "should return a valid response",
      "fullTitle": "when teams are full should return a valid response",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);",
      "isRoot": false,
      "uuid": "89d8e427-d727-4f7e-8567-588462f5b55c",
      "parentUUID": "357709cd-2e54-40e2-a757-27863598fa27",
      "skipped": false
    },
    {
      "title": "should inquire for team leader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should inquire for team leader",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> inquired = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    inquired = <span class=\"hljs-literal\">true</span>;<br>});<br>r.should.be.true();<br>inquired.should.be.true();",
      "isRoot": false,
      "uuid": "dc71f303-9295-43e3-a618-a3c4fa4efad5",
      "parentUUID": "5973e1c9-e8f8-4093-9004-2011d7dbc7e7",
      "skipped": false
    },
    {
      "title": "should not inquire for team leader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should not inquire for team leader",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>tc.all[<span class=\"hljs-number\">0</span>].teamLeader = c1;<br><span class=\"hljs-keyword\">var</span> didNotInquire = <span class=\"hljs-literal\">true</span>;<br>tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    didNotInquire = <span class=\"hljs-literal\">false</span>;<br>});<br>didNotInquire.should.be.true();<br>t.teamLeader.should.equal(c1);",
      "isRoot": false,
      "uuid": "26b7f2ae-7065-43e7-9c75-548135e35cdb",
      "parentUUID": "5973e1c9-e8f8-4093-9004-2011d7dbc7e7",
      "skipped": false
    },
    {
      "title": "should not add contestant as teamLeader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should not add contestant as teamLeader",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should(t.teamLeader).be.null();",
      "isRoot": false,
      "uuid": "dd8af1b9-bccf-4d26-9306-6b9958cab06d",
      "parentUUID": "5973e1c9-e8f8-4093-9004-2011d7dbc7e7",
      "skipped": false
    },
    {
      "title": "should not inquire for team leader",
      "fullTitle": "when teamLeader selection is RANDOM should not inquire for team leader",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> notInquired = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    notInquired = <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>r.should.be.true();<br>notInquired.should.be.true();",
      "isRoot": false,
      "uuid": "1f938a55-5922-48fe-9734-82c0e26ad63c",
      "parentUUID": "833e16db-cbcd-4173-9913-7331feec72aa",
      "skipped": false
    },
    {
      "title": "should automatically add team leader when team is filled",
      "fullTitle": "when teamLeader selection is RANDOM should automatically add team leader when team is filled",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).not.be.null();<br>});",
      "isRoot": false,
      "uuid": "852872a2-4024-4e1d-94e7-28fafbb34d7c",
      "parentUUID": "833e16db-cbcd-4173-9913-7331feec72aa",
      "skipped": false
    },
    {
      "title": "should not automatically add team leader when team is not filled",
      "fullTitle": "when teamLeader selection is RANDOM should not automatically add team leader when team is not filled",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).be.null();<br>});",
      "isRoot": false,
      "uuid": "82e7b54b-5953-4b9a-b9a2-a7e4bd6aa9a7",
      "parentUUID": "833e16db-cbcd-4173-9913-7331feec72aa",
      "skipped": false
    },
    {
      "title": "should add team when teams are full",
      "fullTitle": "when set to use unlimited teams should add team when teams are full",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "16ff6481-7d05-42b6-9603-066b8655eec9",
      "parentUUID": "ace03a87-29dc-49ed-9fa5-7dbe792948be",
      "skipped": false
    },
    {
      "title": "should throw when no team name is given",
      "fullTitle": "when team selection method is PLAYER_CHOICE should throw when no team name is given",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>}).should.throw();",
      "isRoot": false,
      "uuid": "4ac3e4dd-40f2-41a9-bc4a-86213900a918",
      "parentUUID": "8bd9d227-a04e-4ddd-8c7b-4649698c6010",
      "skipped": false
    },
    {
      "title": "should add contestant to correct team",
      "fullTitle": "when team selection method is PLAYER_CHOICE should add contestant to correct team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "f59f1644-fc46-400c-ad6c-3b01a90eae93",
      "parentUUID": "8bd9d227-a04e-4ddd-8c7b-4649698c6010",
      "skipped": false
    },
    {
      "title": "should not add to full team",
      "fullTitle": "when team selection method is PLAYER_CHOICE should not add to full team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "caa24134-a44d-402b-8bf1-95d71bd58be4",
      "parentUUID": "8bd9d227-a04e-4ddd-8c7b-4649698c6010",
      "skipped": false
    },
    {
      "title": "should get team of contestant",
      "fullTitle": "getByContestant(contestant) should get team of contestant",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">5</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>    r.should.be.true();<br>});<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">4</span>]);<br>t.should.not.be.null();<br>t.contestants.getById(cc[<span class=\"hljs-number\">4</span>].id).should.equal(cc[<span class=\"hljs-number\">4</span>]);",
      "isRoot": false,
      "uuid": "0ea045a9-ff74-4c3b-bf7c-8d9e50ce6afd",
      "parentUUID": "4f9c58c6-353b-4dbb-9264-06df3e198484",
      "skipped": false
    },
    {
      "title": "should not get team of contestant",
      "fullTitle": "getByContestant(contestant) should not get team of contestant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">1</span>);<br>cc[<span class=\"hljs-number\">0</span>].id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">0</span>]);<br>should(t).be.null();",
      "isRoot": false,
      "uuid": "b89f48fc-e4d2-4429-96f9-51432aa8ed06",
      "parentUUID": "4f9c58c6-353b-4dbb-9264-06df3e198484",
      "skipped": false
    },
    {
      "title": "should get team when team with name exists",
      "fullTitle": "getByTeamName(temName) should get team when team with name exists",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t1 = tc.all[<span class=\"hljs-number\">0</span>];<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(t1.teamName);<br>t.should.equal(t1);",
      "isRoot": false,
      "uuid": "f61e2142-7bcf-4a63-ba14-d743b310d16b",
      "parentUUID": "ca9d057f-6da6-42a9-968a-d512a0f5c9c4",
      "skipped": false
    },
    {
      "title": "should not get team when team with name does not exist",
      "fullTitle": "getByTeamName(temName) should not get team when team with name does not exist",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(<span class=\"hljs-string\">'Not a team name that exists'</span>);<br>should(t).be.null();",
      "isRoot": false,
      "uuid": "995c0ee1-f0f1-4762-a2da-90e097da3926",
      "parentUUID": "ca9d057f-6da6-42a9-968a-d512a0f5c9c4",
      "skipped": false
    },
    {
      "title": "should not return full teams",
      "fullTitle": "getAvailable(settings) should not return full teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">2</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "762b8bb0-777b-4ece-acae-d696e4f66e8f",
      "parentUUID": "48b6bfbb-f219-469f-a032-a921aeefc1e9",
      "skipped": false
    },
    {
      "title": "should return teams with space",
      "fullTitle": "getAvailable(settings) should return teams with space",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "08f99d20-455e-4f69-9e46-11e50620280a",
      "parentUUID": "48b6bfbb-f219-469f-a032-a921aeefc1e9",
      "skipped": false
    },
    {
      "title": "should return teams with unlimited space",
      "fullTitle": "getAvailable(settings) should return teams with unlimited space",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = constants.UNLIMITED;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "0676289d-2888-4ad3-84f6-67b61ba450a9",
      "parentUUID": "48b6bfbb-f219-469f-a032-a921aeefc1e9",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t._teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
      "isRoot": false,
      "uuid": "5cc03388-79f5-4580-b739-e74e54a4ef99",
      "parentUUID": "81973d85-baaa-479d-aa48-9b09de6a6480",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t._teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t.teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
      "isRoot": false,
      "uuid": "e643fd4f-2c4a-45ab-acf5-5c3031852d55",
      "parentUUID": "81973d85-baaa-479d-aa48-9b09de6a6480",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeader should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t.teamLeader = c;<br>t._teamLeader.should.equal(c);",
      "isRoot": false,
      "uuid": "ef5536f0-352c-47ed-adfa-58f79580877e",
      "parentUUID": "bba4cacc-ff4d-44b2-84b3-5bd9ac10e85c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeader should get value",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t._teamLeader = c;<br>t.teamLeader.should.equal(c);",
      "isRoot": false,
      "uuid": "f576d4cb-8aad-4b93-89b5-e20dd474c211",
      "parentUUID": "bba4cacc-ff4d-44b2-84b3-5bd9ac10e85c",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#score should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "8fe7160b-b840-4143-ae91-4bae59b878b3",
      "parentUUID": "d2e729bc-652a-4779-93f4-b0dc4c34eee9",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#score should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br>p._score = <span class=\"hljs-number\">5</span>;<br>p.score.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "6532afa7-5718-437f-ae92-007d7b580f9f",
      "parentUUID": "d2e729bc-652a-4779-93f4-b0dc4c34eee9",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#contestants should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "15ac6a6e-39a5-4480-8245-e6e5d65c16c1",
      "parentUUID": "be622b90-7752-4ebc-8d1b-35a108ed98ac",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = p.contestants;<br>c.should.be.instanceOf(Participants);",
      "isRoot": false,
      "uuid": "5e3d1607-f38a-45f9-b843-5ed429634ca3",
      "parentUUID": "be622b90-7752-4ebc-8d1b-35a108ed98ac",
      "skipped": false
    },
    {
      "title": "should update the teams score",
      "fullTitle": "when a contestant scores should update the teams score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br>c1.incrementScore();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.incrementScore();<br>c2.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "0809ab78-f331-4e2a-a74e-3ca5248b297a",
      "parentUUID": "9aa041d8-a689-4797-b52a-1eb88ee0e6af",
      "skipped": false
    },
    {
      "title": "should allow it when no team leader is set",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should allow it when no team leader is set",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.id = <span class=\"hljs-string\">'c1'</span>;<br>t.contestants.add(c);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);",
      "isRoot": false,
      "uuid": "9fc1a38b-ddfd-466b-8893-5a808573600a",
      "parentUUID": "fd54c112-7b40-41fd-9506-67e56422ce31",
      "skipped": false
    },
    {
      "title": "should not allow it when a team leader is set",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should not allow it when a team leader is set",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_FULFILLED);",
      "isRoot": false,
      "uuid": "9f1522f3-5324-4a80-aad6-97b2af48c525",
      "parentUUID": "fd54c112-7b40-41fd-9506-67e56422ce31",
      "skipped": false
    },
    {
      "title": "should not allow it when a contestant is not in team",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should not allow it when a contestant is not in team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_NOT_CONTESTANT);",
      "isRoot": false,
      "uuid": "f8f4473e-8fd5-4c43-88e9-11ffa8b43686",
      "parentUUID": "fd54c112-7b40-41fd-9506-67e56422ce31",
      "skipped": false
    },
    {
      "title": "should allow it when a team leader is set and host override is flagged",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should allow it when a team leader is set and host override is flagged",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">true</span>);<br>r.should.be.true();<br>should.not.exist(m);",
      "isRoot": false,
      "uuid": "d49eb8f5-1412-4b3b-9902-a16c79a9361f",
      "parentUUID": "fd54c112-7b40-41fd-9506-67e56422ce31",
      "skipped": false
    },
    {
      "title": "should change name when request is valid",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should change name when request is valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "73b6251f-9358-4e9a-a419-8fd8430389ed",
      "parentUUID": "76b6b25d-4e8f-4ca5-814a-682e12ef8920",
      "skipped": false
    },
    {
      "title": "should not change name when setting do not allow it",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should not change name when setting do not allow it",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_SETTINGS_NOT_ALLOW);<br>r.should.be.false();",
      "isRoot": false,
      "uuid": "9c847cd4-fd9c-4868-9746-0f9a104e16b5",
      "parentUUID": "76b6b25d-4e8f-4ca5-814a-682e12ef8920",
      "skipped": false
    },
    {
      "title": "should not change name when name contains profanity",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should not change name when name contains profanity",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_CONTAINS_PROFANITY);<br>r.should.be.false();",
      "isRoot": false,
      "uuid": "6fe99f68-3c02-4a21-8b3c-eb230f01cb72",
      "parentUUID": "76b6b25d-4e8f-4ca5-814a-682e12ef8920",
      "skipped": false
    },
    {
      "title": "should change name when request is valid",
      "fullTitle": "when host override should change name when request is valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "7d9fac6f-e7c2-4251-9505-32d4469cc207",
      "parentUUID": "2fbc0a21-444d-4bdc-9965-e8874fb91e9c",
      "skipped": false
    },
    {
      "title": "should change name when setting do not allow it",
      "fullTitle": "when host override should change name when setting do not allow it",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "067823c2-ed30-48ed-b248-7380cd327a0e",
      "parentUUID": "2fbc0a21-444d-4bdc-9965-e8874fb91e9c",
      "skipped": false
    },
    {
      "title": "should change name when name contains profanity",
      "fullTitle": "when host override should change name when name contains profanity",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "64d66336-f5ec-46a6-b8a7-6e8e96d3893f",
      "parentUUID": "2fbc0a21-444d-4bdc-9965-e8874fb91e9c",
      "skipped": false
    },
    {
      "title": "should get contestant when contest with username exists",
      "fullTitle": "getContestantByUsername(username) should get contestant when contest with username exists",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(c1.username);<br>c.should.equal(c1);<br>c = t.getContestantByUsername(<span class=\"hljs-string\">'c1abc'</span>);<br>c.should.equal(c1);",
      "isRoot": false,
      "uuid": "e6a43cb8-9125-4ea0-bc5e-fbf301ec2cad",
      "parentUUID": "f077b841-62e9-46a8-8701-d11a119e31ea",
      "skipped": false
    },
    {
      "title": "should not get contestant when contest with username does not exist",
      "fullTitle": "getContestantByUsername(username) should not get contestant when contest with username does not exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(<span class=\"hljs-string\">'John Doe'</span>);<br>should(c).be.null();",
      "isRoot": false,
      "uuid": "5308c248-54e6-47f2-a15f-b28c9306dd35",
      "parentUUID": "f077b841-62e9-46a8-8701-d11a119e31ea",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}