{
  "reportTitle": "buzzer.click",
  "stats": {
    "suites": 187,
    "tests": 340,
    "passes": 340,
    "pending": 0,
    "failures": 0,
    "start": "2016-09-30T02:50:56.333Z",
    "end": "2016-09-30T02:50:57.475Z",
    "duration": 1142,
    "testsRegistered": 340,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "AddContestantResponse",
        "suites": [
          {
            "title": "#wasSuccessful",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "AddContestantResponse #wasSuccessful should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.wasSuccessful = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "8ba66b0d-2d60-486d-9cf5-a49bb68fb3fd",
                "parentUUID": "5227c711-e306-4edb-9386-8dd9f4127736",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #wasSuccessful should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>r.wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "a857f2a4-38ad-4f39-a7b5-a80be77a0ddb",
                "parentUUID": "5227c711-e306-4edb-9386-8dd9f4127736",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/AddContestantResponseTests.js",
            "uuid": "5227c711-e306-4edb-9386-8dd9f4127736",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/AddContestantResponseTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "AddContestantResponse #wasSuccessful should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.wasSuccessful = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "8ba66b0d-2d60-486d-9cf5-a49bb68fb3fd",
                "parentUUID": "5227c711-e306-4edb-9386-8dd9f4127736",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #wasSuccessful should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>r.wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "a857f2a4-38ad-4f39-a7b5-a80be77a0ddb",
                "parentUUID": "5227c711-e306-4edb-9386-8dd9f4127736",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#enquireForTeamLeaderPosition",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "AddContestantResponse #enquireForTeamLeaderPosition should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r._enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "3e870639-8387-4ba3-a65c-df8b8dde660e",
                "parentUUID": "108eb173-3142-45c0-a8fb-19cf772144d6",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #enquireForTeamLeaderPosition should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r.enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "44832119-e427-44a1-8764-d6e7f994e929",
                "parentUUID": "108eb173-3142-45c0-a8fb-19cf772144d6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/AddContestantResponseTests.js",
            "uuid": "108eb173-3142-45c0-a8fb-19cf772144d6",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/AddContestantResponseTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "AddContestantResponse #enquireForTeamLeaderPosition should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r._enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "3e870639-8387-4ba3-a65c-df8b8dde660e",
                "parentUUID": "108eb173-3142-45c0-a8fb-19cf772144d6",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #enquireForTeamLeaderPosition should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r.enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "44832119-e427-44a1-8764-d6e7f994e929",
                "parentUUID": "108eb173-3142-45c0-a8fb-19cf772144d6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#errorMessage",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "AddContestantResponse #errorMessage should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.errorMessage = <span class=\"hljs-string\">'test'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "6df6fba0-1967-490d-8413-bd0d3494bc85",
                "parentUUID": "e9439b64-8015-4bc3-9d98-167fe65b30f0",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #errorMessage should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._errorMessage = <span class=\"hljs-string\">'errorMessage_test'</span>;<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'errorMessage_test'</span>);",
                "isRoot": false,
                "uuid": "2839ef76-7bbe-4a00-b6fa-37d3dc0d622b",
                "parentUUID": "e9439b64-8015-4bc3-9d98-167fe65b30f0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/AddContestantResponseTests.js",
            "uuid": "e9439b64-8015-4bc3-9d98-167fe65b30f0",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/AddContestantResponseTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "AddContestantResponse #errorMessage should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.errorMessage = <span class=\"hljs-string\">'test'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "6df6fba0-1967-490d-8413-bd0d3494bc85",
                "parentUUID": "e9439b64-8015-4bc3-9d98-167fe65b30f0",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #errorMessage should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._errorMessage = <span class=\"hljs-string\">'errorMessage_test'</span>;<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'errorMessage_test'</span>);",
                "isRoot": false,
                "uuid": "2839ef76-7bbe-4a00-b6fa-37d3dc0d622b",
                "parentUUID": "e9439b64-8015-4bc3-9d98-167fe65b30f0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#setNotSuccessful(errorMessage)",
            "suites": [],
            "tests": [
              {
                "title": "should change the state to not successful",
                "fullTitle": "AddContestantResponse #setNotSuccessful(errorMessage) should change the state to not successful",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.setNotSuccessful(<span class=\"hljs-string\">'Test error message'</span>);<br>r.wasSuccessful.should.be.false();<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'Test error message'</span>);",
                "isRoot": false,
                "uuid": "d48c4172-01c0-4c1d-a228-c5b6637f9da3",
                "parentUUID": "a61b6395-b221-4d7b-af58-773f1128ea7b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/AddContestantResponseTests.js",
            "uuid": "a61b6395-b221-4d7b-af58-773f1128ea7b",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/AddContestantResponseTests.js",
            "passes": [
              {
                "title": "should change the state to not successful",
                "fullTitle": "AddContestantResponse #setNotSuccessful(errorMessage) should change the state to not successful",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.setNotSuccessful(<span class=\"hljs-string\">'Test error message'</span>);<br>r.wasSuccessful.should.be.false();<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'Test error message'</span>);",
                "isRoot": false,
                "uuid": "d48c4172-01c0-4c1d-a228-c5b6637f9da3",
                "parentUUID": "a61b6395-b221-4d7b-af58-773f1128ea7b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/AddContestantResponseTests.js",
        "uuid": "108862c9-bce8-4851-ac7b-db723c02ce45",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/AddContestantResponseTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Contestant",
        "suites": [
          {
            "title": "#username",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Contestant #username should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'username_test'</span>;<br>c._username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
                "isRoot": false,
                "uuid": "a4c247a0-06a9-4fcd-a19a-4b4496102c60",
                "parentUUID": "6ccc681d-c58e-4b9e-9a28-9dcb2a266574",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Contestant #username should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._username = <span class=\"hljs-string\">'username_test'</span>;<br>c.username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
                "isRoot": false,
                "uuid": "4235d51f-ed47-4bcd-94a8-9d258b538ffd",
                "parentUUID": "6ccc681d-c58e-4b9e-9a28-9dcb2a266574",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ContestantTests.js",
            "uuid": "6ccc681d-c58e-4b9e-9a28-9dcb2a266574",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ContestantTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Contestant #username should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'username_test'</span>;<br>c._username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
                "isRoot": false,
                "uuid": "a4c247a0-06a9-4fcd-a19a-4b4496102c60",
                "parentUUID": "6ccc681d-c58e-4b9e-9a28-9dcb2a266574",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Contestant #username should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._username = <span class=\"hljs-string\">'username_test'</span>;<br>c.username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
                "isRoot": false,
                "uuid": "4235d51f-ed47-4bcd-94a8-9d258b538ffd",
                "parentUUID": "6ccc681d-c58e-4b9e-9a28-9dcb2a266574",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#score",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Contestant #score should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    c.score = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "7bbb9416-c0e4-4394-8c14-07a1a2390f2b",
                "parentUUID": "6a809820-7d86-46f4-867d-7b51682ca7fb",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Contestant #score should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._score = <span class=\"hljs-number\">1</span>;<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "a9411e4e-8bfc-4df1-8c1c-4db095927b8a",
                "parentUUID": "6a809820-7d86-46f4-867d-7b51682ca7fb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ContestantTests.js",
            "uuid": "6a809820-7d86-46f4-867d-7b51682ca7fb",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ContestantTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Contestant #score should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    c.score = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "7bbb9416-c0e4-4394-8c14-07a1a2390f2b",
                "parentUUID": "6a809820-7d86-46f4-867d-7b51682ca7fb",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Contestant #score should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._score = <span class=\"hljs-number\">1</span>;<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "a9411e4e-8bfc-4df1-8c1c-4db095927b8a",
                "parentUUID": "6a809820-7d86-46f4-867d-7b51682ca7fb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#incrementScore()",
            "suites": [],
            "tests": [
              {
                "title": "should increment the contestant's score",
                "fullTitle": "Contestant #incrementScore() should increment the contestant's score",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.incrementScore();<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "1d76098f-07db-4ecf-8c5f-bc73732cd030",
                "parentUUID": "fac77bd4-d0e4-4916-8e84-6c0792de31bb",
                "skipped": false
              },
              {
                "title": "should emit scoreUpdate event",
                "fullTitle": "Contestant #incrementScore() should emit scoreUpdate event",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.on(<span class=\"hljs-string\">'scoreUpdate'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>});<br>c.incrementScore();",
                "isRoot": false,
                "uuid": "45aef26c-460c-45cb-8505-ed38dcaa85b8",
                "parentUUID": "fac77bd4-d0e4-4916-8e84-6c0792de31bb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ContestantTests.js",
            "uuid": "fac77bd4-d0e4-4916-8e84-6c0792de31bb",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ContestantTests.js",
            "passes": [
              {
                "title": "should increment the contestant's score",
                "fullTitle": "Contestant #incrementScore() should increment the contestant's score",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.incrementScore();<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "1d76098f-07db-4ecf-8c5f-bc73732cd030",
                "parentUUID": "fac77bd4-d0e4-4916-8e84-6c0792de31bb",
                "skipped": false
              },
              {
                "title": "should emit scoreUpdate event",
                "fullTitle": "Contestant #incrementScore() should emit scoreUpdate event",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.on(<span class=\"hljs-string\">'scoreUpdate'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>});<br>c.incrementScore();",
                "isRoot": false,
                "uuid": "45aef26c-460c-45cb-8505-ed38dcaa85b8",
                "parentUUID": "fac77bd4-d0e4-4916-8e84-6c0792de31bb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/ContestantTests.js",
        "uuid": "fd5b3896-4ec3-4899-b412-4f5ca5b25491",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ContestantTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "IdentifierUtility",
        "suites": [
          {
            "title": "#generateSessionId()",
            "suites": [],
            "tests": [
              {
                "title": "should return a non-null non-empty key",
                "fullTitle": "IdentifierUtility #generateSessionId() should return a non-null non-empty key",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateSessionId().should.not.be.equal(<span class=\"hljs-string\">''</span>).and.not.be.equal(<span class=\"hljs-literal\">null</span>);",
                "isRoot": false,
                "uuid": "f5e441c9-b219-4128-aeb9-15f2bae6e44f",
                "parentUUID": "b0c207f4-0402-4541-aae7-14ac3ea9f496",
                "skipped": false
              },
              {
                "title": "should return a id of the correct length",
                "fullTitle": "IdentifierUtility #generateSessionId() should return a id of the correct length",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateSessionId()<br>    .length.should.be.Number().and.equal(idUtility.keyLength);",
                "isRoot": false,
                "uuid": "dfa16f85-c7ea-4680-9535-7353239410b3",
                "parentUUID": "b0c207f4-0402-4541-aae7-14ac3ea9f496",
                "skipped": false
              },
              {
                "title": "should record id so it cannot be reused.",
                "fullTitle": "IdentifierUtility #generateSessionId() should record id so it cannot be reused.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> id = idUtility.generateSessionId();<br>idUtility._sessionKeysInUse.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">cachedId</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> cachedId === id;<br>}).should.equal(id);",
                "isRoot": false,
                "uuid": "d8a22b05-8c63-442a-a9c7-f30d1c2424d7",
                "parentUUID": "b0c207f4-0402-4541-aae7-14ac3ea9f496",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/IdentifierUtilityTests.js",
            "uuid": "b0c207f4-0402-4541-aae7-14ac3ea9f496",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/IdentifierUtilityTests.js",
            "passes": [
              {
                "title": "should return a non-null non-empty key",
                "fullTitle": "IdentifierUtility #generateSessionId() should return a non-null non-empty key",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateSessionId().should.not.be.equal(<span class=\"hljs-string\">''</span>).and.not.be.equal(<span class=\"hljs-literal\">null</span>);",
                "isRoot": false,
                "uuid": "f5e441c9-b219-4128-aeb9-15f2bae6e44f",
                "parentUUID": "b0c207f4-0402-4541-aae7-14ac3ea9f496",
                "skipped": false
              },
              {
                "title": "should return a id of the correct length",
                "fullTitle": "IdentifierUtility #generateSessionId() should return a id of the correct length",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateSessionId()<br>    .length.should.be.Number().and.equal(idUtility.keyLength);",
                "isRoot": false,
                "uuid": "dfa16f85-c7ea-4680-9535-7353239410b3",
                "parentUUID": "b0c207f4-0402-4541-aae7-14ac3ea9f496",
                "skipped": false
              },
              {
                "title": "should record id so it cannot be reused.",
                "fullTitle": "IdentifierUtility #generateSessionId() should record id so it cannot be reused.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> id = idUtility.generateSessionId();<br>idUtility._sessionKeysInUse.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">cachedId</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> cachedId === id;<br>}).should.equal(id);",
                "isRoot": false,
                "uuid": "d8a22b05-8c63-442a-a9c7-f30d1c2424d7",
                "parentUUID": "b0c207f4-0402-4541-aae7-14ac3ea9f496",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#generateParticipantId()",
            "suites": [],
            "tests": [
              {
                "title": "should return a UUID",
                "fullTitle": "IdentifierUtility #generateParticipantId() should return a UUID",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateParticipantId()<br>    .should.match(<span class=\"hljs-regexp\">/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i</span>);",
                "isRoot": false,
                "uuid": "2b109dcd-fa07-42da-989a-0fc1b435b2fa",
                "parentUUID": "78a785eb-6dae-4de4-8357-3ee894dd0479",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/IdentifierUtilityTests.js",
            "uuid": "78a785eb-6dae-4de4-8357-3ee894dd0479",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/IdentifierUtilityTests.js",
            "passes": [
              {
                "title": "should return a UUID",
                "fullTitle": "IdentifierUtility #generateParticipantId() should return a UUID",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateParticipantId()<br>    .should.match(<span class=\"hljs-regexp\">/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i</span>);",
                "isRoot": false,
                "uuid": "2b109dcd-fa07-42da-989a-0fc1b435b2fa",
                "parentUUID": "78a785eb-6dae-4de4-8357-3ee894dd0479",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#registerSessionIdsInUse(ids)",
            "suites": [],
            "tests": [
              {
                "title": "should store the ids to stop reuse",
                "fullTitle": "IdentifierUtility #registerSessionIdsInUse(ids) should store the ids to stop reuse",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.length.should.be.aboveOrEqual(<span class=\"hljs-number\">2</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "edf16dac-cc70-478c-85d4-1c5f9a574b4e",
                "parentUUID": "d973a701-e714-4cf6-a0b4-ec6e0cd8a24e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/IdentifierUtilityTests.js",
            "uuid": "d973a701-e714-4cf6-a0b4-ec6e0cd8a24e",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/IdentifierUtilityTests.js",
            "passes": [
              {
                "title": "should store the ids to stop reuse",
                "fullTitle": "IdentifierUtility #registerSessionIdsInUse(ids) should store the ids to stop reuse",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.length.should.be.aboveOrEqual(<span class=\"hljs-number\">2</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "edf16dac-cc70-478c-85d4-1c5f9a574b4e",
                "parentUUID": "d973a701-e714-4cf6-a0b4-ec6e0cd8a24e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#releaseSessionId(id)",
            "suites": [],
            "tests": [
              {
                "title": "should return a UUID",
                "fullTitle": "IdentifierUtility #releaseSessionId(id) should return a UUID",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility.releaseSessionId(<span class=\"hljs-string\">'111AAA'</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.equal(-<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "2a1f99f0-6f89-45bc-a455-a00b1feccc35",
                "parentUUID": "5144125d-8323-4c56-b601-eecca385ff8d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/IdentifierUtilityTests.js",
            "uuid": "5144125d-8323-4c56-b601-eecca385ff8d",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/IdentifierUtilityTests.js",
            "passes": [
              {
                "title": "should return a UUID",
                "fullTitle": "IdentifierUtility #releaseSessionId(id) should return a UUID",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility.releaseSessionId(<span class=\"hljs-string\">'111AAA'</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.equal(-<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "2a1f99f0-6f89-45bc-a455-a00b1feccc35",
                "parentUUID": "5144125d-8323-4c56-b601-eecca385ff8d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/IdentifierUtilityTests.js",
        "uuid": "d8c975da-65e1-44e1-83a8-3a5df44c9c02",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/IdentifierUtilityTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "BuzzerActionCommandMessage",
        "suites": [
          {
            "title": "#action",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #action should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.data._action.should.equal(constants.buzzerActionCommands.RESET);",
                "isRoot": false,
                "uuid": "4e2bb12a-3310-46cc-9bd8-22db396cf57c",
                "parentUUID": "771f30ff-5211-43c3-ab13-2d4e20b48669",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #action should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._action = constants.buzzerActionCommands.RESET;<br>m.action.should.equal(constants.buzzerActionCommands.RESET);",
                "isRoot": false,
                "uuid": "b7102e91-dfc6-4d1b-83b9-ae11bf86e713",
                "parentUUID": "771f30ff-5211-43c3-ab13-2d4e20b48669",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "uuid": "771f30ff-5211-43c3-ab13-2d4e20b48669",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #action should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.data._action.should.equal(constants.buzzerActionCommands.RESET);",
                "isRoot": false,
                "uuid": "4e2bb12a-3310-46cc-9bd8-22db396cf57c",
                "parentUUID": "771f30ff-5211-43c3-ab13-2d4e20b48669",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #action should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._action = constants.buzzerActionCommands.RESET;<br>m.action.should.equal(constants.buzzerActionCommands.RESET);",
                "isRoot": false,
                "uuid": "b7102e91-dfc6-4d1b-83b9-ae11bf86e713",
                "parentUUID": "771f30ff-5211-43c3-ab13-2d4e20b48669",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "a908cce3-2a04-4afa-9e57-d82a952dec85",
                "parentUUID": "a2f96c13-076b-4710-b211-dd3f3e400128",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "80f91828-4efa-4858-aabb-f51583d81611",
                "parentUUID": "a2f96c13-076b-4710-b211-dd3f3e400128",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "uuid": "a2f96c13-076b-4710-b211-dd3f3e400128",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "a908cce3-2a04-4afa-9e57-d82a952dec85",
                "parentUUID": "a2f96c13-076b-4710-b211-dd3f3e400128",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "80f91828-4efa-4858-aabb-f51583d81611",
                "parentUUID": "a2f96c13-076b-4710-b211-dd3f3e400128",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #hostId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "84eb259e-a96d-47d1-9b83-914c0716c0d8",
                "parentUUID": "07d88091-0ee9-448e-99d0-9020d43e1b21",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #hostId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "517574f4-0210-47a0-bee1-8f983428b61d",
                "parentUUID": "07d88091-0ee9-448e-99d0-9020d43e1b21",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "uuid": "07d88091-0ee9-448e-99d0-9020d43e1b21",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #hostId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "84eb259e-a96d-47d1-9b83-914c0716c0d8",
                "parentUUID": "07d88091-0ee9-448e-99d0-9020d43e1b21",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #hostId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "517574f4-0210-47a0-bee1-8f983428b61d",
                "parentUUID": "07d88091-0ee9-448e-99d0-9020d43e1b21",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "BuzzerActionCommandMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'yyy123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "3a2777eb-b8a7-4b21-bb9f-7aab2ea91e62",
                "parentUUID": "2ce94b66-2343-41a3-9d05-7fb72400c9c4",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "BuzzerActionCommandMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = <span class=\"hljs-number\">99</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "7a4b59ea-d2f2-4196-a009-0be88eca0085",
                "parentUUID": "2ce94b66-2343-41a3-9d05-7fb72400c9c4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "uuid": "2ce94b66-2343-41a3-9d05-7fb72400c9c4",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "BuzzerActionCommandMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'yyy123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "3a2777eb-b8a7-4b21-bb9f-7aab2ea91e62",
                "parentUUID": "2ce94b66-2343-41a3-9d05-7fb72400c9c4",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "BuzzerActionCommandMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = <span class=\"hljs-number\">99</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "7a4b59ea-d2f2-4196-a009-0be88eca0085",
                "parentUUID": "2ce94b66-2343-41a3-9d05-7fb72400c9c4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
        "uuid": "c85e62b3-8c42-45f4-a3d2-859a777a9cf2",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ContestantBuzzerPressMessage",
        "suites": [
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantBuzzerPressMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5c5315b7-032b-482b-bff4-1f7c02b15b36",
                "parentUUID": "4b930678-04be-4679-93a9-b9a600797bdd",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantBuzzerPressMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5e582a74-0dcc-4ed6-ae77-29c0268ea644",
                "parentUUID": "4b930678-04be-4679-93a9-b9a600797bdd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "uuid": "4b930678-04be-4679-93a9-b9a600797bdd",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantBuzzerPressMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5c5315b7-032b-482b-bff4-1f7c02b15b36",
                "parentUUID": "4b930678-04be-4679-93a9-b9a600797bdd",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantBuzzerPressMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5e582a74-0dcc-4ed6-ae77-29c0268ea644",
                "parentUUID": "4b930678-04be-4679-93a9-b9a600797bdd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#contestantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantBuzzerPressMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "4eaaa789-0ab3-456e-b1cd-f5f76dfbceb5",
                "parentUUID": "89cdea64-6093-4e7f-bd61-61072f4c4542",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantBuzzerPressMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "6872b2fb-a3cf-41aa-95c5-76266cd888e7",
                "parentUUID": "89cdea64-6093-4e7f-bd61-61072f4c4542",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "uuid": "89cdea64-6093-4e7f-bd61-61072f4c4542",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantBuzzerPressMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "4eaaa789-0ab3-456e-b1cd-f5f76dfbceb5",
                "parentUUID": "89cdea64-6093-4e7f-bd61-61072f4c4542",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantBuzzerPressMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "6872b2fb-a3cf-41aa-95c5-76266cd888e7",
                "parentUUID": "89cdea64-6093-4e7f-bd61-61072f4c4542",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantBuzzerPressMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "20596688-0ad7-4956-b3ea-a54212be2064",
                "parentUUID": "f1f7b9b6-42e6-4b37-8836-fc06d7866c31",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantBuzzerPressMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "ddc76a16-de9c-4426-b2a9-bf55e3f77244",
                "parentUUID": "f1f7b9b6-42e6-4b37-8836-fc06d7866c31",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "uuid": "f1f7b9b6-42e6-4b37-8836-fc06d7866c31",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantBuzzerPressMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "20596688-0ad7-4956-b3ea-a54212be2064",
                "parentUUID": "f1f7b9b6-42e6-4b37-8836-fc06d7866c31",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantBuzzerPressMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "ddc76a16-de9c-4426-b2a9-bf55e3f77244",
                "parentUUID": "f1f7b9b6-42e6-4b37-8836-fc06d7866c31",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
        "uuid": "5ffc41f7-1bb2-4853-ba06-679d90188366",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ContestantJoinRequestMessage",
        "suites": [
          {
            "title": "#username",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #username should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.username = <span class=\"hljs-string\">'test123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
                "isRoot": false,
                "uuid": "cbe92471-b903-45b2-b23c-bd739ceffe32",
                "parentUUID": "a5128ef0-25f5-43ae-8392-101a96b1d7ff",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #username should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._username = <span class=\"hljs-string\">'test123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
                "isRoot": false,
                "uuid": "cfd04c8f-5391-443a-818a-7ae2d491c0ce",
                "parentUUID": "a5128ef0-25f5-43ae-8392-101a96b1d7ff",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "uuid": "a5128ef0-25f5-43ae-8392-101a96b1d7ff",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #username should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.username = <span class=\"hljs-string\">'test123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
                "isRoot": false,
                "uuid": "cbe92471-b903-45b2-b23c-bd739ceffe32",
                "parentUUID": "a5128ef0-25f5-43ae-8392-101a96b1d7ff",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #username should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._username = <span class=\"hljs-string\">'test123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
                "isRoot": false,
                "uuid": "cfd04c8f-5391-443a-818a-7ae2d491c0ce",
                "parentUUID": "a5128ef0-25f5-43ae-8392-101a96b1d7ff",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "fc22f083-6988-46ce-bd72-007824efb80c",
                "parentUUID": "e0a4c079-dd92-4614-8f80-de9957093ae9",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "8e6d5486-1cf6-4f2e-a700-aad40c967049",
                "parentUUID": "e0a4c079-dd92-4614-8f80-de9957093ae9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "uuid": "e0a4c079-dd92-4614-8f80-de9957093ae9",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "fc22f083-6988-46ce-bd72-007824efb80c",
                "parentUUID": "e0a4c079-dd92-4614-8f80-de9957093ae9",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "8e6d5486-1cf6-4f2e-a700-aad40c967049",
                "parentUUID": "e0a4c079-dd92-4614-8f80-de9957093ae9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#teamName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "4c49af1f-040f-48f7-a90b-f3bb96aa6ab7",
                "parentUUID": "bc9d6cbf-4d39-4b3b-9d26-ba0fa1362037",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "3881329e-f6eb-42f4-a3dd-ddce96bee1c1",
                "parentUUID": "bc9d6cbf-4d39-4b3b-9d26-ba0fa1362037",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "uuid": "bc9d6cbf-4d39-4b3b-9d26-ba0fa1362037",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "4c49af1f-040f-48f7-a90b-f3bb96aa6ab7",
                "parentUUID": "bc9d6cbf-4d39-4b3b-9d26-ba0fa1362037",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "3881329e-f6eb-42f4-a3dd-ddce96bee1c1",
                "parentUUID": "bc9d6cbf-4d39-4b3b-9d26-ba0fa1362037",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantJoinRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "2507e80e-4d58-4de5-ba94-a432257a7623",
                "parentUUID": "20db7684-c35e-479c-84b8-25b770a1389d",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantJoinRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "17df9d0a-a68f-444e-9234-074f78f80669",
                "parentUUID": "20db7684-c35e-479c-84b8-25b770a1389d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "uuid": "20db7684-c35e-479c-84b8-25b770a1389d",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantJoinRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "2507e80e-4d58-4de5-ba94-a432257a7623",
                "parentUUID": "20db7684-c35e-479c-84b8-25b770a1389d",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantJoinRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "17df9d0a-a68f-444e-9234-074f78f80669",
                "parentUUID": "20db7684-c35e-479c-84b8-25b770a1389d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
        "uuid": "9d167c10-12f9-42de-975d-f0055bbcfdea",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ContestantJoinResponseMessage",
        "suites": [
          {
            "title": "#wasSuccessful",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #wasSuccessful should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.data._wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "b668835e-9b08-4a08-8f93-f3ee2873e7c6",
                "parentUUID": "03983f25-0342-4ccb-9fb2-7e4bbbcd2577",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #wasSuccessful should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "a9241e7d-7ffe-4b8a-9d6f-49fd1a598965",
                "parentUUID": "03983f25-0342-4ccb-9fb2-7e4bbbcd2577",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "03983f25-0342-4ccb-9fb2-7e4bbbcd2577",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #wasSuccessful should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.data._wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "b668835e-9b08-4a08-8f93-f3ee2873e7c6",
                "parentUUID": "03983f25-0342-4ccb-9fb2-7e4bbbcd2577",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #wasSuccessful should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "a9241e7d-7ffe-4b8a-9d6f-49fd1a598965",
                "parentUUID": "03983f25-0342-4ccb-9fb2-7e4bbbcd2577",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#enquireForTeamLeaderPosition",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #enquireForTeamLeaderPosition should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.data._enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "f583009c-6be9-43e4-9989-3441c97bd949",
                "parentUUID": "5a0c0e71-4a51-4b48-aecd-78161e971504",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #enquireForTeamLeaderPosition should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "9b0d1595-ce6f-4258-95d7-381adb8e3ba0",
                "parentUUID": "5a0c0e71-4a51-4b48-aecd-78161e971504",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "5a0c0e71-4a51-4b48-aecd-78161e971504",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #enquireForTeamLeaderPosition should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.data._enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "f583009c-6be9-43e4-9989-3441c97bd949",
                "parentUUID": "5a0c0e71-4a51-4b48-aecd-78161e971504",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #enquireForTeamLeaderPosition should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "9b0d1595-ce6f-4258-95d7-381adb8e3ba0",
                "parentUUID": "5a0c0e71-4a51-4b48-aecd-78161e971504",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#failedRequestReason",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #failedRequestReason should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.data._failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
                "isRoot": false,
                "uuid": "c2b739c2-d93b-4419-9231-0d70046c4903",
                "parentUUID": "28afb428-807a-42ec-93a1-17e41c3c7a0a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #failedRequestReason should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
                "isRoot": false,
                "uuid": "077ac67a-0b0c-4229-89a3-02d073e87821",
                "parentUUID": "28afb428-807a-42ec-93a1-17e41c3c7a0a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "28afb428-807a-42ec-93a1-17e41c3c7a0a",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #failedRequestReason should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.data._failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
                "isRoot": false,
                "uuid": "c2b739c2-d93b-4419-9231-0d70046c4903",
                "parentUUID": "28afb428-807a-42ec-93a1-17e41c3c7a0a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #failedRequestReason should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
                "isRoot": false,
                "uuid": "077ac67a-0b0c-4229-89a3-02d073e87821",
                "parentUUID": "28afb428-807a-42ec-93a1-17e41c3c7a0a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#contestantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "463c350e-a4ab-4819-b7f4-453cc5056a77",
                "parentUUID": "2ac3c0cd-33b3-40c1-8a61-495b99477370",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "3f9d99f9-4deb-4203-94c8-3f51c4d54b51",
                "parentUUID": "2ac3c0cd-33b3-40c1-8a61-495b99477370",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "2ac3c0cd-33b3-40c1-8a61-495b99477370",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "463c350e-a4ab-4819-b7f4-453cc5056a77",
                "parentUUID": "2ac3c0cd-33b3-40c1-8a61-495b99477370",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "3f9d99f9-4deb-4203-94c8-3f51c4d54b51",
                "parentUUID": "2ac3c0cd-33b3-40c1-8a61-495b99477370",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#mustChooseTeam",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #mustChooseTeam should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.data._mustChooseTeam.should.be.true();",
                "isRoot": false,
                "uuid": "b81c1949-eb77-4a6a-b05f-52a0cbbffbec",
                "parentUUID": "65b9fa5c-97ef-47e9-be4e-3f4aca543a5e",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #mustChooseTeam should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.mustChooseTeam.should.be.true();",
                "isRoot": false,
                "uuid": "dc8660a3-f0d1-4d43-a7e8-e6f2630a1d10",
                "parentUUID": "65b9fa5c-97ef-47e9-be4e-3f4aca543a5e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "65b9fa5c-97ef-47e9-be4e-3f4aca543a5e",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #mustChooseTeam should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.data._mustChooseTeam.should.be.true();",
                "isRoot": false,
                "uuid": "b81c1949-eb77-4a6a-b05f-52a0cbbffbec",
                "parentUUID": "65b9fa5c-97ef-47e9-be4e-3f4aca543a5e",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #mustChooseTeam should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.mustChooseTeam.should.be.true();",
                "isRoot": false,
                "uuid": "dc8660a3-f0d1-4d43-a7e8-e6f2630a1d10",
                "parentUUID": "65b9fa5c-97ef-47e9-be4e-3f4aca543a5e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#teams",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #teams should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.data._teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
                "isRoot": false,
                "uuid": "e8a46a87-bacf-4424-bb7c-fe4e64d06a5d",
                "parentUUID": "67d7a404-96a6-433f-83f2-6e1d579187e9",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #teams should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
                "isRoot": false,
                "uuid": "43ad7358-06e6-4275-b7fe-d6805b362e86",
                "parentUUID": "67d7a404-96a6-433f-83f2-6e1d579187e9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "67d7a404-96a6-433f-83f2-6e1d579187e9",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #teams should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.data._teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
                "isRoot": false,
                "uuid": "e8a46a87-bacf-4424-bb7c-fe4e64d06a5d",
                "parentUUID": "67d7a404-96a6-433f-83f2-6e1d579187e9",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #teams should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
                "isRoot": false,
                "uuid": "43ad7358-06e6-4275-b7fe-d6805b362e86",
                "parentUUID": "67d7a404-96a6-433f-83f2-6e1d579187e9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantJoinResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "10e8276b-e443-49cf-b90e-33bf651b94ce",
                "parentUUID": "ff259737-b1dd-4bbf-bcb9-75f0be3b5fd7",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantJoinResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "dc782f3a-33bc-4c32-ae7a-c6546a774ab2",
                "parentUUID": "ff259737-b1dd-4bbf-bcb9-75f0be3b5fd7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "ff259737-b1dd-4bbf-bcb9-75f0be3b5fd7",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantJoinResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "10e8276b-e443-49cf-b90e-33bf651b94ce",
                "parentUUID": "ff259737-b1dd-4bbf-bcb9-75f0be3b5fd7",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantJoinResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "dc782f3a-33bc-4c32-ae7a-c6546a774ab2",
                "parentUUID": "ff259737-b1dd-4bbf-bcb9-75f0be3b5fd7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
        "uuid": "a2673765-6e12-4868-af31-0dc71f461c8f",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "CreateSessionMessage",
        "suites": [
          {
            "title": "#settings",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionMessage #settings should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.data._settings.should.equal(s);",
                "isRoot": false,
                "uuid": "60c98f61-3315-4613-9693-416e03704cdc",
                "parentUUID": "4c0950af-bb14-46ae-bc37-9de050aa06cf",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionMessage #settings should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.data._settings = s;<br>m.settings.should.equal(s);",
                "isRoot": false,
                "uuid": "a22bcb4b-32f3-44fd-9a12-c6b4d82acf59",
                "parentUUID": "4c0950af-bb14-46ae-bc37-9de050aa06cf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/CreateSessionMessageTests.js",
            "uuid": "4c0950af-bb14-46ae-bc37-9de050aa06cf",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionMessage #settings should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.data._settings.should.equal(s);",
                "isRoot": false,
                "uuid": "60c98f61-3315-4613-9693-416e03704cdc",
                "parentUUID": "4c0950af-bb14-46ae-bc37-9de050aa06cf",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionMessage #settings should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.data._settings = s;<br>m.settings.should.equal(s);",
                "isRoot": false,
                "uuid": "a22bcb4b-32f3-44fd-9a12-c6b4d82acf59",
                "parentUUID": "4c0950af-bb14-46ae-bc37-9de050aa06cf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "CreateSessionMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "5c6d2ed6-d96b-4581-89ed-f0ec5dc68285",
                "parentUUID": "888c6ab8-9ce5-4fdb-b65b-0a12fad5288a",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "CreateSessionMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-string\">'invalid'</span>;<br>m.settings = s;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "9f884541-7ba3-4bc2-b7d9-54819ceb2114",
                "parentUUID": "888c6ab8-9ce5-4fdb-b65b-0a12fad5288a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/CreateSessionMessageTests.js",
            "uuid": "888c6ab8-9ce5-4fdb-b65b-0a12fad5288a",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "CreateSessionMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "5c6d2ed6-d96b-4581-89ed-f0ec5dc68285",
                "parentUUID": "888c6ab8-9ce5-4fdb-b65b-0a12fad5288a",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "CreateSessionMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-string\">'invalid'</span>;<br>m.settings = s;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "9f884541-7ba3-4bc2-b7d9-54819ceb2114",
                "parentUUID": "888c6ab8-9ce5-4fdb-b65b-0a12fad5288a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/CreateSessionMessageTests.js",
        "uuid": "d9450e93-6894-41b9-9de2-86edd69b88ed",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "CreateSessionResponseMessage",
        "suites": [
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionResponseMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "64868d5c-e109-499d-9e89-e5d788a6e4f2",
                "parentUUID": "f0a7cba1-bb20-445b-a7b0-5d63346e576a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionResponseMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "dd62408f-c394-4e5a-9f77-2516ddf592df",
                "parentUUID": "f0a7cba1-bb20-445b-a7b0-5d63346e576a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "uuid": "f0a7cba1-bb20-445b-a7b0-5d63346e576a",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionResponseMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "64868d5c-e109-499d-9e89-e5d788a6e4f2",
                "parentUUID": "f0a7cba1-bb20-445b-a7b0-5d63346e576a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionResponseMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "dd62408f-c394-4e5a-9f77-2516ddf592df",
                "parentUUID": "f0a7cba1-bb20-445b-a7b0-5d63346e576a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionResponseMessage #hostId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "0a601bb4-a5f8-40cd-8829-6336deba8e34",
                "parentUUID": "b91718f7-1682-4ca7-a623-49ebce018eb1",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionResponseMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "176d4abf-ed4e-4901-aa5d-4e33e3c2b28f",
                "parentUUID": "b91718f7-1682-4ca7-a623-49ebce018eb1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "uuid": "b91718f7-1682-4ca7-a623-49ebce018eb1",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionResponseMessage #hostId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "0a601bb4-a5f8-40cd-8829-6336deba8e34",
                "parentUUID": "b91718f7-1682-4ca7-a623-49ebce018eb1",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionResponseMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "176d4abf-ed4e-4901-aa5d-4e33e3c2b28f",
                "parentUUID": "b91718f7-1682-4ca7-a623-49ebce018eb1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "CreateSessionResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "8d18ed70-086c-4b75-affc-35915c0b13cb",
                "parentUUID": "ffb14936-d822-4b2e-8bc6-1798a0538e7d",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "CreateSessionResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "4fb2de00-b408-4ee9-9ca2-9748ef96fa95",
                "parentUUID": "ffb14936-d822-4b2e-8bc6-1798a0538e7d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "uuid": "ffb14936-d822-4b2e-8bc6-1798a0538e7d",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "CreateSessionResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "8d18ed70-086c-4b75-affc-35915c0b13cb",
                "parentUUID": "ffb14936-d822-4b2e-8bc6-1798a0538e7d",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "CreateSessionResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "4fb2de00-b408-4ee9-9ca2-9748ef96fa95",
                "parentUUID": "ffb14936-d822-4b2e-8bc6-1798a0538e7d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
        "uuid": "6cb7a7e5-c894-4ae4-9a36-e7b77d1608a2",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ErrorMessage",
        "suites": [
          {
            "title": "#message",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ErrorMessage #message should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "0910fc04-4467-48b9-9cb2-3ff063c6e823",
                "parentUUID": "8a32e93c-be35-43e3-954d-f273d9b700d4",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ErrorMessage #message should get value",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.data._error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "2235cd08-9dcc-41eb-838d-82f4e9ef8a0b",
                "parentUUID": "8a32e93c-be35-43e3-954d-f273d9b700d4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ErrorMessageTests.js",
            "uuid": "8a32e93c-be35-43e3-954d-f273d9b700d4",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ErrorMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ErrorMessage #message should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "0910fc04-4467-48b9-9cb2-3ff063c6e823",
                "parentUUID": "8a32e93c-be35-43e3-954d-f273d9b700d4",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ErrorMessage #message should get value",
                "timedOut": false,
                "duration": 8,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.data._error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "2235cd08-9dcc-41eb-838d-82f4e9ef8a0b",
                "parentUUID": "8a32e93c-be35-43e3-954d-f273d9b700d4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 8
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "ErrorMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "1030acf1-4ac0-4070-800e-2d54a65660d7",
                "parentUUID": "f9a86c24-be20-4dc6-be4c-639c48a20209",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ErrorMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "e8b391de-6774-4b06-b620-cc151cf18c07",
                "parentUUID": "f9a86c24-be20-4dc6-be4c-639c48a20209",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ErrorMessageTests.js",
            "uuid": "f9a86c24-be20-4dc6-be4c-639c48a20209",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ErrorMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "ErrorMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "1030acf1-4ac0-4070-800e-2d54a65660d7",
                "parentUUID": "f9a86c24-be20-4dc6-be4c-639c48a20209",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ErrorMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "e8b391de-6774-4b06-b620-cc151cf18c07",
                "parentUUID": "f9a86c24-be20-4dc6-be4c-639c48a20209",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/ErrorMessageTests.js",
        "uuid": "0347f66e-cb7a-483f-8c5d-91aca90d0e2b",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ErrorMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "HostSettingsUpdateMessage",
        "suites": [
          {
            "title": "#sessionName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #sessionName should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "18321b19-58cb-4b5e-af96-50836308b121",
                "parentUUID": "73061ae0-0009-4493-b1e1-dcfd0b95fe3b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #sessionName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "2211eb43-c15c-4a9c-9ab4-022964535114",
                "parentUUID": "73061ae0-0009-4493-b1e1-dcfd0b95fe3b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "73061ae0-0009-4493-b1e1-dcfd0b95fe3b",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #sessionName should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "18321b19-58cb-4b5e-af96-50836308b121",
                "parentUUID": "73061ae0-0009-4493-b1e1-dcfd0b95fe3b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #sessionName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "2211eb43-c15c-4a9c-9ab4-022964535114",
                "parentUUID": "73061ae0-0009-4493-b1e1-dcfd0b95fe3b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#maxTeams",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #maxTeams should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxTeams = <span class=\"hljs-number\">5</span>;<br>m.data._maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "5c9b1aa8-7b7c-4d6b-975d-ac0bdab8673a",
                "parentUUID": "316cde8a-3cfe-47dc-9398-0121298240f6",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #maxTeams should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxTeams = <span class=\"hljs-number\">5</span>;<br>m.maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "95cf0fcb-e6ae-4356-840f-4349488ec0f2",
                "parentUUID": "316cde8a-3cfe-47dc-9398-0121298240f6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "316cde8a-3cfe-47dc-9398-0121298240f6",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #maxTeams should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxTeams = <span class=\"hljs-number\">5</span>;<br>m.data._maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "5c9b1aa8-7b7c-4d6b-975d-ac0bdab8673a",
                "parentUUID": "316cde8a-3cfe-47dc-9398-0121298240f6",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #maxTeams should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxTeams = <span class=\"hljs-number\">5</span>;<br>m.maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "95cf0fcb-e6ae-4356-840f-4349488ec0f2",
                "parentUUID": "316cde8a-3cfe-47dc-9398-0121298240f6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#teamSize",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #teamSize should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.teamSize = <span class=\"hljs-number\">5</span>;<br>m.data._teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "009c9a89-2925-44ff-8345-d9027b082eae",
                "parentUUID": "915a24fd-2003-407a-b33f-7e2827d02eb2",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #teamSize should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._teamSize = <span class=\"hljs-number\">5</span>;<br>m.teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "a6817b2d-7ae9-4bc5-8ec8-da059cd54866",
                "parentUUID": "915a24fd-2003-407a-b33f-7e2827d02eb2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "915a24fd-2003-407a-b33f-7e2827d02eb2",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #teamSize should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.teamSize = <span class=\"hljs-number\">5</span>;<br>m.data._teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "009c9a89-2925-44ff-8345-d9027b082eae",
                "parentUUID": "915a24fd-2003-407a-b33f-7e2827d02eb2",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #teamSize should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._teamSize = <span class=\"hljs-number\">5</span>;<br>m.teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "a6817b2d-7ae9-4bc5-8ec8-da059cd54866",
                "parentUUID": "915a24fd-2003-407a-b33f-7e2827d02eb2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#maxContestants",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #maxContestants should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxContestants = <span class=\"hljs-number\">5</span>;<br>m.data._maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "568b557a-e5bd-4cc8-92b3-aeb5a7dcff92",
                "parentUUID": "2a102d33-81b8-4cda-8768-03769cba046c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #maxContestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxContestants = <span class=\"hljs-number\">5</span>;<br>m.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "75f598b6-d5d3-4603-a5fc-d08d5804a7f2",
                "parentUUID": "2a102d33-81b8-4cda-8768-03769cba046c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "2a102d33-81b8-4cda-8768-03769cba046c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #maxContestants should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxContestants = <span class=\"hljs-number\">5</span>;<br>m.data._maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "568b557a-e5bd-4cc8-92b3-aeb5a7dcff92",
                "parentUUID": "2a102d33-81b8-4cda-8768-03769cba046c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #maxContestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxContestants = <span class=\"hljs-number\">5</span>;<br>m.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "75f598b6-d5d3-4603-a5fc-d08d5804a7f2",
                "parentUUID": "2a102d33-81b8-4cda-8768-03769cba046c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "4947265d-8cc8-47fe-9626-7b2e0e7efa21",
                "parentUUID": "93aab511-164a-4fbc-b72f-1533e5c762e1",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "2991b513-fbf7-45ab-b98b-5d4e6183fae1",
                "parentUUID": "93aab511-164a-4fbc-b72f-1533e5c762e1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "93aab511-164a-4fbc-b72f-1533e5c762e1",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "4947265d-8cc8-47fe-9626-7b2e0e7efa21",
                "parentUUID": "93aab511-164a-4fbc-b72f-1533e5c762e1",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "2991b513-fbf7-45ab-b98b-5d4e6183fae1",
                "parentUUID": "93aab511-164a-4fbc-b72f-1533e5c762e1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "d52866c9-a2ae-456d-8e3d-7c6071af08a2",
                "parentUUID": "41e10bcf-7f2a-4764-89e5-ffb584a46de7",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "a4ea429d-bfad-40a5-99c4-756066e78edd",
                "parentUUID": "41e10bcf-7f2a-4764-89e5-ffb584a46de7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "41e10bcf-7f2a-4764-89e5-ffb584a46de7",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "d52866c9-a2ae-456d-8e3d-7c6071af08a2",
                "parentUUID": "41e10bcf-7f2a-4764-89e5-ffb584a46de7",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "a4ea429d-bfad-40a5-99c4-756066e78edd",
                "parentUUID": "41e10bcf-7f2a-4764-89e5-ffb584a46de7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostSettingsUpdateMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "21181238-e05e-446b-a6e8-9d96a291c688",
                "parentUUID": "b66b0a5c-ca89-48f6-a3f4-ec05ad13ac41",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostSettingsUpdateMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "ba675dd0-6c18-412b-ba50-26aa9af71513",
                "parentUUID": "b66b0a5c-ca89-48f6-a3f4-ec05ad13ac41",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "b66b0a5c-ca89-48f6-a3f4-ec05ad13ac41",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostSettingsUpdateMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "21181238-e05e-446b-a6e8-9d96a291c688",
                "parentUUID": "b66b0a5c-ca89-48f6-a3f4-ec05ad13ac41",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostSettingsUpdateMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "ba675dd0-6c18-412b-ba50-26aa9af71513",
                "parentUUID": "b66b0a5c-ca89-48f6-a3f4-ec05ad13ac41",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
        "uuid": "2c0b16be-9bd7-48e0-9d9b-f03c221cc65c",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "HostTeamLeaderSetRequestMessage",
        "suites": [
          {
            "title": "#teamName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "2927b333-0732-429d-92c2-96ff7fa2595d",
                "parentUUID": "b18d6c22-35b9-458b-bc33-e579e8200f53",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "b2f8f8aa-e821-424a-911e-11d72a4ff74c",
                "parentUUID": "b18d6c22-35b9-458b-bc33-e579e8200f53",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "uuid": "b18d6c22-35b9-458b-bc33-e579e8200f53",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "2927b333-0732-429d-92c2-96ff7fa2595d",
                "parentUUID": "b18d6c22-35b9-458b-bc33-e579e8200f53",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "b2f8f8aa-e821-424a-911e-11d72a4ff74c",
                "parentUUID": "b18d6c22-35b9-458b-bc33-e579e8200f53",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#teamLeaderUsername",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamLeaderUsername should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "27486781-68ab-4a1e-94cd-a76446f8bed5",
                "parentUUID": "480aa1a3-6a41-4374-b1a7-cc7d9c31ba1f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamLeaderUsername should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "90281036-cab2-4afe-b9f8-750513909d83",
                "parentUUID": "480aa1a3-6a41-4374-b1a7-cc7d9c31ba1f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "uuid": "480aa1a3-6a41-4374-b1a7-cc7d9c31ba1f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamLeaderUsername should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "27486781-68ab-4a1e-94cd-a76446f8bed5",
                "parentUUID": "480aa1a3-6a41-4374-b1a7-cc7d9c31ba1f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamLeaderUsername should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "90281036-cab2-4afe-b9f8-750513909d83",
                "parentUUID": "480aa1a3-6a41-4374-b1a7-cc7d9c31ba1f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "bd316a7d-002b-42d7-aeed-b7bf2d6085d6",
                "parentUUID": "adc3ef9a-982c-47d2-8637-5df5c719b87a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "bb685ae7-96be-428d-82a1-a7bad2ca3d27",
                "parentUUID": "adc3ef9a-982c-47d2-8637-5df5c719b87a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "uuid": "adc3ef9a-982c-47d2-8637-5df5c719b87a",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "bd316a7d-002b-42d7-aeed-b7bf2d6085d6",
                "parentUUID": "adc3ef9a-982c-47d2-8637-5df5c719b87a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "bb685ae7-96be-428d-82a1-a7bad2ca3d27",
                "parentUUID": "adc3ef9a-982c-47d2-8637-5df5c719b87a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "1fe7e55c-a3bf-427e-8acd-512653d32bef",
                "parentUUID": "f0fff059-7453-4cd7-be76-ebdaf076cfcb",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "a530085e-785e-4a48-949b-8f310b6cc6b1",
                "parentUUID": "f0fff059-7453-4cd7-be76-ebdaf076cfcb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "uuid": "f0fff059-7453-4cd7-be76-ebdaf076cfcb",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "1fe7e55c-a3bf-427e-8acd-512653d32bef",
                "parentUUID": "f0fff059-7453-4cd7-be76-ebdaf076cfcb",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "a530085e-785e-4a48-949b-8f310b6cc6b1",
                "parentUUID": "f0fff059-7453-4cd7-be76-ebdaf076cfcb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostTeamLeaderSetRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "764db904-f8ce-4801-b2d9-c5f7767d4e4b",
                "parentUUID": "3fa86fea-8d02-4d95-8a90-fd8659c31e11",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostTeamLeaderSetRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "894dc13c-e5d7-4ab4-9c9c-ef14b423fc47",
                "parentUUID": "3fa86fea-8d02-4d95-8a90-fd8659c31e11",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "uuid": "3fa86fea-8d02-4d95-8a90-fd8659c31e11",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostTeamLeaderSetRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "764db904-f8ce-4801-b2d9-c5f7767d4e4b",
                "parentUUID": "3fa86fea-8d02-4d95-8a90-fd8659c31e11",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostTeamLeaderSetRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "894dc13c-e5d7-4ab4-9c9c-ef14b423fc47",
                "parentUUID": "3fa86fea-8d02-4d95-8a90-fd8659c31e11",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
        "uuid": "0f942177-6b79-4de1-bfbc-34f6afaa5158",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "HostTeamNameUpdateRequestMessage",
        "suites": [
          {
            "title": "#teamNameFrom",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameFrom should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "7f63c5c4-d66b-4b81-829e-786b3047036e",
                "parentUUID": "ea615bfe-a578-4d44-8b6b-e0a4f91142aa",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameFrom should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "a1426bb9-0e55-446e-9cdc-199939b57bb3",
                "parentUUID": "ea615bfe-a578-4d44-8b6b-e0a4f91142aa",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "uuid": "ea615bfe-a578-4d44-8b6b-e0a4f91142aa",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameFrom should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "7f63c5c4-d66b-4b81-829e-786b3047036e",
                "parentUUID": "ea615bfe-a578-4d44-8b6b-e0a4f91142aa",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameFrom should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "a1426bb9-0e55-446e-9cdc-199939b57bb3",
                "parentUUID": "ea615bfe-a578-4d44-8b6b-e0a4f91142aa",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#teamNameTo",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameTo should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "d899a20e-f7d9-4493-a79b-010f3162ae66",
                "parentUUID": "61d2ff99-2976-4486-907f-f2198d67fd11",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameTo should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "a9efd48a-a2cb-431b-ad69-4b28c31109e5",
                "parentUUID": "61d2ff99-2976-4486-907f-f2198d67fd11",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "uuid": "61d2ff99-2976-4486-907f-f2198d67fd11",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameTo should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "d899a20e-f7d9-4493-a79b-010f3162ae66",
                "parentUUID": "61d2ff99-2976-4486-907f-f2198d67fd11",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameTo should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "a9efd48a-a2cb-431b-ad69-4b28c31109e5",
                "parentUUID": "61d2ff99-2976-4486-907f-f2198d67fd11",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e287a453-7cf8-4c2a-9fec-e1a28abfc740",
                "parentUUID": "fd139832-3fec-4b89-8dce-2055f30422c2",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "698812e7-c65c-498d-a24f-54d448414eb0",
                "parentUUID": "fd139832-3fec-4b89-8dce-2055f30422c2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "uuid": "fd139832-3fec-4b89-8dce-2055f30422c2",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e287a453-7cf8-4c2a-9fec-e1a28abfc740",
                "parentUUID": "fd139832-3fec-4b89-8dce-2055f30422c2",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "698812e7-c65c-498d-a24f-54d448414eb0",
                "parentUUID": "fd139832-3fec-4b89-8dce-2055f30422c2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "ed6a6553-aaf4-4620-a6fc-002e8f51fee5",
                "parentUUID": "e37e2d1d-2828-4b9c-bb30-aade03324796",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #hostId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "4c5e6832-3783-45ef-bdd6-9da02936f4a2",
                "parentUUID": "e37e2d1d-2828-4b9c-bb30-aade03324796",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "uuid": "e37e2d1d-2828-4b9c-bb30-aade03324796",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "ed6a6553-aaf4-4620-a6fc-002e8f51fee5",
                "parentUUID": "e37e2d1d-2828-4b9c-bb30-aade03324796",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #hostId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "4c5e6832-3783-45ef-bdd6-9da02936f4a2",
                "parentUUID": "e37e2d1d-2828-4b9c-bb30-aade03324796",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostTeamNameUpdateRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "e772902a-be2f-4f1b-80df-889f5bfee102",
                "parentUUID": "aed20205-8b71-4e0f-8c0e-087aa5c806fc",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostTeamNameUpdateRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "b317a5b3-4a9b-4d38-b13e-e70d9d32b490",
                "parentUUID": "aed20205-8b71-4e0f-8c0e-087aa5c806fc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "uuid": "aed20205-8b71-4e0f-8c0e-087aa5c806fc",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostTeamNameUpdateRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "e772902a-be2f-4f1b-80df-889f5bfee102",
                "parentUUID": "aed20205-8b71-4e0f-8c0e-087aa5c806fc",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostTeamNameUpdateRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "b317a5b3-4a9b-4d38-b13e-e70d9d32b490",
                "parentUUID": "aed20205-8b71-4e0f-8c0e-087aa5c806fc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
        "uuid": "b6d17f13-93be-4c81-9794-e01e3486542d",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "InquireTeamLeaderResponseMessage",
        "suites": [
          {
            "title": "#decision",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #decision should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.data._decision.should.be.true();",
                "isRoot": false,
                "uuid": "28eb855a-2e21-4346-b213-cdbce92f80af",
                "parentUUID": "954f6192-bacd-4676-90b0-6cf5f9d54a44",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #decision should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._decision = <span class=\"hljs-literal\">true</span>;<br>m.decision.should.be.true();",
                "isRoot": false,
                "uuid": "ec644811-bbba-4e68-9a6e-e6606ce2edc2",
                "parentUUID": "954f6192-bacd-4676-90b0-6cf5f9d54a44",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "uuid": "954f6192-bacd-4676-90b0-6cf5f9d54a44",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #decision should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.data._decision.should.be.true();",
                "isRoot": false,
                "uuid": "28eb855a-2e21-4346-b213-cdbce92f80af",
                "parentUUID": "954f6192-bacd-4676-90b0-6cf5f9d54a44",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #decision should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._decision = <span class=\"hljs-literal\">true</span>;<br>m.decision.should.be.true();",
                "isRoot": false,
                "uuid": "ec644811-bbba-4e68-9a6e-e6606ce2edc2",
                "parentUUID": "954f6192-bacd-4676-90b0-6cf5f9d54a44",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "a2cfde07-2b25-45c5-919a-8b97a3ded56b",
                "parentUUID": "966ee3b3-4972-4102-ae78-d5740087c528",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "051900b2-bcfd-4e94-9b2a-9c11974560e0",
                "parentUUID": "966ee3b3-4972-4102-ae78-d5740087c528",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "uuid": "966ee3b3-4972-4102-ae78-d5740087c528",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "a2cfde07-2b25-45c5-919a-8b97a3ded56b",
                "parentUUID": "966ee3b3-4972-4102-ae78-d5740087c528",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "051900b2-bcfd-4e94-9b2a-9c11974560e0",
                "parentUUID": "966ee3b3-4972-4102-ae78-d5740087c528",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#contestantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "584a6258-cdfa-40b6-b852-8afc937875bf",
                "parentUUID": "c659459b-1439-4df4-861f-7fcc5c6a8661",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "6f24194d-2a92-4592-8460-b4b31b44bafc",
                "parentUUID": "c659459b-1439-4df4-861f-7fcc5c6a8661",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "uuid": "c659459b-1439-4df4-861f-7fcc5c6a8661",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "584a6258-cdfa-40b6-b852-8afc937875bf",
                "parentUUID": "c659459b-1439-4df4-861f-7fcc5c6a8661",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "6f24194d-2a92-4592-8460-b4b31b44bafc",
                "parentUUID": "c659459b-1439-4df4-861f-7fcc5c6a8661",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "InquireTeamLeaderResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "b40b6c23-37c7-412c-9470-249f3a6ab4bc",
                "parentUUID": "5cd6f11b-7dce-4875-9724-258597e33551",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "InquireTeamLeaderResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "ed2be445-f3f3-4d74-ba03-571a5d939f40",
                "parentUUID": "5cd6f11b-7dce-4875-9724-258597e33551",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "uuid": "5cd6f11b-7dce-4875-9724-258597e33551",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "InquireTeamLeaderResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "b40b6c23-37c7-412c-9470-249f3a6ab4bc",
                "parentUUID": "5cd6f11b-7dce-4875-9724-258597e33551",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "InquireTeamLeaderResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "ed2be445-f3f3-4d74-ba03-571a5d939f40",
                "parentUUID": "5cd6f11b-7dce-4875-9724-258597e33551",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
        "uuid": "f5fc4a75-a6c4-4277-b870-93ca23b065de",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ObserverUpdateMessage",
        "suites": [
          {
            "title": "#gameState",
            "suites": [],
            "tests": [
              {
                "title": "should get value",
                "fullTitle": "ObserverUpdateMessage #gameState should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.gameState.should.be.Object();",
                "isRoot": false,
                "uuid": "eb355445-ac0e-479c-a725-eeb04137cc03",
                "parentUUID": "3dae4564-856c-4ae9-acdb-cade831f0cb0",
                "skipped": false
              },
              {
                "title": "should not have ids",
                "fullTitle": "ObserverUpdateMessage #gameState should not have ids",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState.id);<br>should.not.exist(m.gameState.host.id);",
                "isRoot": false,
                "uuid": "01bc7218-ee4d-4d07-ad94-923510fa6011",
                "parentUUID": "3dae4564-856c-4ae9-acdb-cade831f0cb0",
                "skipped": false
              },
              {
                "title": "should promote private field _ to public field",
                "fullTitle": "ObserverUpdateMessage #gameState should promote private field _ to public field",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState._host);<br>should.not.exist(m.gameState._settings);<br>should.exist(m.gameState.host);<br>should.exist(m.gameState.settings);<br>should.exist(m.gameState.settings.teamLeaderSelectionMethod);",
                "isRoot": false,
                "uuid": "d2b0bce3-5d9e-4658-80f6-9d53b8320bcd",
                "parentUUID": "3dae4564-856c-4ae9-acdb-cade831f0cb0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
            "uuid": "3dae4564-856c-4ae9-acdb-cade831f0cb0",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
            "passes": [
              {
                "title": "should get value",
                "fullTitle": "ObserverUpdateMessage #gameState should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.gameState.should.be.Object();",
                "isRoot": false,
                "uuid": "eb355445-ac0e-479c-a725-eeb04137cc03",
                "parentUUID": "3dae4564-856c-4ae9-acdb-cade831f0cb0",
                "skipped": false
              },
              {
                "title": "should not have ids",
                "fullTitle": "ObserverUpdateMessage #gameState should not have ids",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState.id);<br>should.not.exist(m.gameState.host.id);",
                "isRoot": false,
                "uuid": "01bc7218-ee4d-4d07-ad94-923510fa6011",
                "parentUUID": "3dae4564-856c-4ae9-acdb-cade831f0cb0",
                "skipped": false
              },
              {
                "title": "should promote private field _ to public field",
                "fullTitle": "ObserverUpdateMessage #gameState should promote private field _ to public field",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState._host);<br>should.not.exist(m.gameState._settings);<br>should.exist(m.gameState.host);<br>should.exist(m.gameState.settings);<br>should.exist(m.gameState.settings.teamLeaderSelectionMethod);",
                "isRoot": false,
                "uuid": "d2b0bce3-5d9e-4658-80f6-9d53b8320bcd",
                "parentUUID": "3dae4564-856c-4ae9-acdb-cade831f0cb0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "ObserverUpdateMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "a1c79cfd-d5fc-4c83-b0d4-ad643529a225",
                "parentUUID": "67d79cc6-f98d-42e1-b003-91720c0a74d0",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ObserverUpdateMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "dd2f81df-67e3-4a0c-8f73-671c08a1d8c0",
                "parentUUID": "67d79cc6-f98d-42e1-b003-91720c0a74d0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
            "uuid": "67d79cc6-f98d-42e1-b003-91720c0a74d0",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "ObserverUpdateMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "a1c79cfd-d5fc-4c83-b0d4-ad643529a225",
                "parentUUID": "67d79cc6-f98d-42e1-b003-91720c0a74d0",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ObserverUpdateMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "dd2f81df-67e3-4a0c-8f73-671c08a1d8c0",
                "parentUUID": "67d79cc6-f98d-42e1-b003-91720c0a74d0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
        "uuid": "8e4306be-bf65-43a7-926f-3032a256e8d1",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "RejoinSessionMessage",
        "suites": [
          {
            "title": "#rejoinAs",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #rejoinAs should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.rejoinAs = constants.rejoinAs.HOST;<br>m.data._rejoinAs.should.equal(constants.rejoinAs.HOST);",
                "isRoot": false,
                "uuid": "af4601bc-3068-4dc3-829c-56543bd9cf3e",
                "parentUUID": "d8852ca3-4055-42ac-ad68-d7a964333f05",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #rejoinAs should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._rejoinAs = constants.rejoinAs.HOST;<br>m.rejoinAs.should.equal(constants.rejoinAs.HOST);",
                "isRoot": false,
                "uuid": "17e3ee77-051e-44a1-8aec-18164f1a0e0c",
                "parentUUID": "d8852ca3-4055-42ac-ad68-d7a964333f05",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "uuid": "d8852ca3-4055-42ac-ad68-d7a964333f05",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #rejoinAs should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.rejoinAs = constants.rejoinAs.HOST;<br>m.data._rejoinAs.should.equal(constants.rejoinAs.HOST);",
                "isRoot": false,
                "uuid": "af4601bc-3068-4dc3-829c-56543bd9cf3e",
                "parentUUID": "d8852ca3-4055-42ac-ad68-d7a964333f05",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #rejoinAs should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._rejoinAs = constants.rejoinAs.HOST;<br>m.rejoinAs.should.equal(constants.rejoinAs.HOST);",
                "isRoot": false,
                "uuid": "17e3ee77-051e-44a1-8aec-18164f1a0e0c",
                "parentUUID": "d8852ca3-4055-42ac-ad68-d7a964333f05",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "c11f32d3-c34f-4e11-a3f4-2a6958ddb2b8",
                "parentUUID": "2ecd47f4-3ba0-4a4c-98ee-1a24bb32e7ec",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "546b0aba-8d51-40dd-8faf-346e9c1ff69d",
                "parentUUID": "2ecd47f4-3ba0-4a4c-98ee-1a24bb32e7ec",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "uuid": "2ecd47f4-3ba0-4a4c-98ee-1a24bb32e7ec",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "c11f32d3-c34f-4e11-a3f4-2a6958ddb2b8",
                "parentUUID": "2ecd47f4-3ba0-4a4c-98ee-1a24bb32e7ec",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "546b0aba-8d51-40dd-8faf-346e9c1ff69d",
                "parentUUID": "2ecd47f4-3ba0-4a4c-98ee-1a24bb32e7ec",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#participantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #participantId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "f5401123-5fbc-4df9-83a9-bcc00a5fb41a",
                "parentUUID": "f9c71b78-aff5-4f25-a981-9c9b57eed7fd",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #participantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "8401be01-6874-435c-b787-fdfdd6c340bc",
                "parentUUID": "f9c71b78-aff5-4f25-a981-9c9b57eed7fd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "uuid": "f9c71b78-aff5-4f25-a981-9c9b57eed7fd",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #participantId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "f5401123-5fbc-4df9-83a9-bcc00a5fb41a",
                "parentUUID": "f9c71b78-aff5-4f25-a981-9c9b57eed7fd",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #participantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "8401be01-6874-435c-b787-fdfdd6c340bc",
                "parentUUID": "f9c71b78-aff5-4f25-a981-9c9b57eed7fd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "RejoinSessionMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.rejoinAs = constants.rejoinAs.OBSERVER;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "bba4293e-9a34-44ee-bc00-8131d9ae8414",
                "parentUUID": "5c196370-a477-47fd-b57d-526d7e945edb",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "RejoinSessionMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "2e06bbaf-154a-4d90-9e3c-5b983eb266fd",
                "parentUUID": "5c196370-a477-47fd-b57d-526d7e945edb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "uuid": "5c196370-a477-47fd-b57d-526d7e945edb",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "RejoinSessionMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.rejoinAs = constants.rejoinAs.OBSERVER;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "bba4293e-9a34-44ee-bc00-8131d9ae8414",
                "parentUUID": "5c196370-a477-47fd-b57d-526d7e945edb",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "RejoinSessionMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "2e06bbaf-154a-4d90-9e3c-5b983eb266fd",
                "parentUUID": "5c196370-a477-47fd-b57d-526d7e945edb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/RejoinSessionMessageTests.js",
        "uuid": "7f458c28-6dd7-4711-b392-2a8dc34de56e",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RejoinSessionMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "RoundWonMessage",
        "suites": [
          {
            "title": "#username",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "RoundWonMessage #username should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5eba3566-8f70-48a0-a3ad-c4bee45a5949",
                "parentUUID": "1a88c82c-6708-4695-94c2-83cdc7377234",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RoundWonMessage #username should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "a2d90894-6b30-498a-9605-fca6b779102a",
                "parentUUID": "1a88c82c-6708-4695-94c2-83cdc7377234",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RoundWonMessageTests.js",
            "uuid": "1a88c82c-6708-4695-94c2-83cdc7377234",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RoundWonMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "RoundWonMessage #username should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5eba3566-8f70-48a0-a3ad-c4bee45a5949",
                "parentUUID": "1a88c82c-6708-4695-94c2-83cdc7377234",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RoundWonMessage #username should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "a2d90894-6b30-498a-9605-fca6b779102a",
                "parentUUID": "1a88c82c-6708-4695-94c2-83cdc7377234",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#teamName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "RoundWonMessage #teamName should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "06b8bbdb-1530-4146-bc06-35a8b0b700a5",
                "parentUUID": "d057a004-caad-4c98-8454-2cb90b37f5b9",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RoundWonMessage #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "91a1356c-2ddd-4296-926a-cf87a55a5557",
                "parentUUID": "d057a004-caad-4c98-8454-2cb90b37f5b9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RoundWonMessageTests.js",
            "uuid": "d057a004-caad-4c98-8454-2cb90b37f5b9",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RoundWonMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "RoundWonMessage #teamName should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "06b8bbdb-1530-4146-bc06-35a8b0b700a5",
                "parentUUID": "d057a004-caad-4c98-8454-2cb90b37f5b9",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RoundWonMessage #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "91a1356c-2ddd-4296-926a-cf87a55a5557",
                "parentUUID": "d057a004-caad-4c98-8454-2cb90b37f5b9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "RoundWonMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "6da965cb-47dd-49d9-942e-8b123f1c6df9",
                "parentUUID": "c0a0ae46-2ab0-4f50-88e1-d175bc9ede4c",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "RoundWonMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "eeaa5cd0-c9ab-4f9e-bafc-3c650f874da4",
                "parentUUID": "c0a0ae46-2ab0-4f50-88e1-d175bc9ede4c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RoundWonMessageTests.js",
            "uuid": "c0a0ae46-2ab0-4f50-88e1-d175bc9ede4c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RoundWonMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "RoundWonMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "6da965cb-47dd-49d9-942e-8b123f1c6df9",
                "parentUUID": "c0a0ae46-2ab0-4f50-88e1-d175bc9ede4c",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "RoundWonMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "eeaa5cd0-c9ab-4f9e-bafc-3c650f874da4",
                "parentUUID": "c0a0ae46-2ab0-4f50-88e1-d175bc9ede4c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/RoundWonMessageTests.js",
        "uuid": "044c9950-e0c4-4a79-b6f2-906734fb624a",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RoundWonMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SessionCompleted",
        "suites": [
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionCompleted #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionCompleted();<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "b065c539-2489-480c-b5c1-95f37c0082fd",
                "parentUUID": "388c1729-9aa9-4da3-bc99-06368d922774",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionCompletedTests.js",
            "uuid": "388c1729-9aa9-4da3-bc99-06368d922774",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompletedTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionCompleted #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionCompleted();<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "b065c539-2489-480c-b5c1-95f37c0082fd",
                "parentUUID": "388c1729-9aa9-4da3-bc99-06368d922774",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SessionCompletedTests.js",
        "uuid": "64679347-a7d3-4b99-a10b-e6d882d951a3",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompletedTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SessionComplete",
        "suites": [
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SessionComplete #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "ec758179-1895-45a2-b956-4e05850e556c",
                "parentUUID": "9b119e6f-35e6-453e-8ab4-ca5ff8fb6714",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionComplete #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "de7c564c-fe99-4ee9-ac35-ea11887d85fc",
                "parentUUID": "9b119e6f-35e6-453e-8ab4-ca5ff8fb6714",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionCompleteTests.js",
            "uuid": "9b119e6f-35e6-453e-8ab4-ca5ff8fb6714",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompleteTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SessionComplete #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "ec758179-1895-45a2-b956-4e05850e556c",
                "parentUUID": "9b119e6f-35e6-453e-8ab4-ca5ff8fb6714",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionComplete #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "de7c564c-fe99-4ee9-ac35-ea11887d85fc",
                "parentUUID": "9b119e6f-35e6-453e-8ab4-ca5ff8fb6714",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SessionComplete #hostId should set value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "395a71c5-db49-483a-a9c8-cd6c82f082bb",
                "parentUUID": "22b3e7b7-79c7-40ca-ac2c-11fe786828b8",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionComplete #hostId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "7014eba9-bd52-4490-b763-438e892b1af5",
                "parentUUID": "22b3e7b7-79c7-40ca-ac2c-11fe786828b8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionCompleteTests.js",
            "uuid": "22b3e7b7-79c7-40ca-ac2c-11fe786828b8",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompleteTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SessionComplete #hostId should set value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "395a71c5-db49-483a-a9c8-cd6c82f082bb",
                "parentUUID": "22b3e7b7-79c7-40ca-ac2c-11fe786828b8",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionComplete #hostId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "7014eba9-bd52-4490-b763-438e892b1af5",
                "parentUUID": "22b3e7b7-79c7-40ca-ac2c-11fe786828b8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionComplete #isValid() should return true when valid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "c2d68016-29dd-413d-9c5f-eaee813d8773",
                "parentUUID": "34fb213c-c1c7-4780-93dd-78946125baec",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionComplete #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "9150b404-5f3e-4e1c-80b6-eb3a0274923e",
                "parentUUID": "34fb213c-c1c7-4780-93dd-78946125baec",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionCompleteTests.js",
            "uuid": "34fb213c-c1c7-4780-93dd-78946125baec",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompleteTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionComplete #isValid() should return true when valid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "c2d68016-29dd-413d-9c5f-eaee813d8773",
                "parentUUID": "34fb213c-c1c7-4780-93dd-78946125baec",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionComplete #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "9150b404-5f3e-4e1c-80b6-eb3a0274923e",
                "parentUUID": "34fb213c-c1c7-4780-93dd-78946125baec",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SessionCompleteTests.js",
        "uuid": "30dd4463-dece-485f-a23a-4085768aa0a1",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompleteTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SessionInformationRequestMessage",
        "suites": [
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SessionInformationRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "7d9e840e-72cb-439b-865d-e8a9fda7b80e",
                "parentUUID": "edb15ac6-a6fd-4b98-a55e-3214da7f60d2",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionInformationRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "09834e9e-c158-49a3-840b-6597d2cf317e",
                "parentUUID": "edb15ac6-a6fd-4b98-a55e-3214da7f60d2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "uuid": "edb15ac6-a6fd-4b98-a55e-3214da7f60d2",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SessionInformationRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "7d9e840e-72cb-439b-865d-e8a9fda7b80e",
                "parentUUID": "edb15ac6-a6fd-4b98-a55e-3214da7f60d2",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionInformationRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "09834e9e-c158-49a3-840b-6597d2cf317e",
                "parentUUID": "edb15ac6-a6fd-4b98-a55e-3214da7f60d2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#participantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SessionInformationRequestMessage #participantId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "ccd7feb4-ec50-45fc-89eb-a41b708c250e",
                "parentUUID": "1faf1d2c-e529-49a6-9bde-7f83c36935bd",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionInformationRequestMessage #participantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "c46647d9-d24b-4b0c-afeb-bc4983774c6e",
                "parentUUID": "1faf1d2c-e529-49a6-9bde-7f83c36935bd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "uuid": "1faf1d2c-e529-49a6-9bde-7f83c36935bd",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SessionInformationRequestMessage #participantId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "ccd7feb4-ec50-45fc-89eb-a41b708c250e",
                "parentUUID": "1faf1d2c-e529-49a6-9bde-7f83c36935bd",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionInformationRequestMessage #participantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "c46647d9-d24b-4b0c-afeb-bc4983774c6e",
                "parentUUID": "1faf1d2c-e529-49a6-9bde-7f83c36935bd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionInformationRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "380817a1-97dc-433b-974b-712f6af79bf9",
                "parentUUID": "021944e7-8a73-41c8-bf19-fa9bbf315278",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionInformationRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "3b6a2ec0-1b15-4da1-bd73-2fd92d3e8bdd",
                "parentUUID": "021944e7-8a73-41c8-bf19-fa9bbf315278",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "uuid": "021944e7-8a73-41c8-bf19-fa9bbf315278",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionInformationRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "380817a1-97dc-433b-974b-712f6af79bf9",
                "parentUUID": "021944e7-8a73-41c8-bf19-fa9bbf315278",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionInformationRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "3b6a2ec0-1b15-4da1-bd73-2fd92d3e8bdd",
                "parentUUID": "021944e7-8a73-41c8-bf19-fa9bbf315278",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
        "uuid": "5629ed59-197d-4ad8-ac78-bf0fadc8658a",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SessionInformationResponseMessage",
        "suites": [
          {
            "title": "#info",
            "suites": [],
            "tests": [
              {
                "title": "should get value",
                "fullTitle": "SessionInformationResponseMessage #info should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.should.be.Object();",
                "isRoot": false,
                "uuid": "fb1293f0-f47b-41ac-9a09-5b8c7714fba4",
                "parentUUID": "da1a6cf9-59e1-4652-b4e9-73af62b910dc",
                "skipped": false
              },
              {
                "title": "should not have ids",
                "fullTitle": "SessionInformationResponseMessage #info should not have ids",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.host.should.not.be.null();<br>should.not.exist(m.info.host.id);",
                "isRoot": false,
                "uuid": "28ea6dbe-a40c-4c5b-b567-deaf76d4fba4",
                "parentUUID": "da1a6cf9-59e1-4652-b4e9-73af62b910dc",
                "skipped": false
              },
              {
                "title": "should promote private field _ to public field",
                "fullTitle": "SessionInformationResponseMessage #info should promote private field _ to public field",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>should.not.exist(m.info._host);<br>should.not.exist(m.info._session);<br>should.exist(m.info.host);<br>should.exist(m.info.session);<br>should.exist(m.info.session.settings.teamLeaderSelectionMethod);",
                "isRoot": false,
                "uuid": "ca5a429f-c4af-4302-a226-494e2a6fbb63",
                "parentUUID": "da1a6cf9-59e1-4652-b4e9-73af62b910dc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
            "uuid": "da1a6cf9-59e1-4652-b4e9-73af62b910dc",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
            "passes": [
              {
                "title": "should get value",
                "fullTitle": "SessionInformationResponseMessage #info should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.should.be.Object();",
                "isRoot": false,
                "uuid": "fb1293f0-f47b-41ac-9a09-5b8c7714fba4",
                "parentUUID": "da1a6cf9-59e1-4652-b4e9-73af62b910dc",
                "skipped": false
              },
              {
                "title": "should not have ids",
                "fullTitle": "SessionInformationResponseMessage #info should not have ids",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.host.should.not.be.null();<br>should.not.exist(m.info.host.id);",
                "isRoot": false,
                "uuid": "28ea6dbe-a40c-4c5b-b567-deaf76d4fba4",
                "parentUUID": "da1a6cf9-59e1-4652-b4e9-73af62b910dc",
                "skipped": false
              },
              {
                "title": "should promote private field _ to public field",
                "fullTitle": "SessionInformationResponseMessage #info should promote private field _ to public field",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>should.not.exist(m.info._host);<br>should.not.exist(m.info._session);<br>should.exist(m.info.host);<br>should.exist(m.info.session);<br>should.exist(m.info.session.settings.teamLeaderSelectionMethod);",
                "isRoot": false,
                "uuid": "ca5a429f-c4af-4302-a226-494e2a6fbb63",
                "parentUUID": "da1a6cf9-59e1-4652-b4e9-73af62b910dc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionInformationResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "fab0500e-bf74-47a5-99ee-c6d4d8b6c899",
                "parentUUID": "a351c57b-2999-47b4-9b32-e57c311b1249",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionInformationResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "bb7b7371-f303-4fdc-af19-c27b2bd8fad9",
                "parentUUID": "a351c57b-2999-47b4-9b32-e57c311b1249",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
            "uuid": "a351c57b-2999-47b4-9b32-e57c311b1249",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionInformationResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "fab0500e-bf74-47a5-99ee-c6d4d8b6c899",
                "parentUUID": "a351c57b-2999-47b4-9b32-e57c311b1249",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionInformationResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "bb7b7371-f303-4fdc-af19-c27b2bd8fad9",
                "parentUUID": "a351c57b-2999-47b4-9b32-e57c311b1249",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
        "uuid": "44b6e133-4b46-44cb-9118-8aeac680e914",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SetTeamNameRequestMessage",
        "suites": [
          {
            "title": "#teamName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "993e9185-1848-490d-8289-1f34999cfbea",
                "parentUUID": "1f7a029c-7757-4928-9f04-16b086477bd8",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5f19dd28-dd35-41cb-a108-d20c2542d651",
                "parentUUID": "1f7a029c-7757-4928-9f04-16b086477bd8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "uuid": "1f7a029c-7757-4928-9f04-16b086477bd8",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "993e9185-1848-490d-8289-1f34999cfbea",
                "parentUUID": "1f7a029c-7757-4928-9f04-16b086477bd8",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5f19dd28-dd35-41cb-a108-d20c2542d651",
                "parentUUID": "1f7a029c-7757-4928-9f04-16b086477bd8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "2056e0ad-080c-49ba-ae8b-b039a291095b",
                "parentUUID": "18f5dbb1-fa68-4de3-a89f-4bddcb3962c4",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "9b801522-4d90-453e-abe2-2b1d05f7d2d9",
                "parentUUID": "18f5dbb1-fa68-4de3-a89f-4bddcb3962c4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "uuid": "18f5dbb1-fa68-4de3-a89f-4bddcb3962c4",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "2056e0ad-080c-49ba-ae8b-b039a291095b",
                "parentUUID": "18f5dbb1-fa68-4de3-a89f-4bddcb3962c4",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "9b801522-4d90-453e-abe2-2b1d05f7d2d9",
                "parentUUID": "18f5dbb1-fa68-4de3-a89f-4bddcb3962c4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#contestantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "a1a68e65-9122-4dfb-8e76-e32ac170df73",
                "parentUUID": "29412075-004d-4968-935c-4bb7a8028555",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #contestantId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "03bc8213-d570-4c66-92aa-9fbafbeb717b",
                "parentUUID": "29412075-004d-4968-935c-4bb7a8028555",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "uuid": "29412075-004d-4968-935c-4bb7a8028555",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "a1a68e65-9122-4dfb-8e76-e32ac170df73",
                "parentUUID": "29412075-004d-4968-935c-4bb7a8028555",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #contestantId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "03bc8213-d570-4c66-92aa-9fbafbeb717b",
                "parentUUID": "29412075-004d-4968-935c-4bb7a8028555",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SetTeamNameRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.contestantId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "c5390756-0e4f-4160-89a0-97717949bd61",
                "parentUUID": "b0cc11b3-e4c2-43db-93b8-a88a637ecf92",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SetTeamNameRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "84799201-ad9b-4146-8959-739da0bb7137",
                "parentUUID": "b0cc11b3-e4c2-43db-93b8-a88a637ecf92",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "uuid": "b0cc11b3-e4c2-43db-93b8-a88a637ecf92",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SetTeamNameRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.contestantId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "c5390756-0e4f-4160-89a0-97717949bd61",
                "parentUUID": "b0cc11b3-e4c2-43db-93b8-a88a637ecf92",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SetTeamNameRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "84799201-ad9b-4146-8959-739da0bb7137",
                "parentUUID": "b0cc11b3-e4c2-43db-93b8-a88a637ecf92",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
        "uuid": "962d968f-c6f2-4ad0-b9c2-c914872504ec",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SuccessMessage",
        "suites": [
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SuccessMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SuccessMessage();<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "478494b0-6114-467a-9c56-a546938a41e9",
                "parentUUID": "38bda52a-5db5-4096-ad0c-d4d4e89ec8ea",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SuccessMessageTests.js",
            "uuid": "38bda52a-5db5-4096-ad0c-d4d4e89ec8ea",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SuccessMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SuccessMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SuccessMessage();<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "478494b0-6114-467a-9c56-a546938a41e9",
                "parentUUID": "38bda52a-5db5-4096-ad0c-d4d4e89ec8ea",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SuccessMessageTests.js",
        "uuid": "1a0c45a0-00c5-42b1-a339-66adbc22d8ff",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SuccessMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ParamCheck",
        "suites": [
          {
            "title": "#isInstanceAndTypeOf()",
            "suites": [],
            "tests": [
              {
                "title": "should return false when not referenced",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when not referenced",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf().should.be.false();",
                "isRoot": false,
                "uuid": "4871fb56-7f96-44ab-887f-ca960e5fe793",
                "parentUUID": "4f1bf951-651a-48a0-9fb0-9844de274624",
                "skipped": false
              },
              {
                "title": "should return false when null",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when null",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">''</span>).should.be.false();",
                "isRoot": false,
                "uuid": "70b93685-3fdb-4940-891c-aec2bbb4459f",
                "parentUUID": "4f1bf951-651a-48a0-9fb0-9844de274624",
                "skipped": false
              },
              {
                "title": "should return false when not the correct type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when not the correct type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'Int'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "26866e5d-7350-456f-b95b-8865922b621d",
                "parentUUID": "4f1bf951-651a-48a0-9fb0-9844de274624",
                "skipped": false
              },
              {
                "title": "should return true when is a built-in type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return true when is a built-in type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'Number'</span>).should.be.true();",
                "isRoot": false,
                "uuid": "7661da0c-b11d-4ac8-9cce-8fff3294302a",
                "parentUUID": "4f1bf951-651a-48a0-9fb0-9844de274624",
                "skipped": false
              },
              {
                "title": "should return true when is user defined type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return true when is user defined type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-keyword\">new</span> UserDefinedType(),<br>    UserDefinedType).should.be.true();",
                "isRoot": false,
                "uuid": "4c963f1c-9126-42b0-b1d8-2f1619aa5f43",
                "parentUUID": "4f1bf951-651a-48a0-9fb0-9844de274624",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParamCheckTests.js",
            "uuid": "4f1bf951-651a-48a0-9fb0-9844de274624",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParamCheckTests.js",
            "passes": [
              {
                "title": "should return false when not referenced",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when not referenced",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf().should.be.false();",
                "isRoot": false,
                "uuid": "4871fb56-7f96-44ab-887f-ca960e5fe793",
                "parentUUID": "4f1bf951-651a-48a0-9fb0-9844de274624",
                "skipped": false
              },
              {
                "title": "should return false when null",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when null",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">''</span>).should.be.false();",
                "isRoot": false,
                "uuid": "70b93685-3fdb-4940-891c-aec2bbb4459f",
                "parentUUID": "4f1bf951-651a-48a0-9fb0-9844de274624",
                "skipped": false
              },
              {
                "title": "should return false when not the correct type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when not the correct type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'Int'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "26866e5d-7350-456f-b95b-8865922b621d",
                "parentUUID": "4f1bf951-651a-48a0-9fb0-9844de274624",
                "skipped": false
              },
              {
                "title": "should return true when is a built-in type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return true when is a built-in type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'Number'</span>).should.be.true();",
                "isRoot": false,
                "uuid": "7661da0c-b11d-4ac8-9cce-8fff3294302a",
                "parentUUID": "4f1bf951-651a-48a0-9fb0-9844de274624",
                "skipped": false
              },
              {
                "title": "should return true when is user defined type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return true when is user defined type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-keyword\">new</span> UserDefinedType(),<br>    UserDefinedType).should.be.true();",
                "isRoot": false,
                "uuid": "4c963f1c-9126-42b0-b1d8-2f1619aa5f43",
                "parentUUID": "4f1bf951-651a-48a0-9fb0-9844de274624",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/ParamCheckTests.js",
        "uuid": "57136af2-aba7-4e09-9e89-d8c456cf94d5",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParamCheckTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Participants",
        "suites": [
          {
            "title": "#all",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participants #all should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "22092ca8-5917-4e3c-8bf0-7924e2e34c26",
                "parentUUID": "ecb882c3-b53b-4245-84b7-a0399604a691",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participants #all should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "39ab46bb-1c06-40b0-9d31-6b005eff1c89",
                "parentUUID": "ecb882c3-b53b-4245-84b7-a0399604a691",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Participants #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all.pop();<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "6f39a3c2-2992-4f2d-b817-b54c905110d3",
                "parentUUID": "ecb882c3-b53b-4245-84b7-a0399604a691",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "ecb882c3-b53b-4245-84b7-a0399604a691",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participants #all should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "22092ca8-5917-4e3c-8bf0-7924e2e34c26",
                "parentUUID": "ecb882c3-b53b-4245-84b7-a0399604a691",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participants #all should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "39ab46bb-1c06-40b0-9d31-6b005eff1c89",
                "parentUUID": "ecb882c3-b53b-4245-84b7-a0399604a691",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Participants #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all.pop();<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "6f39a3c2-2992-4f2d-b817-b54c905110d3",
                "parentUUID": "ecb882c3-b53b-4245-84b7-a0399604a691",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#length",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participants #length should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.length = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "1fc8a802-0bd2-48d5-b7e5-2dff2829af68",
                "parentUUID": "d6161e8d-0f1a-42fc-9f25-247d53c6b750",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participants #length should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "00cdcf50-d34b-4d87-b6a4-631b759b4c91",
                "parentUUID": "d6161e8d-0f1a-42fc-9f25-247d53c6b750",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "d6161e8d-0f1a-42fc-9f25-247d53c6b750",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participants #length should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.length = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "1fc8a802-0bd2-48d5-b7e5-2dff2829af68",
                "parentUUID": "d6161e8d-0f1a-42fc-9f25-247d53c6b750",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participants #length should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "00cdcf50-d34b-4d87-b6a4-631b759b4c91",
                "parentUUID": "d6161e8d-0f1a-42fc-9f25-247d53c6b750",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#contains(id)",
            "suites": [],
            "tests": [
              {
                "title": "should return true when id does exist",
                "fullTitle": "Participants #contains(id) should return true when id does exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(p.id).should.be.true();",
                "isRoot": false,
                "uuid": "494bf3a6-51cf-4771-a041-32ed235caa50",
                "parentUUID": "f7641632-5b6c-4a8f-abb7-ed952860a07d",
                "skipped": false
              },
              {
                "title": "should return false when id does not exist",
                "fullTitle": "Participants #contains(id) should return false when id does not exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(<span class=\"hljs-string\">'p2'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "93ad98be-e679-4591-bd21-9f1e984de016",
                "parentUUID": "f7641632-5b6c-4a8f-abb7-ed952860a07d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "f7641632-5b6c-4a8f-abb7-ed952860a07d",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should return true when id does exist",
                "fullTitle": "Participants #contains(id) should return true when id does exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(p.id).should.be.true();",
                "isRoot": false,
                "uuid": "494bf3a6-51cf-4771-a041-32ed235caa50",
                "parentUUID": "f7641632-5b6c-4a8f-abb7-ed952860a07d",
                "skipped": false
              },
              {
                "title": "should return false when id does not exist",
                "fullTitle": "Participants #contains(id) should return false when id does not exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(<span class=\"hljs-string\">'p2'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "93ad98be-e679-4591-bd21-9f1e984de016",
                "parentUUID": "f7641632-5b6c-4a8f-abb7-ed952860a07d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#add(participant)",
            "suites": [],
            "tests": [
              {
                "title": "should add the given participant",
                "fullTitle": "Participants #add(participant) should add the given participant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc._participants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc._participants[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "958401e4-c712-4946-834b-872bca5345af",
                "parentUUID": "8c576f35-f5b8-4806-bc49-d1afc03cc835",
                "skipped": false
              },
              {
                "title": "should error if participant with id already exists",
                "fullTitle": "Participants #add(participant) should error if participant with id already exists",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.add(p);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "af0020c7-6248-4f8d-b6cf-426b03d95a35",
                "parentUUID": "8c576f35-f5b8-4806-bc49-d1afc03cc835",
                "skipped": false
              },
              {
                "title": "should emit add event",
                "fullTitle": "Participants #add(participant) should emit add event",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.on(<span class=\"hljs-string\">'add'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">participant</span>) </span>{<br>    participant.should.equal(p);<br>    done();<br>});<br>pc.add(p);",
                "isRoot": false,
                "uuid": "c52fbe5e-e8e9-4ab0-b81a-535eb33dbffe",
                "parentUUID": "8c576f35-f5b8-4806-bc49-d1afc03cc835",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "8c576f35-f5b8-4806-bc49-d1afc03cc835",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should add the given participant",
                "fullTitle": "Participants #add(participant) should add the given participant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc._participants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc._participants[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "958401e4-c712-4946-834b-872bca5345af",
                "parentUUID": "8c576f35-f5b8-4806-bc49-d1afc03cc835",
                "skipped": false
              },
              {
                "title": "should error if participant with id already exists",
                "fullTitle": "Participants #add(participant) should error if participant with id already exists",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.add(p);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "af0020c7-6248-4f8d-b6cf-426b03d95a35",
                "parentUUID": "8c576f35-f5b8-4806-bc49-d1afc03cc835",
                "skipped": false
              },
              {
                "title": "should emit add event",
                "fullTitle": "Participants #add(participant) should emit add event",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.on(<span class=\"hljs-string\">'add'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">participant</span>) </span>{<br>    participant.should.equal(p);<br>    done();<br>});<br>pc.add(p);",
                "isRoot": false,
                "uuid": "c52fbe5e-e8e9-4ab0-b81a-535eb33dbffe",
                "parentUUID": "8c576f35-f5b8-4806-bc49-d1afc03cc835",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#remove(participant)",
            "suites": [],
            "tests": [
              {
                "title": "should remove the existing participant",
                "fullTitle": "Participants #remove(participant) should remove the existing participant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "16ba96f7-a79f-4bdb-b437-d56720c95f65",
                "parentUUID": "fb9ebb16-6d7d-4e37-8fde-5f6ee58a8565",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing participant",
                "fullTitle": "Participants #remove(participant) should not remove the non-existing participant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p1).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "a5bb78ac-7059-4ff0-897f-fa776390cfbe",
                "parentUUID": "fb9ebb16-6d7d-4e37-8fde-5f6ee58a8565",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "fb9ebb16-6d7d-4e37-8fde-5f6ee58a8565",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should remove the existing participant",
                "fullTitle": "Participants #remove(participant) should remove the existing participant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "16ba96f7-a79f-4bdb-b437-d56720c95f65",
                "parentUUID": "fb9ebb16-6d7d-4e37-8fde-5f6ee58a8565",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing participant",
                "fullTitle": "Participants #remove(participant) should not remove the non-existing participant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p1).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "a5bb78ac-7059-4ff0-897f-fa776390cfbe",
                "parentUUID": "fb9ebb16-6d7d-4e37-8fde-5f6ee58a8565",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#removeById(id)",
            "suites": [],
            "tests": [
              {
                "title": "should remove the existing participant",
                "fullTitle": "Participants #removeById(id) should remove the existing participant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p.id).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "2dba0a81-48df-4445-90e4-6e5e1ab37e77",
                "parentUUID": "888553cb-493f-4cfa-9e87-c6837629ab63",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing participant",
                "fullTitle": "Participants #removeById(id) should not remove the non-existing participant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p1.id).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "7d9aecb1-3b9e-41ed-9c7a-b1daf524261d",
                "parentUUID": "888553cb-493f-4cfa-9e87-c6837629ab63",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "888553cb-493f-4cfa-9e87-c6837629ab63",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should remove the existing participant",
                "fullTitle": "Participants #removeById(id) should remove the existing participant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p.id).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "2dba0a81-48df-4445-90e4-6e5e1ab37e77",
                "parentUUID": "888553cb-493f-4cfa-9e87-c6837629ab63",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing participant",
                "fullTitle": "Participants #removeById(id) should not remove the non-existing participant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p1.id).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "7d9aecb1-3b9e-41ed-9c7a-b1daf524261d",
                "parentUUID": "888553cb-493f-4cfa-9e87-c6837629ab63",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/ParticipantsTests.js",
        "uuid": "725c3aa4-3729-4868-8669-19a9bae5c957",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Participant",
        "suites": [
          {
            "title": "#id",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Participant #id should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'id_test'</span>;<br>p._id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "2aa988fa-f6cd-498a-a4dc-9909ebbd47c0",
                "parentUUID": "398b114e-078f-4806-9a7c-d34ae2264dce",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participant #id should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "37eb3ba8-85db-412c-9c39-acec30017c05",
                "parentUUID": "398b114e-078f-4806-9a7c-d34ae2264dce",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantTests.js",
            "uuid": "398b114e-078f-4806-9a7c-d34ae2264dce",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Participant #id should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'id_test'</span>;<br>p._id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "2aa988fa-f6cd-498a-a4dc-9909ebbd47c0",
                "parentUUID": "398b114e-078f-4806-9a7c-d34ae2264dce",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participant #id should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "37eb3ba8-85db-412c-9c39-acec30017c05",
                "parentUUID": "398b114e-078f-4806-9a7c-d34ae2264dce",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isDisconnected",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participant #isDisconnected should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    p.isDisconnected = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "868a3925-3a20-40d8-8d64-47dbb90bcf92",
                "parentUUID": "a34f9ec3-78fa-4b9b-a384-d7beb428ac52",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participant #isDisconnected should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "c9fbd0c5-ecf4-433d-a2e5-46a216599aec",
                "parentUUID": "a34f9ec3-78fa-4b9b-a384-d7beb428ac52",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantTests.js",
            "uuid": "a34f9ec3-78fa-4b9b-a384-d7beb428ac52",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participant #isDisconnected should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    p.isDisconnected = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "868a3925-3a20-40d8-8d64-47dbb90bcf92",
                "parentUUID": "a34f9ec3-78fa-4b9b-a384-d7beb428ac52",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participant #isDisconnected should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "c9fbd0c5-ecf4-433d-a2e5-46a216599aec",
                "parentUUID": "a34f9ec3-78fa-4b9b-a384-d7beb428ac52",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#disconnect()",
            "suites": [],
            "tests": [
              {
                "title": "should change participant state to disconnected",
                "fullTitle": "Participant #disconnect() should change participant state to disconnected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">false</span>;<br>p.disconnect();<br>p.isDisconnected.should.be.true();",
                "isRoot": false,
                "uuid": "2391fa56-276f-46fa-adff-eb319087a559",
                "parentUUID": "df5b544d-d9a9-49c8-bb5d-ca72e77ee7b8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantTests.js",
            "uuid": "df5b544d-d9a9-49c8-bb5d-ca72e77ee7b8",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantTests.js",
            "passes": [
              {
                "title": "should change participant state to disconnected",
                "fullTitle": "Participant #disconnect() should change participant state to disconnected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">false</span>;<br>p.disconnect();<br>p.isDisconnected.should.be.true();",
                "isRoot": false,
                "uuid": "2391fa56-276f-46fa-adff-eb319087a559",
                "parentUUID": "df5b544d-d9a9-49c8-bb5d-ca72e77ee7b8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#reconnect()",
            "suites": [],
            "tests": [
              {
                "title": "should change participant state to connected",
                "fullTitle": "Participant #reconnect() should change participant state to connected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">true</span>;<br>p.reconnect();<br>p.isDisconnected.should.be.false();",
                "isRoot": false,
                "uuid": "b24588e1-4b8a-49fe-bfb4-0e1476fb8a26",
                "parentUUID": "f845f156-6b72-4325-92fd-54d93004a9fe",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantTests.js",
            "uuid": "f845f156-6b72-4325-92fd-54d93004a9fe",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantTests.js",
            "passes": [
              {
                "title": "should change participant state to connected",
                "fullTitle": "Participant #reconnect() should change participant state to connected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">true</span>;<br>p.reconnect();<br>p.isDisconnected.should.be.false();",
                "isRoot": false,
                "uuid": "b24588e1-4b8a-49fe-bfb4-0e1476fb8a26",
                "parentUUID": "f845f156-6b72-4325-92fd-54d93004a9fe",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/ParticipantTests.js",
        "uuid": "e039901f-4a18-49cf-92c8-5d26ee62b9ec",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Sessions",
        "suites": [
          {
            "title": "#all",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Sessions #all should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    sc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "143d79a7-c43c-4733-a526-fd852d6ddd00",
                "parentUUID": "350559c6-64c9-41a4-849e-7a930dc1dbf2",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Sessions #all should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
                "isRoot": false,
                "uuid": "428d6a5f-62ab-47d7-8f42-ab4729fbb5b1",
                "parentUUID": "350559c6-64c9-41a4-849e-7a930dc1dbf2",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Sessions #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all.pop();<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
                "isRoot": false,
                "uuid": "4d42b64d-db7f-4a3a-a206-528074b8628f",
                "parentUUID": "350559c6-64c9-41a4-849e-7a930dc1dbf2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionsTests.js",
            "uuid": "350559c6-64c9-41a4-849e-7a930dc1dbf2",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionsTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Sessions #all should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    sc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "143d79a7-c43c-4733-a526-fd852d6ddd00",
                "parentUUID": "350559c6-64c9-41a4-849e-7a930dc1dbf2",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Sessions #all should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
                "isRoot": false,
                "uuid": "428d6a5f-62ab-47d7-8f42-ab4729fbb5b1",
                "parentUUID": "350559c6-64c9-41a4-849e-7a930dc1dbf2",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Sessions #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all.pop();<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
                "isRoot": false,
                "uuid": "4d42b64d-db7f-4a3a-a206-528074b8628f",
                "parentUUID": "350559c6-64c9-41a4-849e-7a930dc1dbf2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#add(host, settings)",
            "suites": [],
            "tests": [
              {
                "title": "add and return session",
                "fullTitle": "Sessions #add(host, settings) add and return session",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-keyword\">var</span> ses = sc.add(h, s);<br>ses.should.be.instanceof(Session);",
                "isRoot": false,
                "uuid": "1fc717db-7827-42f1-9812-c0c0f61e8395",
                "parentUUID": "7f43145a-e2c5-4212-8658-a1be15c70584",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionsTests.js",
            "uuid": "7f43145a-e2c5-4212-8658-a1be15c70584",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionsTests.js",
            "passes": [
              {
                "title": "add and return session",
                "fullTitle": "Sessions #add(host, settings) add and return session",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-keyword\">var</span> ses = sc.add(h, s);<br>ses.should.be.instanceof(Session);",
                "isRoot": false,
                "uuid": "1fc717db-7827-42f1-9812-c0c0f61e8395",
                "parentUUID": "7f43145a-e2c5-4212-8658-a1be15c70584",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#getById(id)",
            "suites": [],
            "tests": [
              {
                "title": "when given valid id should return session",
                "fullTitle": "Sessions #getById(id) when given valid id should return session",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-comment\">/* eslint-disable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses1 = sc.add(h, s);<br><span class=\"hljs-comment\">/* eslint-enable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses2 = sc.add(h, s);<br><span class=\"hljs-keyword\">var</span> sessionLocate = sc.getById(ses2.id);<br>sessionLocate.should.be.instanceof(Session)<br>    .and.equal(ses2);",
                "isRoot": false,
                "uuid": "bc10ad0f-8618-4d94-9f29-ec2be0b2891b",
                "parentUUID": "e0d9a539-ff05-4d09-b36f-1d195fac94a8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionsTests.js",
            "uuid": "e0d9a539-ff05-4d09-b36f-1d195fac94a8",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionsTests.js",
            "passes": [
              {
                "title": "when given valid id should return session",
                "fullTitle": "Sessions #getById(id) when given valid id should return session",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-comment\">/* eslint-disable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses1 = sc.add(h, s);<br><span class=\"hljs-comment\">/* eslint-enable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses2 = sc.add(h, s);<br><span class=\"hljs-keyword\">var</span> sessionLocate = sc.getById(ses2.id);<br>sessionLocate.should.be.instanceof(Session)<br>    .and.equal(ses2);",
                "isRoot": false,
                "uuid": "bc10ad0f-8618-4d94-9f29-ec2be0b2891b",
                "parentUUID": "e0d9a539-ff05-4d09-b36f-1d195fac94a8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#purgeCompleted()",
            "suites": [],
            "tests": [
              {
                "title": "should remove complete sc",
                "fullTitle": "Sessions #purgeCompleted() should remove complete sc",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.all[<span class=\"hljs-number\">0</span>].complete();<br>sc.all[<span class=\"hljs-number\">1</span>].complete();<br>sc.purgeCompleted();<br>sc.all.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "7e3916e3-f11c-4027-8997-6224a2b04874",
                "parentUUID": "8446fb2a-0059-4f6e-9207-8aa4ae5f8925",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionsTests.js",
            "uuid": "8446fb2a-0059-4f6e-9207-8aa4ae5f8925",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionsTests.js",
            "passes": [
              {
                "title": "should remove complete sc",
                "fullTitle": "Sessions #purgeCompleted() should remove complete sc",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.all[<span class=\"hljs-number\">0</span>].complete();<br>sc.all[<span class=\"hljs-number\">1</span>].complete();<br>sc.purgeCompleted();<br>sc.all.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "7e3916e3-f11c-4027-8997-6224a2b04874",
                "parentUUID": "8446fb2a-0059-4f6e-9207-8aa4ae5f8925",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/SessionsTests.js",
        "uuid": "e8568cd2-db3a-452b-96df-bbeeed18eb0e",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionsTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Session",
        "suites": [
          {
            "title": "#constructor",
            "suites": [],
            "tests": [
              {
                "title": "should create teams",
                "fullTitle": "Session #constructor should create teams",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "0bb99c80-6b73-4dc6-8d6b-0eaf4d18de53",
                "parentUUID": "9054e9d8-92a0-4cab-93cd-fd8c2ada2520",
                "skipped": false
              },
              {
                "title": "should not create teams",
                "fullTitle": "Session #constructor should not create teams",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>should(s.teams).be.null();",
                "isRoot": false,
                "uuid": "d15ee5e8-baa5-43dc-bc4d-6000d8bdb0b1",
                "parentUUID": "9054e9d8-92a0-4cab-93cd-fd8c2ada2520",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "9054e9d8-92a0-4cab-93cd-fd8c2ada2520",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should create teams",
                "fullTitle": "Session #constructor should create teams",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "0bb99c80-6b73-4dc6-8d6b-0eaf4d18de53",
                "parentUUID": "9054e9d8-92a0-4cab-93cd-fd8c2ada2520",
                "skipped": false
              },
              {
                "title": "should not create teams",
                "fullTitle": "Session #constructor should not create teams",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>should(s.teams).be.null();",
                "isRoot": false,
                "uuid": "d15ee5e8-baa5-43dc-bc4d-6000d8bdb0b1",
                "parentUUID": "9054e9d8-92a0-4cab-93cd-fd8c2ada2520",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "#id",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #id should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.id = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "36fbf10a-bb6e-4449-adbf-1afaeba31d01",
                "parentUUID": "b1722528-06de-4fb2-9218-f6a9016cde75",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #id should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "c03b1b0a-401b-4bf1-9769-88a51e928573",
                "parentUUID": "b1722528-06de-4fb2-9218-f6a9016cde75",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "b1722528-06de-4fb2-9218-f6a9016cde75",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #id should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.id = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "36fbf10a-bb6e-4449-adbf-1afaeba31d01",
                "parentUUID": "b1722528-06de-4fb2-9218-f6a9016cde75",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #id should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "c03b1b0a-401b-4bf1-9769-88a51e928573",
                "parentUUID": "b1722528-06de-4fb2-9218-f6a9016cde75",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#roundsPlayed",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #roundsPlayed should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundsPlayed = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "a1941143-b235-4c0d-b247-f2da4e8b96fb",
                "parentUUID": "84ea6f88-1bc5-45dd-8e69-46f71d342641",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #roundsPlayed should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "eafe1aa3-9d72-4e5d-a8ec-945f9cacbde3",
                "parentUUID": "84ea6f88-1bc5-45dd-8e69-46f71d342641",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "84ea6f88-1bc5-45dd-8e69-46f71d342641",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #roundsPlayed should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundsPlayed = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "a1941143-b235-4c0d-b247-f2da4e8b96fb",
                "parentUUID": "84ea6f88-1bc5-45dd-8e69-46f71d342641",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #roundsPlayed should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "eafe1aa3-9d72-4e5d-a8ec-945f9cacbde3",
                "parentUUID": "84ea6f88-1bc5-45dd-8e69-46f71d342641",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#previousWinners",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #previousWinners should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.previousWinners = [<span class=\"hljs-string\">'SomeWinner'</span>];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "638166e9-96d1-4a97-8728-e7f990a7a377",
                "parentUUID": "d62b3771-d44f-49e0-af89-d2e20818e76e",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #previousWinners should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._previousWinners = [<span class=\"hljs-string\">'Winner1'</span>, <span class=\"hljs-string\">'Winner2'</span>];<br>s.previousWinners.should.be.Array();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
                "isRoot": false,
                "uuid": "030fc3bc-d27d-4917-91d0-5e0143e172bb",
                "parentUUID": "d62b3771-d44f-49e0-af89-d2e20818e76e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "d62b3771-d44f-49e0-af89-d2e20818e76e",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #previousWinners should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.previousWinners = [<span class=\"hljs-string\">'SomeWinner'</span>];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "638166e9-96d1-4a97-8728-e7f990a7a377",
                "parentUUID": "d62b3771-d44f-49e0-af89-d2e20818e76e",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #previousWinners should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._previousWinners = [<span class=\"hljs-string\">'Winner1'</span>, <span class=\"hljs-string\">'Winner2'</span>];<br>s.previousWinners.should.be.Array();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
                "isRoot": false,
                "uuid": "030fc3bc-d27d-4917-91d0-5e0143e172bb",
                "parentUUID": "d62b3771-d44f-49e0-af89-d2e20818e76e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#roundWinner",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #roundWinner should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundWinner = <span class=\"hljs-string\">'SomeWinner'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "88e3024b-098c-4bac-b0ea-2bfc7bbc3062",
                "parentUUID": "3f0a6fb6-f6c8-4b99-8f29-ec7906011849",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #roundWinner should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundWinner = <span class=\"hljs-string\">'Winner1'</span>;<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
                "isRoot": false,
                "uuid": "a96d3c9e-7a52-4b3b-b781-c1e88ec3803f",
                "parentUUID": "3f0a6fb6-f6c8-4b99-8f29-ec7906011849",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "3f0a6fb6-f6c8-4b99-8f29-ec7906011849",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #roundWinner should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundWinner = <span class=\"hljs-string\">'SomeWinner'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "88e3024b-098c-4bac-b0ea-2bfc7bbc3062",
                "parentUUID": "3f0a6fb6-f6c8-4b99-8f29-ec7906011849",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #roundWinner should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundWinner = <span class=\"hljs-string\">'Winner1'</span>;<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
                "isRoot": false,
                "uuid": "a96d3c9e-7a52-4b3b-b781-c1e88ec3803f",
                "parentUUID": "3f0a6fb6-f6c8-4b99-8f29-ec7906011849",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isSessionCompleted",
            "suites": [],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "6600b961-78b8-4390-8106-236eaee4882f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasSuites": false,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#observers",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #observers should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.observers = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "463d56dd-c1ad-4822-a41e-3fe3807d8e13",
                "parentUUID": "26fb33f4-b503-458c-b454-c3f18f766283",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #observers should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.observers.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.observers[<span class=\"hljs-number\">0</span>].should.equal(observer);",
                "isRoot": false,
                "uuid": "78ea2a36-e6e8-4571-8d9f-ec85747cb797",
                "parentUUID": "26fb33f4-b503-458c-b454-c3f18f766283",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "26fb33f4-b503-458c-b454-c3f18f766283",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #observers should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.observers = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "463d56dd-c1ad-4822-a41e-3fe3807d8e13",
                "parentUUID": "26fb33f4-b503-458c-b454-c3f18f766283",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #observers should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.observers.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.observers[<span class=\"hljs-number\">0</span>].should.equal(observer);",
                "isRoot": false,
                "uuid": "78ea2a36-e6e8-4571-8d9f-ec85747cb797",
                "parentUUID": "26fb33f4-b503-458c-b454-c3f18f766283",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#contestants",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #contestants should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.contestants = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "4b8549f2-d0f0-431b-88e5-ee58cb26ce77",
                "parentUUID": "9b759a65-053a-478f-8472-965cd15e2f52",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #contestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.contestants[<span class=\"hljs-number\">0</span>].should.equal(contestant);",
                "isRoot": false,
                "uuid": "f7d3796d-af9b-4f13-bbd9-3ffbcc785034",
                "parentUUID": "9b759a65-053a-478f-8472-965cd15e2f52",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "9b759a65-053a-478f-8472-965cd15e2f52",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #contestants should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.contestants = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "4b8549f2-d0f0-431b-88e5-ee58cb26ce77",
                "parentUUID": "9b759a65-053a-478f-8472-965cd15e2f52",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #contestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.contestants[<span class=\"hljs-number\">0</span>].should.equal(contestant);",
                "isRoot": false,
                "uuid": "f7d3796d-af9b-4f13-bbd9-3ffbcc785034",
                "parentUUID": "9b759a65-053a-478f-8472-965cd15e2f52",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#host",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #host should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.host = host;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "5533adcc-4438-47e2-83e8-59afb6371b95",
                "parentUUID": "e1ad54ee-9a68-440c-9be8-df039070715a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #host should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.host.should.equal(host);",
                "isRoot": false,
                "uuid": "ace87328-6ecc-43eb-bb47-7642df980be3",
                "parentUUID": "e1ad54ee-9a68-440c-9be8-df039070715a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "e1ad54ee-9a68-440c-9be8-df039070715a",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #host should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.host = host;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "5533adcc-4438-47e2-83e8-59afb6371b95",
                "parentUUID": "e1ad54ee-9a68-440c-9be8-df039070715a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #host should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.host.should.equal(host);",
                "isRoot": false,
                "uuid": "ace87328-6ecc-43eb-bb47-7642df980be3",
                "parentUUID": "e1ad54ee-9a68-440c-9be8-df039070715a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#currentState",
            "suites": [],
            "tests": [
              {
                "title": "should get value",
                "fullTitle": "Session #currentState should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
                "isRoot": false,
                "uuid": "626d9efd-0582-49a4-99d2-56f2edc412a1",
                "parentUUID": "0bd95c26-c26e-4424-ad01-59480d60347e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "0bd95c26-c26e-4424-ad01-59480d60347e",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should get value",
                "fullTitle": "Session #currentState should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
                "isRoot": false,
                "uuid": "626d9efd-0582-49a4-99d2-56f2edc412a1",
                "parentUUID": "0bd95c26-c26e-4424-ad01-59480d60347e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#incrementRoundsPlayed()",
            "suites": [],
            "tests": [
              {
                "title": "should increment rounds played",
                "fullTitle": "Session #incrementRoundsPlayed() should increment rounds played",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.incrementRoundsPlayed();<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "c9a1f4bb-024f-4f02-a1a5-6675047ec653",
                "parentUUID": "6f3bf7eb-dd03-4fb9-9a98-e8746d55f0a0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "6f3bf7eb-dd03-4fb9-9a98-e8746d55f0a0",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should increment rounds played",
                "fullTitle": "Session #incrementRoundsPlayed() should increment rounds played",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.incrementRoundsPlayed();<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "c9a1f4bb-024f-4f02-a1a5-6675047ec653",
                "parentUUID": "6f3bf7eb-dd03-4fb9-9a98-e8746d55f0a0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#addContestant(contestant)",
            "suites": [
              {
                "title": "when in individual mode",
                "suites": [],
                "tests": [
                  {
                    "title": "should add contestant when session is not full",
                    "fullTitle": "#addContestant(contestant) when in individual mode should add contestant when session is not full",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
                    "isRoot": false,
                    "uuid": "be2ce9e5-c1b3-4a02-9879-55b64e63cec1",
                    "parentUUID": "a6b025c3-fd9f-48b5-90e4-177215d4c881",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when session is full",
                    "fullTitle": "#addContestant(contestant) when in individual mode should not add contestant when session is full",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br>s.addContestant(c2);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();",
                    "isRoot": false,
                    "uuid": "6b9adfa7-3504-40ef-bace-1b96cbd653b1",
                    "parentUUID": "a6b025c3-fd9f-48b5-90e4-177215d4c881",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when username is already taken",
                    "fullTitle": "#addContestant(contestant) when in individual mode should not add contestant when username is already taken",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "e3b98d1a-e304-41fa-8d8e-f4099bef0140",
                    "parentUUID": "a6b025c3-fd9f-48b5-90e4-177215d4c881",
                    "skipped": false
                  },
                  {
                    "title": "BUG# username case should not matter",
                    "fullTitle": "#addContestant(contestant) when in individual mode BUG# username case should not matter",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'abc1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'ABC1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "7a4961b0-77dc-4af9-84a7-7b2288eae401",
                    "parentUUID": "a6b025c3-fd9f-48b5-90e4-177215d4c881",
                    "skipped": false
                  },
                  {
                    "title": "should allow unlimited contestants when max is set to constants.UNLIMITED",
                    "fullTitle": "#addContestant(contestant) when in individual mode should allow unlimited contestants when max is set to constants.UNLIMITED",
                    "timedOut": false,
                    "duration": 526,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = constants.UNLIMITED;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    <span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>    c.username = <span class=\"hljs-string\">'c'</span> + i;<br>    <span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>    response.wasSuccessful.should.be.true();<br>}",
                    "isRoot": false,
                    "uuid": "52643923-fdc1-4cdd-9b8c-3c99eb13f3d5",
                    "parentUUID": "a6b025c3-fd9f-48b5-90e4-177215d4c881",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "a6b025c3-fd9f-48b5-90e4-177215d4c881",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should add contestant when session is not full",
                    "fullTitle": "#addContestant(contestant) when in individual mode should add contestant when session is not full",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
                    "isRoot": false,
                    "uuid": "be2ce9e5-c1b3-4a02-9879-55b64e63cec1",
                    "parentUUID": "a6b025c3-fd9f-48b5-90e4-177215d4c881",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when session is full",
                    "fullTitle": "#addContestant(contestant) when in individual mode should not add contestant when session is full",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br>s.addContestant(c2);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();",
                    "isRoot": false,
                    "uuid": "6b9adfa7-3504-40ef-bace-1b96cbd653b1",
                    "parentUUID": "a6b025c3-fd9f-48b5-90e4-177215d4c881",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when username is already taken",
                    "fullTitle": "#addContestant(contestant) when in individual mode should not add contestant when username is already taken",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "e3b98d1a-e304-41fa-8d8e-f4099bef0140",
                    "parentUUID": "a6b025c3-fd9f-48b5-90e4-177215d4c881",
                    "skipped": false
                  },
                  {
                    "title": "BUG# username case should not matter",
                    "fullTitle": "#addContestant(contestant) when in individual mode BUG# username case should not matter",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'abc1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'ABC1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "7a4961b0-77dc-4af9-84a7-7b2288eae401",
                    "parentUUID": "a6b025c3-fd9f-48b5-90e4-177215d4c881",
                    "skipped": false
                  },
                  {
                    "title": "should allow unlimited contestants when max is set to constants.UNLIMITED",
                    "fullTitle": "#addContestant(contestant) when in individual mode should allow unlimited contestants when max is set to constants.UNLIMITED",
                    "timedOut": false,
                    "duration": 526,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = constants.UNLIMITED;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    <span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>    c.username = <span class=\"hljs-string\">'c'</span> + i;<br>    <span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>    response.wasSuccessful.should.be.true();<br>}",
                    "isRoot": false,
                    "uuid": "52643923-fdc1-4cdd-9b8c-3c99eb13f3d5",
                    "parentUUID": "a6b025c3-fd9f-48b5-90e4-177215d4c881",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 5,
                "totalPasses": 5,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 530
              },
              {
                "title": "when in team mode",
                "suites": [],
                "tests": [
                  {
                    "title": "should add contestant when teams is not full",
                    "fullTitle": "#addContestant(contestant) when in team mode should add contestant when teams is not full",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
                    "isRoot": false,
                    "uuid": "81e06a37-d86a-4c80-9f54-53fa5c5e2921",
                    "parentUUID": "8eab7b6e-3819-44a2-998c-567a59671636",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when teams are full",
                    "fullTitle": "#addContestant(contestant) when in team mode should not add contestant when teams are full",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.TEAMS_ARE_FULL);",
                    "isRoot": false,
                    "uuid": "30e4dbcb-4872-4775-bda7-672546ce3408",
                    "parentUUID": "8eab7b6e-3819-44a2-998c-567a59671636",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when username is already taken",
                    "fullTitle": "#addContestant(contestant) when in team mode should not add contestant when username is already taken",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "58aaf4ac-5082-45bc-a795-955fe08b124a",
                    "parentUUID": "8eab7b6e-3819-44a2-998c-567a59671636",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "8eab7b6e-3819-44a2-998c-567a59671636",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should add contestant when teams is not full",
                    "fullTitle": "#addContestant(contestant) when in team mode should add contestant when teams is not full",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
                    "isRoot": false,
                    "uuid": "81e06a37-d86a-4c80-9f54-53fa5c5e2921",
                    "parentUUID": "8eab7b6e-3819-44a2-998c-567a59671636",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when teams are full",
                    "fullTitle": "#addContestant(contestant) when in team mode should not add contestant when teams are full",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.TEAMS_ARE_FULL);",
                    "isRoot": false,
                    "uuid": "30e4dbcb-4872-4775-bda7-672546ce3408",
                    "parentUUID": "8eab7b6e-3819-44a2-998c-567a59671636",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when username is already taken",
                    "fullTitle": "#addContestant(contestant) when in team mode should not add contestant when username is already taken",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "58aaf4ac-5082-45bc-a795-955fe08b124a",
                    "parentUUID": "8eab7b6e-3819-44a2-998c-567a59671636",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 5
              }
            ],
            "tests": [
              {
                "title": "should not allow a contestant username with bad words",
                "fullTitle": "Session #addContestant(contestant) should not allow a contestant username with bad words",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Penis #YOLO'</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_CONTAINS_PROFANITY);",
                "isRoot": false,
                "uuid": "deb6c084-ceaf-4b29-a147-5f0fc02a8ac7",
                "parentUUID": "bad57681-2cf9-47d3-8af5-120f9b75a3bc",
                "skipped": false
              },
              {
                "title": "should not allow when username is empty",
                "fullTitle": "Session #addContestant(contestant) should not allow when username is empty",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">' '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_IS_REQUIRED);",
                "isRoot": false,
                "uuid": "a91db255-38fe-4bdf-b656-d6f9f1ccb85e",
                "parentUUID": "bad57681-2cf9-47d3-8af5-120f9b75a3bc",
                "skipped": false
              },
              {
                "title": "should trim username",
                "fullTitle": "Session #addContestant(contestant) should trim username",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Wade  '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>c.username.should.equal(<span class=\"hljs-string\">'Wade'</span>);",
                "isRoot": false,
                "uuid": "3a1ecce2-78a2-479b-866a-04dfba6d0d0b",
                "parentUUID": "bad57681-2cf9-47d3-8af5-120f9b75a3bc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "bad57681-2cf9-47d3-8af5-120f9b75a3bc",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should not allow a contestant username with bad words",
                "fullTitle": "Session #addContestant(contestant) should not allow a contestant username with bad words",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Penis #YOLO'</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_CONTAINS_PROFANITY);",
                "isRoot": false,
                "uuid": "deb6c084-ceaf-4b29-a147-5f0fc02a8ac7",
                "parentUUID": "bad57681-2cf9-47d3-8af5-120f9b75a3bc",
                "skipped": false
              },
              {
                "title": "should not allow when username is empty",
                "fullTitle": "Session #addContestant(contestant) should not allow when username is empty",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">' '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_IS_REQUIRED);",
                "isRoot": false,
                "uuid": "a91db255-38fe-4bdf-b656-d6f9f1ccb85e",
                "parentUUID": "bad57681-2cf9-47d3-8af5-120f9b75a3bc",
                "skipped": false
              },
              {
                "title": "should trim username",
                "fullTitle": "Session #addContestant(contestant) should trim username",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Wade  '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>c.username.should.equal(<span class=\"hljs-string\">'Wade'</span>);",
                "isRoot": false,
                "uuid": "3a1ecce2-78a2-479b-866a-04dfba6d0d0b",
                "parentUUID": "bad57681-2cf9-47d3-8af5-120f9b75a3bc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 11
          },
          {
            "title": "#subscribeForStateChange(event, callback)",
            "suites": [],
            "tests": [
              {
                "title": "should subscribe callback to the correct event",
                "fullTitle": "Session #subscribeForStateChange(event, callback) should subscribe callback to the correct event",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> r = s.addContestant(c);<br>r.wasSuccessful.should.be.true();<br>s.subscribeForStateChange(<span class=\"hljs-string\">'onpending'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">session, event, from, to</span>) </span>{<br>    session.should.equal(s);<br>    event.should.equal(<span class=\"hljs-string\">'buzzerPressed'</span>);<br>    from.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>    to.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>    done();<br>});<br>s.tryBuzzerPressRegister(c.id).should.be.true();",
                "isRoot": false,
                "uuid": "104832af-c5f3-470a-a288-db8026715e5c",
                "parentUUID": "11e693b0-3b74-4b56-8d23-bda3e4e2bc5c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "11e693b0-3b74-4b56-8d23-bda3e4e2bc5c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should subscribe callback to the correct event",
                "fullTitle": "Session #subscribeForStateChange(event, callback) should subscribe callback to the correct event",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> r = s.addContestant(c);<br>r.wasSuccessful.should.be.true();<br>s.subscribeForStateChange(<span class=\"hljs-string\">'onpending'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">session, event, from, to</span>) </span>{<br>    session.should.equal(s);<br>    event.should.equal(<span class=\"hljs-string\">'buzzerPressed'</span>);<br>    from.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>    to.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>    done();<br>});<br>s.tryBuzzerPressRegister(c.id).should.be.true();",
                "isRoot": false,
                "uuid": "104832af-c5f3-470a-a288-db8026715e5c",
                "parentUUID": "11e693b0-3b74-4b56-8d23-bda3e4e2bc5c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "tryBuzzerPressRegister(contestantId)",
            "suites": [],
            "tests": [
              {
                "title": "should register when state is ready",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should register when state is ready",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);",
                "isRoot": false,
                "uuid": "e045c205-314f-4a66-b325-802b238e4f67",
                "parentUUID": "c5e5fbdc-88e1-4802-8371-af4a84d91eb2",
                "skipped": false
              },
              {
                "title": "should not register when state is not ready",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not register when state is not ready",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.false();",
                "isRoot": false,
                "uuid": "440b6c27-34cf-44f8-84f9-9514fe0eaa39",
                "parentUUID": "c5e5fbdc-88e1-4802-8371-af4a84d91eb2",
                "skipped": false
              },
              {
                "title": "should not register when contestant does not exist",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not register when contestant does not exist",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(idUtility.generateParticipantId()).should.be.false();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
                "isRoot": false,
                "uuid": "a9de2e48-29b1-4d19-983d-3b9f5c9e7c95",
                "parentUUID": "c5e5fbdc-88e1-4802-8371-af4a84d91eb2",
                "skipped": false
              },
              {
                "title": "should not replace previous round winner with pending contestant",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not replace previous round winner with pending contestant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                "isRoot": false,
                "uuid": "09b2d9b7-f6a0-468e-abdd-d7ade88e6190",
                "parentUUID": "c5e5fbdc-88e1-4802-8371-af4a84d91eb2",
                "skipped": false
              },
              {
                "title": "should not add previous round winner to winners list",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not add previous round winner to winners list",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "36f29639-49db-4f25-ba7f-705061057e23",
                "parentUUID": "c5e5fbdc-88e1-4802-8371-af4a84d91eb2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "c5e5fbdc-88e1-4802-8371-af4a84d91eb2",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should register when state is ready",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should register when state is ready",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);",
                "isRoot": false,
                "uuid": "e045c205-314f-4a66-b325-802b238e4f67",
                "parentUUID": "c5e5fbdc-88e1-4802-8371-af4a84d91eb2",
                "skipped": false
              },
              {
                "title": "should not register when state is not ready",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not register when state is not ready",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.false();",
                "isRoot": false,
                "uuid": "440b6c27-34cf-44f8-84f9-9514fe0eaa39",
                "parentUUID": "c5e5fbdc-88e1-4802-8371-af4a84d91eb2",
                "skipped": false
              },
              {
                "title": "should not register when contestant does not exist",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not register when contestant does not exist",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(idUtility.generateParticipantId()).should.be.false();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
                "isRoot": false,
                "uuid": "a9de2e48-29b1-4d19-983d-3b9f5c9e7c95",
                "parentUUID": "c5e5fbdc-88e1-4802-8371-af4a84d91eb2",
                "skipped": false
              },
              {
                "title": "should not replace previous round winner with pending contestant",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not replace previous round winner with pending contestant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                "isRoot": false,
                "uuid": "09b2d9b7-f6a0-468e-abdd-d7ade88e6190",
                "parentUUID": "c5e5fbdc-88e1-4802-8371-af4a84d91eb2",
                "skipped": false
              },
              {
                "title": "should not add previous round winner to winners list",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not add previous round winner to winners list",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "36f29639-49db-4f25-ba7f-705061057e23",
                "parentUUID": "c5e5fbdc-88e1-4802-8371-af4a84d91eb2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "tryBuzzerAction(action)",
            "suites": [
              {
                "title": "action->ACCEPT",
                "suites": [],
                "tests": [
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should allow when game state is pending",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();",
                    "isRoot": false,
                    "uuid": "a69ebc06-9a98-49cd-bcf3-5c7ba41d4f20",
                    "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not pending",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should not allow when game state is not pending",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.false();",
                    "isRoot": false,
                    "uuid": "4e9c4207-9628-4bc0-8e9f-b3c6ef86840f",
                    "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
                    "skipped": false
                  },
                  {
                    "title": "should update contestant's score",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should update contestant's score",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "3afe2979-cd29-4611-b19e-db37128643e1",
                    "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
                    "skipped": false
                  },
                  {
                    "title": "should update contestant's team score",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should update contestant's team score",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>s.teams.all[<span class=\"hljs-number\">0</span>].score.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "7471ea34-c652-49fb-9970-4445218d5b80",
                    "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "30df19a3-c5e8-466b-9c96-d83adc21448f",
                    "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should change game state back to ready",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "717488fe-2102-46c4-a1d1-7e389ae30690",
                    "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
                    "skipped": false
                  },
                  {
                    "title": "should clear pending winner",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should clear pending winner",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>should(s.pendingWinner).be.null();",
                    "isRoot": false,
                    "uuid": "b4934f52-07ec-436e-86a6-5fa4d148127e",
                    "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "36dd33b3-a8a0-483f-b749-006e4966cf90",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should allow when game state is pending",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();",
                    "isRoot": false,
                    "uuid": "a69ebc06-9a98-49cd-bcf3-5c7ba41d4f20",
                    "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not pending",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should not allow when game state is not pending",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.false();",
                    "isRoot": false,
                    "uuid": "4e9c4207-9628-4bc0-8e9f-b3c6ef86840f",
                    "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
                    "skipped": false
                  },
                  {
                    "title": "should update contestant's score",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should update contestant's score",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "3afe2979-cd29-4611-b19e-db37128643e1",
                    "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
                    "skipped": false
                  },
                  {
                    "title": "should update contestant's team score",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should update contestant's team score",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>s.teams.all[<span class=\"hljs-number\">0</span>].score.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "7471ea34-c652-49fb-9970-4445218d5b80",
                    "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "30df19a3-c5e8-466b-9c96-d83adc21448f",
                    "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should change game state back to ready",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "717488fe-2102-46c4-a1d1-7e389ae30690",
                    "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
                    "skipped": false
                  },
                  {
                    "title": "should clear pending winner",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should clear pending winner",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>should(s.pendingWinner).be.null();",
                    "isRoot": false,
                    "uuid": "b4934f52-07ec-436e-86a6-5fa4d148127e",
                    "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 7,
                "totalPasses": 7,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 4
              },
              {
                "title": "action->REJECT",
                "suites": [],
                "tests": [
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should allow when game state is pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();",
                    "isRoot": false,
                    "uuid": "bc90207c-68d7-47f4-886a-9d8a8c774e98",
                    "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not pending",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not allow when game state is not pending",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.false();",
                    "isRoot": false,
                    "uuid": "82355391-bd02-46ad-abda-bd17dce2c411",
                    "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
                    "skipped": false
                  },
                  {
                    "title": "should not replace round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not replace round winner with pending contestant",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "47914ff5-91cf-45e8-b0ec-968a6377c7d7",
                    "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
                    "skipped": false
                  },
                  {
                    "title": "should not update pending contestant's score",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not update pending contestant's score",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.score.should.equal(<span class=\"hljs-number\">0</span>);",
                    "isRoot": false,
                    "uuid": "06f9f3e3-d725-4839-aefa-c4e88e214b06",
                    "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
                    "skipped": false
                  },
                  {
                    "title": "should add round winner to previous winners list",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should add round winner to previous winners list",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "66049ec2-c059-461c-94ac-8bc8f2b22727",
                    "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should change game state back to ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "5ccdf075-4aa2-400b-b105-92a1a2e0327a",
                    "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should allow when game state is pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();",
                    "isRoot": false,
                    "uuid": "bc90207c-68d7-47f4-886a-9d8a8c774e98",
                    "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not pending",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not allow when game state is not pending",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.false();",
                    "isRoot": false,
                    "uuid": "82355391-bd02-46ad-abda-bd17dce2c411",
                    "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
                    "skipped": false
                  },
                  {
                    "title": "should not replace round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not replace round winner with pending contestant",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "47914ff5-91cf-45e8-b0ec-968a6377c7d7",
                    "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
                    "skipped": false
                  },
                  {
                    "title": "should not update pending contestant's score",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not update pending contestant's score",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.score.should.equal(<span class=\"hljs-number\">0</span>);",
                    "isRoot": false,
                    "uuid": "06f9f3e3-d725-4839-aefa-c4e88e214b06",
                    "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
                    "skipped": false
                  },
                  {
                    "title": "should add round winner to previous winners list",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should add round winner to previous winners list",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "66049ec2-c059-461c-94ac-8bc8f2b22727",
                    "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should change game state back to ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "5ccdf075-4aa2-400b-b105-92a1a2e0327a",
                    "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 6,
                "totalPasses": 6,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 3
              },
              {
                "title": "action->RESET",
                "suites": [],
                "tests": [
                  {
                    "title": "should allow when game state is ready",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should allow when game state is ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
                    "isRoot": false,
                    "uuid": "3edcaa4a-e739-4217-b5d5-a94a8a89a1b9",
                    "parentUUID": "a3c77b83-d1a9-4c42-b2a6-dcab8c513dc5",
                    "skipped": false
                  },
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should allow when game state is pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
                    "isRoot": false,
                    "uuid": "d41aed97-4a73-4494-9956-32760d715db6",
                    "parentUUID": "a3c77b83-d1a9-4c42-b2a6-dcab8c513dc5",
                    "skipped": false
                  },
                  {
                    "title": "should not replace previous round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should not replace previous round winner with pending contestant",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "36d4b1b5-b990-41ee-a0a6-3a4f5b436e19",
                    "parentUUID": "a3c77b83-d1a9-4c42-b2a6-dcab8c513dc5",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "b1a3f162-4a10-4519-8ef6-f8304f9ab696",
                    "parentUUID": "a3c77b83-d1a9-4c42-b2a6-dcab8c513dc5",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should change game state back to ready",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "7dd1345b-398a-4221-be68-51cf50a5f8df",
                    "parentUUID": "a3c77b83-d1a9-4c42-b2a6-dcab8c513dc5",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "a3c77b83-d1a9-4c42-b2a6-dcab8c513dc5",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should allow when game state is ready",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should allow when game state is ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
                    "isRoot": false,
                    "uuid": "3edcaa4a-e739-4217-b5d5-a94a8a89a1b9",
                    "parentUUID": "a3c77b83-d1a9-4c42-b2a6-dcab8c513dc5",
                    "skipped": false
                  },
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should allow when game state is pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
                    "isRoot": false,
                    "uuid": "d41aed97-4a73-4494-9956-32760d715db6",
                    "parentUUID": "a3c77b83-d1a9-4c42-b2a6-dcab8c513dc5",
                    "skipped": false
                  },
                  {
                    "title": "should not replace previous round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should not replace previous round winner with pending contestant",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "36d4b1b5-b990-41ee-a0a6-3a4f5b436e19",
                    "parentUUID": "a3c77b83-d1a9-4c42-b2a6-dcab8c513dc5",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "b1a3f162-4a10-4519-8ef6-f8304f9ab696",
                    "parentUUID": "a3c77b83-d1a9-4c42-b2a6-dcab8c513dc5",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should change game state back to ready",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "7dd1345b-398a-4221-be68-51cf50a5f8df",
                    "parentUUID": "a3c77b83-d1a9-4c42-b2a6-dcab8c513dc5",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 5,
                "totalPasses": 5,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 4
              },
              {
                "title": "action->DISABLE",
                "suites": [],
                "tests": [
                  {
                    "title": "should allow when game state is ready",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should allow when game state is ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "c46291a0-fa5f-49f5-b38b-da56236a29ed",
                    "parentUUID": "3bbebe99-4be8-49e9-adc5-7685ed131982",
                    "skipped": false
                  },
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should allow when game state is pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "74d07d5d-7cbd-4ad3-bdf1-e39609ab8ba7",
                    "parentUUID": "3bbebe99-4be8-49e9-adc5-7685ed131982",
                    "skipped": false
                  },
                  {
                    "title": "should not replace previous round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should not replace previous round winner with pending contestant",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "f28820c5-0a75-40ec-98a0-2e140902517c",
                    "parentUUID": "3bbebe99-4be8-49e9-adc5-7685ed131982",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "aa79ad06-ac10-4594-b736-2ecd322b821a",
                    "parentUUID": "3bbebe99-4be8-49e9-adc5-7685ed131982",
                    "skipped": false
                  },
                  {
                    "title": "should change game state to buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should change game state to buzzerLock",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.BUZZER_LOCK);",
                    "isRoot": false,
                    "uuid": "f394a2f0-6c10-45a1-9d80-7f050bf2df84",
                    "parentUUID": "3bbebe99-4be8-49e9-adc5-7685ed131982",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "3bbebe99-4be8-49e9-adc5-7685ed131982",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should allow when game state is ready",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should allow when game state is ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "c46291a0-fa5f-49f5-b38b-da56236a29ed",
                    "parentUUID": "3bbebe99-4be8-49e9-adc5-7685ed131982",
                    "skipped": false
                  },
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should allow when game state is pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "74d07d5d-7cbd-4ad3-bdf1-e39609ab8ba7",
                    "parentUUID": "3bbebe99-4be8-49e9-adc5-7685ed131982",
                    "skipped": false
                  },
                  {
                    "title": "should not replace previous round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should not replace previous round winner with pending contestant",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "f28820c5-0a75-40ec-98a0-2e140902517c",
                    "parentUUID": "3bbebe99-4be8-49e9-adc5-7685ed131982",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "aa79ad06-ac10-4594-b736-2ecd322b821a",
                    "parentUUID": "3bbebe99-4be8-49e9-adc5-7685ed131982",
                    "skipped": false
                  },
                  {
                    "title": "should change game state to buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should change game state to buzzerLock",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.BUZZER_LOCK);",
                    "isRoot": false,
                    "uuid": "f394a2f0-6c10-45a1-9d80-7f050bf2df84",
                    "parentUUID": "3bbebe99-4be8-49e9-adc5-7685ed131982",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 5,
                "totalPasses": 5,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 6
              },
              {
                "title": "action->ENABLE",
                "suites": [],
                "tests": [
                  {
                    "title": "should allow when game state is buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should allow when game state is buzzerLock",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "f6155604-d80d-448e-b994-2f708fff7a11",
                    "parentUUID": "4e6764bd-7c6b-48c2-a69e-171d3f19e069",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should not allow when game state is not buzzerLock",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.false();",
                    "isRoot": false,
                    "uuid": "293eb49b-234d-4fc8-9734-e5d0965a4dd7",
                    "parentUUID": "4e6764bd-7c6b-48c2-a69e-171d3f19e069",
                    "skipped": false
                  },
                  {
                    "title": "should change game state to ready",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should change game state to ready",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "845ea285-b18a-41dd-a738-9cb65169dee8",
                    "parentUUID": "4e6764bd-7c6b-48c2-a69e-171d3f19e069",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "4e6764bd-7c6b-48c2-a69e-171d3f19e069",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should allow when game state is buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should allow when game state is buzzerLock",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "f6155604-d80d-448e-b994-2f708fff7a11",
                    "parentUUID": "4e6764bd-7c6b-48c2-a69e-171d3f19e069",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should not allow when game state is not buzzerLock",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.false();",
                    "isRoot": false,
                    "uuid": "293eb49b-234d-4fc8-9734-e5d0965a4dd7",
                    "parentUUID": "4e6764bd-7c6b-48c2-a69e-171d3f19e069",
                    "skipped": false
                  },
                  {
                    "title": "should change game state to ready",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should change game state to ready",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "845ea285-b18a-41dd-a738-9cb65169dee8",
                    "parentUUID": "4e6764bd-7c6b-48c2-a69e-171d3f19e069",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "4bda503d-c920-4dbe-b4ba-560964099155",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#pendingWinner",
            "suites": [],
            "tests": [
              {
                "title": "should return the pending winner",
                "fullTitle": "Session #pendingWinner should return the pending winner",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.pendingWinner.should.equal(<span class=\"hljs-string\">'testUser'</span>);",
                "isRoot": false,
                "uuid": "0849da55-f57d-440b-8f12-aaf288baba71",
                "parentUUID": "25e30d58-30e1-4316-9848-94472a72286e",
                "skipped": false
              },
              {
                "title": "should not return the pending winner",
                "fullTitle": "Session #pendingWinner should not return the pending winner",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>should(s.pendingWinner).be.null();",
                "isRoot": false,
                "uuid": "b1a53958-977f-4e4b-9c40-1ab471d383d7",
                "parentUUID": "25e30d58-30e1-4316-9848-94472a72286e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "25e30d58-30e1-4316-9848-94472a72286e",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should return the pending winner",
                "fullTitle": "Session #pendingWinner should return the pending winner",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.pendingWinner.should.equal(<span class=\"hljs-string\">'testUser'</span>);",
                "isRoot": false,
                "uuid": "0849da55-f57d-440b-8f12-aaf288baba71",
                "parentUUID": "25e30d58-30e1-4316-9848-94472a72286e",
                "skipped": false
              },
              {
                "title": "should not return the pending winner",
                "fullTitle": "Session #pendingWinner should not return the pending winner",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>should(s.pendingWinner).be.null();",
                "isRoot": false,
                "uuid": "b1a53958-977f-4e4b-9c40-1ab471d383d7",
                "parentUUID": "25e30d58-30e1-4316-9848-94472a72286e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#updateSessionName(name)",
            "suites": [],
            "tests": [
              {
                "title": "should update session name",
                "fullTitle": "Session #updateSessionName(name) should update session name",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.updateSessionName(<span class=\"hljs-string\">'session2'</span>);<br>settings.sessionName.should.equal(<span class=\"hljs-string\">'session2'</span>);",
                "isRoot": false,
                "uuid": "887f4e26-307c-4ef1-8821-fa8b8a353dcd",
                "parentUUID": "74beda92-177f-486f-bfa1-db5a3ef42c84",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "74beda92-177f-486f-bfa1-db5a3ef42c84",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should update session name",
                "fullTitle": "Session #updateSessionName(name) should update session name",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.updateSessionName(<span class=\"hljs-string\">'session2'</span>);<br>settings.sessionName.should.equal(<span class=\"hljs-string\">'session2'</span>);",
                "isRoot": false,
                "uuid": "887f4e26-307c-4ef1-8821-fa8b8a353dcd",
                "parentUUID": "74beda92-177f-486f-bfa1-db5a3ef42c84",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#updateMaxContestants(maxContestants)",
            "suites": [],
            "tests": [
              {
                "title": "should update max contestants",
                "fullTitle": "Session #updateMaxContestants(maxContestants) should update max contestants",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "a3a417d1-216d-4b63-8e93-438fe6cdbe64",
                "parentUUID": "1bf37f2d-0ba0-496a-b394-f88f1bc3568d",
                "skipped": false
              },
              {
                "title": "should not allow below current connected amount",
                "fullTitle": "Session #updateMaxContestants(maxContestants) should not allow below current connected amount",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>s.addContestant(c1).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>s.addContestant(c2).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">1</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_CONTESTANTS_MUST_BE_GREATER_THAN_ALREADY_CONNECTED);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "d3930a0f-5bb4-437a-8adb-eb246c602346",
                "parentUUID": "1bf37f2d-0ba0-496a-b394-f88f1bc3568d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "1bf37f2d-0ba0-496a-b394-f88f1bc3568d",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should update max contestants",
                "fullTitle": "Session #updateMaxContestants(maxContestants) should update max contestants",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "a3a417d1-216d-4b63-8e93-438fe6cdbe64",
                "parentUUID": "1bf37f2d-0ba0-496a-b394-f88f1bc3568d",
                "skipped": false
              },
              {
                "title": "should not allow below current connected amount",
                "fullTitle": "Session #updateMaxContestants(maxContestants) should not allow below current connected amount",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>s.addContestant(c1).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>s.addContestant(c2).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">1</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_CONTESTANTS_MUST_BE_GREATER_THAN_ALREADY_CONNECTED);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "d3930a0f-5bb4-437a-8adb-eb246c602346",
                "parentUUID": "1bf37f2d-0ba0-496a-b394-f88f1bc3568d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#updateTeamSize(teamSize)",
            "suites": [],
            "tests": [
              {
                "title": "should update team size",
                "fullTitle": "Session #updateTeamSize(teamSize) should update team size",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.teamSize.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "aefad47f-0bb6-4099-8235-1ef6db5c2084",
                "parentUUID": "d7515b7a-cf57-486a-9594-f072db81ef75",
                "skipped": false
              },
              {
                "title": "should not allow below current setting",
                "fullTitle": "Session #updateTeamSize(teamSize) should not allow below current setting",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.TEAM_SIZE_MUST_BE_GREATER_THAN_ALREADY_SET);",
                "isRoot": false,
                "uuid": "c65053fd-8669-4e5a-ab44-b66d9d8814d6",
                "parentUUID": "d7515b7a-cf57-486a-9594-f072db81ef75",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "d7515b7a-cf57-486a-9594-f072db81ef75",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should update team size",
                "fullTitle": "Session #updateTeamSize(teamSize) should update team size",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.teamSize.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "aefad47f-0bb6-4099-8235-1ef6db5c2084",
                "parentUUID": "d7515b7a-cf57-486a-9594-f072db81ef75",
                "skipped": false
              },
              {
                "title": "should not allow below current setting",
                "fullTitle": "Session #updateTeamSize(teamSize) should not allow below current setting",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.TEAM_SIZE_MUST_BE_GREATER_THAN_ALREADY_SET);",
                "isRoot": false,
                "uuid": "c65053fd-8669-4e5a-ab44-b66d9d8814d6",
                "parentUUID": "d7515b7a-cf57-486a-9594-f072db81ef75",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#updateMaxTeams(maxTeams)",
            "suites": [],
            "tests": [
              {
                "title": "should update max teams",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should update max teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxTeams.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "7c79732b-02c7-4121-aa55-33368a2f2ca0",
                "parentUUID": "bdf24bbc-94f9-494a-9bb7-3b332ee44c72",
                "skipped": false
              },
              {
                "title": "should add teams",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should add teams",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">5</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "41a74cef-2e11-4c25-87af-ee46708aacb3",
                "parentUUID": "bdf24bbc-94f9-494a-9bb7-3b332ee44c72",
                "skipped": false
              },
              {
                "title": "should not allow below current setting",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should not allow below current setting",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_MUST_BE_GREATER_THAN_ALREADY_SET);",
                "isRoot": false,
                "uuid": "559fb809-f4a8-403b-bd40-a3fadd9840ea",
                "parentUUID": "bdf24bbc-94f9-494a-9bb7-3b332ee44c72",
                "skipped": false
              },
              {
                "title": "should not allow if teams are PLAYER_CHOICE",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should not allow if teams are PLAYER_CHOICE",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">6</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_CANNOT_BE_CHANGED_WHEN_PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "58092512-7ba8-4def-b757-3e732ac31c9a",
                "parentUUID": "bdf24bbc-94f9-494a-9bb7-3b332ee44c72",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "bdf24bbc-94f9-494a-9bb7-3b332ee44c72",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should update max teams",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should update max teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxTeams.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "7c79732b-02c7-4121-aa55-33368a2f2ca0",
                "parentUUID": "bdf24bbc-94f9-494a-9bb7-3b332ee44c72",
                "skipped": false
              },
              {
                "title": "should add teams",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should add teams",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">5</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "41a74cef-2e11-4c25-87af-ee46708aacb3",
                "parentUUID": "bdf24bbc-94f9-494a-9bb7-3b332ee44c72",
                "skipped": false
              },
              {
                "title": "should not allow below current setting",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should not allow below current setting",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_MUST_BE_GREATER_THAN_ALREADY_SET);",
                "isRoot": false,
                "uuid": "559fb809-f4a8-403b-bd40-a3fadd9840ea",
                "parentUUID": "bdf24bbc-94f9-494a-9bb7-3b332ee44c72",
                "skipped": false
              },
              {
                "title": "should not allow if teams are PLAYER_CHOICE",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should not allow if teams are PLAYER_CHOICE",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">6</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_CANNOT_BE_CHANGED_WHEN_PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "58092512-7ba8-4def-b757-3e732ac31c9a",
                "parentUUID": "bdf24bbc-94f9-494a-9bb7-3b332ee44c72",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/SessionTests.js",
        "uuid": "b91c9b82-5d9a-4781-b225-ddb8fbf2d10f",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Settings",
        "suites": [
          {
            "title": "#hasTeams",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #hasTeams should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s._hasTeams.should.be.true();",
                "isRoot": false,
                "uuid": "10de2120-4cae-4e75-ba98-724d878d4b77",
                "parentUUID": "d1502ebf-7a8e-4c69-890c-67dbde559263",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #hasTeams should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.hasTeams.should.be.true();",
                "isRoot": false,
                "uuid": "e7517d20-e466-4435-8158-84e67af89036",
                "parentUUID": "d1502ebf-7a8e-4c69-890c-67dbde559263",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "d1502ebf-7a8e-4c69-890c-67dbde559263",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #hasTeams should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s._hasTeams.should.be.true();",
                "isRoot": false,
                "uuid": "10de2120-4cae-4e75-ba98-724d878d4b77",
                "parentUUID": "d1502ebf-7a8e-4c69-890c-67dbde559263",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #hasTeams should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.hasTeams.should.be.true();",
                "isRoot": false,
                "uuid": "e7517d20-e466-4435-8158-84e67af89036",
                "parentUUID": "d1502ebf-7a8e-4c69-890c-67dbde559263",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#teamSize",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamSize should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s._teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "90b40576-2d6e-429e-b248-6ddf0ef2b5ea",
                "parentUUID": "16af50a3-88f1-4776-9921-7d0835cd3d11",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamSize should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamSize = <span class=\"hljs-number\">1</span>;<br>s.teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "baf4c92c-12de-4cd7-a06a-99d105c77250",
                "parentUUID": "16af50a3-88f1-4776-9921-7d0835cd3d11",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "16af50a3-88f1-4776-9921-7d0835cd3d11",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamSize should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s._teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "90b40576-2d6e-429e-b248-6ddf0ef2b5ea",
                "parentUUID": "16af50a3-88f1-4776-9921-7d0835cd3d11",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamSize should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamSize = <span class=\"hljs-number\">1</span>;<br>s.teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "baf4c92c-12de-4cd7-a06a-99d105c77250",
                "parentUUID": "16af50a3-88f1-4776-9921-7d0835cd3d11",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#maxTeams",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #maxTeams should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s._maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "5b50ebff-7942-4c19-a0d7-bbbe376b6f27",
                "parentUUID": "4ea3b8db-2b9a-4ad2-a53b-75da0915dc84",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #maxTeams should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-number\">1</span>;<br>s.maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "5494727f-429b-4770-86d7-ad1d74c45ba1",
                "parentUUID": "4ea3b8db-2b9a-4ad2-a53b-75da0915dc84",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "4ea3b8db-2b9a-4ad2-a53b-75da0915dc84",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #maxTeams should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s._maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "5b50ebff-7942-4c19-a0d7-bbbe376b6f27",
                "parentUUID": "4ea3b8db-2b9a-4ad2-a53b-75da0915dc84",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #maxTeams should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-number\">1</span>;<br>s.maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "5494727f-429b-4770-86d7-ad1d74c45ba1",
                "parentUUID": "4ea3b8db-2b9a-4ad2-a53b-75da0915dc84",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#teamLeaderSelectionMethod",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamLeaderSelectionMethod should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s._teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "1f14c6d6-c6fb-4541-8695-41a2d09d1539",
                "parentUUID": "70ea436b-ff0e-4146-9973-7858880fd642",
                "skipped": false
              },
              {
                "title": "should throw on set when constant value is invalid",
                "fullTitle": "Settings #teamLeaderSelectionMethod should throw on set when constant value is invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamLeaderSelectionMethod.all.slice().sort(<br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, b</span>) </span>{<br>            <span class=\"hljs-keyword\">return</span> a - b;<br>        }).pop();<br>    s.teamLeaderSelectionMethod = ++high;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "4267665d-d9b8-449a-9ffa-4de0fe2e1b9b",
                "parentUUID": "70ea436b-ff0e-4146-9973-7858880fd642",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamLeaderSelectionMethod should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s.teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "d0a735c9-ecca-4c38-a46a-0fd70d08a430",
                "parentUUID": "70ea436b-ff0e-4146-9973-7858880fd642",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "70ea436b-ff0e-4146-9973-7858880fd642",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamLeaderSelectionMethod should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s._teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "1f14c6d6-c6fb-4541-8695-41a2d09d1539",
                "parentUUID": "70ea436b-ff0e-4146-9973-7858880fd642",
                "skipped": false
              },
              {
                "title": "should throw on set when constant value is invalid",
                "fullTitle": "Settings #teamLeaderSelectionMethod should throw on set when constant value is invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamLeaderSelectionMethod.all.slice().sort(<br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, b</span>) </span>{<br>            <span class=\"hljs-keyword\">return</span> a - b;<br>        }).pop();<br>    s.teamLeaderSelectionMethod = ++high;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "4267665d-d9b8-449a-9ffa-4de0fe2e1b9b",
                "parentUUID": "70ea436b-ff0e-4146-9973-7858880fd642",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamLeaderSelectionMethod should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s.teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "d0a735c9-ecca-4c38-a46a-0fd70d08a430",
                "parentUUID": "70ea436b-ff0e-4146-9973-7858880fd642",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#teamNameEdit",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamNameEdit should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br>s._teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
                "isRoot": false,
                "uuid": "d45f482c-5de6-4e38-8987-221abdf97097",
                "parentUUID": "e7c36a38-443c-4008-a33b-03dafcaa5007",
                "skipped": false
              },
              {
                "title": "should throw on set when constant value is invalid",
                "fullTitle": "Settings #teamNameEdit should throw on set when constant value is invalid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamNameEdit.all.slice().sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a,<br>        b</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> a - b;<br>    }).pop();<br>    s.teamNameEdit = ++high;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "f11358b1-c78d-49fe-b2f4-4a6585d6e4d7",
                "parentUUID": "e7c36a38-443c-4008-a33b-03dafcaa5007",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamNameEdit should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNameEdit = constants.teamNameEdit.ALLOW;<br>s.teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
                "isRoot": false,
                "uuid": "4798c12d-ff39-4f02-8f6a-6df17420aaee",
                "parentUUID": "e7c36a38-443c-4008-a33b-03dafcaa5007",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "e7c36a38-443c-4008-a33b-03dafcaa5007",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamNameEdit should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br>s._teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
                "isRoot": false,
                "uuid": "d45f482c-5de6-4e38-8987-221abdf97097",
                "parentUUID": "e7c36a38-443c-4008-a33b-03dafcaa5007",
                "skipped": false
              },
              {
                "title": "should throw on set when constant value is invalid",
                "fullTitle": "Settings #teamNameEdit should throw on set when constant value is invalid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamNameEdit.all.slice().sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a,<br>        b</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> a - b;<br>    }).pop();<br>    s.teamNameEdit = ++high;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "f11358b1-c78d-49fe-b2f4-4a6585d6e4d7",
                "parentUUID": "e7c36a38-443c-4008-a33b-03dafcaa5007",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamNameEdit should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNameEdit = constants.teamNameEdit.ALLOW;<br>s.teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
                "isRoot": false,
                "uuid": "4798c12d-ff39-4f02-8f6a-6df17420aaee",
                "parentUUID": "e7c36a38-443c-4008-a33b-03dafcaa5007",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#maxContestants",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #maxContestants should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxContestants = <span class=\"hljs-number\">1</span>;<br>s._maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "c2e387fb-b8ee-49e9-a754-3b0f04eb3275",
                "parentUUID": "53da0dbe-6110-4e2e-a4e6-78d97fde76ab",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #maxContestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxContestants = <span class=\"hljs-number\">1</span>;<br>s.maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "3362324d-b63d-4adc-b713-98bc3bba76f3",
                "parentUUID": "53da0dbe-6110-4e2e-a4e6-78d97fde76ab",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "53da0dbe-6110-4e2e-a4e6-78d97fde76ab",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #maxContestants should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxContestants = <span class=\"hljs-number\">1</span>;<br>s._maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "c2e387fb-b8ee-49e9-a754-3b0f04eb3275",
                "parentUUID": "53da0dbe-6110-4e2e-a4e6-78d97fde76ab",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #maxContestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxContestants = <span class=\"hljs-number\">1</span>;<br>s.maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "3362324d-b63d-4adc-b713-98bc3bba76f3",
                "parentUUID": "53da0dbe-6110-4e2e-a4e6-78d97fde76ab",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#sessionName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #sessionName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s._sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
                "isRoot": false,
                "uuid": "6cf97f02-18ee-47c1-b77d-54f67e20fd0f",
                "parentUUID": "f67de04e-f28c-4f51-91ff-92bb9d2939c9",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #sessionName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s.sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
                "isRoot": false,
                "uuid": "b557bef8-40a9-4207-bd3b-c185bbd20455",
                "parentUUID": "f67de04e-f28c-4f51-91ff-92bb9d2939c9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "f67de04e-f28c-4f51-91ff-92bb9d2939c9",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #sessionName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s._sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
                "isRoot": false,
                "uuid": "6cf97f02-18ee-47c1-b77d-54f67e20fd0f",
                "parentUUID": "f67de04e-f28c-4f51-91ff-92bb9d2939c9",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #sessionName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s.sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
                "isRoot": false,
                "uuid": "b557bef8-40a9-4207-bd3b-c185bbd20455",
                "parentUUID": "f67de04e-f28c-4f51-91ff-92bb9d2939c9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#teamNames",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamNames should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s._teamNames.should.be.Array();<br>s._teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s._teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
                "isRoot": false,
                "uuid": "e4cbe092-7cbe-4602-a2da-381252538201",
                "parentUUID": "b0a333d0-fe3d-4078-b889-ee31d3ead03f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamNames should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s.teamNames.should.be.Array();<br>s.teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
                "isRoot": false,
                "uuid": "5daee2a8-922c-4576-ac7e-a1b5229399e2",
                "parentUUID": "b0a333d0-fe3d-4078-b889-ee31d3ead03f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "b0a333d0-fe3d-4078-b889-ee31d3ead03f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamNames should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s._teamNames.should.be.Array();<br>s._teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s._teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
                "isRoot": false,
                "uuid": "e4cbe092-7cbe-4602-a2da-381252538201",
                "parentUUID": "b0a333d0-fe3d-4078-b889-ee31d3ead03f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamNames should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s.teamNames.should.be.Array();<br>s.teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
                "isRoot": false,
                "uuid": "5daee2a8-922c-4576-ac7e-a1b5229399e2",
                "parentUUID": "b0a333d0-fe3d-4078-b889-ee31d3ead03f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/SettingsTests.js",
        "uuid": "e039d96c-2642-4a61-957a-556aaea4b48f",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "TeamFactory",
        "suites": [
          {
            "title": "#create(teams, settings)",
            "suites": [],
            "tests": [
              {
                "title": "should throw when settings.maxTeams is less than 1",
                "fullTitle": "TeamFactory #create(teams, settings) should throw when settings.maxTeams is less than 1",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    teamFactory.create(tc, s);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "d6a6ec4b-c171-4b08-88c3-f6b6456e7ac3",
                "parentUUID": "de2d67ab-860e-4c15-8f29-d7ee1ebee5de",
                "skipped": false
              },
              {
                "title": "should create the correct amount of teams",
                "fullTitle": "TeamFactory #create(teams, settings) should create the correct amount of teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "6d511eaa-04fa-4816-be8e-78848fb35d2c",
                "parentUUID": "de2d67ab-860e-4c15-8f29-d7ee1ebee5de",
                "skipped": false
              },
              {
                "title": "should not fail with a large team size",
                "fullTitle": "TeamFactory #create(teams, settings) should not fail with a large team size",
                "timedOut": false,
                "duration": 42,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">500</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">500</span>);<br><span class=\"hljs-comment\">// ensure team names are unique</span><br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> i = names.indexOf(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> n === t.teamName;<br>    });<br>    i.should.equal(-<span class=\"hljs-number\">1</span>);<br>    names.push(t.teamName);<br>});",
                "isRoot": false,
                "uuid": "f33f184d-20fc-42e2-ba75-e2a5521bb793",
                "parentUUID": "de2d67ab-860e-4c15-8f29-d7ee1ebee5de",
                "skipped": false
              },
              {
                "title": "should use settings.teamNames first, before random selection",
                "fullTitle": "TeamFactory #create(teams, settings) should use settings.teamNames first, before random selection",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">10</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>, <span class=\"hljs-string\">'t3'</span>, <span class=\"hljs-string\">'t4'</span>, <span class=\"hljs-string\">'t5'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);<br>tc.all[<span class=\"hljs-number\">2</span>].teamName.should.equal(<span class=\"hljs-string\">'t3'</span>);<br>tc.all[<span class=\"hljs-number\">3</span>].teamName.should.equal(<span class=\"hljs-string\">'t4'</span>);<br>tc.all[<span class=\"hljs-number\">4</span>].teamName.should.equal(<span class=\"hljs-string\">'t5'</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">5</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">6</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">7</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">8</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">9</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "515f0605-e09b-4672-9029-f4041e9ed431",
                "parentUUID": "de2d67ab-860e-4c15-8f29-d7ee1ebee5de",
                "skipped": false
              },
              {
                "title": "should only create a single team when using unlimited teams",
                "fullTitle": "TeamFactory #create(teams, settings) should only create a single team when using unlimited teams",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "be19f129-5bf5-4194-b6b5-bacf9997d0e9",
                "parentUUID": "de2d67ab-860e-4c15-8f29-d7ee1ebee5de",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamFactoryTests.js",
            "uuid": "de2d67ab-860e-4c15-8f29-d7ee1ebee5de",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamFactoryTests.js",
            "passes": [
              {
                "title": "should throw when settings.maxTeams is less than 1",
                "fullTitle": "TeamFactory #create(teams, settings) should throw when settings.maxTeams is less than 1",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    teamFactory.create(tc, s);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "d6a6ec4b-c171-4b08-88c3-f6b6456e7ac3",
                "parentUUID": "de2d67ab-860e-4c15-8f29-d7ee1ebee5de",
                "skipped": false
              },
              {
                "title": "should create the correct amount of teams",
                "fullTitle": "TeamFactory #create(teams, settings) should create the correct amount of teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "6d511eaa-04fa-4816-be8e-78848fb35d2c",
                "parentUUID": "de2d67ab-860e-4c15-8f29-d7ee1ebee5de",
                "skipped": false
              },
              {
                "title": "should not fail with a large team size",
                "fullTitle": "TeamFactory #create(teams, settings) should not fail with a large team size",
                "timedOut": false,
                "duration": 42,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">500</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">500</span>);<br><span class=\"hljs-comment\">// ensure team names are unique</span><br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> i = names.indexOf(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> n === t.teamName;<br>    });<br>    i.should.equal(-<span class=\"hljs-number\">1</span>);<br>    names.push(t.teamName);<br>});",
                "isRoot": false,
                "uuid": "f33f184d-20fc-42e2-ba75-e2a5521bb793",
                "parentUUID": "de2d67ab-860e-4c15-8f29-d7ee1ebee5de",
                "skipped": false
              },
              {
                "title": "should use settings.teamNames first, before random selection",
                "fullTitle": "TeamFactory #create(teams, settings) should use settings.teamNames first, before random selection",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">10</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>, <span class=\"hljs-string\">'t3'</span>, <span class=\"hljs-string\">'t4'</span>, <span class=\"hljs-string\">'t5'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);<br>tc.all[<span class=\"hljs-number\">2</span>].teamName.should.equal(<span class=\"hljs-string\">'t3'</span>);<br>tc.all[<span class=\"hljs-number\">3</span>].teamName.should.equal(<span class=\"hljs-string\">'t4'</span>);<br>tc.all[<span class=\"hljs-number\">4</span>].teamName.should.equal(<span class=\"hljs-string\">'t5'</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">5</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">6</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">7</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">8</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">9</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "515f0605-e09b-4672-9029-f4041e9ed431",
                "parentUUID": "de2d67ab-860e-4c15-8f29-d7ee1ebee5de",
                "skipped": false
              },
              {
                "title": "should only create a single team when using unlimited teams",
                "fullTitle": "TeamFactory #create(teams, settings) should only create a single team when using unlimited teams",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "be19f129-5bf5-4194-b6b5-bacf9997d0e9",
                "parentUUID": "de2d67ab-860e-4c15-8f29-d7ee1ebee5de",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 44
          },
          {
            "title": "#add(teams, settings)",
            "suites": [],
            "tests": [
              {
                "title": "should add a team",
                "fullTitle": "TeamFactory #add(teams, settings) should add a team",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>teamFactory.add(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "4f7918c5-3364-4db3-834d-da61c72527b7",
                "parentUUID": "233746f0-b7ca-435d-985c-cd74c06247b7",
                "skipped": false
              },
              {
                "title": "should reuse team names specified in settings",
                "fullTitle": "TeamFactory #add(teams, settings) should reuse team names specified in settings",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>teamFactory.add(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);",
                "isRoot": false,
                "uuid": "65b4e577-233b-45e0-870f-cfc8c76ea290",
                "parentUUID": "233746f0-b7ca-435d-985c-cd74c06247b7",
                "skipped": false
              },
              {
                "title": "should factor in team names which are already in use",
                "fullTitle": "TeamFactory #add(teams, settings) should factor in team names which are already in use",
                "timedOut": false,
                "duration": 204,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    teamFactory.add(tc, s);<br>}<br>tc.all.length.should.equal(<span class=\"hljs-number\">1001</span>);<br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    names.push(t.teamName);<br>});<br><span class=\"hljs-keyword\">var</span> uniqueNames = unique(names);<br>names.length.should.equal(uniqueNames.length);",
                "isRoot": false,
                "uuid": "dc686b2a-8652-42cf-89a7-9ba91d828786",
                "parentUUID": "233746f0-b7ca-435d-985c-cd74c06247b7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamFactoryTests.js",
            "uuid": "233746f0-b7ca-435d-985c-cd74c06247b7",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamFactoryTests.js",
            "passes": [
              {
                "title": "should add a team",
                "fullTitle": "TeamFactory #add(teams, settings) should add a team",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>teamFactory.add(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "4f7918c5-3364-4db3-834d-da61c72527b7",
                "parentUUID": "233746f0-b7ca-435d-985c-cd74c06247b7",
                "skipped": false
              },
              {
                "title": "should reuse team names specified in settings",
                "fullTitle": "TeamFactory #add(teams, settings) should reuse team names specified in settings",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>teamFactory.add(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);",
                "isRoot": false,
                "uuid": "65b4e577-233b-45e0-870f-cfc8c76ea290",
                "parentUUID": "233746f0-b7ca-435d-985c-cd74c06247b7",
                "skipped": false
              },
              {
                "title": "should factor in team names which are already in use",
                "fullTitle": "TeamFactory #add(teams, settings) should factor in team names which are already in use",
                "timedOut": false,
                "duration": 204,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    teamFactory.add(tc, s);<br>}<br>tc.all.length.should.equal(<span class=\"hljs-number\">1001</span>);<br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    names.push(t.teamName);<br>});<br><span class=\"hljs-keyword\">var</span> uniqueNames = unique(names);<br>names.length.should.equal(uniqueNames.length);",
                "isRoot": false,
                "uuid": "dc686b2a-8652-42cf-89a7-9ba91d828786",
                "parentUUID": "233746f0-b7ca-435d-985c-cd74c06247b7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 205
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/TeamFactoryTests.js",
        "uuid": "dbf58189-3977-4e36-9438-d4ff5de2fbb7",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamFactoryTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Teams",
        "suites": [
          {
            "title": "#contains(teamName)",
            "suites": [],
            "tests": [
              {
                "title": "should return true when team with teamName does exist",
                "fullTitle": "Teams #contains(teamName) should return true when team with teamName does exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(t.teamName).should.be.true();",
                "isRoot": false,
                "uuid": "8fcc1ee3-4582-47e2-9850-3d8ecc7bf18f",
                "parentUUID": "f471a414-6f49-47a3-b1b2-adf793e0f2be",
                "skipped": false
              },
              {
                "title": "should return false when no team with teamName does exist",
                "fullTitle": "Teams #contains(teamName) should return false when no team with teamName does exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(<span class=\"hljs-string\">'other team name'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "cab334aa-f592-454d-a51e-e0f824dbd84a",
                "parentUUID": "f471a414-6f49-47a3-b1b2-adf793e0f2be",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "f471a414-6f49-47a3-b1b2-adf793e0f2be",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should return true when team with teamName does exist",
                "fullTitle": "Teams #contains(teamName) should return true when team with teamName does exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(t.teamName).should.be.true();",
                "isRoot": false,
                "uuid": "8fcc1ee3-4582-47e2-9850-3d8ecc7bf18f",
                "parentUUID": "f471a414-6f49-47a3-b1b2-adf793e0f2be",
                "skipped": false
              },
              {
                "title": "should return false when no team with teamName does exist",
                "fullTitle": "Teams #contains(teamName) should return false when no team with teamName does exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(<span class=\"hljs-string\">'other team name'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "cab334aa-f592-454d-a51e-e0f824dbd84a",
                "parentUUID": "f471a414-6f49-47a3-b1b2-adf793e0f2be",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#all",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Teams #all should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "16af164e-7daa-4519-8ca5-a5bcbee69177",
                "parentUUID": "2255a334-088b-4fe5-ae22-45efd5a06840",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Teams #all should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "c1244267-cf3b-44bf-9e36-c489341c5965",
                "parentUUID": "2255a334-088b-4fe5-ae22-45efd5a06840",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Teams #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all.pop();<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "27399cf3-1fce-4f86-a397-37b20e336865",
                "parentUUID": "2255a334-088b-4fe5-ae22-45efd5a06840",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "2255a334-088b-4fe5-ae22-45efd5a06840",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Teams #all should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "16af164e-7daa-4519-8ca5-a5bcbee69177",
                "parentUUID": "2255a334-088b-4fe5-ae22-45efd5a06840",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Teams #all should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "c1244267-cf3b-44bf-9e36-c489341c5965",
                "parentUUID": "2255a334-088b-4fe5-ae22-45efd5a06840",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Teams #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all.pop();<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "27399cf3-1fce-4f86-a397-37b20e336865",
                "parentUUID": "2255a334-088b-4fe5-ae22-45efd5a06840",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#length",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Teams #length should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.length = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "ddd1a5b9-2aa2-4b20-a8f2-a8fe207d352c",
                "parentUUID": "3f40c281-cf53-48cd-b540-b84e8b6deff1",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Teams #length should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "688c1275-e043-46bf-85db-1d5b4de39487",
                "parentUUID": "3f40c281-cf53-48cd-b540-b84e8b6deff1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "3f40c281-cf53-48cd-b540-b84e8b6deff1",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Teams #length should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.length = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "ddd1a5b9-2aa2-4b20-a8f2-a8fe207d352c",
                "parentUUID": "3f40c281-cf53-48cd-b540-b84e8b6deff1",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Teams #length should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "688c1275-e043-46bf-85db-1d5b4de39487",
                "parentUUID": "3f40c281-cf53-48cd-b540-b84e8b6deff1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#add(team)",
            "suites": [],
            "tests": [
              {
                "title": "should add the given team",
                "fullTitle": "Teams #add(team) should add the given team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "dd552dcc-fe3b-4283-9544-70d4ed5bf7ac",
                "parentUUID": "f6591375-1436-4256-a950-e2ee3b8ffee9",
                "skipped": false
              },
              {
                "title": "should error if team with teamName already exists",
                "fullTitle": "Teams #add(team) should error if team with teamName already exists",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.add(t);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "b2ee9994-a15d-4a2d-846c-d112c1089882",
                "parentUUID": "f6591375-1436-4256-a950-e2ee3b8ffee9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "f6591375-1436-4256-a950-e2ee3b8ffee9",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should add the given team",
                "fullTitle": "Teams #add(team) should add the given team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "dd552dcc-fe3b-4283-9544-70d4ed5bf7ac",
                "parentUUID": "f6591375-1436-4256-a950-e2ee3b8ffee9",
                "skipped": false
              },
              {
                "title": "should error if team with teamName already exists",
                "fullTitle": "Teams #add(team) should error if team with teamName already exists",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.add(t);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "b2ee9994-a15d-4a2d-846c-d112c1089882",
                "parentUUID": "f6591375-1436-4256-a950-e2ee3b8ffee9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#remove(team)",
            "suites": [],
            "tests": [
              {
                "title": "should remove the existing team",
                "fullTitle": "Teams #remove(team) should remove the existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "002d310c-f82a-4020-9c63-2f417a5f56c6",
                "parentUUID": "6549fc14-09ec-496d-bc32-519b671fa528",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing team",
                "fullTitle": "Teams #remove(team) should not remove the non-existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t1).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "15038f4c-0504-4740-b2ae-f3e956497aa5",
                "parentUUID": "6549fc14-09ec-496d-bc32-519b671fa528",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "6549fc14-09ec-496d-bc32-519b671fa528",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should remove the existing team",
                "fullTitle": "Teams #remove(team) should remove the existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "002d310c-f82a-4020-9c63-2f417a5f56c6",
                "parentUUID": "6549fc14-09ec-496d-bc32-519b671fa528",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing team",
                "fullTitle": "Teams #remove(team) should not remove the non-existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t1).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "15038f4c-0504-4740-b2ae-f3e956497aa5",
                "parentUUID": "6549fc14-09ec-496d-bc32-519b671fa528",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#removeByTeamName(team)",
            "suites": [],
            "tests": [
              {
                "title": "should remove the existing team",
                "fullTitle": "Teams #removeByTeamName(team) should remove the existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t.teamName).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "30762716-bcd4-40f9-8b3b-3dc9630f3b95",
                "parentUUID": "26e8f05a-d350-45fb-bfd7-2b7cc8e84aa6",
                "skipped": false
              },
              {
                "title": "should ignore team name case",
                "fullTitle": "Teams #removeByTeamName(team) should ignore team name case",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'abc1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(<span class=\"hljs-string\">'ABC1'</span>).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "0ad5928b-fb7e-47a5-ad3c-ab57ceb0ed10",
                "parentUUID": "26e8f05a-d350-45fb-bfd7-2b7cc8e84aa6",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing team",
                "fullTitle": "Teams #removeByTeamName(team) should not remove the non-existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t1.teamName).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "a1331953-5693-4c9f-8e51-dfad0be51c80",
                "parentUUID": "26e8f05a-d350-45fb-bfd7-2b7cc8e84aa6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "26e8f05a-d350-45fb-bfd7-2b7cc8e84aa6",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should remove the existing team",
                "fullTitle": "Teams #removeByTeamName(team) should remove the existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t.teamName).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "30762716-bcd4-40f9-8b3b-3dc9630f3b95",
                "parentUUID": "26e8f05a-d350-45fb-bfd7-2b7cc8e84aa6",
                "skipped": false
              },
              {
                "title": "should ignore team name case",
                "fullTitle": "Teams #removeByTeamName(team) should ignore team name case",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'abc1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(<span class=\"hljs-string\">'ABC1'</span>).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "0ad5928b-fb7e-47a5-ad3c-ab57ceb0ed10",
                "parentUUID": "26e8f05a-d350-45fb-bfd7-2b7cc8e84aa6",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing team",
                "fullTitle": "Teams #removeByTeamName(team) should not remove the non-existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t1.teamName).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "a1331953-5693-4c9f-8e51-dfad0be51c80",
                "parentUUID": "26e8f05a-d350-45fb-bfd7-2b7cc8e84aa6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName)",
            "suites": [
              {
                "title": "when teams are full",
                "suites": [],
                "tests": [
                  {
                    "title": "should return a valid response",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teams are full should return a valid response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);",
                    "isRoot": false,
                    "uuid": "701d75d1-9570-4223-8cd9-606266d71e51",
                    "parentUUID": "f1dc6dc8-89b5-4293-8523-35389b2dd622",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamsTests.js",
                "uuid": "f1dc6dc8-89b5-4293-8523-35389b2dd622",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
                "passes": [
                  {
                    "title": "should return a valid response",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teams are full should return a valid response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);",
                    "isRoot": false,
                    "uuid": "701d75d1-9570-4223-8cd9-606266d71e51",
                    "parentUUID": "f1dc6dc8-89b5-4293-8523-35389b2dd622",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0
              },
              {
                "title": "when teamLeader selection is PLAYER_CHOICE",
                "suites": [],
                "tests": [
                  {
                    "title": "should inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should inquire for team leader",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> inquired = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    inquired = <span class=\"hljs-literal\">true</span>;<br>});<br>r.should.be.true();<br>inquired.should.be.true();",
                    "isRoot": false,
                    "uuid": "b027e253-e9a4-4343-b4f6-60af705ad79a",
                    "parentUUID": "67438b99-383a-4e85-b7d2-ca98e547acb7",
                    "skipped": false
                  },
                  {
                    "title": "should not inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should not inquire for team leader",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>tc.all[<span class=\"hljs-number\">0</span>].teamLeader = c1;<br><span class=\"hljs-keyword\">var</span> didNotInquire = <span class=\"hljs-literal\">true</span>;<br>tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    didNotInquire = <span class=\"hljs-literal\">false</span>;<br>});<br>didNotInquire.should.be.true();<br>t.teamLeader.should.equal(c1);",
                    "isRoot": false,
                    "uuid": "52136574-8e7d-43ec-9d15-ebe0c94ccbd6",
                    "parentUUID": "67438b99-383a-4e85-b7d2-ca98e547acb7",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant as teamLeader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should not add contestant as teamLeader",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should(t.teamLeader).be.null();",
                    "isRoot": false,
                    "uuid": "dc38d7eb-1553-4bdf-81d5-0cb147be8dcc",
                    "parentUUID": "67438b99-383a-4e85-b7d2-ca98e547acb7",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamsTests.js",
                "uuid": "67438b99-383a-4e85-b7d2-ca98e547acb7",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
                "passes": [
                  {
                    "title": "should inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should inquire for team leader",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> inquired = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    inquired = <span class=\"hljs-literal\">true</span>;<br>});<br>r.should.be.true();<br>inquired.should.be.true();",
                    "isRoot": false,
                    "uuid": "b027e253-e9a4-4343-b4f6-60af705ad79a",
                    "parentUUID": "67438b99-383a-4e85-b7d2-ca98e547acb7",
                    "skipped": false
                  },
                  {
                    "title": "should not inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should not inquire for team leader",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>tc.all[<span class=\"hljs-number\">0</span>].teamLeader = c1;<br><span class=\"hljs-keyword\">var</span> didNotInquire = <span class=\"hljs-literal\">true</span>;<br>tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    didNotInquire = <span class=\"hljs-literal\">false</span>;<br>});<br>didNotInquire.should.be.true();<br>t.teamLeader.should.equal(c1);",
                    "isRoot": false,
                    "uuid": "52136574-8e7d-43ec-9d15-ebe0c94ccbd6",
                    "parentUUID": "67438b99-383a-4e85-b7d2-ca98e547acb7",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant as teamLeader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should not add contestant as teamLeader",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should(t.teamLeader).be.null();",
                    "isRoot": false,
                    "uuid": "dc38d7eb-1553-4bdf-81d5-0cb147be8dcc",
                    "parentUUID": "67438b99-383a-4e85-b7d2-ca98e547acb7",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1
              },
              {
                "title": "when teamLeader selection is RANDOM",
                "suites": [],
                "tests": [
                  {
                    "title": "should not inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should not inquire for team leader",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> notInquired = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    notInquired = <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>r.should.be.true();<br>notInquired.should.be.true();",
                    "isRoot": false,
                    "uuid": "e6a16a9f-c92a-40cd-8f68-3f7e50255065",
                    "parentUUID": "0d6859e4-100f-4e0e-81ef-e86f0c6fd93f",
                    "skipped": false
                  },
                  {
                    "title": "should automatically add team leader when team is filled",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should automatically add team leader when team is filled",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).not.be.null();<br>});",
                    "isRoot": false,
                    "uuid": "3ab7aeb1-71fe-4297-ad08-b388c3b0afc1",
                    "parentUUID": "0d6859e4-100f-4e0e-81ef-e86f0c6fd93f",
                    "skipped": false
                  },
                  {
                    "title": "should not automatically add team leader when team is not filled",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should not automatically add team leader when team is not filled",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).be.null();<br>});",
                    "isRoot": false,
                    "uuid": "1c2c9082-f873-4baf-8c94-e75cc6efb75f",
                    "parentUUID": "0d6859e4-100f-4e0e-81ef-e86f0c6fd93f",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamsTests.js",
                "uuid": "0d6859e4-100f-4e0e-81ef-e86f0c6fd93f",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
                "passes": [
                  {
                    "title": "should not inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should not inquire for team leader",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> notInquired = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    notInquired = <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>r.should.be.true();<br>notInquired.should.be.true();",
                    "isRoot": false,
                    "uuid": "e6a16a9f-c92a-40cd-8f68-3f7e50255065",
                    "parentUUID": "0d6859e4-100f-4e0e-81ef-e86f0c6fd93f",
                    "skipped": false
                  },
                  {
                    "title": "should automatically add team leader when team is filled",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should automatically add team leader when team is filled",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).not.be.null();<br>});",
                    "isRoot": false,
                    "uuid": "3ab7aeb1-71fe-4297-ad08-b388c3b0afc1",
                    "parentUUID": "0d6859e4-100f-4e0e-81ef-e86f0c6fd93f",
                    "skipped": false
                  },
                  {
                    "title": "should not automatically add team leader when team is not filled",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should not automatically add team leader when team is not filled",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).be.null();<br>});",
                    "isRoot": false,
                    "uuid": "1c2c9082-f873-4baf-8c94-e75cc6efb75f",
                    "parentUUID": "0d6859e4-100f-4e0e-81ef-e86f0c6fd93f",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0
              },
              {
                "title": "when set to use unlimited teams",
                "suites": [],
                "tests": [
                  {
                    "title": "should add team when teams are full",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when set to use unlimited teams should add team when teams are full",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
                    "isRoot": false,
                    "uuid": "200d08f3-a6bf-4943-b53f-da9bef900ee7",
                    "parentUUID": "3f70be9f-1003-4e89-ac3f-06d73d56c1c2",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamsTests.js",
                "uuid": "3f70be9f-1003-4e89-ac3f-06d73d56c1c2",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
                "passes": [
                  {
                    "title": "should add team when teams are full",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when set to use unlimited teams should add team when teams are full",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
                    "isRoot": false,
                    "uuid": "200d08f3-a6bf-4943-b53f-da9bef900ee7",
                    "parentUUID": "3f70be9f-1003-4e89-ac3f-06d73d56c1c2",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 2
              },
              {
                "title": "when team selection method is PLAYER_CHOICE",
                "suites": [],
                "tests": [
                  {
                    "title": "should throw when no team name is given",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should throw when no team name is given",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>}).should.throw();",
                    "isRoot": false,
                    "uuid": "3edc4be1-4eae-49ce-8132-a4f8d5ef6a29",
                    "parentUUID": "bffd103d-ab3c-4eec-9380-6f53578aac53",
                    "skipped": false
                  },
                  {
                    "title": "should add contestant to correct team",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should add contestant to correct team",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "a2892769-7c77-438f-982e-6b63f77ebc5e",
                    "parentUUID": "bffd103d-ab3c-4eec-9380-6f53578aac53",
                    "skipped": false
                  },
                  {
                    "title": "should not add to full team",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should not add to full team",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "e019d6e9-1ad0-4377-bb3e-4d2bd5a757f1",
                    "parentUUID": "bffd103d-ab3c-4eec-9380-6f53578aac53",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamsTests.js",
                "uuid": "bffd103d-ab3c-4eec-9380-6f53578aac53",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
                "passes": [
                  {
                    "title": "should throw when no team name is given",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should throw when no team name is given",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>}).should.throw();",
                    "isRoot": false,
                    "uuid": "3edc4be1-4eae-49ce-8132-a4f8d5ef6a29",
                    "parentUUID": "bffd103d-ab3c-4eec-9380-6f53578aac53",
                    "skipped": false
                  },
                  {
                    "title": "should add contestant to correct team",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should add contestant to correct team",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "a2892769-7c77-438f-982e-6b63f77ebc5e",
                    "parentUUID": "bffd103d-ab3c-4eec-9380-6f53578aac53",
                    "skipped": false
                  },
                  {
                    "title": "should not add to full team",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should not add to full team",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "e019d6e9-1ad0-4377-bb3e-4d2bd5a757f1",
                    "parentUUID": "bffd103d-ab3c-4eec-9380-6f53578aac53",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 3
              }
            ],
            "tests": [
              {
                "title": "should give contestant an id",
                "fullTitle": "Teams addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) should give contestant an id",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Username'</span>;<br>should(c.id).be.null();<br>tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>should(c.id).not.be.null();",
                "isRoot": false,
                "uuid": "8ef3c962-4754-493f-bd29-75f15826e4b4",
                "parentUUID": "8599195a-20ec-4ff4-9239-7799e4a2c324",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "8599195a-20ec-4ff4-9239-7799e4a2c324",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should give contestant an id",
                "fullTitle": "Teams addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) should give contestant an id",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Username'</span>;<br>should(c.id).be.null();<br>tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>should(c.id).not.be.null();",
                "isRoot": false,
                "uuid": "8ef3c962-4754-493f-bd29-75f15826e4b4",
                "parentUUID": "8599195a-20ec-4ff4-9239-7799e4a2c324",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "getByContestant(contestant)",
            "suites": [],
            "tests": [
              {
                "title": "should get team of contestant",
                "fullTitle": "Teams getByContestant(contestant) should get team of contestant",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">5</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>    r.should.be.true();<br>});<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">4</span>]);<br>t.should.not.be.null();<br>t.contestants.getById(cc[<span class=\"hljs-number\">4</span>].id).should.equal(cc[<span class=\"hljs-number\">4</span>]);",
                "isRoot": false,
                "uuid": "442a0278-03a4-4a6f-918b-ab9c3d2b5cfc",
                "parentUUID": "a30f69e8-a059-40a6-8c95-a332d2cf8477",
                "skipped": false
              },
              {
                "title": "should not get team of contestant",
                "fullTitle": "Teams getByContestant(contestant) should not get team of contestant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">1</span>);<br>cc[<span class=\"hljs-number\">0</span>].id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">0</span>]);<br>should(t).be.null();",
                "isRoot": false,
                "uuid": "0cc6dd89-1f74-48b0-b61e-e7b16e108a29",
                "parentUUID": "a30f69e8-a059-40a6-8c95-a332d2cf8477",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "a30f69e8-a059-40a6-8c95-a332d2cf8477",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should get team of contestant",
                "fullTitle": "Teams getByContestant(contestant) should get team of contestant",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">5</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>    r.should.be.true();<br>});<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">4</span>]);<br>t.should.not.be.null();<br>t.contestants.getById(cc[<span class=\"hljs-number\">4</span>].id).should.equal(cc[<span class=\"hljs-number\">4</span>]);",
                "isRoot": false,
                "uuid": "442a0278-03a4-4a6f-918b-ab9c3d2b5cfc",
                "parentUUID": "a30f69e8-a059-40a6-8c95-a332d2cf8477",
                "skipped": false
              },
              {
                "title": "should not get team of contestant",
                "fullTitle": "Teams getByContestant(contestant) should not get team of contestant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">1</span>);<br>cc[<span class=\"hljs-number\">0</span>].id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">0</span>]);<br>should(t).be.null();",
                "isRoot": false,
                "uuid": "0cc6dd89-1f74-48b0-b61e-e7b16e108a29",
                "parentUUID": "a30f69e8-a059-40a6-8c95-a332d2cf8477",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "getByTeamName(temName)",
            "suites": [],
            "tests": [
              {
                "title": "should get team when team with name exists",
                "fullTitle": "Teams getByTeamName(temName) should get team when team with name exists",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t1 = tc.all[<span class=\"hljs-number\">0</span>];<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(t1.teamName);<br>t.should.equal(t1);",
                "isRoot": false,
                "uuid": "4b5bf7b7-02a9-48fe-b9e5-0c35d68da814",
                "parentUUID": "71c747e7-3765-4d48-b282-3d0c3a5ca032",
                "skipped": false
              },
              {
                "title": "should not get team when team with name does not exist",
                "fullTitle": "Teams getByTeamName(temName) should not get team when team with name does not exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(<span class=\"hljs-string\">'Not a team name that exists'</span>);<br>should(t).be.null();",
                "isRoot": false,
                "uuid": "8a53aced-ddb7-469b-92df-cc2930bc0ad8",
                "parentUUID": "71c747e7-3765-4d48-b282-3d0c3a5ca032",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "71c747e7-3765-4d48-b282-3d0c3a5ca032",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should get team when team with name exists",
                "fullTitle": "Teams getByTeamName(temName) should get team when team with name exists",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t1 = tc.all[<span class=\"hljs-number\">0</span>];<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(t1.teamName);<br>t.should.equal(t1);",
                "isRoot": false,
                "uuid": "4b5bf7b7-02a9-48fe-b9e5-0c35d68da814",
                "parentUUID": "71c747e7-3765-4d48-b282-3d0c3a5ca032",
                "skipped": false
              },
              {
                "title": "should not get team when team with name does not exist",
                "fullTitle": "Teams getByTeamName(temName) should not get team when team with name does not exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(<span class=\"hljs-string\">'Not a team name that exists'</span>);<br>should(t).be.null();",
                "isRoot": false,
                "uuid": "8a53aced-ddb7-469b-92df-cc2930bc0ad8",
                "parentUUID": "71c747e7-3765-4d48-b282-3d0c3a5ca032",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "getAvailable(settings)",
            "suites": [],
            "tests": [
              {
                "title": "should not return full teams",
                "fullTitle": "Teams getAvailable(settings) should not return full teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">2</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "f8b74523-5e17-4048-9794-5fe75fafaa2a",
                "parentUUID": "6e3e90bd-8b22-43f0-86a4-45ad717f09d3",
                "skipped": false
              },
              {
                "title": "should return teams with space",
                "fullTitle": "Teams getAvailable(settings) should return teams with space",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "c074e3ef-4250-417f-93da-ab4f5d5639df",
                "parentUUID": "6e3e90bd-8b22-43f0-86a4-45ad717f09d3",
                "skipped": false
              },
              {
                "title": "should return teams with unlimited space",
                "fullTitle": "Teams getAvailable(settings) should return teams with unlimited space",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = constants.UNLIMITED;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "2c0e1cad-1efb-49ee-972e-bf2a7ea2a068",
                "parentUUID": "6e3e90bd-8b22-43f0-86a4-45ad717f09d3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "6e3e90bd-8b22-43f0-86a4-45ad717f09d3",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should not return full teams",
                "fullTitle": "Teams getAvailable(settings) should not return full teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">2</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "f8b74523-5e17-4048-9794-5fe75fafaa2a",
                "parentUUID": "6e3e90bd-8b22-43f0-86a4-45ad717f09d3",
                "skipped": false
              },
              {
                "title": "should return teams with space",
                "fullTitle": "Teams getAvailable(settings) should return teams with space",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "c074e3ef-4250-417f-93da-ab4f5d5639df",
                "parentUUID": "6e3e90bd-8b22-43f0-86a4-45ad717f09d3",
                "skipped": false
              },
              {
                "title": "should return teams with unlimited space",
                "fullTitle": "Teams getAvailable(settings) should return teams with unlimited space",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = constants.UNLIMITED;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "2c0e1cad-1efb-49ee-972e-bf2a7ea2a068",
                "parentUUID": "6e3e90bd-8b22-43f0-86a4-45ad717f09d3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/TeamsTests.js",
        "uuid": "17d218cb-9bf7-4a5d-bb18-680ea8c424d0",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Team",
        "suites": [
          {
            "title": "#teamName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Team #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t._teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
                "isRoot": false,
                "uuid": "4d6e56ad-372f-49e2-ac76-99c8bd9647fc",
                "parentUUID": "d7c6c74a-8b70-4fdb-a517-012b148c9de4",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t._teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t.teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
                "isRoot": false,
                "uuid": "0f0a4a43-1598-4930-ad3a-98b8fcccb141",
                "parentUUID": "d7c6c74a-8b70-4fdb-a517-012b148c9de4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "d7c6c74a-8b70-4fdb-a517-012b148c9de4",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Team #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t._teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
                "isRoot": false,
                "uuid": "4d6e56ad-372f-49e2-ac76-99c8bd9647fc",
                "parentUUID": "d7c6c74a-8b70-4fdb-a517-012b148c9de4",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t._teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t.teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
                "isRoot": false,
                "uuid": "0f0a4a43-1598-4930-ad3a-98b8fcccb141",
                "parentUUID": "d7c6c74a-8b70-4fdb-a517-012b148c9de4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#teamLeader",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Team #teamLeader should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t.teamLeader = c;<br>t._teamLeader.should.equal(c);",
                "isRoot": false,
                "uuid": "a29bcd3e-fd09-4994-a160-dcdd38ef98a8",
                "parentUUID": "7255b82a-0f18-42e5-afaa-d6b49f88c5c8",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #teamLeader should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t._teamLeader = c;<br>t.teamLeader.should.equal(c);",
                "isRoot": false,
                "uuid": "973f9584-8469-4c73-afcd-0c4b4f88ca39",
                "parentUUID": "7255b82a-0f18-42e5-afaa-d6b49f88c5c8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "7255b82a-0f18-42e5-afaa-d6b49f88c5c8",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Team #teamLeader should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t.teamLeader = c;<br>t._teamLeader.should.equal(c);",
                "isRoot": false,
                "uuid": "a29bcd3e-fd09-4994-a160-dcdd38ef98a8",
                "parentUUID": "7255b82a-0f18-42e5-afaa-d6b49f88c5c8",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #teamLeader should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t._teamLeader = c;<br>t.teamLeader.should.equal(c);",
                "isRoot": false,
                "uuid": "973f9584-8469-4c73-afcd-0c4b4f88ca39",
                "parentUUID": "7255b82a-0f18-42e5-afaa-d6b49f88c5c8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#score",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Team #score should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "da85a5d0-b8f3-43b0-9d72-575ed63887a5",
                "parentUUID": "eacaf3e4-3860-4384-99e6-f799fe234f20",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #score should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br>p._score = <span class=\"hljs-number\">5</span>;<br>p.score.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "7bc0302e-a221-4964-8999-a51b56154f60",
                "parentUUID": "eacaf3e4-3860-4384-99e6-f799fe234f20",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "eacaf3e4-3860-4384-99e6-f799fe234f20",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Team #score should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "da85a5d0-b8f3-43b0-9d72-575ed63887a5",
                "parentUUID": "eacaf3e4-3860-4384-99e6-f799fe234f20",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #score should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br>p._score = <span class=\"hljs-number\">5</span>;<br>p.score.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "7bc0302e-a221-4964-8999-a51b56154f60",
                "parentUUID": "eacaf3e4-3860-4384-99e6-f799fe234f20",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#contestants",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Team #contestants should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "07b17c63-81a5-4ec8-806c-47ae9b562b1f",
                "parentUUID": "4a311709-bd4b-4e1c-83d6-8fb299a70d3f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #contestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = p.contestants;<br>c.should.be.instanceOf(Participants);",
                "isRoot": false,
                "uuid": "de9041aa-e714-4e83-9f43-4b426188d17f",
                "parentUUID": "4a311709-bd4b-4e1c-83d6-8fb299a70d3f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "4a311709-bd4b-4e1c-83d6-8fb299a70d3f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Team #contestants should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "07b17c63-81a5-4ec8-806c-47ae9b562b1f",
                "parentUUID": "4a311709-bd4b-4e1c-83d6-8fb299a70d3f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #contestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = p.contestants;<br>c.should.be.instanceOf(Participants);",
                "isRoot": false,
                "uuid": "de9041aa-e714-4e83-9f43-4b426188d17f",
                "parentUUID": "4a311709-bd4b-4e1c-83d6-8fb299a70d3f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "when a contestant scores",
            "suites": [],
            "tests": [
              {
                "title": "should update the teams score",
                "fullTitle": "Team when a contestant scores should update the teams score",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br>c1.incrementScore();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.incrementScore();<br>c2.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "22def700-68a7-4922-ad06-9dbe51131e99",
                "parentUUID": "b82414cd-767b-4e0f-a6f2-d8b98e4038af",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "b82414cd-767b-4e0f-a6f2-d8b98e4038af",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should update the teams score",
                "fullTitle": "Team when a contestant scores should update the teams score",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br>c1.incrementScore();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.incrementScore();<br>c2.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "22def700-68a7-4922-ad06-9dbe51131e99",
                "parentUUID": "b82414cd-767b-4e0f-a6f2-d8b98e4038af",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "tryAssignTeamLeader(contestant, hostOverride)",
            "suites": [],
            "tests": [
              {
                "title": "should allow it when no team leader is set",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should allow it when no team leader is set",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.id = <span class=\"hljs-string\">'c1'</span>;<br>t.contestants.add(c);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);",
                "isRoot": false,
                "uuid": "5e33c7e8-6b5c-4c73-a72f-fe592cb319ea",
                "parentUUID": "b89b3af0-2f2f-4cf8-8194-8788e49602cf",
                "skipped": false
              },
              {
                "title": "should not allow it when a team leader is set",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should not allow it when a team leader is set",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_FULFILLED);",
                "isRoot": false,
                "uuid": "05d4e094-c0f0-49d7-9611-c2072534aab8",
                "parentUUID": "b89b3af0-2f2f-4cf8-8194-8788e49602cf",
                "skipped": false
              },
              {
                "title": "should not allow it when a contestant is not in team",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should not allow it when a contestant is not in team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_NOT_CONTESTANT);",
                "isRoot": false,
                "uuid": "79dca788-8994-4a51-b2b6-eb46af8496b8",
                "parentUUID": "b89b3af0-2f2f-4cf8-8194-8788e49602cf",
                "skipped": false
              },
              {
                "title": "should allow it when a team leader is set and host override is flagged",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should allow it when a team leader is set and host override is flagged",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">true</span>);<br>r.should.be.true();<br>should.not.exist(m);",
                "isRoot": false,
                "uuid": "b7bb8e33-f4a1-4b77-84c4-80f5e24ded77",
                "parentUUID": "b89b3af0-2f2f-4cf8-8194-8788e49602cf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "b89b3af0-2f2f-4cf8-8194-8788e49602cf",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should allow it when no team leader is set",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should allow it when no team leader is set",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.id = <span class=\"hljs-string\">'c1'</span>;<br>t.contestants.add(c);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);",
                "isRoot": false,
                "uuid": "5e33c7e8-6b5c-4c73-a72f-fe592cb319ea",
                "parentUUID": "b89b3af0-2f2f-4cf8-8194-8788e49602cf",
                "skipped": false
              },
              {
                "title": "should not allow it when a team leader is set",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should not allow it when a team leader is set",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_FULFILLED);",
                "isRoot": false,
                "uuid": "05d4e094-c0f0-49d7-9611-c2072534aab8",
                "parentUUID": "b89b3af0-2f2f-4cf8-8194-8788e49602cf",
                "skipped": false
              },
              {
                "title": "should not allow it when a contestant is not in team",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should not allow it when a contestant is not in team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_NOT_CONTESTANT);",
                "isRoot": false,
                "uuid": "79dca788-8994-4a51-b2b6-eb46af8496b8",
                "parentUUID": "b89b3af0-2f2f-4cf8-8194-8788e49602cf",
                "skipped": false
              },
              {
                "title": "should allow it when a team leader is set and host override is flagged",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should allow it when a team leader is set and host override is flagged",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">true</span>);<br>r.should.be.true();<br>should.not.exist(m);",
                "isRoot": false,
                "uuid": "b7bb8e33-f4a1-4b77-84c4-80f5e24ded77",
                "parentUUID": "b89b3af0-2f2f-4cf8-8194-8788e49602cf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "tryChangeTeamName(teamName, settings, hostOverride)",
            "suites": [
              {
                "title": "when host override",
                "suites": [],
                "tests": [
                  {
                    "title": "should change name when request is valid",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when request is valid",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "7d42addf-e857-43d2-a153-5cb739b6da29",
                    "parentUUID": "5d97e170-0c80-472e-be2c-22e91f565d34",
                    "skipped": false
                  },
                  {
                    "title": "should change name when setting do not allow it",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when setting do not allow it",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "69813600-14ea-42db-85d7-9cedc568ae94",
                    "parentUUID": "5d97e170-0c80-472e-be2c-22e91f565d34",
                    "skipped": false
                  },
                  {
                    "title": "should change name when name contains profanity",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when name contains profanity",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "930a98cd-b691-4d20-ab93-710a70b14c78",
                    "parentUUID": "5d97e170-0c80-472e-be2c-22e91f565d34",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamTests.js",
                "uuid": "5d97e170-0c80-472e-be2c-22e91f565d34",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
                "passes": [
                  {
                    "title": "should change name when request is valid",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when request is valid",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "7d42addf-e857-43d2-a153-5cb739b6da29",
                    "parentUUID": "5d97e170-0c80-472e-be2c-22e91f565d34",
                    "skipped": false
                  },
                  {
                    "title": "should change name when setting do not allow it",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when setting do not allow it",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "69813600-14ea-42db-85d7-9cedc568ae94",
                    "parentUUID": "5d97e170-0c80-472e-be2c-22e91f565d34",
                    "skipped": false
                  },
                  {
                    "title": "should change name when name contains profanity",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when name contains profanity",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "930a98cd-b691-4d20-ab93-710a70b14c78",
                    "parentUUID": "5d97e170-0c80-472e-be2c-22e91f565d34",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1
              }
            ],
            "tests": [
              {
                "title": "should change name when request is valid",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should change name when request is valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                "isRoot": false,
                "uuid": "e665b1ab-7528-4ade-9231-9aba122501dd",
                "parentUUID": "1a239a24-b9a6-4a44-865d-91a3daf194b6",
                "skipped": false
              },
              {
                "title": "should not change name when setting do not allow it",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should not change name when setting do not allow it",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_SETTINGS_NOT_ALLOW);<br>r.should.be.false();",
                "isRoot": false,
                "uuid": "1de35ca1-f217-41c6-b7f1-a74b19c6fa77",
                "parentUUID": "1a239a24-b9a6-4a44-865d-91a3daf194b6",
                "skipped": false
              },
              {
                "title": "should not change name when name contains profanity",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should not change name when name contains profanity",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_CONTAINS_PROFANITY);<br>r.should.be.false();",
                "isRoot": false,
                "uuid": "dfc7f3de-f1ba-4aed-971c-0115852a35e1",
                "parentUUID": "1a239a24-b9a6-4a44-865d-91a3daf194b6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "1a239a24-b9a6-4a44-865d-91a3daf194b6",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should change name when request is valid",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should change name when request is valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                "isRoot": false,
                "uuid": "e665b1ab-7528-4ade-9231-9aba122501dd",
                "parentUUID": "1a239a24-b9a6-4a44-865d-91a3daf194b6",
                "skipped": false
              },
              {
                "title": "should not change name when setting do not allow it",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should not change name when setting do not allow it",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_SETTINGS_NOT_ALLOW);<br>r.should.be.false();",
                "isRoot": false,
                "uuid": "1de35ca1-f217-41c6-b7f1-a74b19c6fa77",
                "parentUUID": "1a239a24-b9a6-4a44-865d-91a3daf194b6",
                "skipped": false
              },
              {
                "title": "should not change name when name contains profanity",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should not change name when name contains profanity",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_CONTAINS_PROFANITY);<br>r.should.be.false();",
                "isRoot": false,
                "uuid": "dfc7f3de-f1ba-4aed-971c-0115852a35e1",
                "parentUUID": "1a239a24-b9a6-4a44-865d-91a3daf194b6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "getContestantByUsername(username)",
            "suites": [],
            "tests": [
              {
                "title": "should get contestant when contest with username exists",
                "fullTitle": "Team getContestantByUsername(username) should get contestant when contest with username exists",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(c1.username);<br>c.should.equal(c1);<br>c = t.getContestantByUsername(<span class=\"hljs-string\">'c1abc'</span>);<br>c.should.equal(c1);",
                "isRoot": false,
                "uuid": "58ca6f1d-5ec7-4d5e-98ba-4a67119b06bf",
                "parentUUID": "5015c66a-a6e9-48e7-959a-c56272f7123e",
                "skipped": false
              },
              {
                "title": "should not get contestant when contest with username does not exist",
                "fullTitle": "Team getContestantByUsername(username) should not get contestant when contest with username does not exist",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(<span class=\"hljs-string\">'John Doe'</span>);<br>should(c).be.null();",
                "isRoot": false,
                "uuid": "9d0b5fa8-a521-4133-a85a-336009a09d5d",
                "parentUUID": "5015c66a-a6e9-48e7-959a-c56272f7123e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "5015c66a-a6e9-48e7-959a-c56272f7123e",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should get contestant when contest with username exists",
                "fullTitle": "Team getContestantByUsername(username) should get contestant when contest with username exists",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(c1.username);<br>c.should.equal(c1);<br>c = t.getContestantByUsername(<span class=\"hljs-string\">'c1abc'</span>);<br>c.should.equal(c1);",
                "isRoot": false,
                "uuid": "58ca6f1d-5ec7-4d5e-98ba-4a67119b06bf",
                "parentUUID": "5015c66a-a6e9-48e7-959a-c56272f7123e",
                "skipped": false
              },
              {
                "title": "should not get contestant when contest with username does not exist",
                "fullTitle": "Team getContestantByUsername(username) should not get contestant when contest with username does not exist",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(<span class=\"hljs-string\">'John Doe'</span>);<br>should(c).be.null();",
                "isRoot": false,
                "uuid": "9d0b5fa8-a521-4133-a85a-336009a09d5d",
                "parentUUID": "5015c66a-a6e9-48e7-959a-c56272f7123e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/TeamTests.js",
        "uuid": "6f3d4497-0b61-497b-adc2-c77f17ae8556",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "146d52e9-9864-4b63-86ba-93bca71219d2",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should throw on set value",
      "fullTitle": "#wasSuccessful should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.wasSuccessful = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "6bc07454-543a-47fe-b601-89da31f8ebef",
      "parentUUID": "5227c711-e306-4edb-9386-8dd9f4127736",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#wasSuccessful should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>r.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "3b254b9f-c799-49f8-a7e1-bca92f84cc5a",
      "parentUUID": "5227c711-e306-4edb-9386-8dd9f4127736",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#enquireForTeamLeaderPosition should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r._enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "0dd8313a-0e75-40f9-a55e-94efda6c0921",
      "parentUUID": "108eb173-3142-45c0-a8fb-19cf772144d6",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#enquireForTeamLeaderPosition should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r.enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "fbfe87cd-97de-403c-8235-5ae76d95d750",
      "parentUUID": "108eb173-3142-45c0-a8fb-19cf772144d6",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#errorMessage should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.errorMessage = <span class=\"hljs-string\">'test'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "e0e7181b-f6b7-44ba-aea9-67a01075b860",
      "parentUUID": "e9439b64-8015-4bc3-9d98-167fe65b30f0",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#errorMessage should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._errorMessage = <span class=\"hljs-string\">'errorMessage_test'</span>;<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'errorMessage_test'</span>);",
      "isRoot": false,
      "uuid": "f28db9ce-05d8-4071-8624-db83f23ac12e",
      "parentUUID": "e9439b64-8015-4bc3-9d98-167fe65b30f0",
      "skipped": false
    },
    {
      "title": "should change the state to not successful",
      "fullTitle": "#setNotSuccessful(errorMessage) should change the state to not successful",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.setNotSuccessful(<span class=\"hljs-string\">'Test error message'</span>);<br>r.wasSuccessful.should.be.false();<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'Test error message'</span>);",
      "isRoot": false,
      "uuid": "7cf84ff7-657e-415d-b024-932e523a23ef",
      "parentUUID": "a61b6395-b221-4d7b-af58-773f1128ea7b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'username_test'</span>;<br>c._username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
      "isRoot": false,
      "uuid": "f83432f0-1862-49c8-865a-414dc365176f",
      "parentUUID": "6ccc681d-c58e-4b9e-9a28-9dcb2a266574",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._username = <span class=\"hljs-string\">'username_test'</span>;<br>c.username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
      "isRoot": false,
      "uuid": "6fc220f5-fa4c-4c3c-b29b-ee9efa6d1f99",
      "parentUUID": "6ccc681d-c58e-4b9e-9a28-9dcb2a266574",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#score should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    c.score = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "5939b518-5d80-478a-9279-37d566e12b7e",
      "parentUUID": "6a809820-7d86-46f4-867d-7b51682ca7fb",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#score should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._score = <span class=\"hljs-number\">1</span>;<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "d4b717cd-697a-4187-8e9a-80ad8e31c24c",
      "parentUUID": "6a809820-7d86-46f4-867d-7b51682ca7fb",
      "skipped": false
    },
    {
      "title": "should increment the contestant's score",
      "fullTitle": "#incrementScore() should increment the contestant's score",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.incrementScore();<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "24ed3ff0-b487-41ca-a540-9be966d663a5",
      "parentUUID": "fac77bd4-d0e4-4916-8e84-6c0792de31bb",
      "skipped": false
    },
    {
      "title": "should emit scoreUpdate event",
      "fullTitle": "#incrementScore() should emit scoreUpdate event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.on(<span class=\"hljs-string\">'scoreUpdate'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>});<br>c.incrementScore();",
      "isRoot": false,
      "uuid": "a714ddda-242f-405a-b26a-d03cc6a0c764",
      "parentUUID": "fac77bd4-d0e4-4916-8e84-6c0792de31bb",
      "skipped": false
    },
    {
      "title": "should return a non-null non-empty key",
      "fullTitle": "#generateSessionId() should return a non-null non-empty key",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateSessionId().should.not.be.equal(<span class=\"hljs-string\">''</span>).and.not.be.equal(<span class=\"hljs-literal\">null</span>);",
      "isRoot": false,
      "uuid": "86618073-3dee-4240-bb2d-a7a5baa022c2",
      "parentUUID": "b0c207f4-0402-4541-aae7-14ac3ea9f496",
      "skipped": false
    },
    {
      "title": "should return a id of the correct length",
      "fullTitle": "#generateSessionId() should return a id of the correct length",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateSessionId()<br>    .length.should.be.Number().and.equal(idUtility.keyLength);",
      "isRoot": false,
      "uuid": "566ddb03-bf9d-4d11-8a96-0c331488524d",
      "parentUUID": "b0c207f4-0402-4541-aae7-14ac3ea9f496",
      "skipped": false
    },
    {
      "title": "should record id so it cannot be reused.",
      "fullTitle": "#generateSessionId() should record id so it cannot be reused.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> id = idUtility.generateSessionId();<br>idUtility._sessionKeysInUse.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">cachedId</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> cachedId === id;<br>}).should.equal(id);",
      "isRoot": false,
      "uuid": "2749547c-cddd-42dc-9cbd-907a23ee6b3b",
      "parentUUID": "b0c207f4-0402-4541-aae7-14ac3ea9f496",
      "skipped": false
    },
    {
      "title": "should return a UUID",
      "fullTitle": "#generateParticipantId() should return a UUID",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateParticipantId()<br>    .should.match(<span class=\"hljs-regexp\">/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i</span>);",
      "isRoot": false,
      "uuid": "f1905676-3208-4012-b6c8-f05723480cdc",
      "parentUUID": "78a785eb-6dae-4de4-8357-3ee894dd0479",
      "skipped": false
    },
    {
      "title": "should store the ids to stop reuse",
      "fullTitle": "#registerSessionIdsInUse(ids) should store the ids to stop reuse",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.length.should.be.aboveOrEqual(<span class=\"hljs-number\">2</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "5d458876-734b-49d4-898a-1dbc0d20fb9f",
      "parentUUID": "d973a701-e714-4cf6-a0b4-ec6e0cd8a24e",
      "skipped": false
    },
    {
      "title": "should return a UUID",
      "fullTitle": "#releaseSessionId(id) should return a UUID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility.releaseSessionId(<span class=\"hljs-string\">'111AAA'</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.equal(-<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "93cbfad0-8802-4363-9ad1-cc436c8155eb",
      "parentUUID": "5144125d-8323-4c56-b601-eecca385ff8d",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#action should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.data._action.should.equal(constants.buzzerActionCommands.RESET);",
      "isRoot": false,
      "uuid": "e2e79721-92ce-43ba-897c-b3993ec76c4a",
      "parentUUID": "771f30ff-5211-43c3-ab13-2d4e20b48669",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#action should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._action = constants.buzzerActionCommands.RESET;<br>m.action.should.equal(constants.buzzerActionCommands.RESET);",
      "isRoot": false,
      "uuid": "9885781a-34c2-4bcd-a867-dac02f339a28",
      "parentUUID": "771f30ff-5211-43c3-ab13-2d4e20b48669",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "ae824577-b96d-4e62-ae4e-283197ca45d2",
      "parentUUID": "a2f96c13-076b-4710-b211-dd3f3e400128",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "7abddff4-ef6e-49f2-8e66-18bc757a601e",
      "parentUUID": "a2f96c13-076b-4710-b211-dd3f3e400128",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "412227c0-3538-45e9-a6dc-ffaa003b5dff",
      "parentUUID": "07d88091-0ee9-448e-99d0-9020d43e1b21",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "74e6f66a-1084-4e32-b436-0fb5bc5c700a",
      "parentUUID": "07d88091-0ee9-448e-99d0-9020d43e1b21",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'yyy123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "abfdc250-a4c2-424f-938d-ffc8e3dee24e",
      "parentUUID": "2ce94b66-2343-41a3-9d05-7fb72400c9c4",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = <span class=\"hljs-number\">99</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "a46b8dd5-6328-4237-9406-8673869377a1",
      "parentUUID": "2ce94b66-2343-41a3-9d05-7fb72400c9c4",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "6e3038c9-3c39-4ac7-8713-75a712140eab",
      "parentUUID": "4b930678-04be-4679-93a9-b9a600797bdd",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "919cfa73-4ce6-4a28-b470-f7d90c6402e8",
      "parentUUID": "4b930678-04be-4679-93a9-b9a600797bdd",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "6cd66002-e228-41e2-9055-0202017a3737",
      "parentUUID": "89cdea64-6093-4e7f-bd61-61072f4c4542",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "677fc1a7-c001-47df-8376-81fa675bb275",
      "parentUUID": "89cdea64-6093-4e7f-bd61-61072f4c4542",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "34baac78-f5b9-48d4-8c62-b460512fe4a0",
      "parentUUID": "f1f7b9b6-42e6-4b37-8836-fc06d7866c31",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "73aa283a-daef-43b1-8a84-4278b50fc678",
      "parentUUID": "f1f7b9b6-42e6-4b37-8836-fc06d7866c31",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.username = <span class=\"hljs-string\">'test123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
      "isRoot": false,
      "uuid": "32216ce3-77f3-4bef-9f02-e51dad37dc25",
      "parentUUID": "a5128ef0-25f5-43ae-8392-101a96b1d7ff",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._username = <span class=\"hljs-string\">'test123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
      "isRoot": false,
      "uuid": "720660e6-bf74-4791-bf17-3143152e3be4",
      "parentUUID": "a5128ef0-25f5-43ae-8392-101a96b1d7ff",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "2f325afe-cb64-45a6-861a-b1c17a01f517",
      "parentUUID": "e0a4c079-dd92-4614-8f80-de9957093ae9",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "3db0a62b-eaea-4020-b188-e772e41aa218",
      "parentUUID": "e0a4c079-dd92-4614-8f80-de9957093ae9",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "61b104db-558d-4b4c-b673-1551ab8132ad",
      "parentUUID": "bc9d6cbf-4d39-4b3b-9d26-ba0fa1362037",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "03e10810-f22a-452c-a084-918321a13178",
      "parentUUID": "bc9d6cbf-4d39-4b3b-9d26-ba0fa1362037",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "40d684a0-3afd-4e64-a32d-40e37e0488d5",
      "parentUUID": "20db7684-c35e-479c-84b8-25b770a1389d",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "62826f4d-0308-433a-b6a0-695c49de6928",
      "parentUUID": "20db7684-c35e-479c-84b8-25b770a1389d",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#wasSuccessful should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.data._wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "82bdb899-f44f-49e4-89b3-a498756a48e8",
      "parentUUID": "03983f25-0342-4ccb-9fb2-7e4bbbcd2577",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#wasSuccessful should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "52133e72-6921-4bb7-a8c4-4d3dfe7921c6",
      "parentUUID": "03983f25-0342-4ccb-9fb2-7e4bbbcd2577",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#enquireForTeamLeaderPosition should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.data._enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "4872d371-f2a0-4b12-b83b-fa6838faa088",
      "parentUUID": "5a0c0e71-4a51-4b48-aecd-78161e971504",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#enquireForTeamLeaderPosition should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "271245df-fd0e-4678-8b76-6be21174f11d",
      "parentUUID": "5a0c0e71-4a51-4b48-aecd-78161e971504",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#failedRequestReason should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.data._failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
      "isRoot": false,
      "uuid": "caf376d9-9cea-4bcf-bf86-934177cb9469",
      "parentUUID": "28afb428-807a-42ec-93a1-17e41c3c7a0a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#failedRequestReason should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
      "isRoot": false,
      "uuid": "bb1cd5b0-1b49-40ab-90d0-dea9c5eb108f",
      "parentUUID": "28afb428-807a-42ec-93a1-17e41c3c7a0a",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "48ec7249-c9c3-4200-b2b0-c06262493a32",
      "parentUUID": "2ac3c0cd-33b3-40c1-8a61-495b99477370",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b9c2337c-3e0d-4b4a-b9cb-cb02e3f813e8",
      "parentUUID": "2ac3c0cd-33b3-40c1-8a61-495b99477370",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#mustChooseTeam should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.data._mustChooseTeam.should.be.true();",
      "isRoot": false,
      "uuid": "1cdbfa9b-a791-4e51-abe4-b515dc9c7046",
      "parentUUID": "65b9fa5c-97ef-47e9-be4e-3f4aca543a5e",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#mustChooseTeam should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.mustChooseTeam.should.be.true();",
      "isRoot": false,
      "uuid": "6f936295-f2fb-459f-b415-680984e59b20",
      "parentUUID": "65b9fa5c-97ef-47e9-be4e-3f4aca543a5e",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teams should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.data._teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
      "isRoot": false,
      "uuid": "f029441a-bb0e-49d7-a87d-6296e82fe6e2",
      "parentUUID": "67d7a404-96a6-433f-83f2-6e1d579187e9",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teams should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
      "isRoot": false,
      "uuid": "f9ca24ea-dd5d-48d6-b9f2-c0f815b495e7",
      "parentUUID": "67d7a404-96a6-433f-83f2-6e1d579187e9",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "457f7798-0c80-4c96-a161-b858f8999172",
      "parentUUID": "ff259737-b1dd-4bbf-bcb9-75f0be3b5fd7",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "393fcc54-ed00-4a75-8ee9-4ab1159d03e3",
      "parentUUID": "ff259737-b1dd-4bbf-bcb9-75f0be3b5fd7",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#settings should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.data._settings.should.equal(s);",
      "isRoot": false,
      "uuid": "2ae2f725-cb3b-492e-b58d-6165b4f15f23",
      "parentUUID": "4c0950af-bb14-46ae-bc37-9de050aa06cf",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#settings should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.data._settings = s;<br>m.settings.should.equal(s);",
      "isRoot": false,
      "uuid": "20869eb4-52fd-48c4-bc5e-5ed332ef1242",
      "parentUUID": "4c0950af-bb14-46ae-bc37-9de050aa06cf",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "d9d3380f-3176-4802-b70d-4fd0e8b09775",
      "parentUUID": "888c6ab8-9ce5-4fdb-b65b-0a12fad5288a",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-string\">'invalid'</span>;<br>m.settings = s;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "6a2b4372-8ecf-4733-9584-b06ee6e06730",
      "parentUUID": "888c6ab8-9ce5-4fdb-b65b-0a12fad5288a",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "c9e8b512-8486-4efc-96ea-23f57c1e3ced",
      "parentUUID": "f0a7cba1-bb20-445b-a7b0-5d63346e576a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "c76ae452-bf7d-43ed-b54c-cabcae79c4ee",
      "parentUUID": "f0a7cba1-bb20-445b-a7b0-5d63346e576a",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f4b37265-2c3a-46f9-bf5b-537153832309",
      "parentUUID": "b91718f7-1682-4ca7-a623-49ebce018eb1",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f1c4a6ac-9dc9-4343-a90e-15baa19339f0",
      "parentUUID": "b91718f7-1682-4ca7-a623-49ebce018eb1",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "ac844248-3c6a-43f7-9d09-ea10c1f5e448",
      "parentUUID": "ffb14936-d822-4b2e-8bc6-1798a0538e7d",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "960d54b2-27f2-4462-a17f-5d87a8a44216",
      "parentUUID": "ffb14936-d822-4b2e-8bc6-1798a0538e7d",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#message should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "e938c8e9-f30d-4c17-b030-eadef3a7ef8f",
      "parentUUID": "8a32e93c-be35-43e3-954d-f273d9b700d4",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#message should get value",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.data._error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "cde86916-8627-49df-89b1-efef802ced74",
      "parentUUID": "8a32e93c-be35-43e3-954d-f273d9b700d4",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "2ae348ff-fd4c-4150-a927-a8c7446a8419",
      "parentUUID": "f9a86c24-be20-4dc6-be4c-639c48a20209",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "3f788241-ba47-42bb-bb4f-38ef177eadcf",
      "parentUUID": "f9a86c24-be20-4dc6-be4c-639c48a20209",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionName should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "af292dbd-c79d-40f5-88c6-e529c8b1be4c",
      "parentUUID": "73061ae0-0009-4493-b1e1-dcfd0b95fe3b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "4d4a3860-9146-4cf9-aaf4-cde76077964c",
      "parentUUID": "73061ae0-0009-4493-b1e1-dcfd0b95fe3b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxTeams should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxTeams = <span class=\"hljs-number\">5</span>;<br>m.data._maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "d68a6c56-4f34-420b-935c-917044bc73ee",
      "parentUUID": "316cde8a-3cfe-47dc-9398-0121298240f6",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxTeams should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxTeams = <span class=\"hljs-number\">5</span>;<br>m.maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "809b0b1d-22e9-4f07-93b0-ab20061430eb",
      "parentUUID": "316cde8a-3cfe-47dc-9398-0121298240f6",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamSize should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.teamSize = <span class=\"hljs-number\">5</span>;<br>m.data._teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "04589873-7cc7-4085-96d3-5e1b6ec47344",
      "parentUUID": "915a24fd-2003-407a-b33f-7e2827d02eb2",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamSize should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._teamSize = <span class=\"hljs-number\">5</span>;<br>m.teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "5d66bfc3-6d0f-4cde-a7f8-70b3266cdc4f",
      "parentUUID": "915a24fd-2003-407a-b33f-7e2827d02eb2",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxContestants should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxContestants = <span class=\"hljs-number\">5</span>;<br>m.data._maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "b65e0ebc-638c-4c09-b486-c5b91140b16c",
      "parentUUID": "2a102d33-81b8-4cda-8768-03769cba046c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxContestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxContestants = <span class=\"hljs-number\">5</span>;<br>m.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "66d14ee1-b882-49d2-bba9-260670c14869",
      "parentUUID": "2a102d33-81b8-4cda-8768-03769cba046c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f07ffe5a-3e2c-4866-8186-bf27125387b9",
      "parentUUID": "93aab511-164a-4fbc-b72f-1533e5c762e1",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f1711205-b9fc-42cd-9ce0-23fab915152a",
      "parentUUID": "93aab511-164a-4fbc-b72f-1533e5c762e1",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "3b246f19-9aa3-43de-834e-44b51d7507ad",
      "parentUUID": "41e10bcf-7f2a-4764-89e5-ffb584a46de7",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "3b348d6b-770e-4e09-9355-a57cd4821303",
      "parentUUID": "41e10bcf-7f2a-4764-89e5-ffb584a46de7",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "8ab1f9b8-dc8a-4e81-8d66-5b3359e30530",
      "parentUUID": "b66b0a5c-ca89-48f6-a3f4-ec05ad13ac41",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "994c6873-5ec5-4f6b-831b-d55a64cf29dc",
      "parentUUID": "b66b0a5c-ca89-48f6-a3f4-ec05ad13ac41",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "73b23866-3089-48a9-a464-283b45f4d0e3",
      "parentUUID": "b18d6c22-35b9-458b-bc33-e579e8200f53",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "3ef94de5-6aee-4c2c-8b1e-2b5b26880f4e",
      "parentUUID": "b18d6c22-35b9-458b-bc33-e579e8200f53",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeaderUsername should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "2eed5682-5bfd-4cdd-a814-3f56de0a25a3",
      "parentUUID": "480aa1a3-6a41-4374-b1a7-cc7d9c31ba1f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeaderUsername should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "0336e30c-c4f7-45d0-a453-8366aad459f3",
      "parentUUID": "480aa1a3-6a41-4374-b1a7-cc7d9c31ba1f",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "c4721e67-5608-40ab-81cc-8f7705f95196",
      "parentUUID": "adc3ef9a-982c-47d2-8637-5df5c719b87a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "3246de85-2f9a-43d7-8b4b-0be12ea83da8",
      "parentUUID": "adc3ef9a-982c-47d2-8637-5df5c719b87a",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "5d0a81b9-ca4c-4175-ba97-cfcab9e9d356",
      "parentUUID": "f0fff059-7453-4cd7-be76-ebdaf076cfcb",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "8de44db2-52aa-45c9-b026-b68d2ea107e5",
      "parentUUID": "f0fff059-7453-4cd7-be76-ebdaf076cfcb",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "f36b38f2-bce9-4771-87a8-180c42edbebb",
      "parentUUID": "3fa86fea-8d02-4d95-8a90-fd8659c31e11",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "fcbc94c0-62cd-475c-91e4-5c5a1558ea90",
      "parentUUID": "3fa86fea-8d02-4d95-8a90-fd8659c31e11",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameFrom should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "eb9cb53d-aff3-4f25-a0ad-f919b3e33465",
      "parentUUID": "ea615bfe-a578-4d44-8b6b-e0a4f91142aa",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameFrom should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "5ff0f7d7-287d-4a91-bc41-c31b59f6cb03",
      "parentUUID": "ea615bfe-a578-4d44-8b6b-e0a4f91142aa",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameTo should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "5b3a9537-e8fc-4d47-a937-fe1e810060e3",
      "parentUUID": "61d2ff99-2976-4486-907f-f2198d67fd11",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameTo should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f4dfbe4b-9da3-4bb9-ae0c-b8e65bba0d96",
      "parentUUID": "61d2ff99-2976-4486-907f-f2198d67fd11",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "26e8e1d7-423f-4aef-a454-d36bc29a1fb4",
      "parentUUID": "fd139832-3fec-4b89-8dce-2055f30422c2",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "7517ed6e-0c5b-4315-8a6c-b5d9ec88c27b",
      "parentUUID": "fd139832-3fec-4b89-8dce-2055f30422c2",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "92f0788e-33e3-4f82-b710-737ee701fd16",
      "parentUUID": "e37e2d1d-2828-4b9c-bb30-aade03324796",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "1e75d38a-0241-4963-ad9d-c0d987488234",
      "parentUUID": "e37e2d1d-2828-4b9c-bb30-aade03324796",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "f63c2b62-4833-4547-a3df-20b1efce0c95",
      "parentUUID": "aed20205-8b71-4e0f-8c0e-087aa5c806fc",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "21e6845a-f0de-414c-8b98-f3776c5d94d8",
      "parentUUID": "aed20205-8b71-4e0f-8c0e-087aa5c806fc",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#decision should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.data._decision.should.be.true();",
      "isRoot": false,
      "uuid": "34448277-82f3-4dd5-ad84-cd474e31b442",
      "parentUUID": "954f6192-bacd-4676-90b0-6cf5f9d54a44",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#decision should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._decision = <span class=\"hljs-literal\">true</span>;<br>m.decision.should.be.true();",
      "isRoot": false,
      "uuid": "95930016-4ec6-44b8-bbd4-27590eab4f99",
      "parentUUID": "954f6192-bacd-4676-90b0-6cf5f9d54a44",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "7469edda-da8e-4a2b-acaf-3d1560554c1d",
      "parentUUID": "966ee3b3-4972-4102-ae78-d5740087c528",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "00ac3d8a-3e28-4203-889c-afbff9ffc7e5",
      "parentUUID": "966ee3b3-4972-4102-ae78-d5740087c528",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "e970a057-1153-4ff5-aa21-fc6da7b5df8a",
      "parentUUID": "c659459b-1439-4df4-861f-7fcc5c6a8661",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "ebf78f96-80d7-4992-a6bb-505f69609f98",
      "parentUUID": "c659459b-1439-4df4-861f-7fcc5c6a8661",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "80325cf1-8eae-4056-ae27-2f5e405a2eb3",
      "parentUUID": "5cd6f11b-7dce-4875-9724-258597e33551",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "843ab06d-3fbd-4621-bb16-d15da51167a5",
      "parentUUID": "5cd6f11b-7dce-4875-9724-258597e33551",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#gameState should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.gameState.should.be.Object();",
      "isRoot": false,
      "uuid": "fbfc95ff-ec25-4434-a145-17b8cd939553",
      "parentUUID": "3dae4564-856c-4ae9-acdb-cade831f0cb0",
      "skipped": false
    },
    {
      "title": "should not have ids",
      "fullTitle": "#gameState should not have ids",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState.id);<br>should.not.exist(m.gameState.host.id);",
      "isRoot": false,
      "uuid": "84fb34e7-a546-47b9-8c89-2b121ccdfead",
      "parentUUID": "3dae4564-856c-4ae9-acdb-cade831f0cb0",
      "skipped": false
    },
    {
      "title": "should promote private field _ to public field",
      "fullTitle": "#gameState should promote private field _ to public field",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState._host);<br>should.not.exist(m.gameState._settings);<br>should.exist(m.gameState.host);<br>should.exist(m.gameState.settings);<br>should.exist(m.gameState.settings.teamLeaderSelectionMethod);",
      "isRoot": false,
      "uuid": "cfe0da90-84eb-4d98-bbf8-4201e3fc9c58",
      "parentUUID": "3dae4564-856c-4ae9-acdb-cade831f0cb0",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "3d523dcd-5d4a-4c80-8d94-2ba424e63ac5",
      "parentUUID": "67d79cc6-f98d-42e1-b003-91720c0a74d0",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "cd693434-afd7-4f9a-acd9-6b29c5aecde6",
      "parentUUID": "67d79cc6-f98d-42e1-b003-91720c0a74d0",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#rejoinAs should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.rejoinAs = constants.rejoinAs.HOST;<br>m.data._rejoinAs.should.equal(constants.rejoinAs.HOST);",
      "isRoot": false,
      "uuid": "f0610b5b-8c21-4e82-ac0a-d7fac49da3f1",
      "parentUUID": "d8852ca3-4055-42ac-ad68-d7a964333f05",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#rejoinAs should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._rejoinAs = constants.rejoinAs.HOST;<br>m.rejoinAs.should.equal(constants.rejoinAs.HOST);",
      "isRoot": false,
      "uuid": "6428750a-d692-4086-ba0d-eab5dac0b615",
      "parentUUID": "d8852ca3-4055-42ac-ad68-d7a964333f05",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "71b06f49-8455-4f60-ae1b-4cd2f1a7383d",
      "parentUUID": "2ecd47f4-3ba0-4a4c-98ee-1a24bb32e7ec",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "8f558470-4b3c-4466-a7e7-9357c5690322",
      "parentUUID": "2ecd47f4-3ba0-4a4c-98ee-1a24bb32e7ec",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#participantId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "ac80fb11-047a-4183-a8f9-86fac71ce425",
      "parentUUID": "f9c71b78-aff5-4f25-a981-9c9b57eed7fd",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#participantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "66d038df-b893-4126-91ec-251077899a04",
      "parentUUID": "f9c71b78-aff5-4f25-a981-9c9b57eed7fd",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.rejoinAs = constants.rejoinAs.OBSERVER;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "39392a8b-e9d9-499e-b25e-53893b06f175",
      "parentUUID": "5c196370-a477-47fd-b57d-526d7e945edb",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "f96f9729-0401-4392-9ffe-856145291e13",
      "parentUUID": "5c196370-a477-47fd-b57d-526d7e945edb",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "ada4e5c9-cfc5-413e-bc83-8557998d6cbe",
      "parentUUID": "1a88c82c-6708-4695-94c2-83cdc7377234",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "35b14d0d-24f9-4d01-b4b7-de01a9ed18a5",
      "parentUUID": "1a88c82c-6708-4695-94c2-83cdc7377234",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "7ee9cc0d-9fb1-4a64-9d42-6495322374cf",
      "parentUUID": "d057a004-caad-4c98-8454-2cb90b37f5b9",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "af4d274f-9dd4-4979-b714-98d537caba7a",
      "parentUUID": "d057a004-caad-4c98-8454-2cb90b37f5b9",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "3641046b-de09-486f-92b1-b5395e036a67",
      "parentUUID": "c0a0ae46-2ab0-4f50-88e1-d175bc9ede4c",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "09c96d5a-79ef-4e61-91a0-1c5bb038c691",
      "parentUUID": "c0a0ae46-2ab0-4f50-88e1-d175bc9ede4c",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionCompleted();<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "84acc5e5-edbf-49d1-93f3-2b59eddf85bc",
      "parentUUID": "388c1729-9aa9-4da3-bc99-06368d922774",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "134f86fe-001e-462c-a6ef-e677014b966a",
      "parentUUID": "9b119e6f-35e6-453e-8ab4-ca5ff8fb6714",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "3f8bfae4-4fe1-427a-8d73-0799b952b3bc",
      "parentUUID": "9b119e6f-35e6-453e-8ab4-ca5ff8fb6714",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "29ed8282-f630-4dea-844e-a1f61054ca98",
      "parentUUID": "22b3e7b7-79c7-40ca-ac2c-11fe786828b8",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "008f2867-efe7-4a89-a3e2-8280fce464f4",
      "parentUUID": "22b3e7b7-79c7-40ca-ac2c-11fe786828b8",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "fe07add9-10e7-4354-b189-61c1d4765d08",
      "parentUUID": "34fb213c-c1c7-4780-93dd-78946125baec",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "e784e749-2cc4-4701-83f1-4f44e45ff4b3",
      "parentUUID": "34fb213c-c1c7-4780-93dd-78946125baec",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "7eeea476-dd2c-4ae7-9e8b-de11f69f2b39",
      "parentUUID": "edb15ac6-a6fd-4b98-a55e-3214da7f60d2",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "4bd13c33-8004-4561-9fae-8caeb28093a2",
      "parentUUID": "edb15ac6-a6fd-4b98-a55e-3214da7f60d2",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#participantId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "e852c805-1e30-4767-9447-4fa90e7bd52e",
      "parentUUID": "1faf1d2c-e529-49a6-9bde-7f83c36935bd",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#participantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "13be550f-9317-4b11-a731-1e03d876e25a",
      "parentUUID": "1faf1d2c-e529-49a6-9bde-7f83c36935bd",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "360a80cd-c86b-4dbd-b3b4-9b9d7a78e718",
      "parentUUID": "021944e7-8a73-41c8-bf19-fa9bbf315278",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "10b52ddb-65dc-434b-b76f-46c10d4120e8",
      "parentUUID": "021944e7-8a73-41c8-bf19-fa9bbf315278",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#info should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.should.be.Object();",
      "isRoot": false,
      "uuid": "2e9df510-6182-4cbf-84a7-211624225558",
      "parentUUID": "da1a6cf9-59e1-4652-b4e9-73af62b910dc",
      "skipped": false
    },
    {
      "title": "should not have ids",
      "fullTitle": "#info should not have ids",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.host.should.not.be.null();<br>should.not.exist(m.info.host.id);",
      "isRoot": false,
      "uuid": "03a510c2-8754-47c9-87b5-4ec1d24a0838",
      "parentUUID": "da1a6cf9-59e1-4652-b4e9-73af62b910dc",
      "skipped": false
    },
    {
      "title": "should promote private field _ to public field",
      "fullTitle": "#info should promote private field _ to public field",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>should.not.exist(m.info._host);<br>should.not.exist(m.info._session);<br>should.exist(m.info.host);<br>should.exist(m.info.session);<br>should.exist(m.info.session.settings.teamLeaderSelectionMethod);",
      "isRoot": false,
      "uuid": "ae717f78-27c6-4673-a0de-bb37e23f7925",
      "parentUUID": "da1a6cf9-59e1-4652-b4e9-73af62b910dc",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "90306975-36ec-44a5-9c41-94f8e8525985",
      "parentUUID": "a351c57b-2999-47b4-9b32-e57c311b1249",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "04257d2c-2f9d-4bc3-80b0-6b3679836e43",
      "parentUUID": "a351c57b-2999-47b4-9b32-e57c311b1249",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "eda51511-acd6-4843-936d-adacaf9042f2",
      "parentUUID": "1f7a029c-7757-4928-9f04-16b086477bd8",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "996f2971-bbbb-4312-85ee-3d3d29674b0f",
      "parentUUID": "1f7a029c-7757-4928-9f04-16b086477bd8",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f57aacc9-1e97-4af9-a88f-c60a5704bffa",
      "parentUUID": "18f5dbb1-fa68-4de3-a89f-4bddcb3962c4",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "18acb87f-f8b7-4faa-ace6-3db1669efdc2",
      "parentUUID": "18f5dbb1-fa68-4de3-a89f-4bddcb3962c4",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "2b476fd6-8d4b-4be4-ba66-078eef4258c6",
      "parentUUID": "29412075-004d-4968-935c-4bb7a8028555",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "cfc59eee-f101-4c9d-8c83-113d875d9507",
      "parentUUID": "29412075-004d-4968-935c-4bb7a8028555",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.contestantId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "fd28f13c-34da-462d-8c83-3896aefed529",
      "parentUUID": "b0cc11b3-e4c2-43db-93b8-a88a637ecf92",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "e219bd43-1b43-41ab-9852-2631bf4a1898",
      "parentUUID": "b0cc11b3-e4c2-43db-93b8-a88a637ecf92",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SuccessMessage();<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "04dcc433-f160-44a9-b777-0321d54e160c",
      "parentUUID": "38bda52a-5db5-4096-ad0c-d4d4e89ec8ea",
      "skipped": false
    },
    {
      "title": "should return false when not referenced",
      "fullTitle": "#isInstanceAndTypeOf() should return false when not referenced",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf().should.be.false();",
      "isRoot": false,
      "uuid": "40ea6902-c9cb-49ce-bd47-d95320f8061c",
      "parentUUID": "4f1bf951-651a-48a0-9fb0-9844de274624",
      "skipped": false
    },
    {
      "title": "should return false when null",
      "fullTitle": "#isInstanceAndTypeOf() should return false when null",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">''</span>).should.be.false();",
      "isRoot": false,
      "uuid": "86f7ca3f-b31f-427a-9edc-200969296101",
      "parentUUID": "4f1bf951-651a-48a0-9fb0-9844de274624",
      "skipped": false
    },
    {
      "title": "should return false when not the correct type",
      "fullTitle": "#isInstanceAndTypeOf() should return false when not the correct type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'Int'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "554e638b-f7a3-4445-83a6-2f55f7f24959",
      "parentUUID": "4f1bf951-651a-48a0-9fb0-9844de274624",
      "skipped": false
    },
    {
      "title": "should return true when is a built-in type",
      "fullTitle": "#isInstanceAndTypeOf() should return true when is a built-in type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'Number'</span>).should.be.true();",
      "isRoot": false,
      "uuid": "e5992d55-1dbe-4af2-9168-cffbec3bd13c",
      "parentUUID": "4f1bf951-651a-48a0-9fb0-9844de274624",
      "skipped": false
    },
    {
      "title": "should return true when is user defined type",
      "fullTitle": "#isInstanceAndTypeOf() should return true when is user defined type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-keyword\">new</span> UserDefinedType(),<br>    UserDefinedType).should.be.true();",
      "isRoot": false,
      "uuid": "31164fec-6777-4e51-9e8a-178527e5ea92",
      "parentUUID": "4f1bf951-651a-48a0-9fb0-9844de274624",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "4be81a81-9ccc-4736-8eac-113d0b6862ee",
      "parentUUID": "ecb882c3-b53b-4245-84b7-a0399604a691",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "fea2f594-a90e-4aa4-a1f0-f7f41e281559",
      "parentUUID": "ecb882c3-b53b-4245-84b7-a0399604a691",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all.pop();<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "7014de8e-751c-4cb6-bf73-af227ce9ffc4",
      "parentUUID": "ecb882c3-b53b-4245-84b7-a0399604a691",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#length should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.length = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "2ef093f9-4399-4e53-855d-c9dbdcb4bf9d",
      "parentUUID": "d6161e8d-0f1a-42fc-9f25-247d53c6b750",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#length should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "9eca74c3-9edb-46a3-8204-94e2593b11e6",
      "parentUUID": "d6161e8d-0f1a-42fc-9f25-247d53c6b750",
      "skipped": false
    },
    {
      "title": "should return true when id does exist",
      "fullTitle": "#contains(id) should return true when id does exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(p.id).should.be.true();",
      "isRoot": false,
      "uuid": "ec1c3a17-65a3-4ac6-b4aa-307ff6cf58ef",
      "parentUUID": "f7641632-5b6c-4a8f-abb7-ed952860a07d",
      "skipped": false
    },
    {
      "title": "should return false when id does not exist",
      "fullTitle": "#contains(id) should return false when id does not exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(<span class=\"hljs-string\">'p2'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "ad41a43c-d13d-42ec-a714-69c7ab4d6d38",
      "parentUUID": "f7641632-5b6c-4a8f-abb7-ed952860a07d",
      "skipped": false
    },
    {
      "title": "should add the given participant",
      "fullTitle": "#add(participant) should add the given participant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc._participants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc._participants[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "1529d5a4-be42-480e-baf5-0810db003ca4",
      "parentUUID": "8c576f35-f5b8-4806-bc49-d1afc03cc835",
      "skipped": false
    },
    {
      "title": "should error if participant with id already exists",
      "fullTitle": "#add(participant) should error if participant with id already exists",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.add(p);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "9e01879b-55d2-479a-9fa9-aa63814d4e9f",
      "parentUUID": "8c576f35-f5b8-4806-bc49-d1afc03cc835",
      "skipped": false
    },
    {
      "title": "should emit add event",
      "fullTitle": "#add(participant) should emit add event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.on(<span class=\"hljs-string\">'add'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">participant</span>) </span>{<br>    participant.should.equal(p);<br>    done();<br>});<br>pc.add(p);",
      "isRoot": false,
      "uuid": "4d0aa672-b347-4f6e-958c-48e54f7e4b92",
      "parentUUID": "8c576f35-f5b8-4806-bc49-d1afc03cc835",
      "skipped": false
    },
    {
      "title": "should remove the existing participant",
      "fullTitle": "#remove(participant) should remove the existing participant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "c336c14d-06ba-419c-a20a-71ff9c322854",
      "parentUUID": "fb9ebb16-6d7d-4e37-8fde-5f6ee58a8565",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing participant",
      "fullTitle": "#remove(participant) should not remove the non-existing participant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p1).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "3ca3d866-6d47-4492-92b1-f71ff7e4ee76",
      "parentUUID": "fb9ebb16-6d7d-4e37-8fde-5f6ee58a8565",
      "skipped": false
    },
    {
      "title": "should remove the existing participant",
      "fullTitle": "#removeById(id) should remove the existing participant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p.id).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "1159c17c-f6d8-4f2b-8446-491c6aaf2318",
      "parentUUID": "888553cb-493f-4cfa-9e87-c6837629ab63",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing participant",
      "fullTitle": "#removeById(id) should not remove the non-existing participant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p1.id).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "68c5ad48-a3b3-4830-8a37-b153162238fa",
      "parentUUID": "888553cb-493f-4cfa-9e87-c6837629ab63",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#id should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'id_test'</span>;<br>p._id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "6756e9c4-5704-49cf-9347-155f6f70a6eb",
      "parentUUID": "398b114e-078f-4806-9a7c-d34ae2264dce",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#id should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "a25df9c0-eacf-455f-a3de-711524b14606",
      "parentUUID": "398b114e-078f-4806-9a7c-d34ae2264dce",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#isDisconnected should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    p.isDisconnected = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "048140c5-120c-4e66-8bed-84a627bbf0b6",
      "parentUUID": "a34f9ec3-78fa-4b9b-a384-d7beb428ac52",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#isDisconnected should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "d5480092-7a5a-472f-bb5a-e85b9bb9548b",
      "parentUUID": "a34f9ec3-78fa-4b9b-a384-d7beb428ac52",
      "skipped": false
    },
    {
      "title": "should change participant state to disconnected",
      "fullTitle": "#disconnect() should change participant state to disconnected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">false</span>;<br>p.disconnect();<br>p.isDisconnected.should.be.true();",
      "isRoot": false,
      "uuid": "5886fcb1-a0b2-419d-8784-daa48ec75bad",
      "parentUUID": "df5b544d-d9a9-49c8-bb5d-ca72e77ee7b8",
      "skipped": false
    },
    {
      "title": "should change participant state to connected",
      "fullTitle": "#reconnect() should change participant state to connected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">true</span>;<br>p.reconnect();<br>p.isDisconnected.should.be.false();",
      "isRoot": false,
      "uuid": "7177b3ef-d6e0-44ca-8db5-9435d4b9c984",
      "parentUUID": "f845f156-6b72-4325-92fd-54d93004a9fe",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    sc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "0bd066a2-ec82-4d2d-9b0d-72ea5a9170d9",
      "parentUUID": "350559c6-64c9-41a4-849e-7a930dc1dbf2",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
      "isRoot": false,
      "uuid": "6fdc2141-41d0-4078-adda-a433d58ce805",
      "parentUUID": "350559c6-64c9-41a4-849e-7a930dc1dbf2",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all.pop();<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
      "isRoot": false,
      "uuid": "482d37f3-7868-4958-8371-65b42242748f",
      "parentUUID": "350559c6-64c9-41a4-849e-7a930dc1dbf2",
      "skipped": false
    },
    {
      "title": "add and return session",
      "fullTitle": "#add(host, settings) add and return session",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-keyword\">var</span> ses = sc.add(h, s);<br>ses.should.be.instanceof(Session);",
      "isRoot": false,
      "uuid": "7f306e76-436d-43ac-bb45-4fc892c44910",
      "parentUUID": "7f43145a-e2c5-4212-8658-a1be15c70584",
      "skipped": false
    },
    {
      "title": "when given valid id should return session",
      "fullTitle": "#getById(id) when given valid id should return session",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-comment\">/* eslint-disable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses1 = sc.add(h, s);<br><span class=\"hljs-comment\">/* eslint-enable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses2 = sc.add(h, s);<br><span class=\"hljs-keyword\">var</span> sessionLocate = sc.getById(ses2.id);<br>sessionLocate.should.be.instanceof(Session)<br>    .and.equal(ses2);",
      "isRoot": false,
      "uuid": "ce0c34dd-58db-4322-bca3-9cc98a6abda1",
      "parentUUID": "e0d9a539-ff05-4d09-b36f-1d195fac94a8",
      "skipped": false
    },
    {
      "title": "should remove complete sc",
      "fullTitle": "#purgeCompleted() should remove complete sc",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.all[<span class=\"hljs-number\">0</span>].complete();<br>sc.all[<span class=\"hljs-number\">1</span>].complete();<br>sc.purgeCompleted();<br>sc.all.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "ceaecb53-a762-4a51-bbc3-5ef27e1cf06e",
      "parentUUID": "8446fb2a-0059-4f6e-9207-8aa4ae5f8925",
      "skipped": false
    },
    {
      "title": "should create teams",
      "fullTitle": "#constructor should create teams",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "a083f457-177b-4e3f-b32b-0d796aceda4e",
      "parentUUID": "9054e9d8-92a0-4cab-93cd-fd8c2ada2520",
      "skipped": false
    },
    {
      "title": "should not create teams",
      "fullTitle": "#constructor should not create teams",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>should(s.teams).be.null();",
      "isRoot": false,
      "uuid": "365e4d30-5a85-4517-a92e-3d4dde3ae352",
      "parentUUID": "9054e9d8-92a0-4cab-93cd-fd8c2ada2520",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#id should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.id = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "6ad4f8d0-7266-41b9-8b22-f0ec3bea1025",
      "parentUUID": "b1722528-06de-4fb2-9218-f6a9016cde75",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#id should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "61002248-2375-46ba-8227-8778d9bcf86e",
      "parentUUID": "b1722528-06de-4fb2-9218-f6a9016cde75",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#roundsPlayed should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundsPlayed = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "17fcb342-26e9-4e4e-9af6-bc6f83d8a730",
      "parentUUID": "84ea6f88-1bc5-45dd-8e69-46f71d342641",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#roundsPlayed should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "2cb9ecf1-429f-4cdc-8db1-fdb54de14752",
      "parentUUID": "84ea6f88-1bc5-45dd-8e69-46f71d342641",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#previousWinners should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.previousWinners = [<span class=\"hljs-string\">'SomeWinner'</span>];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "ac88ceb5-d7c4-41c6-ae5a-66706b2dcfdd",
      "parentUUID": "d62b3771-d44f-49e0-af89-d2e20818e76e",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#previousWinners should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._previousWinners = [<span class=\"hljs-string\">'Winner1'</span>, <span class=\"hljs-string\">'Winner2'</span>];<br>s.previousWinners.should.be.Array();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
      "isRoot": false,
      "uuid": "a3bda26d-d4ec-40ae-b1b8-1784e3a4488b",
      "parentUUID": "d62b3771-d44f-49e0-af89-d2e20818e76e",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#roundWinner should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundWinner = <span class=\"hljs-string\">'SomeWinner'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "618e8e30-3a20-4b62-9ff9-c5cb25dc53e3",
      "parentUUID": "3f0a6fb6-f6c8-4b99-8f29-ec7906011849",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#roundWinner should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundWinner = <span class=\"hljs-string\">'Winner1'</span>;<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
      "isRoot": false,
      "uuid": "6744bd72-2638-4bc4-a80b-6652526872ec",
      "parentUUID": "3f0a6fb6-f6c8-4b99-8f29-ec7906011849",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#observers should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.observers = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "f0448544-f7eb-4aa2-a554-20d454ee2475",
      "parentUUID": "26fb33f4-b503-458c-b454-c3f18f766283",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#observers should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.observers.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.observers[<span class=\"hljs-number\">0</span>].should.equal(observer);",
      "isRoot": false,
      "uuid": "5b0c074f-e59b-4748-a6cb-44a7b0f4d0f8",
      "parentUUID": "26fb33f4-b503-458c-b454-c3f18f766283",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#contestants should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.contestants = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "d414ae65-93af-4430-8e9b-6ebe39f449ef",
      "parentUUID": "9b759a65-053a-478f-8472-965cd15e2f52",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.contestants[<span class=\"hljs-number\">0</span>].should.equal(contestant);",
      "isRoot": false,
      "uuid": "c239c97f-3669-4f1a-9773-12aad74a04c0",
      "parentUUID": "9b759a65-053a-478f-8472-965cd15e2f52",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#host should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.host = host;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "8b0c0816-10bf-4efa-b0fa-92e491d1d126",
      "parentUUID": "e1ad54ee-9a68-440c-9be8-df039070715a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#host should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.host.should.equal(host);",
      "isRoot": false,
      "uuid": "6572d0d7-f6bd-44ce-b2a9-745d6ad23a69",
      "parentUUID": "e1ad54ee-9a68-440c-9be8-df039070715a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#currentState should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
      "isRoot": false,
      "uuid": "551c7afa-6043-4d5e-b3c5-3f38f6d986e9",
      "parentUUID": "0bd95c26-c26e-4424-ad01-59480d60347e",
      "skipped": false
    },
    {
      "title": "should increment rounds played",
      "fullTitle": "#incrementRoundsPlayed() should increment rounds played",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.incrementRoundsPlayed();<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "e0fcea6f-d1f5-45fd-8106-d57a29421a2b",
      "parentUUID": "6f3bf7eb-dd03-4fb9-9a98-e8746d55f0a0",
      "skipped": false
    },
    {
      "title": "should not allow a contestant username with bad words",
      "fullTitle": "#addContestant(contestant) should not allow a contestant username with bad words",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Penis #YOLO'</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_CONTAINS_PROFANITY);",
      "isRoot": false,
      "uuid": "1ab4f9c0-7f0c-43e6-8081-fbfd4c1dda68",
      "parentUUID": "bad57681-2cf9-47d3-8af5-120f9b75a3bc",
      "skipped": false
    },
    {
      "title": "should not allow when username is empty",
      "fullTitle": "#addContestant(contestant) should not allow when username is empty",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">' '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_IS_REQUIRED);",
      "isRoot": false,
      "uuid": "8cea55bc-b39e-4b79-aa25-5299f396628a",
      "parentUUID": "bad57681-2cf9-47d3-8af5-120f9b75a3bc",
      "skipped": false
    },
    {
      "title": "should trim username",
      "fullTitle": "#addContestant(contestant) should trim username",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Wade  '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>c.username.should.equal(<span class=\"hljs-string\">'Wade'</span>);",
      "isRoot": false,
      "uuid": "09a51ab1-de60-47d2-beed-99d565bb4903",
      "parentUUID": "bad57681-2cf9-47d3-8af5-120f9b75a3bc",
      "skipped": false
    },
    {
      "title": "should add contestant when session is not full",
      "fullTitle": "when in individual mode should add contestant when session is not full",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "5d313347-b5db-43a0-8401-b51dbab3e784",
      "parentUUID": "a6b025c3-fd9f-48b5-90e4-177215d4c881",
      "skipped": false
    },
    {
      "title": "should not add contestant when session is full",
      "fullTitle": "when in individual mode should not add contestant when session is full",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br>s.addContestant(c2);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();",
      "isRoot": false,
      "uuid": "396b99b9-1ca0-40af-89f4-83198e82a28e",
      "parentUUID": "a6b025c3-fd9f-48b5-90e4-177215d4c881",
      "skipped": false
    },
    {
      "title": "should not add contestant when username is already taken",
      "fullTitle": "when in individual mode should not add contestant when username is already taken",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "0b54c22f-69cd-4b60-a788-b5072f0fd6ec",
      "parentUUID": "a6b025c3-fd9f-48b5-90e4-177215d4c881",
      "skipped": false
    },
    {
      "title": "BUG# username case should not matter",
      "fullTitle": "when in individual mode BUG# username case should not matter",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'abc1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'ABC1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "44611b0d-bf5e-4422-9e93-21e1b362ca6d",
      "parentUUID": "a6b025c3-fd9f-48b5-90e4-177215d4c881",
      "skipped": false
    },
    {
      "title": "should allow unlimited contestants when max is set to constants.UNLIMITED",
      "fullTitle": "when in individual mode should allow unlimited contestants when max is set to constants.UNLIMITED",
      "timedOut": false,
      "duration": 526,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = constants.UNLIMITED;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    <span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>    c.username = <span class=\"hljs-string\">'c'</span> + i;<br>    <span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>    response.wasSuccessful.should.be.true();<br>}",
      "isRoot": false,
      "uuid": "5ff86aa6-1544-4538-95cc-a80503cb5994",
      "parentUUID": "a6b025c3-fd9f-48b5-90e4-177215d4c881",
      "skipped": false
    },
    {
      "title": "should add contestant when teams is not full",
      "fullTitle": "when in team mode should add contestant when teams is not full",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "a3fa08d0-f189-4635-a9bb-af6f1632e906",
      "parentUUID": "8eab7b6e-3819-44a2-998c-567a59671636",
      "skipped": false
    },
    {
      "title": "should not add contestant when teams are full",
      "fullTitle": "when in team mode should not add contestant when teams are full",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.TEAMS_ARE_FULL);",
      "isRoot": false,
      "uuid": "fb17b61a-9d11-42cb-8a33-85149473579f",
      "parentUUID": "8eab7b6e-3819-44a2-998c-567a59671636",
      "skipped": false
    },
    {
      "title": "should not add contestant when username is already taken",
      "fullTitle": "when in team mode should not add contestant when username is already taken",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "37d35d69-f3a9-4f13-97ff-cda6d09768c6",
      "parentUUID": "8eab7b6e-3819-44a2-998c-567a59671636",
      "skipped": false
    },
    {
      "title": "should subscribe callback to the correct event",
      "fullTitle": "#subscribeForStateChange(event, callback) should subscribe callback to the correct event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> r = s.addContestant(c);<br>r.wasSuccessful.should.be.true();<br>s.subscribeForStateChange(<span class=\"hljs-string\">'onpending'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">session, event, from, to</span>) </span>{<br>    session.should.equal(s);<br>    event.should.equal(<span class=\"hljs-string\">'buzzerPressed'</span>);<br>    from.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>    to.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>    done();<br>});<br>s.tryBuzzerPressRegister(c.id).should.be.true();",
      "isRoot": false,
      "uuid": "3d71096f-7790-413e-9288-ba50b63af756",
      "parentUUID": "11e693b0-3b74-4b56-8d23-bda3e4e2bc5c",
      "skipped": false
    },
    {
      "title": "should register when state is ready",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should register when state is ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);",
      "isRoot": false,
      "uuid": "c85f9bd6-d247-4c0f-974d-0324208429af",
      "parentUUID": "c5e5fbdc-88e1-4802-8371-af4a84d91eb2",
      "skipped": false
    },
    {
      "title": "should not register when state is not ready",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not register when state is not ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.false();",
      "isRoot": false,
      "uuid": "a2418146-495f-4e3d-ad7b-8f0d513584b4",
      "parentUUID": "c5e5fbdc-88e1-4802-8371-af4a84d91eb2",
      "skipped": false
    },
    {
      "title": "should not register when contestant does not exist",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not register when contestant does not exist",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(idUtility.generateParticipantId()).should.be.false();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
      "isRoot": false,
      "uuid": "ad14bcee-1303-4e2c-9988-af911e85a4fe",
      "parentUUID": "c5e5fbdc-88e1-4802-8371-af4a84d91eb2",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "7c224d8f-b204-46a3-b04b-10019c6469ac",
      "parentUUID": "c5e5fbdc-88e1-4802-8371-af4a84d91eb2",
      "skipped": false
    },
    {
      "title": "should not add previous round winner to winners list",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not add previous round winner to winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "effb59a5-552a-4f3e-b44e-d86191813b44",
      "parentUUID": "c5e5fbdc-88e1-4802-8371-af4a84d91eb2",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->ACCEPT should allow when game state is pending",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();",
      "isRoot": false,
      "uuid": "9fe2c9c8-6447-44b5-afb4-af2db0d4564a",
      "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not pending",
      "fullTitle": "action->ACCEPT should not allow when game state is not pending",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.false();",
      "isRoot": false,
      "uuid": "96d3e6e8-f2a9-4f05-9202-eaa9d53e3397",
      "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
      "skipped": false
    },
    {
      "title": "should update contestant's score",
      "fullTitle": "action->ACCEPT should update contestant's score",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "8d489f62-598a-4b98-ba69-48bacbedba4a",
      "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
      "skipped": false
    },
    {
      "title": "should update contestant's team score",
      "fullTitle": "action->ACCEPT should update contestant's team score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>s.teams.all[<span class=\"hljs-number\">0</span>].score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "71743908-7f24-46f2-a5fc-c3c72a544118",
      "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->ACCEPT should add previous round winner to winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "54a9cfbd-c628-4f88-b937-e95300a089a5",
      "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->ACCEPT should change game state back to ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "86f1edc9-64d0-4df9-a555-63d1d2ec7346",
      "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
      "skipped": false
    },
    {
      "title": "should clear pending winner",
      "fullTitle": "action->ACCEPT should clear pending winner",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>should(s.pendingWinner).be.null();",
      "isRoot": false,
      "uuid": "6bfcf26e-f9d3-4015-8ef2-e5fb22f641b9",
      "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->REJECT should allow when game state is pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();",
      "isRoot": false,
      "uuid": "bd815ac2-aca2-4a87-92a8-b23280be6891",
      "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not pending",
      "fullTitle": "action->REJECT should not allow when game state is not pending",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.false();",
      "isRoot": false,
      "uuid": "44a1d0f2-4cad-4a31-ab42-2b072985c838",
      "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
      "skipped": false
    },
    {
      "title": "should not replace round winner with pending contestant",
      "fullTitle": "action->REJECT should not replace round winner with pending contestant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "5250571a-c789-41e1-82bb-373772bf1f20",
      "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
      "skipped": false
    },
    {
      "title": "should not update pending contestant's score",
      "fullTitle": "action->REJECT should not update pending contestant's score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.score.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "b562070e-340e-4d8f-8ee7-4f94ff30c15d",
      "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
      "skipped": false
    },
    {
      "title": "should add round winner to previous winners list",
      "fullTitle": "action->REJECT should add round winner to previous winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "155c62e0-be9f-411b-8045-0ed5e5ed300e",
      "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->REJECT should change game state back to ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "e0608bc6-dd9f-4439-9d3d-3083d9704dd8",
      "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
      "skipped": false
    },
    {
      "title": "should allow when game state is ready",
      "fullTitle": "action->RESET should allow when game state is ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
      "isRoot": false,
      "uuid": "d1d199dd-ce72-491b-935a-3a377f040621",
      "parentUUID": "a3c77b83-d1a9-4c42-b2a6-dcab8c513dc5",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->RESET should allow when game state is pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
      "isRoot": false,
      "uuid": "1816cf45-fcca-4eea-8aa1-2aa6e0b90819",
      "parentUUID": "a3c77b83-d1a9-4c42-b2a6-dcab8c513dc5",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "action->RESET should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "b23316f6-f729-47fb-a697-7958277c76c8",
      "parentUUID": "a3c77b83-d1a9-4c42-b2a6-dcab8c513dc5",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->RESET should add previous round winner to winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "59347558-8f13-46c1-9987-374b054bf030",
      "parentUUID": "a3c77b83-d1a9-4c42-b2a6-dcab8c513dc5",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->RESET should change game state back to ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "b74cf0b1-61c3-4be9-8aac-c3ffba7ca3ef",
      "parentUUID": "a3c77b83-d1a9-4c42-b2a6-dcab8c513dc5",
      "skipped": false
    },
    {
      "title": "should allow when game state is ready",
      "fullTitle": "action->DISABLE should allow when game state is ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
      "isRoot": false,
      "uuid": "409554bb-2a3d-4851-9147-874b8c0e5494",
      "parentUUID": "3bbebe99-4be8-49e9-adc5-7685ed131982",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->DISABLE should allow when game state is pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
      "isRoot": false,
      "uuid": "72ac208c-bde1-4f29-9d04-154ff85609af",
      "parentUUID": "3bbebe99-4be8-49e9-adc5-7685ed131982",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "action->DISABLE should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "c4d23b18-2ae1-43a8-8037-155627bd2b61",
      "parentUUID": "3bbebe99-4be8-49e9-adc5-7685ed131982",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->DISABLE should add previous round winner to winners list",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "8a545bf3-fcce-41c3-a741-75ba4b160d25",
      "parentUUID": "3bbebe99-4be8-49e9-adc5-7685ed131982",
      "skipped": false
    },
    {
      "title": "should change game state to buzzerLock",
      "fullTitle": "action->DISABLE should change game state to buzzerLock",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.BUZZER_LOCK);",
      "isRoot": false,
      "uuid": "2f305725-2b01-4ed4-a808-0c284b50279e",
      "parentUUID": "3bbebe99-4be8-49e9-adc5-7685ed131982",
      "skipped": false
    },
    {
      "title": "should allow when game state is buzzerLock",
      "fullTitle": "action->ENABLE should allow when game state is buzzerLock",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();",
      "isRoot": false,
      "uuid": "cb5ce40d-48b0-46f3-834a-38bd80f11351",
      "parentUUID": "4e6764bd-7c6b-48c2-a69e-171d3f19e069",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not buzzerLock",
      "fullTitle": "action->ENABLE should not allow when game state is not buzzerLock",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.false();",
      "isRoot": false,
      "uuid": "3188019f-4487-4d82-8500-c6de78883ebe",
      "parentUUID": "4e6764bd-7c6b-48c2-a69e-171d3f19e069",
      "skipped": false
    },
    {
      "title": "should change game state to ready",
      "fullTitle": "action->ENABLE should change game state to ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "090ff1ee-d498-4e22-a17c-ed581f55fe4d",
      "parentUUID": "4e6764bd-7c6b-48c2-a69e-171d3f19e069",
      "skipped": false
    },
    {
      "title": "should return the pending winner",
      "fullTitle": "#pendingWinner should return the pending winner",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.pendingWinner.should.equal(<span class=\"hljs-string\">'testUser'</span>);",
      "isRoot": false,
      "uuid": "84745ba3-0879-4fc3-b651-30dd8a01a691",
      "parentUUID": "25e30d58-30e1-4316-9848-94472a72286e",
      "skipped": false
    },
    {
      "title": "should not return the pending winner",
      "fullTitle": "#pendingWinner should not return the pending winner",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>should(s.pendingWinner).be.null();",
      "isRoot": false,
      "uuid": "7ebe0979-f003-4294-b781-562002b96676",
      "parentUUID": "25e30d58-30e1-4316-9848-94472a72286e",
      "skipped": false
    },
    {
      "title": "should update session name",
      "fullTitle": "#updateSessionName(name) should update session name",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.updateSessionName(<span class=\"hljs-string\">'session2'</span>);<br>settings.sessionName.should.equal(<span class=\"hljs-string\">'session2'</span>);",
      "isRoot": false,
      "uuid": "1d232519-2826-4432-ac52-1e4ebdf74ed4",
      "parentUUID": "74beda92-177f-486f-bfa1-db5a3ef42c84",
      "skipped": false
    },
    {
      "title": "should update max contestants",
      "fullTitle": "#updateMaxContestants(maxContestants) should update max contestants",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "b78f8854-59e6-4c6a-a6f8-6b5eed300a93",
      "parentUUID": "1bf37f2d-0ba0-496a-b394-f88f1bc3568d",
      "skipped": false
    },
    {
      "title": "should not allow below current connected amount",
      "fullTitle": "#updateMaxContestants(maxContestants) should not allow below current connected amount",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>s.addContestant(c1).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>s.addContestant(c2).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">1</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_CONTESTANTS_MUST_BE_GREATER_THAN_ALREADY_CONNECTED);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "a86c3a04-06da-442a-a901-29f93269b453",
      "parentUUID": "1bf37f2d-0ba0-496a-b394-f88f1bc3568d",
      "skipped": false
    },
    {
      "title": "should update team size",
      "fullTitle": "#updateTeamSize(teamSize) should update team size",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.teamSize.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "62d03cd4-de31-4d2e-b3cf-be20a7c74c2d",
      "parentUUID": "d7515b7a-cf57-486a-9594-f072db81ef75",
      "skipped": false
    },
    {
      "title": "should not allow below current setting",
      "fullTitle": "#updateTeamSize(teamSize) should not allow below current setting",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.TEAM_SIZE_MUST_BE_GREATER_THAN_ALREADY_SET);",
      "isRoot": false,
      "uuid": "78646d27-4b53-44f5-bee3-9b80312c289a",
      "parentUUID": "d7515b7a-cf57-486a-9594-f072db81ef75",
      "skipped": false
    },
    {
      "title": "should update max teams",
      "fullTitle": "#updateMaxTeams(maxTeams) should update max teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxTeams.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "e460e0d1-921b-41a6-a840-0f5142182959",
      "parentUUID": "bdf24bbc-94f9-494a-9bb7-3b332ee44c72",
      "skipped": false
    },
    {
      "title": "should add teams",
      "fullTitle": "#updateMaxTeams(maxTeams) should add teams",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">5</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "70390183-a70a-4b04-b655-930ebf14d29d",
      "parentUUID": "bdf24bbc-94f9-494a-9bb7-3b332ee44c72",
      "skipped": false
    },
    {
      "title": "should not allow below current setting",
      "fullTitle": "#updateMaxTeams(maxTeams) should not allow below current setting",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_MUST_BE_GREATER_THAN_ALREADY_SET);",
      "isRoot": false,
      "uuid": "e932aee1-c3f9-4188-ae81-c6356111069f",
      "parentUUID": "bdf24bbc-94f9-494a-9bb7-3b332ee44c72",
      "skipped": false
    },
    {
      "title": "should not allow if teams are PLAYER_CHOICE",
      "fullTitle": "#updateMaxTeams(maxTeams) should not allow if teams are PLAYER_CHOICE",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">6</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_CANNOT_BE_CHANGED_WHEN_PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "09d6486e-7dad-4a4f-b4a3-03388b23f88f",
      "parentUUID": "bdf24bbc-94f9-494a-9bb7-3b332ee44c72",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hasTeams should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s._hasTeams.should.be.true();",
      "isRoot": false,
      "uuid": "4ead5ac5-19c6-4b84-b51f-57f701a1d290",
      "parentUUID": "d1502ebf-7a8e-4c69-890c-67dbde559263",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hasTeams should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.hasTeams.should.be.true();",
      "isRoot": false,
      "uuid": "3e32e479-0d8a-4419-89bf-cddc52c2acf5",
      "parentUUID": "d1502ebf-7a8e-4c69-890c-67dbde559263",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamSize should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s._teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "bba4e55d-9d6c-40db-a88f-c6d89b56ee82",
      "parentUUID": "16af50a3-88f1-4776-9921-7d0835cd3d11",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamSize should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamSize = <span class=\"hljs-number\">1</span>;<br>s.teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "33f5ab49-24ba-4314-92ca-1f5520c5d8f2",
      "parentUUID": "16af50a3-88f1-4776-9921-7d0835cd3d11",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxTeams should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s._maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "43342683-f91b-41c9-869c-27ba95a6268c",
      "parentUUID": "4ea3b8db-2b9a-4ad2-a53b-75da0915dc84",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxTeams should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-number\">1</span>;<br>s.maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "6fd74d7e-76c7-4634-afb4-21a663490a33",
      "parentUUID": "4ea3b8db-2b9a-4ad2-a53b-75da0915dc84",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeaderSelectionMethod should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s._teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "aa4913b0-f1a7-43d2-a2b5-7ad452cde0ef",
      "parentUUID": "70ea436b-ff0e-4146-9973-7858880fd642",
      "skipped": false
    },
    {
      "title": "should throw on set when constant value is invalid",
      "fullTitle": "#teamLeaderSelectionMethod should throw on set when constant value is invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamLeaderSelectionMethod.all.slice().sort(<br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, b</span>) </span>{<br>            <span class=\"hljs-keyword\">return</span> a - b;<br>        }).pop();<br>    s.teamLeaderSelectionMethod = ++high;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "c9bb5993-5a59-44dc-bb46-419e53097639",
      "parentUUID": "70ea436b-ff0e-4146-9973-7858880fd642",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeaderSelectionMethod should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s.teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "2a41719c-3910-4e7b-9229-1c061f7957ac",
      "parentUUID": "70ea436b-ff0e-4146-9973-7858880fd642",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameEdit should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br>s._teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
      "isRoot": false,
      "uuid": "7a57231f-07e0-40aa-8b67-354faeaeb5d6",
      "parentUUID": "e7c36a38-443c-4008-a33b-03dafcaa5007",
      "skipped": false
    },
    {
      "title": "should throw on set when constant value is invalid",
      "fullTitle": "#teamNameEdit should throw on set when constant value is invalid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamNameEdit.all.slice().sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a,<br>        b</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> a - b;<br>    }).pop();<br>    s.teamNameEdit = ++high;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "6857ce08-c4fc-4a80-8b54-63ea2f88fae4",
      "parentUUID": "e7c36a38-443c-4008-a33b-03dafcaa5007",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameEdit should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNameEdit = constants.teamNameEdit.ALLOW;<br>s.teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
      "isRoot": false,
      "uuid": "823e63ae-3933-4473-89b2-a2368e0ba8d2",
      "parentUUID": "e7c36a38-443c-4008-a33b-03dafcaa5007",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxContestants should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxContestants = <span class=\"hljs-number\">1</span>;<br>s._maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "2edd6fc2-19bc-4cd8-a855-b5ef04b9fcba",
      "parentUUID": "53da0dbe-6110-4e2e-a4e6-78d97fde76ab",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxContestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxContestants = <span class=\"hljs-number\">1</span>;<br>s.maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "7796cc4c-f255-437b-bb68-2b0532f92b6c",
      "parentUUID": "53da0dbe-6110-4e2e-a4e6-78d97fde76ab",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s._sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
      "isRoot": false,
      "uuid": "4b9f1d83-2c89-4a1a-b5af-eef7b50347d6",
      "parentUUID": "f67de04e-f28c-4f51-91ff-92bb9d2939c9",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s.sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
      "isRoot": false,
      "uuid": "2ba160ce-006d-44c6-a40b-e54794878346",
      "parentUUID": "f67de04e-f28c-4f51-91ff-92bb9d2939c9",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNames should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s._teamNames.should.be.Array();<br>s._teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s._teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
      "isRoot": false,
      "uuid": "dc6e9c78-d048-4dff-9440-8b7d2990778f",
      "parentUUID": "b0a333d0-fe3d-4078-b889-ee31d3ead03f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNames should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s.teamNames.should.be.Array();<br>s.teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
      "isRoot": false,
      "uuid": "e88afea9-bcdc-465a-a856-b63b1c865358",
      "parentUUID": "b0a333d0-fe3d-4078-b889-ee31d3ead03f",
      "skipped": false
    },
    {
      "title": "should throw when settings.maxTeams is less than 1",
      "fullTitle": "#create(teams, settings) should throw when settings.maxTeams is less than 1",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    teamFactory.create(tc, s);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "b71a018f-e380-4e9a-8878-6699b558d822",
      "parentUUID": "de2d67ab-860e-4c15-8f29-d7ee1ebee5de",
      "skipped": false
    },
    {
      "title": "should create the correct amount of teams",
      "fullTitle": "#create(teams, settings) should create the correct amount of teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "d42922ab-303b-45ba-ae7e-989330f3d9b3",
      "parentUUID": "de2d67ab-860e-4c15-8f29-d7ee1ebee5de",
      "skipped": false
    },
    {
      "title": "should not fail with a large team size",
      "fullTitle": "#create(teams, settings) should not fail with a large team size",
      "timedOut": false,
      "duration": 42,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">500</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">500</span>);<br><span class=\"hljs-comment\">// ensure team names are unique</span><br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> i = names.indexOf(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> n === t.teamName;<br>    });<br>    i.should.equal(-<span class=\"hljs-number\">1</span>);<br>    names.push(t.teamName);<br>});",
      "isRoot": false,
      "uuid": "1680c998-7cd0-4003-8c8a-a6b5175c0826",
      "parentUUID": "de2d67ab-860e-4c15-8f29-d7ee1ebee5de",
      "skipped": false
    },
    {
      "title": "should use settings.teamNames first, before random selection",
      "fullTitle": "#create(teams, settings) should use settings.teamNames first, before random selection",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">10</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>, <span class=\"hljs-string\">'t3'</span>, <span class=\"hljs-string\">'t4'</span>, <span class=\"hljs-string\">'t5'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);<br>tc.all[<span class=\"hljs-number\">2</span>].teamName.should.equal(<span class=\"hljs-string\">'t3'</span>);<br>tc.all[<span class=\"hljs-number\">3</span>].teamName.should.equal(<span class=\"hljs-string\">'t4'</span>);<br>tc.all[<span class=\"hljs-number\">4</span>].teamName.should.equal(<span class=\"hljs-string\">'t5'</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">5</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">6</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">7</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">8</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">9</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "2d0217df-1ab2-47cc-84c4-833ee8e418c1",
      "parentUUID": "de2d67ab-860e-4c15-8f29-d7ee1ebee5de",
      "skipped": false
    },
    {
      "title": "should only create a single team when using unlimited teams",
      "fullTitle": "#create(teams, settings) should only create a single team when using unlimited teams",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "1ab24f48-c3e4-4e28-893d-bfe5ab8fd657",
      "parentUUID": "de2d67ab-860e-4c15-8f29-d7ee1ebee5de",
      "skipped": false
    },
    {
      "title": "should add a team",
      "fullTitle": "#add(teams, settings) should add a team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>teamFactory.add(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "ae202163-d5ca-4cce-98af-766695ee38d2",
      "parentUUID": "233746f0-b7ca-435d-985c-cd74c06247b7",
      "skipped": false
    },
    {
      "title": "should reuse team names specified in settings",
      "fullTitle": "#add(teams, settings) should reuse team names specified in settings",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>teamFactory.add(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);",
      "isRoot": false,
      "uuid": "355363d9-c96e-4bf8-bf1e-0fdacba7014d",
      "parentUUID": "233746f0-b7ca-435d-985c-cd74c06247b7",
      "skipped": false
    },
    {
      "title": "should factor in team names which are already in use",
      "fullTitle": "#add(teams, settings) should factor in team names which are already in use",
      "timedOut": false,
      "duration": 204,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    teamFactory.add(tc, s);<br>}<br>tc.all.length.should.equal(<span class=\"hljs-number\">1001</span>);<br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    names.push(t.teamName);<br>});<br><span class=\"hljs-keyword\">var</span> uniqueNames = unique(names);<br>names.length.should.equal(uniqueNames.length);",
      "isRoot": false,
      "uuid": "9f3d5a8a-4290-452e-bf32-fc67d037ad61",
      "parentUUID": "233746f0-b7ca-435d-985c-cd74c06247b7",
      "skipped": false
    },
    {
      "title": "should return true when team with teamName does exist",
      "fullTitle": "#contains(teamName) should return true when team with teamName does exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(t.teamName).should.be.true();",
      "isRoot": false,
      "uuid": "875df952-2ed5-4068-a0e8-81f83cf37447",
      "parentUUID": "f471a414-6f49-47a3-b1b2-adf793e0f2be",
      "skipped": false
    },
    {
      "title": "should return false when no team with teamName does exist",
      "fullTitle": "#contains(teamName) should return false when no team with teamName does exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(<span class=\"hljs-string\">'other team name'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "0082a5c7-cd95-460f-9dca-b815a683a0fd",
      "parentUUID": "f471a414-6f49-47a3-b1b2-adf793e0f2be",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "df57a820-ae68-4ecf-98cc-c48b18013680",
      "parentUUID": "2255a334-088b-4fe5-ae22-45efd5a06840",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "660dfb19-aee3-4644-a43d-11cd90c50324",
      "parentUUID": "2255a334-088b-4fe5-ae22-45efd5a06840",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all.pop();<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "7d37eea9-0e3b-46ea-81e6-ce88e2bbf5c0",
      "parentUUID": "2255a334-088b-4fe5-ae22-45efd5a06840",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#length should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.length = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "750e2c8b-6c8f-47f2-97f4-9808201c54be",
      "parentUUID": "3f40c281-cf53-48cd-b540-b84e8b6deff1",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#length should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "ebcf5620-0f71-4518-83b6-f8c6520df6de",
      "parentUUID": "3f40c281-cf53-48cd-b540-b84e8b6deff1",
      "skipped": false
    },
    {
      "title": "should add the given team",
      "fullTitle": "#add(team) should add the given team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "a2a0a3e6-b51b-4961-9f31-94aac17fad07",
      "parentUUID": "f6591375-1436-4256-a950-e2ee3b8ffee9",
      "skipped": false
    },
    {
      "title": "should error if team with teamName already exists",
      "fullTitle": "#add(team) should error if team with teamName already exists",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.add(t);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "74b0a078-c355-4bd1-8c15-6e6422f25e77",
      "parentUUID": "f6591375-1436-4256-a950-e2ee3b8ffee9",
      "skipped": false
    },
    {
      "title": "should remove the existing team",
      "fullTitle": "#remove(team) should remove the existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "a91925f0-978d-4bc1-aa9a-1e76a590c183",
      "parentUUID": "6549fc14-09ec-496d-bc32-519b671fa528",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing team",
      "fullTitle": "#remove(team) should not remove the non-existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t1).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "84b7da20-7b63-47b2-89c3-5b24c39a5491",
      "parentUUID": "6549fc14-09ec-496d-bc32-519b671fa528",
      "skipped": false
    },
    {
      "title": "should remove the existing team",
      "fullTitle": "#removeByTeamName(team) should remove the existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t.teamName).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "a80dadb9-5122-4bad-bda1-cc8a93441c8c",
      "parentUUID": "26e8f05a-d350-45fb-bfd7-2b7cc8e84aa6",
      "skipped": false
    },
    {
      "title": "should ignore team name case",
      "fullTitle": "#removeByTeamName(team) should ignore team name case",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'abc1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(<span class=\"hljs-string\">'ABC1'</span>).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "cd27b3b8-c840-4d43-9f8d-c74b367d713c",
      "parentUUID": "26e8f05a-d350-45fb-bfd7-2b7cc8e84aa6",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing team",
      "fullTitle": "#removeByTeamName(team) should not remove the non-existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t1.teamName).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "ec9c4213-59d7-427b-b0cc-cf8c8af23044",
      "parentUUID": "26e8f05a-d350-45fb-bfd7-2b7cc8e84aa6",
      "skipped": false
    },
    {
      "title": "should give contestant an id",
      "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) should give contestant an id",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Username'</span>;<br>should(c.id).be.null();<br>tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>should(c.id).not.be.null();",
      "isRoot": false,
      "uuid": "2a414874-8501-4e88-ab9d-61177354f626",
      "parentUUID": "8599195a-20ec-4ff4-9239-7799e4a2c324",
      "skipped": false
    },
    {
      "title": "should return a valid response",
      "fullTitle": "when teams are full should return a valid response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);",
      "isRoot": false,
      "uuid": "29cda233-59da-436b-8693-e9f0ca791607",
      "parentUUID": "f1dc6dc8-89b5-4293-8523-35389b2dd622",
      "skipped": false
    },
    {
      "title": "should inquire for team leader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should inquire for team leader",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> inquired = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    inquired = <span class=\"hljs-literal\">true</span>;<br>});<br>r.should.be.true();<br>inquired.should.be.true();",
      "isRoot": false,
      "uuid": "9160560c-4928-4872-9e5f-07bb26ec46bc",
      "parentUUID": "67438b99-383a-4e85-b7d2-ca98e547acb7",
      "skipped": false
    },
    {
      "title": "should not inquire for team leader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should not inquire for team leader",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>tc.all[<span class=\"hljs-number\">0</span>].teamLeader = c1;<br><span class=\"hljs-keyword\">var</span> didNotInquire = <span class=\"hljs-literal\">true</span>;<br>tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    didNotInquire = <span class=\"hljs-literal\">false</span>;<br>});<br>didNotInquire.should.be.true();<br>t.teamLeader.should.equal(c1);",
      "isRoot": false,
      "uuid": "a56354e7-1f9e-4c2c-90a1-7fc92a23f976",
      "parentUUID": "67438b99-383a-4e85-b7d2-ca98e547acb7",
      "skipped": false
    },
    {
      "title": "should not add contestant as teamLeader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should not add contestant as teamLeader",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should(t.teamLeader).be.null();",
      "isRoot": false,
      "uuid": "bef02cea-cc3b-4d4e-a731-182930504097",
      "parentUUID": "67438b99-383a-4e85-b7d2-ca98e547acb7",
      "skipped": false
    },
    {
      "title": "should not inquire for team leader",
      "fullTitle": "when teamLeader selection is RANDOM should not inquire for team leader",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> notInquired = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    notInquired = <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>r.should.be.true();<br>notInquired.should.be.true();",
      "isRoot": false,
      "uuid": "84f3cdf2-edff-48f3-aa81-fb64274a47c5",
      "parentUUID": "0d6859e4-100f-4e0e-81ef-e86f0c6fd93f",
      "skipped": false
    },
    {
      "title": "should automatically add team leader when team is filled",
      "fullTitle": "when teamLeader selection is RANDOM should automatically add team leader when team is filled",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).not.be.null();<br>});",
      "isRoot": false,
      "uuid": "c26a7bc2-ce1f-4bc1-959b-f2c49d0d7203",
      "parentUUID": "0d6859e4-100f-4e0e-81ef-e86f0c6fd93f",
      "skipped": false
    },
    {
      "title": "should not automatically add team leader when team is not filled",
      "fullTitle": "when teamLeader selection is RANDOM should not automatically add team leader when team is not filled",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).be.null();<br>});",
      "isRoot": false,
      "uuid": "563b86a5-04e2-4f5c-9d86-9da4e8e70a6b",
      "parentUUID": "0d6859e4-100f-4e0e-81ef-e86f0c6fd93f",
      "skipped": false
    },
    {
      "title": "should add team when teams are full",
      "fullTitle": "when set to use unlimited teams should add team when teams are full",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "053d6d78-7315-47aa-bac5-49a27424741c",
      "parentUUID": "3f70be9f-1003-4e89-ac3f-06d73d56c1c2",
      "skipped": false
    },
    {
      "title": "should throw when no team name is given",
      "fullTitle": "when team selection method is PLAYER_CHOICE should throw when no team name is given",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>}).should.throw();",
      "isRoot": false,
      "uuid": "aa412a2c-d2d4-453f-b70b-540f78b4b6ff",
      "parentUUID": "bffd103d-ab3c-4eec-9380-6f53578aac53",
      "skipped": false
    },
    {
      "title": "should add contestant to correct team",
      "fullTitle": "when team selection method is PLAYER_CHOICE should add contestant to correct team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "3912f866-f32f-4bfb-9e8a-d9d491d9125e",
      "parentUUID": "bffd103d-ab3c-4eec-9380-6f53578aac53",
      "skipped": false
    },
    {
      "title": "should not add to full team",
      "fullTitle": "when team selection method is PLAYER_CHOICE should not add to full team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "80b6be3e-a1dc-4c85-8564-d96b7c84b2ca",
      "parentUUID": "bffd103d-ab3c-4eec-9380-6f53578aac53",
      "skipped": false
    },
    {
      "title": "should get team of contestant",
      "fullTitle": "getByContestant(contestant) should get team of contestant",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">5</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>    r.should.be.true();<br>});<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">4</span>]);<br>t.should.not.be.null();<br>t.contestants.getById(cc[<span class=\"hljs-number\">4</span>].id).should.equal(cc[<span class=\"hljs-number\">4</span>]);",
      "isRoot": false,
      "uuid": "35384087-d38c-4d47-a441-1e77bb1255d1",
      "parentUUID": "a30f69e8-a059-40a6-8c95-a332d2cf8477",
      "skipped": false
    },
    {
      "title": "should not get team of contestant",
      "fullTitle": "getByContestant(contestant) should not get team of contestant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">1</span>);<br>cc[<span class=\"hljs-number\">0</span>].id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">0</span>]);<br>should(t).be.null();",
      "isRoot": false,
      "uuid": "3ff49b90-4545-42e4-8072-7fa30b13c4fe",
      "parentUUID": "a30f69e8-a059-40a6-8c95-a332d2cf8477",
      "skipped": false
    },
    {
      "title": "should get team when team with name exists",
      "fullTitle": "getByTeamName(temName) should get team when team with name exists",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t1 = tc.all[<span class=\"hljs-number\">0</span>];<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(t1.teamName);<br>t.should.equal(t1);",
      "isRoot": false,
      "uuid": "5bc8d5c6-e4fe-417d-ad7a-418300c92f8c",
      "parentUUID": "71c747e7-3765-4d48-b282-3d0c3a5ca032",
      "skipped": false
    },
    {
      "title": "should not get team when team with name does not exist",
      "fullTitle": "getByTeamName(temName) should not get team when team with name does not exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(<span class=\"hljs-string\">'Not a team name that exists'</span>);<br>should(t).be.null();",
      "isRoot": false,
      "uuid": "ac2e5158-41d6-4fe1-ae92-12f0ee29ad1f",
      "parentUUID": "71c747e7-3765-4d48-b282-3d0c3a5ca032",
      "skipped": false
    },
    {
      "title": "should not return full teams",
      "fullTitle": "getAvailable(settings) should not return full teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">2</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "0e784047-3604-4140-a43d-5e4c1b772c2d",
      "parentUUID": "6e3e90bd-8b22-43f0-86a4-45ad717f09d3",
      "skipped": false
    },
    {
      "title": "should return teams with space",
      "fullTitle": "getAvailable(settings) should return teams with space",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "491c8c37-a042-4cf3-b57a-1028596ad686",
      "parentUUID": "6e3e90bd-8b22-43f0-86a4-45ad717f09d3",
      "skipped": false
    },
    {
      "title": "should return teams with unlimited space",
      "fullTitle": "getAvailable(settings) should return teams with unlimited space",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = constants.UNLIMITED;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "3fd19183-0338-4cd3-8a56-a422c4c8ce3a",
      "parentUUID": "6e3e90bd-8b22-43f0-86a4-45ad717f09d3",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t._teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
      "isRoot": false,
      "uuid": "3d529982-3570-4e8d-8844-05dfb3d49b3a",
      "parentUUID": "d7c6c74a-8b70-4fdb-a517-012b148c9de4",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t._teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t.teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
      "isRoot": false,
      "uuid": "7449a6db-550c-4b0f-8e8c-fa14c4c45563",
      "parentUUID": "d7c6c74a-8b70-4fdb-a517-012b148c9de4",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeader should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t.teamLeader = c;<br>t._teamLeader.should.equal(c);",
      "isRoot": false,
      "uuid": "259a066a-ffcf-4b8b-a1a8-fe8c5f5f7eee",
      "parentUUID": "7255b82a-0f18-42e5-afaa-d6b49f88c5c8",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeader should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t._teamLeader = c;<br>t.teamLeader.should.equal(c);",
      "isRoot": false,
      "uuid": "c55aecd5-fc5b-4d13-931c-a49c5bf8eb53",
      "parentUUID": "7255b82a-0f18-42e5-afaa-d6b49f88c5c8",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#score should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "3877f19c-98e8-41d1-bcc9-d31970d327e4",
      "parentUUID": "eacaf3e4-3860-4384-99e6-f799fe234f20",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#score should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br>p._score = <span class=\"hljs-number\">5</span>;<br>p.score.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "2c309d27-1237-464c-a133-07e9792cddb5",
      "parentUUID": "eacaf3e4-3860-4384-99e6-f799fe234f20",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#contestants should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "19030baa-92bc-4477-9ef0-00986ae07cf5",
      "parentUUID": "4a311709-bd4b-4e1c-83d6-8fb299a70d3f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = p.contestants;<br>c.should.be.instanceOf(Participants);",
      "isRoot": false,
      "uuid": "e31f2e8a-0521-4cfc-a189-e1d61dbfe112",
      "parentUUID": "4a311709-bd4b-4e1c-83d6-8fb299a70d3f",
      "skipped": false
    },
    {
      "title": "should update the teams score",
      "fullTitle": "when a contestant scores should update the teams score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br>c1.incrementScore();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.incrementScore();<br>c2.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "29338ae0-070f-4b54-9b04-f418669c4014",
      "parentUUID": "b82414cd-767b-4e0f-a6f2-d8b98e4038af",
      "skipped": false
    },
    {
      "title": "should allow it when no team leader is set",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should allow it when no team leader is set",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.id = <span class=\"hljs-string\">'c1'</span>;<br>t.contestants.add(c);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);",
      "isRoot": false,
      "uuid": "2572fb00-f7d8-43f4-bfdc-e0f8a66e6621",
      "parentUUID": "b89b3af0-2f2f-4cf8-8194-8788e49602cf",
      "skipped": false
    },
    {
      "title": "should not allow it when a team leader is set",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should not allow it when a team leader is set",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_FULFILLED);",
      "isRoot": false,
      "uuid": "44149cad-2cb3-4e6d-b3cc-5c0a65e7e236",
      "parentUUID": "b89b3af0-2f2f-4cf8-8194-8788e49602cf",
      "skipped": false
    },
    {
      "title": "should not allow it when a contestant is not in team",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should not allow it when a contestant is not in team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_NOT_CONTESTANT);",
      "isRoot": false,
      "uuid": "c102cd01-3b90-442c-bcc7-8e8af0ba7a13",
      "parentUUID": "b89b3af0-2f2f-4cf8-8194-8788e49602cf",
      "skipped": false
    },
    {
      "title": "should allow it when a team leader is set and host override is flagged",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should allow it when a team leader is set and host override is flagged",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">true</span>);<br>r.should.be.true();<br>should.not.exist(m);",
      "isRoot": false,
      "uuid": "401e74f1-1e5a-46b1-9d60-0d5f8a60f6bc",
      "parentUUID": "b89b3af0-2f2f-4cf8-8194-8788e49602cf",
      "skipped": false
    },
    {
      "title": "should change name when request is valid",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should change name when request is valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "115c595e-6e71-4968-8f89-ae30fe41d1d1",
      "parentUUID": "1a239a24-b9a6-4a44-865d-91a3daf194b6",
      "skipped": false
    },
    {
      "title": "should not change name when setting do not allow it",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should not change name when setting do not allow it",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_SETTINGS_NOT_ALLOW);<br>r.should.be.false();",
      "isRoot": false,
      "uuid": "61d6714f-710e-4d2b-8e17-a89b05563ffa",
      "parentUUID": "1a239a24-b9a6-4a44-865d-91a3daf194b6",
      "skipped": false
    },
    {
      "title": "should not change name when name contains profanity",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should not change name when name contains profanity",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_CONTAINS_PROFANITY);<br>r.should.be.false();",
      "isRoot": false,
      "uuid": "fbd44ecd-4552-4b36-a25a-36e5a12043ba",
      "parentUUID": "1a239a24-b9a6-4a44-865d-91a3daf194b6",
      "skipped": false
    },
    {
      "title": "should change name when request is valid",
      "fullTitle": "when host override should change name when request is valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "a496c9df-220d-4643-9c1e-0c6c31a471ff",
      "parentUUID": "5d97e170-0c80-472e-be2c-22e91f565d34",
      "skipped": false
    },
    {
      "title": "should change name when setting do not allow it",
      "fullTitle": "when host override should change name when setting do not allow it",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "8315ddf8-643b-45e3-9cad-27670e342315",
      "parentUUID": "5d97e170-0c80-472e-be2c-22e91f565d34",
      "skipped": false
    },
    {
      "title": "should change name when name contains profanity",
      "fullTitle": "when host override should change name when name contains profanity",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "83409f53-c9e1-4451-99fa-45dca754317a",
      "parentUUID": "5d97e170-0c80-472e-be2c-22e91f565d34",
      "skipped": false
    },
    {
      "title": "should get contestant when contest with username exists",
      "fullTitle": "getContestantByUsername(username) should get contestant when contest with username exists",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(c1.username);<br>c.should.equal(c1);<br>c = t.getContestantByUsername(<span class=\"hljs-string\">'c1abc'</span>);<br>c.should.equal(c1);",
      "isRoot": false,
      "uuid": "6718fde1-1a93-47f4-813a-e696a68e2a2c",
      "parentUUID": "5015c66a-a6e9-48e7-959a-c56272f7123e",
      "skipped": false
    },
    {
      "title": "should not get contestant when contest with username does not exist",
      "fullTitle": "getContestantByUsername(username) should not get contestant when contest with username does not exist",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(<span class=\"hljs-string\">'John Doe'</span>);<br>should(c).be.null();",
      "isRoot": false,
      "uuid": "04274243-9eda-49a4-8807-6dc96bf78b88",
      "parentUUID": "5015c66a-a6e9-48e7-959a-c56272f7123e",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should throw on set value",
      "fullTitle": "#wasSuccessful should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.wasSuccessful = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "c798e8a7-35b3-4e55-94b0-909d482a8171",
      "parentUUID": "5227c711-e306-4edb-9386-8dd9f4127736",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#wasSuccessful should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>r.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "402e4b4a-b83f-47c9-b687-91e088859855",
      "parentUUID": "5227c711-e306-4edb-9386-8dd9f4127736",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#enquireForTeamLeaderPosition should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r._enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "4fecaabf-090e-4f71-bc47-7a9a9c154683",
      "parentUUID": "108eb173-3142-45c0-a8fb-19cf772144d6",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#enquireForTeamLeaderPosition should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r.enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "3e0235dd-a950-436c-89d9-8f4c448845d1",
      "parentUUID": "108eb173-3142-45c0-a8fb-19cf772144d6",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#errorMessage should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.errorMessage = <span class=\"hljs-string\">'test'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "ec3664c5-1363-4869-8184-6263c1bbc1b3",
      "parentUUID": "e9439b64-8015-4bc3-9d98-167fe65b30f0",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#errorMessage should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._errorMessage = <span class=\"hljs-string\">'errorMessage_test'</span>;<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'errorMessage_test'</span>);",
      "isRoot": false,
      "uuid": "f236bb7d-d983-419c-b4b3-b3459f011de3",
      "parentUUID": "e9439b64-8015-4bc3-9d98-167fe65b30f0",
      "skipped": false
    },
    {
      "title": "should change the state to not successful",
      "fullTitle": "#setNotSuccessful(errorMessage) should change the state to not successful",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.setNotSuccessful(<span class=\"hljs-string\">'Test error message'</span>);<br>r.wasSuccessful.should.be.false();<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'Test error message'</span>);",
      "isRoot": false,
      "uuid": "6f157890-7c9a-4ee8-a209-1253d9698445",
      "parentUUID": "a61b6395-b221-4d7b-af58-773f1128ea7b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'username_test'</span>;<br>c._username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
      "isRoot": false,
      "uuid": "b8ee031a-5357-4ca0-b4b0-596dc9148d6f",
      "parentUUID": "6ccc681d-c58e-4b9e-9a28-9dcb2a266574",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._username = <span class=\"hljs-string\">'username_test'</span>;<br>c.username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
      "isRoot": false,
      "uuid": "e90a9ec3-7665-441d-aee5-2b701e1d638e",
      "parentUUID": "6ccc681d-c58e-4b9e-9a28-9dcb2a266574",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#score should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    c.score = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "d6a1f863-a2f0-4352-b59e-f80536325a8f",
      "parentUUID": "6a809820-7d86-46f4-867d-7b51682ca7fb",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#score should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._score = <span class=\"hljs-number\">1</span>;<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "0971bb87-07d3-4e8d-9c88-abeecdb8c25c",
      "parentUUID": "6a809820-7d86-46f4-867d-7b51682ca7fb",
      "skipped": false
    },
    {
      "title": "should increment the contestant's score",
      "fullTitle": "#incrementScore() should increment the contestant's score",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.incrementScore();<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "37ff7366-f4b6-433e-bae9-69a59186e40f",
      "parentUUID": "fac77bd4-d0e4-4916-8e84-6c0792de31bb",
      "skipped": false
    },
    {
      "title": "should emit scoreUpdate event",
      "fullTitle": "#incrementScore() should emit scoreUpdate event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.on(<span class=\"hljs-string\">'scoreUpdate'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>});<br>c.incrementScore();",
      "isRoot": false,
      "uuid": "9b4839c7-e092-4f78-92bf-af1e186cc185",
      "parentUUID": "fac77bd4-d0e4-4916-8e84-6c0792de31bb",
      "skipped": false
    },
    {
      "title": "should return a non-null non-empty key",
      "fullTitle": "#generateSessionId() should return a non-null non-empty key",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateSessionId().should.not.be.equal(<span class=\"hljs-string\">''</span>).and.not.be.equal(<span class=\"hljs-literal\">null</span>);",
      "isRoot": false,
      "uuid": "384dff1d-b826-4778-885c-73d8dc6b3934",
      "parentUUID": "b0c207f4-0402-4541-aae7-14ac3ea9f496",
      "skipped": false
    },
    {
      "title": "should return a id of the correct length",
      "fullTitle": "#generateSessionId() should return a id of the correct length",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateSessionId()<br>    .length.should.be.Number().and.equal(idUtility.keyLength);",
      "isRoot": false,
      "uuid": "7808f639-c19d-4ea1-a94a-65200324f55e",
      "parentUUID": "b0c207f4-0402-4541-aae7-14ac3ea9f496",
      "skipped": false
    },
    {
      "title": "should record id so it cannot be reused.",
      "fullTitle": "#generateSessionId() should record id so it cannot be reused.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> id = idUtility.generateSessionId();<br>idUtility._sessionKeysInUse.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">cachedId</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> cachedId === id;<br>}).should.equal(id);",
      "isRoot": false,
      "uuid": "2ec952ee-44e6-4073-873f-a43ec0b41af4",
      "parentUUID": "b0c207f4-0402-4541-aae7-14ac3ea9f496",
      "skipped": false
    },
    {
      "title": "should return a UUID",
      "fullTitle": "#generateParticipantId() should return a UUID",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateParticipantId()<br>    .should.match(<span class=\"hljs-regexp\">/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i</span>);",
      "isRoot": false,
      "uuid": "cbd797d5-65e8-4426-9ba9-183c0117a945",
      "parentUUID": "78a785eb-6dae-4de4-8357-3ee894dd0479",
      "skipped": false
    },
    {
      "title": "should store the ids to stop reuse",
      "fullTitle": "#registerSessionIdsInUse(ids) should store the ids to stop reuse",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.length.should.be.aboveOrEqual(<span class=\"hljs-number\">2</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "08b96af5-8efc-462a-9dec-b104eb11ed31",
      "parentUUID": "d973a701-e714-4cf6-a0b4-ec6e0cd8a24e",
      "skipped": false
    },
    {
      "title": "should return a UUID",
      "fullTitle": "#releaseSessionId(id) should return a UUID",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility.releaseSessionId(<span class=\"hljs-string\">'111AAA'</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.equal(-<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "de01c25a-07c5-41be-ae9f-a8eeb4aff839",
      "parentUUID": "5144125d-8323-4c56-b601-eecca385ff8d",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#action should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.data._action.should.equal(constants.buzzerActionCommands.RESET);",
      "isRoot": false,
      "uuid": "9ca50126-9ab6-4664-99ec-32e5856f9960",
      "parentUUID": "771f30ff-5211-43c3-ab13-2d4e20b48669",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#action should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._action = constants.buzzerActionCommands.RESET;<br>m.action.should.equal(constants.buzzerActionCommands.RESET);",
      "isRoot": false,
      "uuid": "d0c293c6-c610-43dd-81a3-a8f5406dd102",
      "parentUUID": "771f30ff-5211-43c3-ab13-2d4e20b48669",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "2db62b32-7967-45fb-bc32-2688300d45b0",
      "parentUUID": "a2f96c13-076b-4710-b211-dd3f3e400128",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "65fddee4-424a-41c6-9d40-19e05b2edc41",
      "parentUUID": "a2f96c13-076b-4710-b211-dd3f3e400128",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "97f36a03-c10c-4f23-99f1-3e40646489e9",
      "parentUUID": "07d88091-0ee9-448e-99d0-9020d43e1b21",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "e19bd196-c5ca-4592-ad35-8f3419277f8a",
      "parentUUID": "07d88091-0ee9-448e-99d0-9020d43e1b21",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'yyy123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "13d019cb-add2-42aa-83dc-63cb5c1f38c2",
      "parentUUID": "2ce94b66-2343-41a3-9d05-7fb72400c9c4",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = <span class=\"hljs-number\">99</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "7e09d111-79fd-4917-ad1a-e52ecf8f7232",
      "parentUUID": "2ce94b66-2343-41a3-9d05-7fb72400c9c4",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f8435c50-5929-4207-b029-102a9f720b4f",
      "parentUUID": "4b930678-04be-4679-93a9-b9a600797bdd",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "5708cd02-bae4-4314-9997-af3e7d340a35",
      "parentUUID": "4b930678-04be-4679-93a9-b9a600797bdd",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "194a28f0-defc-4b51-baab-0b9f67d5f903",
      "parentUUID": "89cdea64-6093-4e7f-bd61-61072f4c4542",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "707d7015-2001-46ff-9a79-f9c51cc7abce",
      "parentUUID": "89cdea64-6093-4e7f-bd61-61072f4c4542",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "39072a7a-5d46-4d4c-8fe3-da00e0ce898f",
      "parentUUID": "f1f7b9b6-42e6-4b37-8836-fc06d7866c31",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "d6cec52a-4807-425e-b8b5-98cd04570834",
      "parentUUID": "f1f7b9b6-42e6-4b37-8836-fc06d7866c31",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.username = <span class=\"hljs-string\">'test123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
      "isRoot": false,
      "uuid": "b6ebfbcc-d55e-4439-bf7e-d25a01cc7b88",
      "parentUUID": "a5128ef0-25f5-43ae-8392-101a96b1d7ff",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._username = <span class=\"hljs-string\">'test123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
      "isRoot": false,
      "uuid": "0d1580f0-ee31-4d01-8eeb-d4bf0483232b",
      "parentUUID": "a5128ef0-25f5-43ae-8392-101a96b1d7ff",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "ab87def1-3ff4-47b7-ad1b-e8c755ae8501",
      "parentUUID": "e0a4c079-dd92-4614-8f80-de9957093ae9",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "72e2199e-e533-40c2-987e-adb073e53276",
      "parentUUID": "e0a4c079-dd92-4614-8f80-de9957093ae9",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "481bd875-c429-40d1-a194-462bac9c1907",
      "parentUUID": "bc9d6cbf-4d39-4b3b-9d26-ba0fa1362037",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "4c0c7466-0705-4140-8019-f7b417788d3b",
      "parentUUID": "bc9d6cbf-4d39-4b3b-9d26-ba0fa1362037",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "d2bde1c6-0b08-4185-bf7c-d371b7b708b2",
      "parentUUID": "20db7684-c35e-479c-84b8-25b770a1389d",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "8c68b431-7021-4054-9f45-6ffa26af0979",
      "parentUUID": "20db7684-c35e-479c-84b8-25b770a1389d",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#wasSuccessful should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.data._wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "4ccb4498-6fb4-4f57-b029-0e6a6183c7fc",
      "parentUUID": "03983f25-0342-4ccb-9fb2-7e4bbbcd2577",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#wasSuccessful should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "202bd4cb-8ced-4077-a447-4480550377c3",
      "parentUUID": "03983f25-0342-4ccb-9fb2-7e4bbbcd2577",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#enquireForTeamLeaderPosition should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.data._enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "f98d4e5d-863e-4870-a205-e67d3b0334ce",
      "parentUUID": "5a0c0e71-4a51-4b48-aecd-78161e971504",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#enquireForTeamLeaderPosition should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "f026f3e5-4edb-40c5-8456-79dba19b767f",
      "parentUUID": "5a0c0e71-4a51-4b48-aecd-78161e971504",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#failedRequestReason should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.data._failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
      "isRoot": false,
      "uuid": "147b39db-84da-4b72-a21a-2fc630ec715b",
      "parentUUID": "28afb428-807a-42ec-93a1-17e41c3c7a0a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#failedRequestReason should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
      "isRoot": false,
      "uuid": "80ed5000-89e1-44a5-a673-e23880b7cdae",
      "parentUUID": "28afb428-807a-42ec-93a1-17e41c3c7a0a",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "110b27ef-a10b-4587-9b35-f04d3a2a113f",
      "parentUUID": "2ac3c0cd-33b3-40c1-8a61-495b99477370",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "e147413a-1456-4f07-ba49-e845d06b5d0c",
      "parentUUID": "2ac3c0cd-33b3-40c1-8a61-495b99477370",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#mustChooseTeam should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.data._mustChooseTeam.should.be.true();",
      "isRoot": false,
      "uuid": "957207a8-07f4-4b30-836f-26d5c8c068be",
      "parentUUID": "65b9fa5c-97ef-47e9-be4e-3f4aca543a5e",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#mustChooseTeam should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.mustChooseTeam.should.be.true();",
      "isRoot": false,
      "uuid": "629d3830-153c-4088-a528-a63764f295be",
      "parentUUID": "65b9fa5c-97ef-47e9-be4e-3f4aca543a5e",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teams should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.data._teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
      "isRoot": false,
      "uuid": "accb2806-f099-4912-b45e-a7a72e8ddbec",
      "parentUUID": "67d7a404-96a6-433f-83f2-6e1d579187e9",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teams should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
      "isRoot": false,
      "uuid": "017fc785-841a-4889-86d4-4bac65d2c16e",
      "parentUUID": "67d7a404-96a6-433f-83f2-6e1d579187e9",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "93d43a20-7c52-49fd-80da-474de9b52c07",
      "parentUUID": "ff259737-b1dd-4bbf-bcb9-75f0be3b5fd7",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "615e6412-2cad-4093-be97-0f4818dda2fc",
      "parentUUID": "ff259737-b1dd-4bbf-bcb9-75f0be3b5fd7",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#settings should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.data._settings.should.equal(s);",
      "isRoot": false,
      "uuid": "38a99594-1f17-4363-a283-097bc0ec7eae",
      "parentUUID": "4c0950af-bb14-46ae-bc37-9de050aa06cf",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#settings should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.data._settings = s;<br>m.settings.should.equal(s);",
      "isRoot": false,
      "uuid": "bb7d8974-c473-40ed-bc5e-1a610d040e4a",
      "parentUUID": "4c0950af-bb14-46ae-bc37-9de050aa06cf",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "160cd036-b16d-4fd2-aae9-786fbe6faec1",
      "parentUUID": "888c6ab8-9ce5-4fdb-b65b-0a12fad5288a",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-string\">'invalid'</span>;<br>m.settings = s;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "50d07b66-29b0-401f-a652-b7280f8f15e2",
      "parentUUID": "888c6ab8-9ce5-4fdb-b65b-0a12fad5288a",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "2a40f445-08d2-4c65-8df9-a6df0f5d2442",
      "parentUUID": "f0a7cba1-bb20-445b-a7b0-5d63346e576a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "e9567116-75ac-437f-ac79-ee17aad53a74",
      "parentUUID": "f0a7cba1-bb20-445b-a7b0-5d63346e576a",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "330b391e-e90b-4061-acab-1f26b2d6ffa5",
      "parentUUID": "b91718f7-1682-4ca7-a623-49ebce018eb1",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "04ea500b-0b8a-4a92-b38c-4f0fbc558d85",
      "parentUUID": "b91718f7-1682-4ca7-a623-49ebce018eb1",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "73c8eda5-3f9f-4789-b4fe-172993e8f7ca",
      "parentUUID": "ffb14936-d822-4b2e-8bc6-1798a0538e7d",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "a0de9246-b431-4ea0-be4e-2cab48b067d6",
      "parentUUID": "ffb14936-d822-4b2e-8bc6-1798a0538e7d",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#message should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "aa0671d9-f227-4efc-a09c-8a538a397446",
      "parentUUID": "8a32e93c-be35-43e3-954d-f273d9b700d4",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#message should get value",
      "timedOut": false,
      "duration": 8,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.data._error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "1683edcc-9751-4ac5-85cb-3734cea1e96e",
      "parentUUID": "8a32e93c-be35-43e3-954d-f273d9b700d4",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "01ad8204-cbdc-40e1-a847-bff3d4302528",
      "parentUUID": "f9a86c24-be20-4dc6-be4c-639c48a20209",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "3ed8f646-8c27-4073-84b0-95c797879576",
      "parentUUID": "f9a86c24-be20-4dc6-be4c-639c48a20209",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionName should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "4c6356c0-6d0a-4a76-b497-8101ca97c188",
      "parentUUID": "73061ae0-0009-4493-b1e1-dcfd0b95fe3b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "39f13386-0adb-4ef7-8c3a-30c887d0af6f",
      "parentUUID": "73061ae0-0009-4493-b1e1-dcfd0b95fe3b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxTeams should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxTeams = <span class=\"hljs-number\">5</span>;<br>m.data._maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "8a717bcc-9797-4e29-abf9-996b03965757",
      "parentUUID": "316cde8a-3cfe-47dc-9398-0121298240f6",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxTeams should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxTeams = <span class=\"hljs-number\">5</span>;<br>m.maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "3b26b4e9-a9f6-487c-ba2a-05f3020fb710",
      "parentUUID": "316cde8a-3cfe-47dc-9398-0121298240f6",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamSize should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.teamSize = <span class=\"hljs-number\">5</span>;<br>m.data._teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "b1f0a080-4fae-48f1-888a-2f86a3d2fd6a",
      "parentUUID": "915a24fd-2003-407a-b33f-7e2827d02eb2",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamSize should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._teamSize = <span class=\"hljs-number\">5</span>;<br>m.teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "2d8fca52-e85c-4432-99d0-da970546bb8e",
      "parentUUID": "915a24fd-2003-407a-b33f-7e2827d02eb2",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxContestants should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxContestants = <span class=\"hljs-number\">5</span>;<br>m.data._maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "3b906526-f639-4ffc-969d-369edf6367dd",
      "parentUUID": "2a102d33-81b8-4cda-8768-03769cba046c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxContestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxContestants = <span class=\"hljs-number\">5</span>;<br>m.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "96ff2d6c-3b09-4b48-b751-0ffdc80977cc",
      "parentUUID": "2a102d33-81b8-4cda-8768-03769cba046c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "578976ab-ec99-407e-91fe-fd2eccfeb990",
      "parentUUID": "93aab511-164a-4fbc-b72f-1533e5c762e1",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "4d54454a-d985-4f4f-ab4e-65c0c239e744",
      "parentUUID": "93aab511-164a-4fbc-b72f-1533e5c762e1",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "83fce46c-b7fc-4caf-a2a7-6677c3362ece",
      "parentUUID": "41e10bcf-7f2a-4764-89e5-ffb584a46de7",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "ae9aa1c1-c00e-44b6-87e7-a53a6d4a7769",
      "parentUUID": "41e10bcf-7f2a-4764-89e5-ffb584a46de7",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "840f66c3-d440-404b-830c-1057a2d61472",
      "parentUUID": "b66b0a5c-ca89-48f6-a3f4-ec05ad13ac41",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "9fe37ce3-9e2e-4d62-b34f-b200fc3da95b",
      "parentUUID": "b66b0a5c-ca89-48f6-a3f4-ec05ad13ac41",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "eb45e55a-b70c-4bad-9609-2051e3c6b65a",
      "parentUUID": "b18d6c22-35b9-458b-bc33-e579e8200f53",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "d53a4225-6c4b-4a28-afbe-7f7188bc55e9",
      "parentUUID": "b18d6c22-35b9-458b-bc33-e579e8200f53",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeaderUsername should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "1f09f407-87a8-4e4f-b440-da69c38525e3",
      "parentUUID": "480aa1a3-6a41-4374-b1a7-cc7d9c31ba1f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeaderUsername should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "c146f26a-eb1e-42b3-805e-e3b2247a79ca",
      "parentUUID": "480aa1a3-6a41-4374-b1a7-cc7d9c31ba1f",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "1bc34f2c-9e12-4f5c-93b2-19c27abfc84c",
      "parentUUID": "adc3ef9a-982c-47d2-8637-5df5c719b87a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "688daaaa-e483-4fd3-88c4-4ee4bdbc85df",
      "parentUUID": "adc3ef9a-982c-47d2-8637-5df5c719b87a",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "47882c42-bb2a-442d-83fa-27b85d5656df",
      "parentUUID": "f0fff059-7453-4cd7-be76-ebdaf076cfcb",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "94718092-2d06-47a2-a66c-a9626ff01d5b",
      "parentUUID": "f0fff059-7453-4cd7-be76-ebdaf076cfcb",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "4a956105-788d-40f0-b793-100b60164d62",
      "parentUUID": "3fa86fea-8d02-4d95-8a90-fd8659c31e11",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "09dbea62-fbb5-4f08-9913-5d8fbea915f0",
      "parentUUID": "3fa86fea-8d02-4d95-8a90-fd8659c31e11",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameFrom should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "73bbaf5b-b17d-447c-b6e8-ce03348f88f0",
      "parentUUID": "ea615bfe-a578-4d44-8b6b-e0a4f91142aa",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameFrom should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "19f19209-1242-482b-8991-2696284fc053",
      "parentUUID": "ea615bfe-a578-4d44-8b6b-e0a4f91142aa",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameTo should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "ac209d35-925c-4af8-b593-fa9b755e5a31",
      "parentUUID": "61d2ff99-2976-4486-907f-f2198d67fd11",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameTo should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "a325bb9d-95d1-4444-b232-05dd4d3b3529",
      "parentUUID": "61d2ff99-2976-4486-907f-f2198d67fd11",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b0fde6ac-4f6a-4e62-89fc-aed58ec28ff4",
      "parentUUID": "fd139832-3fec-4b89-8dce-2055f30422c2",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "acf484d9-4028-424d-ae85-b9c76830b70c",
      "parentUUID": "fd139832-3fec-4b89-8dce-2055f30422c2",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f2e40fa0-1acd-48cb-a590-4081437336ab",
      "parentUUID": "e37e2d1d-2828-4b9c-bb30-aade03324796",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "5053b60c-c67a-4f07-b31b-a3334ebb195d",
      "parentUUID": "e37e2d1d-2828-4b9c-bb30-aade03324796",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "68e70b86-f107-4fe6-8a64-00dc47b92fa2",
      "parentUUID": "aed20205-8b71-4e0f-8c0e-087aa5c806fc",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "b9434764-610d-4db3-9e46-129234fd26e9",
      "parentUUID": "aed20205-8b71-4e0f-8c0e-087aa5c806fc",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#decision should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.data._decision.should.be.true();",
      "isRoot": false,
      "uuid": "d7518417-4554-4306-9f7a-a24f462e4084",
      "parentUUID": "954f6192-bacd-4676-90b0-6cf5f9d54a44",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#decision should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._decision = <span class=\"hljs-literal\">true</span>;<br>m.decision.should.be.true();",
      "isRoot": false,
      "uuid": "02c1aa1a-a881-4d69-bcfc-5dccc5ca8ed9",
      "parentUUID": "954f6192-bacd-4676-90b0-6cf5f9d54a44",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "e17281fb-a0f3-4e0b-8f03-ade266c74cdc",
      "parentUUID": "966ee3b3-4972-4102-ae78-d5740087c528",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f0422f70-2258-4f3e-9f40-2055d8beba2c",
      "parentUUID": "966ee3b3-4972-4102-ae78-d5740087c528",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "596986df-40a1-419e-b9e5-3aa46f6e978b",
      "parentUUID": "c659459b-1439-4df4-861f-7fcc5c6a8661",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "5237566f-3e91-4666-bd33-a5c866587eec",
      "parentUUID": "c659459b-1439-4df4-861f-7fcc5c6a8661",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "509d13be-6c6b-4fda-9f1b-6087a2563c15",
      "parentUUID": "5cd6f11b-7dce-4875-9724-258597e33551",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "0f8f68c1-7059-4240-a352-5aa0de22a90e",
      "parentUUID": "5cd6f11b-7dce-4875-9724-258597e33551",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#gameState should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.gameState.should.be.Object();",
      "isRoot": false,
      "uuid": "91c265d6-6d3b-4717-8cde-73d9908c75c2",
      "parentUUID": "3dae4564-856c-4ae9-acdb-cade831f0cb0",
      "skipped": false
    },
    {
      "title": "should not have ids",
      "fullTitle": "#gameState should not have ids",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState.id);<br>should.not.exist(m.gameState.host.id);",
      "isRoot": false,
      "uuid": "c74c9b54-a6db-4e00-9888-c17c07e180f3",
      "parentUUID": "3dae4564-856c-4ae9-acdb-cade831f0cb0",
      "skipped": false
    },
    {
      "title": "should promote private field _ to public field",
      "fullTitle": "#gameState should promote private field _ to public field",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState._host);<br>should.not.exist(m.gameState._settings);<br>should.exist(m.gameState.host);<br>should.exist(m.gameState.settings);<br>should.exist(m.gameState.settings.teamLeaderSelectionMethod);",
      "isRoot": false,
      "uuid": "aad54ed0-3e2b-48e0-8372-8a5e3b21a88d",
      "parentUUID": "3dae4564-856c-4ae9-acdb-cade831f0cb0",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "97db5ac9-e87c-425b-8f9b-36890df91051",
      "parentUUID": "67d79cc6-f98d-42e1-b003-91720c0a74d0",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "5fe0eaa7-1bdb-4525-b146-3492edbceaf7",
      "parentUUID": "67d79cc6-f98d-42e1-b003-91720c0a74d0",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#rejoinAs should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.rejoinAs = constants.rejoinAs.HOST;<br>m.data._rejoinAs.should.equal(constants.rejoinAs.HOST);",
      "isRoot": false,
      "uuid": "2f15aaff-84ae-4ed1-adca-d08d41638fd2",
      "parentUUID": "d8852ca3-4055-42ac-ad68-d7a964333f05",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#rejoinAs should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._rejoinAs = constants.rejoinAs.HOST;<br>m.rejoinAs.should.equal(constants.rejoinAs.HOST);",
      "isRoot": false,
      "uuid": "924ade9b-500c-463d-a59a-4b250e498adc",
      "parentUUID": "d8852ca3-4055-42ac-ad68-d7a964333f05",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "fc38f581-49a4-4a9d-915c-0135e249f8e7",
      "parentUUID": "2ecd47f4-3ba0-4a4c-98ee-1a24bb32e7ec",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "22c7aa38-77f2-469b-9483-ec67b946111a",
      "parentUUID": "2ecd47f4-3ba0-4a4c-98ee-1a24bb32e7ec",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#participantId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "5cf9176d-b7b2-4243-aaaf-f6f75b7ffa21",
      "parentUUID": "f9c71b78-aff5-4f25-a981-9c9b57eed7fd",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#participantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "521ad5bd-9d2e-4f9a-b131-8def8646787e",
      "parentUUID": "f9c71b78-aff5-4f25-a981-9c9b57eed7fd",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.rejoinAs = constants.rejoinAs.OBSERVER;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "b99ce127-b10f-49a8-9647-036f367cb0a9",
      "parentUUID": "5c196370-a477-47fd-b57d-526d7e945edb",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "a4ee3a4b-3bba-4fdb-854c-bcc49aef607c",
      "parentUUID": "5c196370-a477-47fd-b57d-526d7e945edb",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "aa845847-5c79-4bfa-926a-e50cd72750ce",
      "parentUUID": "1a88c82c-6708-4695-94c2-83cdc7377234",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "c8f4e16d-4dcc-4542-a0b2-22749f911d8f",
      "parentUUID": "1a88c82c-6708-4695-94c2-83cdc7377234",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "231cf4ec-68b8-4471-a8cc-497f4665e87e",
      "parentUUID": "d057a004-caad-4c98-8454-2cb90b37f5b9",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "098537db-76b5-4320-9710-c981438b8254",
      "parentUUID": "d057a004-caad-4c98-8454-2cb90b37f5b9",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "0390f047-9825-44c3-ae92-954335cec4a6",
      "parentUUID": "c0a0ae46-2ab0-4f50-88e1-d175bc9ede4c",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "dde8450a-f49a-4a0c-8cb5-3c929057a3b5",
      "parentUUID": "c0a0ae46-2ab0-4f50-88e1-d175bc9ede4c",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionCompleted();<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "dec17f65-58dd-47c1-a4ca-bf818587ce17",
      "parentUUID": "388c1729-9aa9-4da3-bc99-06368d922774",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "145a5e2f-5bab-46ea-9ab1-3b6f4e75990b",
      "parentUUID": "9b119e6f-35e6-453e-8ab4-ca5ff8fb6714",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "e88ea993-9282-4e15-9598-7b0a92e38e01",
      "parentUUID": "9b119e6f-35e6-453e-8ab4-ca5ff8fb6714",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "a1cdedad-dba1-4b86-a85f-c66e8bd47ec3",
      "parentUUID": "22b3e7b7-79c7-40ca-ac2c-11fe786828b8",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f295de83-162d-4ed5-b6e7-ba4833e8fe09",
      "parentUUID": "22b3e7b7-79c7-40ca-ac2c-11fe786828b8",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "ce24cbb2-9150-4dc9-a9c3-5f4946018a65",
      "parentUUID": "34fb213c-c1c7-4780-93dd-78946125baec",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "e7afc56d-7485-459c-bab0-5d5bff2594ab",
      "parentUUID": "34fb213c-c1c7-4780-93dd-78946125baec",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "7379a578-4d87-43eb-bdb4-72898f2ef11f",
      "parentUUID": "edb15ac6-a6fd-4b98-a55e-3214da7f60d2",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "5fb6ba8e-c0e2-49de-9d38-6df55b99e7e1",
      "parentUUID": "edb15ac6-a6fd-4b98-a55e-3214da7f60d2",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#participantId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "7924d14d-92eb-4a01-b324-c02edd3dac9f",
      "parentUUID": "1faf1d2c-e529-49a6-9bde-7f83c36935bd",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#participantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "afdf4151-c474-4a6d-98d1-102f855476c9",
      "parentUUID": "1faf1d2c-e529-49a6-9bde-7f83c36935bd",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "5865054f-47e4-48f8-8c93-a27c28e089bd",
      "parentUUID": "021944e7-8a73-41c8-bf19-fa9bbf315278",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "3038da7c-0a21-4887-a551-d5b279cfd873",
      "parentUUID": "021944e7-8a73-41c8-bf19-fa9bbf315278",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#info should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.should.be.Object();",
      "isRoot": false,
      "uuid": "7afacda5-a3c2-44d7-a8b3-2eb621173526",
      "parentUUID": "da1a6cf9-59e1-4652-b4e9-73af62b910dc",
      "skipped": false
    },
    {
      "title": "should not have ids",
      "fullTitle": "#info should not have ids",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.host.should.not.be.null();<br>should.not.exist(m.info.host.id);",
      "isRoot": false,
      "uuid": "5d9ce696-69a1-4e7e-bfe7-43cc67ad862b",
      "parentUUID": "da1a6cf9-59e1-4652-b4e9-73af62b910dc",
      "skipped": false
    },
    {
      "title": "should promote private field _ to public field",
      "fullTitle": "#info should promote private field _ to public field",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>should.not.exist(m.info._host);<br>should.not.exist(m.info._session);<br>should.exist(m.info.host);<br>should.exist(m.info.session);<br>should.exist(m.info.session.settings.teamLeaderSelectionMethod);",
      "isRoot": false,
      "uuid": "80e8b697-cc63-485f-92f5-3290168d69fd",
      "parentUUID": "da1a6cf9-59e1-4652-b4e9-73af62b910dc",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "034b5b46-e712-45ba-9aae-183ff9dc408b",
      "parentUUID": "a351c57b-2999-47b4-9b32-e57c311b1249",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "99928b3a-38de-4fc0-bb28-64ef316c2ff6",
      "parentUUID": "a351c57b-2999-47b4-9b32-e57c311b1249",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "1555312b-d976-475f-96c2-e4960617476e",
      "parentUUID": "1f7a029c-7757-4928-9f04-16b086477bd8",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "9cdca577-8f22-4e44-b562-ae006083e7fa",
      "parentUUID": "1f7a029c-7757-4928-9f04-16b086477bd8",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "dad3a8b3-d3ce-4f17-929b-e38c59cf4137",
      "parentUUID": "18f5dbb1-fa68-4de3-a89f-4bddcb3962c4",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "6a566b53-b56d-469d-a289-ff107cba309b",
      "parentUUID": "18f5dbb1-fa68-4de3-a89f-4bddcb3962c4",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "d103147b-f329-40e9-8f22-bb287b00ffc6",
      "parentUUID": "29412075-004d-4968-935c-4bb7a8028555",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "8c12381f-631e-4490-9fdc-792d63b39385",
      "parentUUID": "29412075-004d-4968-935c-4bb7a8028555",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.contestantId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "2d99f232-e15b-4eab-ba9e-a405b404b6f5",
      "parentUUID": "b0cc11b3-e4c2-43db-93b8-a88a637ecf92",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "8bd8b8ee-8216-4aff-88e5-abfe822cdedc",
      "parentUUID": "b0cc11b3-e4c2-43db-93b8-a88a637ecf92",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SuccessMessage();<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "94683cc8-a45b-4122-89d1-d8e0041f58a9",
      "parentUUID": "38bda52a-5db5-4096-ad0c-d4d4e89ec8ea",
      "skipped": false
    },
    {
      "title": "should return false when not referenced",
      "fullTitle": "#isInstanceAndTypeOf() should return false when not referenced",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf().should.be.false();",
      "isRoot": false,
      "uuid": "464620e3-86f3-4b60-b0b5-da599158ad0d",
      "parentUUID": "4f1bf951-651a-48a0-9fb0-9844de274624",
      "skipped": false
    },
    {
      "title": "should return false when null",
      "fullTitle": "#isInstanceAndTypeOf() should return false when null",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">''</span>).should.be.false();",
      "isRoot": false,
      "uuid": "e9c4ee4a-c4c8-4e12-b2fa-2cbaac6d72a1",
      "parentUUID": "4f1bf951-651a-48a0-9fb0-9844de274624",
      "skipped": false
    },
    {
      "title": "should return false when not the correct type",
      "fullTitle": "#isInstanceAndTypeOf() should return false when not the correct type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'Int'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "7cac5651-cb4f-476f-99e3-8a8030936a97",
      "parentUUID": "4f1bf951-651a-48a0-9fb0-9844de274624",
      "skipped": false
    },
    {
      "title": "should return true when is a built-in type",
      "fullTitle": "#isInstanceAndTypeOf() should return true when is a built-in type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'Number'</span>).should.be.true();",
      "isRoot": false,
      "uuid": "cd08dace-b894-4c51-9cf2-4e571ffd5276",
      "parentUUID": "4f1bf951-651a-48a0-9fb0-9844de274624",
      "skipped": false
    },
    {
      "title": "should return true when is user defined type",
      "fullTitle": "#isInstanceAndTypeOf() should return true when is user defined type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-keyword\">new</span> UserDefinedType(),<br>    UserDefinedType).should.be.true();",
      "isRoot": false,
      "uuid": "89c73e39-5cce-441b-8dbb-b6b3b61a5798",
      "parentUUID": "4f1bf951-651a-48a0-9fb0-9844de274624",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "cb068636-33c3-445c-9f30-11e2db6ee552",
      "parentUUID": "ecb882c3-b53b-4245-84b7-a0399604a691",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "895ed9da-2d42-4215-ae6a-e0a4a2c6c5c4",
      "parentUUID": "ecb882c3-b53b-4245-84b7-a0399604a691",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all.pop();<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "30d3679f-dcb0-433a-b666-10293f1ce810",
      "parentUUID": "ecb882c3-b53b-4245-84b7-a0399604a691",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#length should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.length = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "e86e8ddb-291d-4c4b-87f3-f06dceb53516",
      "parentUUID": "d6161e8d-0f1a-42fc-9f25-247d53c6b750",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#length should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "a39fefb6-315c-4dab-bae7-0f0233602ba6",
      "parentUUID": "d6161e8d-0f1a-42fc-9f25-247d53c6b750",
      "skipped": false
    },
    {
      "title": "should return true when id does exist",
      "fullTitle": "#contains(id) should return true when id does exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(p.id).should.be.true();",
      "isRoot": false,
      "uuid": "cdec1439-3d0f-45fd-930e-d165c1b23db0",
      "parentUUID": "f7641632-5b6c-4a8f-abb7-ed952860a07d",
      "skipped": false
    },
    {
      "title": "should return false when id does not exist",
      "fullTitle": "#contains(id) should return false when id does not exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(<span class=\"hljs-string\">'p2'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "2acdbba3-2c9c-495f-873a-e50bbb1bdc52",
      "parentUUID": "f7641632-5b6c-4a8f-abb7-ed952860a07d",
      "skipped": false
    },
    {
      "title": "should add the given participant",
      "fullTitle": "#add(participant) should add the given participant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc._participants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc._participants[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "db14242f-a7a7-4b8c-be4f-703a6af9f8f2",
      "parentUUID": "8c576f35-f5b8-4806-bc49-d1afc03cc835",
      "skipped": false
    },
    {
      "title": "should error if participant with id already exists",
      "fullTitle": "#add(participant) should error if participant with id already exists",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.add(p);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "4b9409e8-7da4-4ebd-a3c8-3e3f074bd83e",
      "parentUUID": "8c576f35-f5b8-4806-bc49-d1afc03cc835",
      "skipped": false
    },
    {
      "title": "should emit add event",
      "fullTitle": "#add(participant) should emit add event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.on(<span class=\"hljs-string\">'add'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">participant</span>) </span>{<br>    participant.should.equal(p);<br>    done();<br>});<br>pc.add(p);",
      "isRoot": false,
      "uuid": "06bd86ee-0def-44e2-80ad-35f3c1fbc22c",
      "parentUUID": "8c576f35-f5b8-4806-bc49-d1afc03cc835",
      "skipped": false
    },
    {
      "title": "should remove the existing participant",
      "fullTitle": "#remove(participant) should remove the existing participant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "f4935693-4c8a-4a77-a865-b17a2c368ffa",
      "parentUUID": "fb9ebb16-6d7d-4e37-8fde-5f6ee58a8565",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing participant",
      "fullTitle": "#remove(participant) should not remove the non-existing participant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p1).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "99d0a1df-5a3a-4b47-bae8-d6204562465d",
      "parentUUID": "fb9ebb16-6d7d-4e37-8fde-5f6ee58a8565",
      "skipped": false
    },
    {
      "title": "should remove the existing participant",
      "fullTitle": "#removeById(id) should remove the existing participant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p.id).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "b8790f1f-1d0a-45cc-a4ee-b0ec400a2ef0",
      "parentUUID": "888553cb-493f-4cfa-9e87-c6837629ab63",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing participant",
      "fullTitle": "#removeById(id) should not remove the non-existing participant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p1.id).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "b6750ba2-c0d1-4179-9d73-a8189a423bb6",
      "parentUUID": "888553cb-493f-4cfa-9e87-c6837629ab63",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#id should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'id_test'</span>;<br>p._id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "f491a8cd-9f1a-4e3a-8d68-bd681f0d1b6e",
      "parentUUID": "398b114e-078f-4806-9a7c-d34ae2264dce",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#id should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "05ecdd58-ad20-4323-a2af-1509eb0ab152",
      "parentUUID": "398b114e-078f-4806-9a7c-d34ae2264dce",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#isDisconnected should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    p.isDisconnected = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "0ff00cd0-2776-41ff-a032-d2b280b62229",
      "parentUUID": "a34f9ec3-78fa-4b9b-a384-d7beb428ac52",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#isDisconnected should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "fadb2238-b559-4a0a-9af2-7ca7ff2b7cb5",
      "parentUUID": "a34f9ec3-78fa-4b9b-a384-d7beb428ac52",
      "skipped": false
    },
    {
      "title": "should change participant state to disconnected",
      "fullTitle": "#disconnect() should change participant state to disconnected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">false</span>;<br>p.disconnect();<br>p.isDisconnected.should.be.true();",
      "isRoot": false,
      "uuid": "594d898b-e41b-46c1-989b-6485ba08242e",
      "parentUUID": "df5b544d-d9a9-49c8-bb5d-ca72e77ee7b8",
      "skipped": false
    },
    {
      "title": "should change participant state to connected",
      "fullTitle": "#reconnect() should change participant state to connected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">true</span>;<br>p.reconnect();<br>p.isDisconnected.should.be.false();",
      "isRoot": false,
      "uuid": "dafb4169-48e6-4784-b0d1-7bb639168456",
      "parentUUID": "f845f156-6b72-4325-92fd-54d93004a9fe",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    sc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "c2fc350f-157b-4d60-bb01-c250ebbfd8fd",
      "parentUUID": "350559c6-64c9-41a4-849e-7a930dc1dbf2",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
      "isRoot": false,
      "uuid": "e0dc340b-8ddb-49d8-9648-7664c26cf57b",
      "parentUUID": "350559c6-64c9-41a4-849e-7a930dc1dbf2",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all.pop();<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
      "isRoot": false,
      "uuid": "ad2abaa9-eaab-4d01-9fcc-e56f626f688e",
      "parentUUID": "350559c6-64c9-41a4-849e-7a930dc1dbf2",
      "skipped": false
    },
    {
      "title": "add and return session",
      "fullTitle": "#add(host, settings) add and return session",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-keyword\">var</span> ses = sc.add(h, s);<br>ses.should.be.instanceof(Session);",
      "isRoot": false,
      "uuid": "fb368792-5d62-4c96-9012-9d6be43d5b08",
      "parentUUID": "7f43145a-e2c5-4212-8658-a1be15c70584",
      "skipped": false
    },
    {
      "title": "when given valid id should return session",
      "fullTitle": "#getById(id) when given valid id should return session",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-comment\">/* eslint-disable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses1 = sc.add(h, s);<br><span class=\"hljs-comment\">/* eslint-enable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses2 = sc.add(h, s);<br><span class=\"hljs-keyword\">var</span> sessionLocate = sc.getById(ses2.id);<br>sessionLocate.should.be.instanceof(Session)<br>    .and.equal(ses2);",
      "isRoot": false,
      "uuid": "f678d8b2-6996-48d9-bac1-409c05a53fd2",
      "parentUUID": "e0d9a539-ff05-4d09-b36f-1d195fac94a8",
      "skipped": false
    },
    {
      "title": "should remove complete sc",
      "fullTitle": "#purgeCompleted() should remove complete sc",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.all[<span class=\"hljs-number\">0</span>].complete();<br>sc.all[<span class=\"hljs-number\">1</span>].complete();<br>sc.purgeCompleted();<br>sc.all.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "d1171f52-a85d-40a0-b9d8-d12b669618a9",
      "parentUUID": "8446fb2a-0059-4f6e-9207-8aa4ae5f8925",
      "skipped": false
    },
    {
      "title": "should create teams",
      "fullTitle": "#constructor should create teams",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "70f9f5b0-f211-4654-84da-6c8e9b1313bf",
      "parentUUID": "9054e9d8-92a0-4cab-93cd-fd8c2ada2520",
      "skipped": false
    },
    {
      "title": "should not create teams",
      "fullTitle": "#constructor should not create teams",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>should(s.teams).be.null();",
      "isRoot": false,
      "uuid": "79ea7dc4-4d5e-4c84-b987-efc51ceb2c13",
      "parentUUID": "9054e9d8-92a0-4cab-93cd-fd8c2ada2520",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#id should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.id = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "6abb60c9-7aab-44e7-80bb-95e6930d4fed",
      "parentUUID": "b1722528-06de-4fb2-9218-f6a9016cde75",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#id should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "0f5ee97b-dd40-4da2-9cfc-2982f8817c2a",
      "parentUUID": "b1722528-06de-4fb2-9218-f6a9016cde75",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#roundsPlayed should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundsPlayed = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "35d64929-0530-49f9-8608-bc64d0cc3615",
      "parentUUID": "84ea6f88-1bc5-45dd-8e69-46f71d342641",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#roundsPlayed should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "cecbc5b0-8add-4ecd-ac96-1d54ed611656",
      "parentUUID": "84ea6f88-1bc5-45dd-8e69-46f71d342641",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#previousWinners should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.previousWinners = [<span class=\"hljs-string\">'SomeWinner'</span>];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "bb3575d4-b6cf-473f-ab00-eb876865a16e",
      "parentUUID": "d62b3771-d44f-49e0-af89-d2e20818e76e",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#previousWinners should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._previousWinners = [<span class=\"hljs-string\">'Winner1'</span>, <span class=\"hljs-string\">'Winner2'</span>];<br>s.previousWinners.should.be.Array();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
      "isRoot": false,
      "uuid": "3e413e18-a641-4371-bab2-219a81e68660",
      "parentUUID": "d62b3771-d44f-49e0-af89-d2e20818e76e",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#roundWinner should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundWinner = <span class=\"hljs-string\">'SomeWinner'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "c32d5023-bd25-429c-b48c-e93786188d9b",
      "parentUUID": "3f0a6fb6-f6c8-4b99-8f29-ec7906011849",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#roundWinner should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundWinner = <span class=\"hljs-string\">'Winner1'</span>;<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
      "isRoot": false,
      "uuid": "2450d5e8-23b6-4499-9274-ced3600f435a",
      "parentUUID": "3f0a6fb6-f6c8-4b99-8f29-ec7906011849",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#observers should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.observers = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "fcbc79e5-129a-4fcd-bcd2-8dbd9a09a89d",
      "parentUUID": "26fb33f4-b503-458c-b454-c3f18f766283",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#observers should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.observers.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.observers[<span class=\"hljs-number\">0</span>].should.equal(observer);",
      "isRoot": false,
      "uuid": "8c569c4a-9854-42ae-96e7-f3f30612afc7",
      "parentUUID": "26fb33f4-b503-458c-b454-c3f18f766283",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#contestants should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.contestants = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "224f7311-c4aa-4352-850e-6c717e96ae76",
      "parentUUID": "9b759a65-053a-478f-8472-965cd15e2f52",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.contestants[<span class=\"hljs-number\">0</span>].should.equal(contestant);",
      "isRoot": false,
      "uuid": "05b422a2-ee42-4074-b87d-0bb79765ce8c",
      "parentUUID": "9b759a65-053a-478f-8472-965cd15e2f52",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#host should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.host = host;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "ed97635e-e2cc-4371-8845-291734dc8bb7",
      "parentUUID": "e1ad54ee-9a68-440c-9be8-df039070715a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#host should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.host.should.equal(host);",
      "isRoot": false,
      "uuid": "b2926369-57e2-4988-ba0b-bb2812250fe4",
      "parentUUID": "e1ad54ee-9a68-440c-9be8-df039070715a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#currentState should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
      "isRoot": false,
      "uuid": "b1af4fcd-2cd8-4dad-bfe3-c1a12a02e7c6",
      "parentUUID": "0bd95c26-c26e-4424-ad01-59480d60347e",
      "skipped": false
    },
    {
      "title": "should increment rounds played",
      "fullTitle": "#incrementRoundsPlayed() should increment rounds played",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.incrementRoundsPlayed();<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "b7ecace8-9f06-492c-b847-d958d7092853",
      "parentUUID": "6f3bf7eb-dd03-4fb9-9a98-e8746d55f0a0",
      "skipped": false
    },
    {
      "title": "should not allow a contestant username with bad words",
      "fullTitle": "#addContestant(contestant) should not allow a contestant username with bad words",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Penis #YOLO'</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_CONTAINS_PROFANITY);",
      "isRoot": false,
      "uuid": "d0ae4f7d-a75f-49c1-9a5c-bf2411d11b3b",
      "parentUUID": "bad57681-2cf9-47d3-8af5-120f9b75a3bc",
      "skipped": false
    },
    {
      "title": "should not allow when username is empty",
      "fullTitle": "#addContestant(contestant) should not allow when username is empty",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">' '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_IS_REQUIRED);",
      "isRoot": false,
      "uuid": "830bb799-0444-4319-92fe-308837941623",
      "parentUUID": "bad57681-2cf9-47d3-8af5-120f9b75a3bc",
      "skipped": false
    },
    {
      "title": "should trim username",
      "fullTitle": "#addContestant(contestant) should trim username",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Wade  '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>c.username.should.equal(<span class=\"hljs-string\">'Wade'</span>);",
      "isRoot": false,
      "uuid": "da1e4922-3cb4-467d-87a3-4a1d5c7bce7e",
      "parentUUID": "bad57681-2cf9-47d3-8af5-120f9b75a3bc",
      "skipped": false
    },
    {
      "title": "should add contestant when session is not full",
      "fullTitle": "when in individual mode should add contestant when session is not full",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "82b94887-0a50-45ce-98ef-ddfeec32cd32",
      "parentUUID": "a6b025c3-fd9f-48b5-90e4-177215d4c881",
      "skipped": false
    },
    {
      "title": "should not add contestant when session is full",
      "fullTitle": "when in individual mode should not add contestant when session is full",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br>s.addContestant(c2);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();",
      "isRoot": false,
      "uuid": "187b411c-f348-43cd-a349-71d4fd16731a",
      "parentUUID": "a6b025c3-fd9f-48b5-90e4-177215d4c881",
      "skipped": false
    },
    {
      "title": "should not add contestant when username is already taken",
      "fullTitle": "when in individual mode should not add contestant when username is already taken",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "2db892b0-b00f-45ac-84d5-dc77fd369597",
      "parentUUID": "a6b025c3-fd9f-48b5-90e4-177215d4c881",
      "skipped": false
    },
    {
      "title": "BUG# username case should not matter",
      "fullTitle": "when in individual mode BUG# username case should not matter",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'abc1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'ABC1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "2749ee90-d4dc-4723-be2d-69072479b8fb",
      "parentUUID": "a6b025c3-fd9f-48b5-90e4-177215d4c881",
      "skipped": false
    },
    {
      "title": "should allow unlimited contestants when max is set to constants.UNLIMITED",
      "fullTitle": "when in individual mode should allow unlimited contestants when max is set to constants.UNLIMITED",
      "timedOut": false,
      "duration": 526,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = constants.UNLIMITED;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    <span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>    c.username = <span class=\"hljs-string\">'c'</span> + i;<br>    <span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>    response.wasSuccessful.should.be.true();<br>}",
      "isRoot": false,
      "uuid": "747993a6-c7d7-4bc5-a5b0-188282e14ffe",
      "parentUUID": "a6b025c3-fd9f-48b5-90e4-177215d4c881",
      "skipped": false
    },
    {
      "title": "should add contestant when teams is not full",
      "fullTitle": "when in team mode should add contestant when teams is not full",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "cda90148-d9bf-4741-b5c6-cbd28526ff4d",
      "parentUUID": "8eab7b6e-3819-44a2-998c-567a59671636",
      "skipped": false
    },
    {
      "title": "should not add contestant when teams are full",
      "fullTitle": "when in team mode should not add contestant when teams are full",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.TEAMS_ARE_FULL);",
      "isRoot": false,
      "uuid": "c60daf24-a8b6-4508-bf0f-c674bff22ba4",
      "parentUUID": "8eab7b6e-3819-44a2-998c-567a59671636",
      "skipped": false
    },
    {
      "title": "should not add contestant when username is already taken",
      "fullTitle": "when in team mode should not add contestant when username is already taken",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "7e7936d9-14f1-4ebb-9f72-eb77af2d39e6",
      "parentUUID": "8eab7b6e-3819-44a2-998c-567a59671636",
      "skipped": false
    },
    {
      "title": "should subscribe callback to the correct event",
      "fullTitle": "#subscribeForStateChange(event, callback) should subscribe callback to the correct event",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> r = s.addContestant(c);<br>r.wasSuccessful.should.be.true();<br>s.subscribeForStateChange(<span class=\"hljs-string\">'onpending'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">session, event, from, to</span>) </span>{<br>    session.should.equal(s);<br>    event.should.equal(<span class=\"hljs-string\">'buzzerPressed'</span>);<br>    from.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>    to.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>    done();<br>});<br>s.tryBuzzerPressRegister(c.id).should.be.true();",
      "isRoot": false,
      "uuid": "ea60c354-fc30-45a0-ad93-eec8c7362592",
      "parentUUID": "11e693b0-3b74-4b56-8d23-bda3e4e2bc5c",
      "skipped": false
    },
    {
      "title": "should register when state is ready",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should register when state is ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);",
      "isRoot": false,
      "uuid": "8e2e62ff-1f60-43fd-adbc-1d4cea539afc",
      "parentUUID": "c5e5fbdc-88e1-4802-8371-af4a84d91eb2",
      "skipped": false
    },
    {
      "title": "should not register when state is not ready",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not register when state is not ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.false();",
      "isRoot": false,
      "uuid": "7aa50d35-392b-4be7-96c0-bc8da7ee685c",
      "parentUUID": "c5e5fbdc-88e1-4802-8371-af4a84d91eb2",
      "skipped": false
    },
    {
      "title": "should not register when contestant does not exist",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not register when contestant does not exist",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(idUtility.generateParticipantId()).should.be.false();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
      "isRoot": false,
      "uuid": "746f1411-fd27-4185-947c-6715f85bc2f7",
      "parentUUID": "c5e5fbdc-88e1-4802-8371-af4a84d91eb2",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "06487536-a46b-4085-ac25-667b31453f64",
      "parentUUID": "c5e5fbdc-88e1-4802-8371-af4a84d91eb2",
      "skipped": false
    },
    {
      "title": "should not add previous round winner to winners list",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not add previous round winner to winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "7d8ada15-8522-4206-9a2d-c7da21642dc9",
      "parentUUID": "c5e5fbdc-88e1-4802-8371-af4a84d91eb2",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->ACCEPT should allow when game state is pending",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();",
      "isRoot": false,
      "uuid": "856e3f07-c4b0-4572-b4bd-f70a8f5ee782",
      "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not pending",
      "fullTitle": "action->ACCEPT should not allow when game state is not pending",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.false();",
      "isRoot": false,
      "uuid": "316cb9f8-be34-4a42-87ac-374f6364d002",
      "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
      "skipped": false
    },
    {
      "title": "should update contestant's score",
      "fullTitle": "action->ACCEPT should update contestant's score",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "1178841d-35ab-4041-805d-1e3876fd871e",
      "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
      "skipped": false
    },
    {
      "title": "should update contestant's team score",
      "fullTitle": "action->ACCEPT should update contestant's team score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>s.teams.all[<span class=\"hljs-number\">0</span>].score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "4d09a1ad-3e82-401b-86cb-1859e96577d0",
      "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->ACCEPT should add previous round winner to winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "b8d1a9cd-9376-422d-9342-cab492064953",
      "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->ACCEPT should change game state back to ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "7473f5e8-b8c5-4072-a538-5b15fadb6ca2",
      "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
      "skipped": false
    },
    {
      "title": "should clear pending winner",
      "fullTitle": "action->ACCEPT should clear pending winner",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>should(s.pendingWinner).be.null();",
      "isRoot": false,
      "uuid": "2f7796e4-e20c-4dd3-8afe-fb295a2e9a0b",
      "parentUUID": "36dd33b3-a8a0-483f-b749-006e4966cf90",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->REJECT should allow when game state is pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();",
      "isRoot": false,
      "uuid": "1c5af487-845e-49e2-a7bb-bb50fa49c777",
      "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not pending",
      "fullTitle": "action->REJECT should not allow when game state is not pending",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.false();",
      "isRoot": false,
      "uuid": "84ba3112-15be-45b4-82d2-4f63cce6d23e",
      "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
      "skipped": false
    },
    {
      "title": "should not replace round winner with pending contestant",
      "fullTitle": "action->REJECT should not replace round winner with pending contestant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "42c5c753-8a79-4652-9676-058c4a69e5a3",
      "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
      "skipped": false
    },
    {
      "title": "should not update pending contestant's score",
      "fullTitle": "action->REJECT should not update pending contestant's score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.score.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "4fb5497d-b7e4-4b24-938f-3ca40f2181b0",
      "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
      "skipped": false
    },
    {
      "title": "should add round winner to previous winners list",
      "fullTitle": "action->REJECT should add round winner to previous winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "be756836-fa19-4506-8313-1fd770eefe37",
      "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->REJECT should change game state back to ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "ce10777e-afec-42f3-bac9-5a6322a19d5c",
      "parentUUID": "49878f1e-7a46-4fdf-997b-170fd98edbe9",
      "skipped": false
    },
    {
      "title": "should allow when game state is ready",
      "fullTitle": "action->RESET should allow when game state is ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
      "isRoot": false,
      "uuid": "a2f42f1a-ca8c-40a3-937c-9c0bc30bdbdc",
      "parentUUID": "a3c77b83-d1a9-4c42-b2a6-dcab8c513dc5",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->RESET should allow when game state is pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
      "isRoot": false,
      "uuid": "ee3f52ec-3000-4e55-9f06-8c522aa67e1e",
      "parentUUID": "a3c77b83-d1a9-4c42-b2a6-dcab8c513dc5",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "action->RESET should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "9b6928ad-cd89-443e-9a1c-189047d9e662",
      "parentUUID": "a3c77b83-d1a9-4c42-b2a6-dcab8c513dc5",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->RESET should add previous round winner to winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "fdd98035-8e89-4502-a94f-b18a4a90fb93",
      "parentUUID": "a3c77b83-d1a9-4c42-b2a6-dcab8c513dc5",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->RESET should change game state back to ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "01e5c26e-b724-40d0-b27e-4f3f6cd8bc1f",
      "parentUUID": "a3c77b83-d1a9-4c42-b2a6-dcab8c513dc5",
      "skipped": false
    },
    {
      "title": "should allow when game state is ready",
      "fullTitle": "action->DISABLE should allow when game state is ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
      "isRoot": false,
      "uuid": "670cc0bf-d52a-459e-8583-4b954fc1f147",
      "parentUUID": "3bbebe99-4be8-49e9-adc5-7685ed131982",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->DISABLE should allow when game state is pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
      "isRoot": false,
      "uuid": "6f2bdcd0-70d8-406e-b24a-f4a83939dfba",
      "parentUUID": "3bbebe99-4be8-49e9-adc5-7685ed131982",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "action->DISABLE should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "303b1a2e-2556-4b38-8e65-3c2a90df2b6f",
      "parentUUID": "3bbebe99-4be8-49e9-adc5-7685ed131982",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->DISABLE should add previous round winner to winners list",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "fa8c1680-bb10-433e-81f8-279ab0988e7c",
      "parentUUID": "3bbebe99-4be8-49e9-adc5-7685ed131982",
      "skipped": false
    },
    {
      "title": "should change game state to buzzerLock",
      "fullTitle": "action->DISABLE should change game state to buzzerLock",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.BUZZER_LOCK);",
      "isRoot": false,
      "uuid": "fe509bec-cf02-48e6-8024-b95d2d06320b",
      "parentUUID": "3bbebe99-4be8-49e9-adc5-7685ed131982",
      "skipped": false
    },
    {
      "title": "should allow when game state is buzzerLock",
      "fullTitle": "action->ENABLE should allow when game state is buzzerLock",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();",
      "isRoot": false,
      "uuid": "74760bb0-6f7c-43dc-9a33-d40ff8858d47",
      "parentUUID": "4e6764bd-7c6b-48c2-a69e-171d3f19e069",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not buzzerLock",
      "fullTitle": "action->ENABLE should not allow when game state is not buzzerLock",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.false();",
      "isRoot": false,
      "uuid": "6ad688f3-ebb2-4905-96c4-9593bda844ba",
      "parentUUID": "4e6764bd-7c6b-48c2-a69e-171d3f19e069",
      "skipped": false
    },
    {
      "title": "should change game state to ready",
      "fullTitle": "action->ENABLE should change game state to ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "96c4fe94-7f84-4c8f-a958-e3d359a1e736",
      "parentUUID": "4e6764bd-7c6b-48c2-a69e-171d3f19e069",
      "skipped": false
    },
    {
      "title": "should return the pending winner",
      "fullTitle": "#pendingWinner should return the pending winner",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.pendingWinner.should.equal(<span class=\"hljs-string\">'testUser'</span>);",
      "isRoot": false,
      "uuid": "f69e72c4-7830-4b11-9303-679b3aaa2922",
      "parentUUID": "25e30d58-30e1-4316-9848-94472a72286e",
      "skipped": false
    },
    {
      "title": "should not return the pending winner",
      "fullTitle": "#pendingWinner should not return the pending winner",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>should(s.pendingWinner).be.null();",
      "isRoot": false,
      "uuid": "b537f5d6-362c-4ddf-9bb9-42121f07ab19",
      "parentUUID": "25e30d58-30e1-4316-9848-94472a72286e",
      "skipped": false
    },
    {
      "title": "should update session name",
      "fullTitle": "#updateSessionName(name) should update session name",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.updateSessionName(<span class=\"hljs-string\">'session2'</span>);<br>settings.sessionName.should.equal(<span class=\"hljs-string\">'session2'</span>);",
      "isRoot": false,
      "uuid": "de2099be-0aba-40d6-b385-5c0b3075420f",
      "parentUUID": "74beda92-177f-486f-bfa1-db5a3ef42c84",
      "skipped": false
    },
    {
      "title": "should update max contestants",
      "fullTitle": "#updateMaxContestants(maxContestants) should update max contestants",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "1af4eda1-70f1-4303-937d-669d01e4f597",
      "parentUUID": "1bf37f2d-0ba0-496a-b394-f88f1bc3568d",
      "skipped": false
    },
    {
      "title": "should not allow below current connected amount",
      "fullTitle": "#updateMaxContestants(maxContestants) should not allow below current connected amount",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>s.addContestant(c1).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>s.addContestant(c2).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">1</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_CONTESTANTS_MUST_BE_GREATER_THAN_ALREADY_CONNECTED);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "fc9e30e2-a7ea-4492-a3bd-bb25729c49db",
      "parentUUID": "1bf37f2d-0ba0-496a-b394-f88f1bc3568d",
      "skipped": false
    },
    {
      "title": "should update team size",
      "fullTitle": "#updateTeamSize(teamSize) should update team size",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.teamSize.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "3d86ac40-5f65-444a-bf7b-d76cc21c171d",
      "parentUUID": "d7515b7a-cf57-486a-9594-f072db81ef75",
      "skipped": false
    },
    {
      "title": "should not allow below current setting",
      "fullTitle": "#updateTeamSize(teamSize) should not allow below current setting",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.TEAM_SIZE_MUST_BE_GREATER_THAN_ALREADY_SET);",
      "isRoot": false,
      "uuid": "eba01f10-867a-4db1-bde4-08697dc6d2fe",
      "parentUUID": "d7515b7a-cf57-486a-9594-f072db81ef75",
      "skipped": false
    },
    {
      "title": "should update max teams",
      "fullTitle": "#updateMaxTeams(maxTeams) should update max teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxTeams.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "7dba3f85-4f91-496b-b07f-f77a42793065",
      "parentUUID": "bdf24bbc-94f9-494a-9bb7-3b332ee44c72",
      "skipped": false
    },
    {
      "title": "should add teams",
      "fullTitle": "#updateMaxTeams(maxTeams) should add teams",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">5</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "f9f88ec4-f653-4ecf-b20d-f035178fd694",
      "parentUUID": "bdf24bbc-94f9-494a-9bb7-3b332ee44c72",
      "skipped": false
    },
    {
      "title": "should not allow below current setting",
      "fullTitle": "#updateMaxTeams(maxTeams) should not allow below current setting",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_MUST_BE_GREATER_THAN_ALREADY_SET);",
      "isRoot": false,
      "uuid": "0028b5c7-059c-4809-8b2e-553eeb4e82ca",
      "parentUUID": "bdf24bbc-94f9-494a-9bb7-3b332ee44c72",
      "skipped": false
    },
    {
      "title": "should not allow if teams are PLAYER_CHOICE",
      "fullTitle": "#updateMaxTeams(maxTeams) should not allow if teams are PLAYER_CHOICE",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">6</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_CANNOT_BE_CHANGED_WHEN_PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "1d05163f-94a1-471a-85ba-fb37c239d9f7",
      "parentUUID": "bdf24bbc-94f9-494a-9bb7-3b332ee44c72",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hasTeams should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s._hasTeams.should.be.true();",
      "isRoot": false,
      "uuid": "8a732e9e-1e06-4c32-8ed2-21a095a94ce3",
      "parentUUID": "d1502ebf-7a8e-4c69-890c-67dbde559263",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hasTeams should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.hasTeams.should.be.true();",
      "isRoot": false,
      "uuid": "be7e91c5-e33c-4548-92ba-7aa7bb9748d1",
      "parentUUID": "d1502ebf-7a8e-4c69-890c-67dbde559263",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamSize should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s._teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "c2a43078-8c72-4884-925b-4d3efb543728",
      "parentUUID": "16af50a3-88f1-4776-9921-7d0835cd3d11",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamSize should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamSize = <span class=\"hljs-number\">1</span>;<br>s.teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "c70bf87b-7c2f-4b74-8e29-a584acd0f0d8",
      "parentUUID": "16af50a3-88f1-4776-9921-7d0835cd3d11",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxTeams should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s._maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "50104800-dc8e-4da5-8e41-f1f705235cfd",
      "parentUUID": "4ea3b8db-2b9a-4ad2-a53b-75da0915dc84",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxTeams should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-number\">1</span>;<br>s.maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "c1e0072d-b6db-4937-a410-badc896adc2f",
      "parentUUID": "4ea3b8db-2b9a-4ad2-a53b-75da0915dc84",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeaderSelectionMethod should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s._teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "74f3b986-7de0-4b41-aaa0-594915654f64",
      "parentUUID": "70ea436b-ff0e-4146-9973-7858880fd642",
      "skipped": false
    },
    {
      "title": "should throw on set when constant value is invalid",
      "fullTitle": "#teamLeaderSelectionMethod should throw on set when constant value is invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamLeaderSelectionMethod.all.slice().sort(<br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, b</span>) </span>{<br>            <span class=\"hljs-keyword\">return</span> a - b;<br>        }).pop();<br>    s.teamLeaderSelectionMethod = ++high;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "ae1f1c07-bf37-46ff-b9fb-267bc4707862",
      "parentUUID": "70ea436b-ff0e-4146-9973-7858880fd642",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeaderSelectionMethod should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s.teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "19cb4d59-6321-4f29-af72-e5ae3404d523",
      "parentUUID": "70ea436b-ff0e-4146-9973-7858880fd642",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameEdit should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br>s._teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
      "isRoot": false,
      "uuid": "ec88a349-95c6-4bf6-bb99-092c480db67c",
      "parentUUID": "e7c36a38-443c-4008-a33b-03dafcaa5007",
      "skipped": false
    },
    {
      "title": "should throw on set when constant value is invalid",
      "fullTitle": "#teamNameEdit should throw on set when constant value is invalid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamNameEdit.all.slice().sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a,<br>        b</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> a - b;<br>    }).pop();<br>    s.teamNameEdit = ++high;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "776c8cf1-b319-46d4-bb97-8d9fab97400e",
      "parentUUID": "e7c36a38-443c-4008-a33b-03dafcaa5007",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameEdit should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNameEdit = constants.teamNameEdit.ALLOW;<br>s.teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
      "isRoot": false,
      "uuid": "35a28089-a12e-4e45-a88e-b43b5cf0703d",
      "parentUUID": "e7c36a38-443c-4008-a33b-03dafcaa5007",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxContestants should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxContestants = <span class=\"hljs-number\">1</span>;<br>s._maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "c93514a6-582b-4cf5-a92e-f33b6be032c6",
      "parentUUID": "53da0dbe-6110-4e2e-a4e6-78d97fde76ab",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxContestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxContestants = <span class=\"hljs-number\">1</span>;<br>s.maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "13142bb8-43ec-4adb-9a22-c9d3f173984b",
      "parentUUID": "53da0dbe-6110-4e2e-a4e6-78d97fde76ab",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s._sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
      "isRoot": false,
      "uuid": "db3a0939-3f9e-4bc3-acb8-e665aa7dc74b",
      "parentUUID": "f67de04e-f28c-4f51-91ff-92bb9d2939c9",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s.sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
      "isRoot": false,
      "uuid": "88fdc659-26cd-4c87-a4ee-cec7e22505c5",
      "parentUUID": "f67de04e-f28c-4f51-91ff-92bb9d2939c9",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNames should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s._teamNames.should.be.Array();<br>s._teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s._teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
      "isRoot": false,
      "uuid": "7627686a-06dc-4a4d-ad02-d8d81491f909",
      "parentUUID": "b0a333d0-fe3d-4078-b889-ee31d3ead03f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNames should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s.teamNames.should.be.Array();<br>s.teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
      "isRoot": false,
      "uuid": "7679b883-a9fb-4af0-b19c-f9bbb091646d",
      "parentUUID": "b0a333d0-fe3d-4078-b889-ee31d3ead03f",
      "skipped": false
    },
    {
      "title": "should throw when settings.maxTeams is less than 1",
      "fullTitle": "#create(teams, settings) should throw when settings.maxTeams is less than 1",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    teamFactory.create(tc, s);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "001d9451-afc1-4992-91ac-4f5911f1c7cb",
      "parentUUID": "de2d67ab-860e-4c15-8f29-d7ee1ebee5de",
      "skipped": false
    },
    {
      "title": "should create the correct amount of teams",
      "fullTitle": "#create(teams, settings) should create the correct amount of teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "092d7362-0846-40fa-a7ea-fa0ce1a06438",
      "parentUUID": "de2d67ab-860e-4c15-8f29-d7ee1ebee5de",
      "skipped": false
    },
    {
      "title": "should not fail with a large team size",
      "fullTitle": "#create(teams, settings) should not fail with a large team size",
      "timedOut": false,
      "duration": 42,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">500</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">500</span>);<br><span class=\"hljs-comment\">// ensure team names are unique</span><br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> i = names.indexOf(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> n === t.teamName;<br>    });<br>    i.should.equal(-<span class=\"hljs-number\">1</span>);<br>    names.push(t.teamName);<br>});",
      "isRoot": false,
      "uuid": "629cbb19-1507-4a9e-b960-0fc6c747303c",
      "parentUUID": "de2d67ab-860e-4c15-8f29-d7ee1ebee5de",
      "skipped": false
    },
    {
      "title": "should use settings.teamNames first, before random selection",
      "fullTitle": "#create(teams, settings) should use settings.teamNames first, before random selection",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">10</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>, <span class=\"hljs-string\">'t3'</span>, <span class=\"hljs-string\">'t4'</span>, <span class=\"hljs-string\">'t5'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);<br>tc.all[<span class=\"hljs-number\">2</span>].teamName.should.equal(<span class=\"hljs-string\">'t3'</span>);<br>tc.all[<span class=\"hljs-number\">3</span>].teamName.should.equal(<span class=\"hljs-string\">'t4'</span>);<br>tc.all[<span class=\"hljs-number\">4</span>].teamName.should.equal(<span class=\"hljs-string\">'t5'</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">5</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">6</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">7</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">8</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">9</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "9174d835-7e6a-4aa0-beee-3c1a3fc17a98",
      "parentUUID": "de2d67ab-860e-4c15-8f29-d7ee1ebee5de",
      "skipped": false
    },
    {
      "title": "should only create a single team when using unlimited teams",
      "fullTitle": "#create(teams, settings) should only create a single team when using unlimited teams",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "87412125-a8e6-413d-a428-824c707bb78d",
      "parentUUID": "de2d67ab-860e-4c15-8f29-d7ee1ebee5de",
      "skipped": false
    },
    {
      "title": "should add a team",
      "fullTitle": "#add(teams, settings) should add a team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>teamFactory.add(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "618e3eff-2da8-4af2-9e75-a568140497a4",
      "parentUUID": "233746f0-b7ca-435d-985c-cd74c06247b7",
      "skipped": false
    },
    {
      "title": "should reuse team names specified in settings",
      "fullTitle": "#add(teams, settings) should reuse team names specified in settings",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>teamFactory.add(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);",
      "isRoot": false,
      "uuid": "3aa1d8b8-593a-4009-942a-c7d9d5bf291f",
      "parentUUID": "233746f0-b7ca-435d-985c-cd74c06247b7",
      "skipped": false
    },
    {
      "title": "should factor in team names which are already in use",
      "fullTitle": "#add(teams, settings) should factor in team names which are already in use",
      "timedOut": false,
      "duration": 204,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    teamFactory.add(tc, s);<br>}<br>tc.all.length.should.equal(<span class=\"hljs-number\">1001</span>);<br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    names.push(t.teamName);<br>});<br><span class=\"hljs-keyword\">var</span> uniqueNames = unique(names);<br>names.length.should.equal(uniqueNames.length);",
      "isRoot": false,
      "uuid": "370cd24e-0ef5-4c06-8621-27f4e6ba1723",
      "parentUUID": "233746f0-b7ca-435d-985c-cd74c06247b7",
      "skipped": false
    },
    {
      "title": "should return true when team with teamName does exist",
      "fullTitle": "#contains(teamName) should return true when team with teamName does exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(t.teamName).should.be.true();",
      "isRoot": false,
      "uuid": "eb3efc19-2d48-405f-a288-9b6e91c34f47",
      "parentUUID": "f471a414-6f49-47a3-b1b2-adf793e0f2be",
      "skipped": false
    },
    {
      "title": "should return false when no team with teamName does exist",
      "fullTitle": "#contains(teamName) should return false when no team with teamName does exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(<span class=\"hljs-string\">'other team name'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "4de1dbfe-5a62-4a22-a133-3aadc073b8ae",
      "parentUUID": "f471a414-6f49-47a3-b1b2-adf793e0f2be",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "0a98b247-a2ad-4977-a826-73ae1aa27fa3",
      "parentUUID": "2255a334-088b-4fe5-ae22-45efd5a06840",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "bff8516b-0723-456d-a48b-2a97cb2346a1",
      "parentUUID": "2255a334-088b-4fe5-ae22-45efd5a06840",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all.pop();<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "df04b98a-f289-45f2-a81c-19429aac974a",
      "parentUUID": "2255a334-088b-4fe5-ae22-45efd5a06840",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#length should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.length = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "a639469b-1634-4eb7-87e2-bbda5346bf24",
      "parentUUID": "3f40c281-cf53-48cd-b540-b84e8b6deff1",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#length should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "0d5d9c71-3e37-495a-9aef-249e38cc5eca",
      "parentUUID": "3f40c281-cf53-48cd-b540-b84e8b6deff1",
      "skipped": false
    },
    {
      "title": "should add the given team",
      "fullTitle": "#add(team) should add the given team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "d9af05ab-d2ef-43f6-a172-35fa6dec8e63",
      "parentUUID": "f6591375-1436-4256-a950-e2ee3b8ffee9",
      "skipped": false
    },
    {
      "title": "should error if team with teamName already exists",
      "fullTitle": "#add(team) should error if team with teamName already exists",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.add(t);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "f580e27d-0313-4182-b62e-e9859d0d6b50",
      "parentUUID": "f6591375-1436-4256-a950-e2ee3b8ffee9",
      "skipped": false
    },
    {
      "title": "should remove the existing team",
      "fullTitle": "#remove(team) should remove the existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "a13718b0-c231-4327-b782-c8aa5d33ae46",
      "parentUUID": "6549fc14-09ec-496d-bc32-519b671fa528",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing team",
      "fullTitle": "#remove(team) should not remove the non-existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t1).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "adae5e38-c924-4729-887e-93d288171378",
      "parentUUID": "6549fc14-09ec-496d-bc32-519b671fa528",
      "skipped": false
    },
    {
      "title": "should remove the existing team",
      "fullTitle": "#removeByTeamName(team) should remove the existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t.teamName).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "c9a88078-29ec-49bf-b3df-ef2555daaa34",
      "parentUUID": "26e8f05a-d350-45fb-bfd7-2b7cc8e84aa6",
      "skipped": false
    },
    {
      "title": "should ignore team name case",
      "fullTitle": "#removeByTeamName(team) should ignore team name case",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'abc1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(<span class=\"hljs-string\">'ABC1'</span>).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "458b5873-525e-401c-a044-d5f6d6013edd",
      "parentUUID": "26e8f05a-d350-45fb-bfd7-2b7cc8e84aa6",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing team",
      "fullTitle": "#removeByTeamName(team) should not remove the non-existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t1.teamName).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "792a065b-15b5-4e04-95e3-4498163192ab",
      "parentUUID": "26e8f05a-d350-45fb-bfd7-2b7cc8e84aa6",
      "skipped": false
    },
    {
      "title": "should give contestant an id",
      "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) should give contestant an id",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Username'</span>;<br>should(c.id).be.null();<br>tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>should(c.id).not.be.null();",
      "isRoot": false,
      "uuid": "641d97f1-c414-4561-9b1c-e93fd46340ea",
      "parentUUID": "8599195a-20ec-4ff4-9239-7799e4a2c324",
      "skipped": false
    },
    {
      "title": "should return a valid response",
      "fullTitle": "when teams are full should return a valid response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);",
      "isRoot": false,
      "uuid": "1799525c-1e03-420c-9dd6-3adffa9c671e",
      "parentUUID": "f1dc6dc8-89b5-4293-8523-35389b2dd622",
      "skipped": false
    },
    {
      "title": "should inquire for team leader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should inquire for team leader",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> inquired = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    inquired = <span class=\"hljs-literal\">true</span>;<br>});<br>r.should.be.true();<br>inquired.should.be.true();",
      "isRoot": false,
      "uuid": "899872dc-51fd-4e53-b7da-5c7198420114",
      "parentUUID": "67438b99-383a-4e85-b7d2-ca98e547acb7",
      "skipped": false
    },
    {
      "title": "should not inquire for team leader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should not inquire for team leader",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>tc.all[<span class=\"hljs-number\">0</span>].teamLeader = c1;<br><span class=\"hljs-keyword\">var</span> didNotInquire = <span class=\"hljs-literal\">true</span>;<br>tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    didNotInquire = <span class=\"hljs-literal\">false</span>;<br>});<br>didNotInquire.should.be.true();<br>t.teamLeader.should.equal(c1);",
      "isRoot": false,
      "uuid": "99fcf9d0-2b09-41d8-9ac7-445b2771b499",
      "parentUUID": "67438b99-383a-4e85-b7d2-ca98e547acb7",
      "skipped": false
    },
    {
      "title": "should not add contestant as teamLeader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should not add contestant as teamLeader",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should(t.teamLeader).be.null();",
      "isRoot": false,
      "uuid": "9acf98d9-023b-49c3-90b9-3c7561df5dcf",
      "parentUUID": "67438b99-383a-4e85-b7d2-ca98e547acb7",
      "skipped": false
    },
    {
      "title": "should not inquire for team leader",
      "fullTitle": "when teamLeader selection is RANDOM should not inquire for team leader",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> notInquired = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    notInquired = <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>r.should.be.true();<br>notInquired.should.be.true();",
      "isRoot": false,
      "uuid": "7daabb33-be74-4202-9d39-c3eeccfe5a70",
      "parentUUID": "0d6859e4-100f-4e0e-81ef-e86f0c6fd93f",
      "skipped": false
    },
    {
      "title": "should automatically add team leader when team is filled",
      "fullTitle": "when teamLeader selection is RANDOM should automatically add team leader when team is filled",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).not.be.null();<br>});",
      "isRoot": false,
      "uuid": "8682d427-4e43-4cb3-b16e-f011bb0e8963",
      "parentUUID": "0d6859e4-100f-4e0e-81ef-e86f0c6fd93f",
      "skipped": false
    },
    {
      "title": "should not automatically add team leader when team is not filled",
      "fullTitle": "when teamLeader selection is RANDOM should not automatically add team leader when team is not filled",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).be.null();<br>});",
      "isRoot": false,
      "uuid": "d0c1cb36-91e1-4389-8c2d-e3445d6e69ee",
      "parentUUID": "0d6859e4-100f-4e0e-81ef-e86f0c6fd93f",
      "skipped": false
    },
    {
      "title": "should add team when teams are full",
      "fullTitle": "when set to use unlimited teams should add team when teams are full",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "03d941d4-8545-4502-8285-2a05dba050e1",
      "parentUUID": "3f70be9f-1003-4e89-ac3f-06d73d56c1c2",
      "skipped": false
    },
    {
      "title": "should throw when no team name is given",
      "fullTitle": "when team selection method is PLAYER_CHOICE should throw when no team name is given",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>}).should.throw();",
      "isRoot": false,
      "uuid": "eb890e35-6059-4898-bfce-142b2a50e06e",
      "parentUUID": "bffd103d-ab3c-4eec-9380-6f53578aac53",
      "skipped": false
    },
    {
      "title": "should add contestant to correct team",
      "fullTitle": "when team selection method is PLAYER_CHOICE should add contestant to correct team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "b5da2b7a-30a1-49d4-9b16-86475ecdd35a",
      "parentUUID": "bffd103d-ab3c-4eec-9380-6f53578aac53",
      "skipped": false
    },
    {
      "title": "should not add to full team",
      "fullTitle": "when team selection method is PLAYER_CHOICE should not add to full team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "221b634e-c616-4247-8aa3-ee6bac33fbb7",
      "parentUUID": "bffd103d-ab3c-4eec-9380-6f53578aac53",
      "skipped": false
    },
    {
      "title": "should get team of contestant",
      "fullTitle": "getByContestant(contestant) should get team of contestant",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">5</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>    r.should.be.true();<br>});<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">4</span>]);<br>t.should.not.be.null();<br>t.contestants.getById(cc[<span class=\"hljs-number\">4</span>].id).should.equal(cc[<span class=\"hljs-number\">4</span>]);",
      "isRoot": false,
      "uuid": "86937dfe-3c30-4ab8-8275-fba6a8f59481",
      "parentUUID": "a30f69e8-a059-40a6-8c95-a332d2cf8477",
      "skipped": false
    },
    {
      "title": "should not get team of contestant",
      "fullTitle": "getByContestant(contestant) should not get team of contestant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">1</span>);<br>cc[<span class=\"hljs-number\">0</span>].id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">0</span>]);<br>should(t).be.null();",
      "isRoot": false,
      "uuid": "af3d9c76-c6c5-48c1-816a-3787966dcbdb",
      "parentUUID": "a30f69e8-a059-40a6-8c95-a332d2cf8477",
      "skipped": false
    },
    {
      "title": "should get team when team with name exists",
      "fullTitle": "getByTeamName(temName) should get team when team with name exists",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t1 = tc.all[<span class=\"hljs-number\">0</span>];<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(t1.teamName);<br>t.should.equal(t1);",
      "isRoot": false,
      "uuid": "8ebcae9f-957b-4a2e-af40-c10629ba00d8",
      "parentUUID": "71c747e7-3765-4d48-b282-3d0c3a5ca032",
      "skipped": false
    },
    {
      "title": "should not get team when team with name does not exist",
      "fullTitle": "getByTeamName(temName) should not get team when team with name does not exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(<span class=\"hljs-string\">'Not a team name that exists'</span>);<br>should(t).be.null();",
      "isRoot": false,
      "uuid": "fbf38df8-e157-419b-983e-10f619cdc145",
      "parentUUID": "71c747e7-3765-4d48-b282-3d0c3a5ca032",
      "skipped": false
    },
    {
      "title": "should not return full teams",
      "fullTitle": "getAvailable(settings) should not return full teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">2</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "44b77d91-a8b9-4992-b5ab-3d76a39096cc",
      "parentUUID": "6e3e90bd-8b22-43f0-86a4-45ad717f09d3",
      "skipped": false
    },
    {
      "title": "should return teams with space",
      "fullTitle": "getAvailable(settings) should return teams with space",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "db37402a-8ca9-4cfe-9ed6-55e71c65bf22",
      "parentUUID": "6e3e90bd-8b22-43f0-86a4-45ad717f09d3",
      "skipped": false
    },
    {
      "title": "should return teams with unlimited space",
      "fullTitle": "getAvailable(settings) should return teams with unlimited space",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = constants.UNLIMITED;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "608cce48-6129-4d0b-98ea-4996738f640e",
      "parentUUID": "6e3e90bd-8b22-43f0-86a4-45ad717f09d3",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t._teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
      "isRoot": false,
      "uuid": "3e50f334-7aa3-4f6e-b04d-99049cb2bc55",
      "parentUUID": "d7c6c74a-8b70-4fdb-a517-012b148c9de4",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t._teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t.teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
      "isRoot": false,
      "uuid": "213ff09e-0c4c-4883-b153-f8f8ad475ec2",
      "parentUUID": "d7c6c74a-8b70-4fdb-a517-012b148c9de4",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeader should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t.teamLeader = c;<br>t._teamLeader.should.equal(c);",
      "isRoot": false,
      "uuid": "08e55865-c91e-45e5-bfcd-ff4c80e041a9",
      "parentUUID": "7255b82a-0f18-42e5-afaa-d6b49f88c5c8",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeader should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t._teamLeader = c;<br>t.teamLeader.should.equal(c);",
      "isRoot": false,
      "uuid": "b5f171bc-d4ce-4016-bdf9-69a630e587c3",
      "parentUUID": "7255b82a-0f18-42e5-afaa-d6b49f88c5c8",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#score should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "7877cbd0-8496-4686-8ff2-78d5ebed59f6",
      "parentUUID": "eacaf3e4-3860-4384-99e6-f799fe234f20",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#score should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br>p._score = <span class=\"hljs-number\">5</span>;<br>p.score.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "6019c133-7ddc-496b-89a1-f012c3e39dab",
      "parentUUID": "eacaf3e4-3860-4384-99e6-f799fe234f20",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#contestants should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "fdc20b44-1416-4468-b88a-2c1e4fb5a7b6",
      "parentUUID": "4a311709-bd4b-4e1c-83d6-8fb299a70d3f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = p.contestants;<br>c.should.be.instanceOf(Participants);",
      "isRoot": false,
      "uuid": "b1ae7d0f-ae76-401e-8ad8-67d05bc64c2a",
      "parentUUID": "4a311709-bd4b-4e1c-83d6-8fb299a70d3f",
      "skipped": false
    },
    {
      "title": "should update the teams score",
      "fullTitle": "when a contestant scores should update the teams score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br>c1.incrementScore();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.incrementScore();<br>c2.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "3f8e28c8-7806-4420-ace7-56a9c4be4c5c",
      "parentUUID": "b82414cd-767b-4e0f-a6f2-d8b98e4038af",
      "skipped": false
    },
    {
      "title": "should allow it when no team leader is set",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should allow it when no team leader is set",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.id = <span class=\"hljs-string\">'c1'</span>;<br>t.contestants.add(c);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);",
      "isRoot": false,
      "uuid": "6c550ace-f86e-40c8-9536-4989380d5046",
      "parentUUID": "b89b3af0-2f2f-4cf8-8194-8788e49602cf",
      "skipped": false
    },
    {
      "title": "should not allow it when a team leader is set",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should not allow it when a team leader is set",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_FULFILLED);",
      "isRoot": false,
      "uuid": "d98c765c-4f02-4f64-b7f4-9038c41e638b",
      "parentUUID": "b89b3af0-2f2f-4cf8-8194-8788e49602cf",
      "skipped": false
    },
    {
      "title": "should not allow it when a contestant is not in team",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should not allow it when a contestant is not in team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_NOT_CONTESTANT);",
      "isRoot": false,
      "uuid": "9ff7536a-e483-4eda-a3d2-bd8b6bae632b",
      "parentUUID": "b89b3af0-2f2f-4cf8-8194-8788e49602cf",
      "skipped": false
    },
    {
      "title": "should allow it when a team leader is set and host override is flagged",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should allow it when a team leader is set and host override is flagged",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">true</span>);<br>r.should.be.true();<br>should.not.exist(m);",
      "isRoot": false,
      "uuid": "a56640a9-1841-42e8-ba1b-a2676d5295d4",
      "parentUUID": "b89b3af0-2f2f-4cf8-8194-8788e49602cf",
      "skipped": false
    },
    {
      "title": "should change name when request is valid",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should change name when request is valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "1f89b5d8-a23d-4676-9457-c607b70a545d",
      "parentUUID": "1a239a24-b9a6-4a44-865d-91a3daf194b6",
      "skipped": false
    },
    {
      "title": "should not change name when setting do not allow it",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should not change name when setting do not allow it",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_SETTINGS_NOT_ALLOW);<br>r.should.be.false();",
      "isRoot": false,
      "uuid": "c8efcc0a-823a-4f26-86bb-ebd63912f737",
      "parentUUID": "1a239a24-b9a6-4a44-865d-91a3daf194b6",
      "skipped": false
    },
    {
      "title": "should not change name when name contains profanity",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should not change name when name contains profanity",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_CONTAINS_PROFANITY);<br>r.should.be.false();",
      "isRoot": false,
      "uuid": "4b71a3e1-2ad1-4b17-86dd-81eeb92d0a0f",
      "parentUUID": "1a239a24-b9a6-4a44-865d-91a3daf194b6",
      "skipped": false
    },
    {
      "title": "should change name when request is valid",
      "fullTitle": "when host override should change name when request is valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "ff041846-c251-4c07-8645-f43d0f69b58b",
      "parentUUID": "5d97e170-0c80-472e-be2c-22e91f565d34",
      "skipped": false
    },
    {
      "title": "should change name when setting do not allow it",
      "fullTitle": "when host override should change name when setting do not allow it",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "f3916e34-c1a0-49b1-8dcb-56594b9371e4",
      "parentUUID": "5d97e170-0c80-472e-be2c-22e91f565d34",
      "skipped": false
    },
    {
      "title": "should change name when name contains profanity",
      "fullTitle": "when host override should change name when name contains profanity",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "da828f40-2351-48f7-9b94-1b82b8d5cca0",
      "parentUUID": "5d97e170-0c80-472e-be2c-22e91f565d34",
      "skipped": false
    },
    {
      "title": "should get contestant when contest with username exists",
      "fullTitle": "getContestantByUsername(username) should get contestant when contest with username exists",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(c1.username);<br>c.should.equal(c1);<br>c = t.getContestantByUsername(<span class=\"hljs-string\">'c1abc'</span>);<br>c.should.equal(c1);",
      "isRoot": false,
      "uuid": "30692bf3-ad05-4c7c-867e-e8711ae4a017",
      "parentUUID": "5015c66a-a6e9-48e7-959a-c56272f7123e",
      "skipped": false
    },
    {
      "title": "should not get contestant when contest with username does not exist",
      "fullTitle": "getContestantByUsername(username) should not get contestant when contest with username does not exist",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(<span class=\"hljs-string\">'John Doe'</span>);<br>should(c).be.null();",
      "isRoot": false,
      "uuid": "a8031eab-8fea-4150-88d2-626f712f3bb0",
      "parentUUID": "5015c66a-a6e9-48e7-959a-c56272f7123e",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}