{
  "reportTitle": "buzzer.click",
  "stats": {
    "suites": 187,
    "tests": 340,
    "passes": 340,
    "pending": 0,
    "failures": 0,
    "start": "2016-09-30T02:47:57.099Z",
    "end": "2016-09-30T02:47:58.473Z",
    "duration": 1374,
    "testsRegistered": 340,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "passPercentClass": "success",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "title": "",
    "suites": [
      {
        "title": "AddContestantResponse",
        "suites": [
          {
            "title": "#wasSuccessful",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "AddContestantResponse #wasSuccessful should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.wasSuccessful = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "f4e4c1da-53ae-408a-86d9-2634bdc217c8",
                "parentUUID": "175a59ee-6832-4bc1-b1b8-29b1740a922b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #wasSuccessful should get value",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>r.wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "cd825a85-1238-4a96-9c48-2318ae9c45f4",
                "parentUUID": "175a59ee-6832-4bc1-b1b8-29b1740a922b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/AddContestantResponseTests.js",
            "uuid": "175a59ee-6832-4bc1-b1b8-29b1740a922b",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/AddContestantResponseTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "AddContestantResponse #wasSuccessful should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.wasSuccessful = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "f4e4c1da-53ae-408a-86d9-2634bdc217c8",
                "parentUUID": "175a59ee-6832-4bc1-b1b8-29b1740a922b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #wasSuccessful should get value",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>r.wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "cd825a85-1238-4a96-9c48-2318ae9c45f4",
                "parentUUID": "175a59ee-6832-4bc1-b1b8-29b1740a922b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          },
          {
            "title": "#enquireForTeamLeaderPosition",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "AddContestantResponse #enquireForTeamLeaderPosition should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r._enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "7e064f76-8fd4-4a43-9ca3-561bcaebc86a",
                "parentUUID": "c9bb5bf7-6434-4def-9749-94063d90c836",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #enquireForTeamLeaderPosition should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r.enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "531534cc-9783-4310-932b-8da2370e6097",
                "parentUUID": "c9bb5bf7-6434-4def-9749-94063d90c836",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/AddContestantResponseTests.js",
            "uuid": "c9bb5bf7-6434-4def-9749-94063d90c836",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/AddContestantResponseTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "AddContestantResponse #enquireForTeamLeaderPosition should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r._enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "7e064f76-8fd4-4a43-9ca3-561bcaebc86a",
                "parentUUID": "c9bb5bf7-6434-4def-9749-94063d90c836",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #enquireForTeamLeaderPosition should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r.enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "531534cc-9783-4310-932b-8da2370e6097",
                "parentUUID": "c9bb5bf7-6434-4def-9749-94063d90c836",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#errorMessage",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "AddContestantResponse #errorMessage should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.errorMessage = <span class=\"hljs-string\">'test'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "dc425809-8b00-4c38-ad4b-27278090c3db",
                "parentUUID": "605142f9-f7f3-4278-9e71-5fa8d8e5335f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #errorMessage should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._errorMessage = <span class=\"hljs-string\">'errorMessage_test'</span>;<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'errorMessage_test'</span>);",
                "isRoot": false,
                "uuid": "07b31c9e-7479-4c11-bb2f-e317ca353daf",
                "parentUUID": "605142f9-f7f3-4278-9e71-5fa8d8e5335f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/AddContestantResponseTests.js",
            "uuid": "605142f9-f7f3-4278-9e71-5fa8d8e5335f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/AddContestantResponseTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "AddContestantResponse #errorMessage should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.errorMessage = <span class=\"hljs-string\">'test'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "dc425809-8b00-4c38-ad4b-27278090c3db",
                "parentUUID": "605142f9-f7f3-4278-9e71-5fa8d8e5335f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "AddContestantResponse #errorMessage should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._errorMessage = <span class=\"hljs-string\">'errorMessage_test'</span>;<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'errorMessage_test'</span>);",
                "isRoot": false,
                "uuid": "07b31c9e-7479-4c11-bb2f-e317ca353daf",
                "parentUUID": "605142f9-f7f3-4278-9e71-5fa8d8e5335f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#setNotSuccessful(errorMessage)",
            "suites": [],
            "tests": [
              {
                "title": "should change the state to not successful",
                "fullTitle": "AddContestantResponse #setNotSuccessful(errorMessage) should change the state to not successful",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.setNotSuccessful(<span class=\"hljs-string\">'Test error message'</span>);<br>r.wasSuccessful.should.be.false();<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'Test error message'</span>);",
                "isRoot": false,
                "uuid": "603f7b94-a2df-4b95-ba18-ef50d6fa7b9a",
                "parentUUID": "cad4c15c-03ce-44a0-9542-dca5a45f496b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/AddContestantResponseTests.js",
            "uuid": "cad4c15c-03ce-44a0-9542-dca5a45f496b",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/AddContestantResponseTests.js",
            "passes": [
              {
                "title": "should change the state to not successful",
                "fullTitle": "AddContestantResponse #setNotSuccessful(errorMessage) should change the state to not successful",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.setNotSuccessful(<span class=\"hljs-string\">'Test error message'</span>);<br>r.wasSuccessful.should.be.false();<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'Test error message'</span>);",
                "isRoot": false,
                "uuid": "603f7b94-a2df-4b95-ba18-ef50d6fa7b9a",
                "parentUUID": "cad4c15c-03ce-44a0-9542-dca5a45f496b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/AddContestantResponseTests.js",
        "uuid": "efface04-fc16-4a28-9370-6c0167fce600",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/AddContestantResponseTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Contestant",
        "suites": [
          {
            "title": "#username",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Contestant #username should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'username_test'</span>;<br>c._username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
                "isRoot": false,
                "uuid": "d06511e3-4349-4b93-ab12-f4875527a83d",
                "parentUUID": "a8677fa0-79f2-40fd-84a4-dce7521d4fcb",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Contestant #username should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._username = <span class=\"hljs-string\">'username_test'</span>;<br>c.username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
                "isRoot": false,
                "uuid": "f9f1ddb3-aff8-45bc-b862-37a5e61fbd43",
                "parentUUID": "a8677fa0-79f2-40fd-84a4-dce7521d4fcb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ContestantTests.js",
            "uuid": "a8677fa0-79f2-40fd-84a4-dce7521d4fcb",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ContestantTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Contestant #username should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'username_test'</span>;<br>c._username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
                "isRoot": false,
                "uuid": "d06511e3-4349-4b93-ab12-f4875527a83d",
                "parentUUID": "a8677fa0-79f2-40fd-84a4-dce7521d4fcb",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Contestant #username should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._username = <span class=\"hljs-string\">'username_test'</span>;<br>c.username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
                "isRoot": false,
                "uuid": "f9f1ddb3-aff8-45bc-b862-37a5e61fbd43",
                "parentUUID": "a8677fa0-79f2-40fd-84a4-dce7521d4fcb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#score",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Contestant #score should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    c.score = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "120f4f72-5bd4-4b0a-a873-8b4e25f3875d",
                "parentUUID": "6f0fa397-5258-45f7-8eef-be0045a3b80d",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Contestant #score should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._score = <span class=\"hljs-number\">1</span>;<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "6551b98a-4a5c-43f1-bbd1-a79e03ff3014",
                "parentUUID": "6f0fa397-5258-45f7-8eef-be0045a3b80d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ContestantTests.js",
            "uuid": "6f0fa397-5258-45f7-8eef-be0045a3b80d",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ContestantTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Contestant #score should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    c.score = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "120f4f72-5bd4-4b0a-a873-8b4e25f3875d",
                "parentUUID": "6f0fa397-5258-45f7-8eef-be0045a3b80d",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Contestant #score should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._score = <span class=\"hljs-number\">1</span>;<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "6551b98a-4a5c-43f1-bbd1-a79e03ff3014",
                "parentUUID": "6f0fa397-5258-45f7-8eef-be0045a3b80d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#incrementScore()",
            "suites": [],
            "tests": [
              {
                "title": "should increment the contestant's score",
                "fullTitle": "Contestant #incrementScore() should increment the contestant's score",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.incrementScore();<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "7e7582fb-cf4a-49ac-88c9-ef087bfb19c7",
                "parentUUID": "9556573a-8bfc-4aef-8a3d-66c3b463ecdd",
                "skipped": false
              },
              {
                "title": "should emit scoreUpdate event",
                "fullTitle": "Contestant #incrementScore() should emit scoreUpdate event",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.on(<span class=\"hljs-string\">'scoreUpdate'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>});<br>c.incrementScore();",
                "isRoot": false,
                "uuid": "ac59b048-ca98-44ab-b239-76d6e0c81d42",
                "parentUUID": "9556573a-8bfc-4aef-8a3d-66c3b463ecdd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ContestantTests.js",
            "uuid": "9556573a-8bfc-4aef-8a3d-66c3b463ecdd",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ContestantTests.js",
            "passes": [
              {
                "title": "should increment the contestant's score",
                "fullTitle": "Contestant #incrementScore() should increment the contestant's score",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.incrementScore();<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "7e7582fb-cf4a-49ac-88c9-ef087bfb19c7",
                "parentUUID": "9556573a-8bfc-4aef-8a3d-66c3b463ecdd",
                "skipped": false
              },
              {
                "title": "should emit scoreUpdate event",
                "fullTitle": "Contestant #incrementScore() should emit scoreUpdate event",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.on(<span class=\"hljs-string\">'scoreUpdate'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>});<br>c.incrementScore();",
                "isRoot": false,
                "uuid": "ac59b048-ca98-44ab-b239-76d6e0c81d42",
                "parentUUID": "9556573a-8bfc-4aef-8a3d-66c3b463ecdd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/ContestantTests.js",
        "uuid": "30017314-888e-4369-93e8-fd84430ad26e",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ContestantTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "IdentifierUtility",
        "suites": [
          {
            "title": "#generateSessionId()",
            "suites": [],
            "tests": [
              {
                "title": "should return a non-null non-empty key",
                "fullTitle": "IdentifierUtility #generateSessionId() should return a non-null non-empty key",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateSessionId().should.not.be.equal(<span class=\"hljs-string\">''</span>).and.not.be.equal(<span class=\"hljs-literal\">null</span>);",
                "isRoot": false,
                "uuid": "581d0d11-7a94-42f5-9962-99614ed7c102",
                "parentUUID": "7bc20167-9816-4bcc-91fe-318c25faf9a8",
                "skipped": false
              },
              {
                "title": "should return a id of the correct length",
                "fullTitle": "IdentifierUtility #generateSessionId() should return a id of the correct length",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateSessionId()<br>    .length.should.be.Number().and.equal(idUtility.keyLength);",
                "isRoot": false,
                "uuid": "36c99d34-0e89-4c2e-8103-d5659e1bf502",
                "parentUUID": "7bc20167-9816-4bcc-91fe-318c25faf9a8",
                "skipped": false
              },
              {
                "title": "should record id so it cannot be reused.",
                "fullTitle": "IdentifierUtility #generateSessionId() should record id so it cannot be reused.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> id = idUtility.generateSessionId();<br>idUtility._sessionKeysInUse.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">cachedId</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> cachedId === id;<br>}).should.equal(id);",
                "isRoot": false,
                "uuid": "a1b44c2b-29ee-4f64-8c55-906b875c4503",
                "parentUUID": "7bc20167-9816-4bcc-91fe-318c25faf9a8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/IdentifierUtilityTests.js",
            "uuid": "7bc20167-9816-4bcc-91fe-318c25faf9a8",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/IdentifierUtilityTests.js",
            "passes": [
              {
                "title": "should return a non-null non-empty key",
                "fullTitle": "IdentifierUtility #generateSessionId() should return a non-null non-empty key",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateSessionId().should.not.be.equal(<span class=\"hljs-string\">''</span>).and.not.be.equal(<span class=\"hljs-literal\">null</span>);",
                "isRoot": false,
                "uuid": "581d0d11-7a94-42f5-9962-99614ed7c102",
                "parentUUID": "7bc20167-9816-4bcc-91fe-318c25faf9a8",
                "skipped": false
              },
              {
                "title": "should return a id of the correct length",
                "fullTitle": "IdentifierUtility #generateSessionId() should return a id of the correct length",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateSessionId()<br>    .length.should.be.Number().and.equal(idUtility.keyLength);",
                "isRoot": false,
                "uuid": "36c99d34-0e89-4c2e-8103-d5659e1bf502",
                "parentUUID": "7bc20167-9816-4bcc-91fe-318c25faf9a8",
                "skipped": false
              },
              {
                "title": "should record id so it cannot be reused.",
                "fullTitle": "IdentifierUtility #generateSessionId() should record id so it cannot be reused.",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> id = idUtility.generateSessionId();<br>idUtility._sessionKeysInUse.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">cachedId</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> cachedId === id;<br>}).should.equal(id);",
                "isRoot": false,
                "uuid": "a1b44c2b-29ee-4f64-8c55-906b875c4503",
                "parentUUID": "7bc20167-9816-4bcc-91fe-318c25faf9a8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#generateParticipantId()",
            "suites": [],
            "tests": [
              {
                "title": "should return a UUID",
                "fullTitle": "IdentifierUtility #generateParticipantId() should return a UUID",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateParticipantId()<br>    .should.match(<span class=\"hljs-regexp\">/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i</span>);",
                "isRoot": false,
                "uuid": "422abb1e-3a7b-4316-8d90-b6c39ccb4201",
                "parentUUID": "82b087e9-13aa-450a-8c95-bf0506e58a47",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/IdentifierUtilityTests.js",
            "uuid": "82b087e9-13aa-450a-8c95-bf0506e58a47",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/IdentifierUtilityTests.js",
            "passes": [
              {
                "title": "should return a UUID",
                "fullTitle": "IdentifierUtility #generateParticipantId() should return a UUID",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.generateParticipantId()<br>    .should.match(<span class=\"hljs-regexp\">/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i</span>);",
                "isRoot": false,
                "uuid": "422abb1e-3a7b-4316-8d90-b6c39ccb4201",
                "parentUUID": "82b087e9-13aa-450a-8c95-bf0506e58a47",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#registerSessionIdsInUse(ids)",
            "suites": [],
            "tests": [
              {
                "title": "should store the ids to stop reuse",
                "fullTitle": "IdentifierUtility #registerSessionIdsInUse(ids) should store the ids to stop reuse",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.length.should.be.aboveOrEqual(<span class=\"hljs-number\">2</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "61dafde7-f494-4bd9-9c2a-b059493e198f",
                "parentUUID": "374f9157-26a0-4287-9a5f-7760b55f3423",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/IdentifierUtilityTests.js",
            "uuid": "374f9157-26a0-4287-9a5f-7760b55f3423",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/IdentifierUtilityTests.js",
            "passes": [
              {
                "title": "should store the ids to stop reuse",
                "fullTitle": "IdentifierUtility #registerSessionIdsInUse(ids) should store the ids to stop reuse",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.length.should.be.aboveOrEqual(<span class=\"hljs-number\">2</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "61dafde7-f494-4bd9-9c2a-b059493e198f",
                "parentUUID": "374f9157-26a0-4287-9a5f-7760b55f3423",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#releaseSessionId(id)",
            "suites": [],
            "tests": [
              {
                "title": "should return a UUID",
                "fullTitle": "IdentifierUtility #releaseSessionId(id) should return a UUID",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility.releaseSessionId(<span class=\"hljs-string\">'111AAA'</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.equal(-<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "ab1bc849-2765-4c69-b31d-f1450d55733a",
                "parentUUID": "ed513e25-86aa-4a6c-b9cd-f3eb5122326f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/IdentifierUtilityTests.js",
            "uuid": "ed513e25-86aa-4a6c-b9cd-f3eb5122326f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/IdentifierUtilityTests.js",
            "passes": [
              {
                "title": "should return a UUID",
                "fullTitle": "IdentifierUtility #releaseSessionId(id) should return a UUID",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility.releaseSessionId(<span class=\"hljs-string\">'111AAA'</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.equal(-<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "ab1bc849-2765-4c69-b31d-f1450d55733a",
                "parentUUID": "ed513e25-86aa-4a6c-b9cd-f3eb5122326f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/IdentifierUtilityTests.js",
        "uuid": "c5b84ba9-e4ab-4053-a7bd-0466aef3c4fd",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/IdentifierUtilityTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "BuzzerActionCommandMessage",
        "suites": [
          {
            "title": "#action",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #action should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.data._action.should.equal(constants.buzzerActionCommands.RESET);",
                "isRoot": false,
                "uuid": "4e2871a4-9051-4548-9585-221c503ea6d2",
                "parentUUID": "587cafaa-cf45-411c-a4a4-6d29a2fa1cb1",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #action should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._action = constants.buzzerActionCommands.RESET;<br>m.action.should.equal(constants.buzzerActionCommands.RESET);",
                "isRoot": false,
                "uuid": "3acb6524-df65-4e1d-bc80-de1e5afa6a94",
                "parentUUID": "587cafaa-cf45-411c-a4a4-6d29a2fa1cb1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "uuid": "587cafaa-cf45-411c-a4a4-6d29a2fa1cb1",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #action should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.data._action.should.equal(constants.buzzerActionCommands.RESET);",
                "isRoot": false,
                "uuid": "4e2871a4-9051-4548-9585-221c503ea6d2",
                "parentUUID": "587cafaa-cf45-411c-a4a4-6d29a2fa1cb1",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #action should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._action = constants.buzzerActionCommands.RESET;<br>m.action.should.equal(constants.buzzerActionCommands.RESET);",
                "isRoot": false,
                "uuid": "3acb6524-df65-4e1d-bc80-de1e5afa6a94",
                "parentUUID": "587cafaa-cf45-411c-a4a4-6d29a2fa1cb1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "599b460f-570d-4bf6-bfcc-cbb0d88e6424",
                "parentUUID": "c444cd40-673f-497d-878f-f3f37391371a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "cd2a7fc4-7f38-4493-b9fa-12d820252008",
                "parentUUID": "c444cd40-673f-497d-878f-f3f37391371a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "uuid": "c444cd40-673f-497d-878f-f3f37391371a",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "599b460f-570d-4bf6-bfcc-cbb0d88e6424",
                "parentUUID": "c444cd40-673f-497d-878f-f3f37391371a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "cd2a7fc4-7f38-4493-b9fa-12d820252008",
                "parentUUID": "c444cd40-673f-497d-878f-f3f37391371a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #hostId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "604b192b-275d-4994-92d2-95259c56f749",
                "parentUUID": "09743c5c-ddf7-4a95-a3da-5bdf8e9d7a13",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "cb015545-7075-495e-98cb-24dc49dde79d",
                "parentUUID": "09743c5c-ddf7-4a95-a3da-5bdf8e9d7a13",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "uuid": "09743c5c-ddf7-4a95-a3da-5bdf8e9d7a13",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "BuzzerActionCommandMessage #hostId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "604b192b-275d-4994-92d2-95259c56f749",
                "parentUUID": "09743c5c-ddf7-4a95-a3da-5bdf8e9d7a13",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "BuzzerActionCommandMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "cb015545-7075-495e-98cb-24dc49dde79d",
                "parentUUID": "09743c5c-ddf7-4a95-a3da-5bdf8e9d7a13",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "BuzzerActionCommandMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'yyy123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "42fae95a-8481-4903-808a-1ff9bc06d3e4",
                "parentUUID": "464fc793-4d8c-40f6-ae54-873a8c42ea7c",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "BuzzerActionCommandMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = <span class=\"hljs-number\">99</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "360aba90-7df9-4d5b-98bb-89c94b93d70c",
                "parentUUID": "464fc793-4d8c-40f6-ae54-873a8c42ea7c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "uuid": "464fc793-4d8c-40f6-ae54-873a8c42ea7c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "BuzzerActionCommandMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'yyy123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "42fae95a-8481-4903-808a-1ff9bc06d3e4",
                "parentUUID": "464fc793-4d8c-40f6-ae54-873a8c42ea7c",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "BuzzerActionCommandMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = <span class=\"hljs-number\">99</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "360aba90-7df9-4d5b-98bb-89c94b93d70c",
                "parentUUID": "464fc793-4d8c-40f6-ae54-873a8c42ea7c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
        "uuid": "677cb8ab-0abe-472a-ae69-4441962e4436",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/BuzzerActionCommandMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ContestantBuzzerPressMessage",
        "suites": [
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantBuzzerPressMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e46772d9-4c08-46e7-b751-9a09d6e60b74",
                "parentUUID": "1af29d1d-2aab-41c3-85e5-52c0ca2cc024",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantBuzzerPressMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "3a78e50e-4cba-46a7-8adc-352bb637e110",
                "parentUUID": "1af29d1d-2aab-41c3-85e5-52c0ca2cc024",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "uuid": "1af29d1d-2aab-41c3-85e5-52c0ca2cc024",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantBuzzerPressMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e46772d9-4c08-46e7-b751-9a09d6e60b74",
                "parentUUID": "1af29d1d-2aab-41c3-85e5-52c0ca2cc024",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantBuzzerPressMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "3a78e50e-4cba-46a7-8adc-352bb637e110",
                "parentUUID": "1af29d1d-2aab-41c3-85e5-52c0ca2cc024",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#contestantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantBuzzerPressMessage #contestantId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "707267cb-10ff-4026-b38c-94fd6a416226",
                "parentUUID": "4724948e-8cfe-49cc-933c-4726a5fa6f2e",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantBuzzerPressMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "6800a259-f0b9-46c8-a5f5-61df8ee57f3f",
                "parentUUID": "4724948e-8cfe-49cc-933c-4726a5fa6f2e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "uuid": "4724948e-8cfe-49cc-933c-4726a5fa6f2e",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantBuzzerPressMessage #contestantId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "707267cb-10ff-4026-b38c-94fd6a416226",
                "parentUUID": "4724948e-8cfe-49cc-933c-4726a5fa6f2e",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantBuzzerPressMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "6800a259-f0b9-46c8-a5f5-61df8ee57f3f",
                "parentUUID": "4724948e-8cfe-49cc-933c-4726a5fa6f2e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantBuzzerPressMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "ade6e481-509a-4a2c-9d27-5f826c3caa0f",
                "parentUUID": "d1cda390-166d-4b8f-9a2d-49c72c18ad32",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantBuzzerPressMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "25585cd8-9790-43f3-af7a-8965e2f5c43a",
                "parentUUID": "d1cda390-166d-4b8f-9a2d-49c72c18ad32",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "uuid": "d1cda390-166d-4b8f-9a2d-49c72c18ad32",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantBuzzerPressMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "ade6e481-509a-4a2c-9d27-5f826c3caa0f",
                "parentUUID": "d1cda390-166d-4b8f-9a2d-49c72c18ad32",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantBuzzerPressMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "25585cd8-9790-43f3-af7a-8965e2f5c43a",
                "parentUUID": "d1cda390-166d-4b8f-9a2d-49c72c18ad32",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
        "uuid": "246fa67d-40e1-4100-9e5d-953dbf191e8c",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantBuzzerPressMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ContestantJoinRequestMessage",
        "suites": [
          {
            "title": "#username",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #username should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.username = <span class=\"hljs-string\">'test123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
                "isRoot": false,
                "uuid": "0b5c86e7-3bee-43ec-a903-45796d5a482d",
                "parentUUID": "f9019739-131a-4250-93aa-a7bf08805d0c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #username should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._username = <span class=\"hljs-string\">'test123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
                "isRoot": false,
                "uuid": "d0a19372-8967-43b0-abf0-488a53972be6",
                "parentUUID": "f9019739-131a-4250-93aa-a7bf08805d0c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "uuid": "f9019739-131a-4250-93aa-a7bf08805d0c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #username should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.username = <span class=\"hljs-string\">'test123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
                "isRoot": false,
                "uuid": "0b5c86e7-3bee-43ec-a903-45796d5a482d",
                "parentUUID": "f9019739-131a-4250-93aa-a7bf08805d0c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #username should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._username = <span class=\"hljs-string\">'test123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
                "isRoot": false,
                "uuid": "d0a19372-8967-43b0-abf0-488a53972be6",
                "parentUUID": "f9019739-131a-4250-93aa-a7bf08805d0c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "f70149d0-e391-4022-8fce-54081e037801",
                "parentUUID": "44473353-f5c4-4dd5-b2a0-8aeb7fbc0b35",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "dcce8d4b-df2a-45da-9ed7-53f2cfb94a33",
                "parentUUID": "44473353-f5c4-4dd5-b2a0-8aeb7fbc0b35",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "uuid": "44473353-f5c4-4dd5-b2a0-8aeb7fbc0b35",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "f70149d0-e391-4022-8fce-54081e037801",
                "parentUUID": "44473353-f5c4-4dd5-b2a0-8aeb7fbc0b35",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "dcce8d4b-df2a-45da-9ed7-53f2cfb94a33",
                "parentUUID": "44473353-f5c4-4dd5-b2a0-8aeb7fbc0b35",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#teamName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "d99297ba-94f7-462b-a0a4-a9ede217bdf8",
                "parentUUID": "837133bb-7a22-48b8-9cab-1d240ab84912",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5a9c7c94-9663-421a-bbed-dc855d22a0de",
                "parentUUID": "837133bb-7a22-48b8-9cab-1d240ab84912",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "uuid": "837133bb-7a22-48b8-9cab-1d240ab84912",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "d99297ba-94f7-462b-a0a4-a9ede217bdf8",
                "parentUUID": "837133bb-7a22-48b8-9cab-1d240ab84912",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5a9c7c94-9663-421a-bbed-dc855d22a0de",
                "parentUUID": "837133bb-7a22-48b8-9cab-1d240ab84912",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantJoinRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "c9611839-4969-48fe-84ff-5703ba78e0f7",
                "parentUUID": "e20aa908-6389-4818-a65f-f545922dcadd",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantJoinRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "efb57afb-a71e-4ba6-ba4d-b6b576a0c738",
                "parentUUID": "e20aa908-6389-4818-a65f-f545922dcadd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "uuid": "e20aa908-6389-4818-a65f-f545922dcadd",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantJoinRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "c9611839-4969-48fe-84ff-5703ba78e0f7",
                "parentUUID": "e20aa908-6389-4818-a65f-f545922dcadd",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantJoinRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 6,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "efb57afb-a71e-4ba6-ba4d-b6b576a0c738",
                "parentUUID": "e20aa908-6389-4818-a65f-f545922dcadd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 6
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
        "uuid": "58a4e4a1-f6b0-4963-9fb0-e5b3aaa1f4e4",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinRequestMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ContestantJoinResponseMessage",
        "suites": [
          {
            "title": "#wasSuccessful",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #wasSuccessful should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.data._wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "59fc1118-d5a8-4afc-88d9-ba3c4df27f11",
                "parentUUID": "29ac6672-8e10-406d-b1d1-956a7996925c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #wasSuccessful should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "f9910fc1-b491-4505-8963-7bb7e9317a2c",
                "parentUUID": "29ac6672-8e10-406d-b1d1-956a7996925c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "29ac6672-8e10-406d-b1d1-956a7996925c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #wasSuccessful should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.data._wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "59fc1118-d5a8-4afc-88d9-ba3c4df27f11",
                "parentUUID": "29ac6672-8e10-406d-b1d1-956a7996925c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #wasSuccessful should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.wasSuccessful.should.be.true();",
                "isRoot": false,
                "uuid": "f9910fc1-b491-4505-8963-7bb7e9317a2c",
                "parentUUID": "29ac6672-8e10-406d-b1d1-956a7996925c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#enquireForTeamLeaderPosition",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #enquireForTeamLeaderPosition should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.data._enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "162a94df-fbf8-478c-bb64-9b3515ad93dc",
                "parentUUID": "70c89d7d-da8e-42a4-8646-89a9365be3dc",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #enquireForTeamLeaderPosition should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "a8dfbb3c-9275-48a5-a9d5-4f2349c19682",
                "parentUUID": "70c89d7d-da8e-42a4-8646-89a9365be3dc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "70c89d7d-da8e-42a4-8646-89a9365be3dc",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #enquireForTeamLeaderPosition should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.data._enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "162a94df-fbf8-478c-bb64-9b3515ad93dc",
                "parentUUID": "70c89d7d-da8e-42a4-8646-89a9365be3dc",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #enquireForTeamLeaderPosition should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.enquireForTeamLeaderPosition.should.be.true();",
                "isRoot": false,
                "uuid": "a8dfbb3c-9275-48a5-a9d5-4f2349c19682",
                "parentUUID": "70c89d7d-da8e-42a4-8646-89a9365be3dc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#failedRequestReason",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #failedRequestReason should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.data._failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
                "isRoot": false,
                "uuid": "204490d5-2fb1-4494-a72e-c446456fcfd7",
                "parentUUID": "e8f8421c-a323-4680-86ef-e2522301b1a5",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #failedRequestReason should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
                "isRoot": false,
                "uuid": "d3087a05-7606-4e03-8c98-e6c724334fc6",
                "parentUUID": "e8f8421c-a323-4680-86ef-e2522301b1a5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "e8f8421c-a323-4680-86ef-e2522301b1a5",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #failedRequestReason should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.data._failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
                "isRoot": false,
                "uuid": "204490d5-2fb1-4494-a72e-c446456fcfd7",
                "parentUUID": "e8f8421c-a323-4680-86ef-e2522301b1a5",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #failedRequestReason should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
                "isRoot": false,
                "uuid": "d3087a05-7606-4e03-8c98-e6c724334fc6",
                "parentUUID": "e8f8421c-a323-4680-86ef-e2522301b1a5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#contestantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #contestantId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "f7872499-a2a2-4991-bdd8-4ffa4c437919",
                "parentUUID": "95c83dd8-dec7-4859-9055-a4867649dcd8",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "58b16044-9be3-4506-9460-feb74afcfc51",
                "parentUUID": "95c83dd8-dec7-4859-9055-a4867649dcd8",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "95c83dd8-dec7-4859-9055-a4867649dcd8",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #contestantId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "f7872499-a2a2-4991-bdd8-4ffa4c437919",
                "parentUUID": "95c83dd8-dec7-4859-9055-a4867649dcd8",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "58b16044-9be3-4506-9460-feb74afcfc51",
                "parentUUID": "95c83dd8-dec7-4859-9055-a4867649dcd8",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#mustChooseTeam",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #mustChooseTeam should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.data._mustChooseTeam.should.be.true();",
                "isRoot": false,
                "uuid": "368babca-f1d1-4e13-952a-58bd32079247",
                "parentUUID": "dd6ca473-c45d-404c-bbec-fb3a280fc970",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #mustChooseTeam should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.mustChooseTeam.should.be.true();",
                "isRoot": false,
                "uuid": "1a3eacf6-6cef-4930-8b83-40169f97430a",
                "parentUUID": "dd6ca473-c45d-404c-bbec-fb3a280fc970",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "dd6ca473-c45d-404c-bbec-fb3a280fc970",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #mustChooseTeam should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.data._mustChooseTeam.should.be.true();",
                "isRoot": false,
                "uuid": "368babca-f1d1-4e13-952a-58bd32079247",
                "parentUUID": "dd6ca473-c45d-404c-bbec-fb3a280fc970",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #mustChooseTeam should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.mustChooseTeam.should.be.true();",
                "isRoot": false,
                "uuid": "1a3eacf6-6cef-4930-8b83-40169f97430a",
                "parentUUID": "dd6ca473-c45d-404c-bbec-fb3a280fc970",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#teams",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #teams should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.data._teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
                "isRoot": false,
                "uuid": "fc0f7e82-266c-4508-9e97-389f70ad3f7b",
                "parentUUID": "bebb6898-731b-4458-8ebf-0fd1d02d9ab3",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #teams should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
                "isRoot": false,
                "uuid": "370f7202-4f22-4008-a880-d33b7785f0c2",
                "parentUUID": "bebb6898-731b-4458-8ebf-0fd1d02d9ab3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "bebb6898-731b-4458-8ebf-0fd1d02d9ab3",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ContestantJoinResponseMessage #teams should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.data._teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
                "isRoot": false,
                "uuid": "fc0f7e82-266c-4508-9e97-389f70ad3f7b",
                "parentUUID": "bebb6898-731b-4458-8ebf-0fd1d02d9ab3",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ContestantJoinResponseMessage #teams should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
                "isRoot": false,
                "uuid": "370f7202-4f22-4008-a880-d33b7785f0c2",
                "parentUUID": "bebb6898-731b-4458-8ebf-0fd1d02d9ab3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantJoinResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "ecf2a5f4-42f0-4bd2-a6fe-97ae41337ea4",
                "parentUUID": "879c4a09-7de6-4150-b310-72c2f5d62305",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantJoinResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "e754d3d8-14d7-45b8-aaea-922f99c0f4cb",
                "parentUUID": "879c4a09-7de6-4150-b310-72c2f5d62305",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "uuid": "879c4a09-7de6-4150-b310-72c2f5d62305",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "ContestantJoinResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "ecf2a5f4-42f0-4bd2-a6fe-97ae41337ea4",
                "parentUUID": "879c4a09-7de6-4150-b310-72c2f5d62305",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ContestantJoinResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "e754d3d8-14d7-45b8-aaea-922f99c0f4cb",
                "parentUUID": "879c4a09-7de6-4150-b310-72c2f5d62305",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 6
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
        "uuid": "9537f24a-d004-4273-af38-950408873e3b",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ContestantJoinResponseMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "CreateSessionMessage",
        "suites": [
          {
            "title": "#settings",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionMessage #settings should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.data._settings.should.equal(s);",
                "isRoot": false,
                "uuid": "b2f12843-742c-46f8-bc51-ee7f165a2e4e",
                "parentUUID": "c0e5136f-fbe3-4f50-8e4a-fbe809333135",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionMessage #settings should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.data._settings = s;<br>m.settings.should.equal(s);",
                "isRoot": false,
                "uuid": "8d4bb52c-62a8-4d60-9dd2-fae91b450dce",
                "parentUUID": "c0e5136f-fbe3-4f50-8e4a-fbe809333135",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/CreateSessionMessageTests.js",
            "uuid": "c0e5136f-fbe3-4f50-8e4a-fbe809333135",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionMessage #settings should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.data._settings.should.equal(s);",
                "isRoot": false,
                "uuid": "b2f12843-742c-46f8-bc51-ee7f165a2e4e",
                "parentUUID": "c0e5136f-fbe3-4f50-8e4a-fbe809333135",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionMessage #settings should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.data._settings = s;<br>m.settings.should.equal(s);",
                "isRoot": false,
                "uuid": "8d4bb52c-62a8-4d60-9dd2-fae91b450dce",
                "parentUUID": "c0e5136f-fbe3-4f50-8e4a-fbe809333135",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "CreateSessionMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "2493d3f4-5357-49fb-84f3-0a9539625f7b",
                "parentUUID": "68c23330-32e8-4a97-8702-67d4c98971d2",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "CreateSessionMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-string\">'invalid'</span>;<br>m.settings = s;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "022edabd-08e2-4730-988b-f38ceae5a059",
                "parentUUID": "68c23330-32e8-4a97-8702-67d4c98971d2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/CreateSessionMessageTests.js",
            "uuid": "68c23330-32e8-4a97-8702-67d4c98971d2",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "CreateSessionMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "2493d3f4-5357-49fb-84f3-0a9539625f7b",
                "parentUUID": "68c23330-32e8-4a97-8702-67d4c98971d2",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "CreateSessionMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 7,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-string\">'invalid'</span>;<br>m.settings = s;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "022edabd-08e2-4730-988b-f38ceae5a059",
                "parentUUID": "68c23330-32e8-4a97-8702-67d4c98971d2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 9
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/CreateSessionMessageTests.js",
        "uuid": "067975c0-7ebd-480c-bb86-559c7fc8a438",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "CreateSessionResponseMessage",
        "suites": [
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionResponseMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "a7ec94d3-5b53-4003-a8ad-90962ebfb5c6",
                "parentUUID": "471ce376-80ef-4d9f-ade3-ad8773ac8aaa",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionResponseMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "737f3897-fab9-4951-a507-f97c05fd34e9",
                "parentUUID": "471ce376-80ef-4d9f-ade3-ad8773ac8aaa",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "uuid": "471ce376-80ef-4d9f-ade3-ad8773ac8aaa",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionResponseMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "a7ec94d3-5b53-4003-a8ad-90962ebfb5c6",
                "parentUUID": "471ce376-80ef-4d9f-ade3-ad8773ac8aaa",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionResponseMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "737f3897-fab9-4951-a507-f97c05fd34e9",
                "parentUUID": "471ce376-80ef-4d9f-ade3-ad8773ac8aaa",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionResponseMessage #hostId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "155cf0df-817e-4ec6-a4f1-95937e65ebb3",
                "parentUUID": "0812f20b-29e2-4e09-bf33-0afe691c3dbb",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionResponseMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "952f6545-c544-42a9-b86e-083b9d79899a",
                "parentUUID": "0812f20b-29e2-4e09-bf33-0afe691c3dbb",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "uuid": "0812f20b-29e2-4e09-bf33-0afe691c3dbb",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "CreateSessionResponseMessage #hostId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "155cf0df-817e-4ec6-a4f1-95937e65ebb3",
                "parentUUID": "0812f20b-29e2-4e09-bf33-0afe691c3dbb",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "CreateSessionResponseMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "952f6545-c544-42a9-b86e-083b9d79899a",
                "parentUUID": "0812f20b-29e2-4e09-bf33-0afe691c3dbb",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "CreateSessionResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "8cbf885b-3bf2-46af-bdaf-7ef7baf83651",
                "parentUUID": "92a9de38-aab2-4bba-8efe-abe8f550d7f0",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "CreateSessionResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "f3ad6f5d-fa29-42ed-976c-698ed05d4879",
                "parentUUID": "92a9de38-aab2-4bba-8efe-abe8f550d7f0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "uuid": "92a9de38-aab2-4bba-8efe-abe8f550d7f0",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "CreateSessionResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "8cbf885b-3bf2-46af-bdaf-7ef7baf83651",
                "parentUUID": "92a9de38-aab2-4bba-8efe-abe8f550d7f0",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "CreateSessionResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "f3ad6f5d-fa29-42ed-976c-698ed05d4879",
                "parentUUID": "92a9de38-aab2-4bba-8efe-abe8f550d7f0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
        "uuid": "fd8a6070-8096-4a3e-9d6f-1632c046adf7",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/CreateSessionResponseMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ErrorMessage",
        "suites": [
          {
            "title": "#message",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "ErrorMessage #message should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "9ef70fa4-1b5a-4b22-b96e-ed668007e6be",
                "parentUUID": "8f13482a-f037-4eda-85ab-c221be5b0466",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ErrorMessage #message should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.data._error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "bddd4232-1811-41cf-b15e-28b3d9ccb99b",
                "parentUUID": "8f13482a-f037-4eda-85ab-c221be5b0466",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ErrorMessageTests.js",
            "uuid": "8f13482a-f037-4eda-85ab-c221be5b0466",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ErrorMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "ErrorMessage #message should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "9ef70fa4-1b5a-4b22-b96e-ed668007e6be",
                "parentUUID": "8f13482a-f037-4eda-85ab-c221be5b0466",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "ErrorMessage #message should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.data._error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "bddd4232-1811-41cf-b15e-28b3d9ccb99b",
                "parentUUID": "8f13482a-f037-4eda-85ab-c221be5b0466",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "ErrorMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "6dbcb992-b043-481e-8093-4d0701090fa9",
                "parentUUID": "58086414-7477-4738-8c9f-f462f475a037",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ErrorMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "59ff1172-54c1-4b98-9b00-9ab2d8b930ea",
                "parentUUID": "58086414-7477-4738-8c9f-f462f475a037",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ErrorMessageTests.js",
            "uuid": "58086414-7477-4738-8c9f-f462f475a037",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ErrorMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "ErrorMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "6dbcb992-b043-481e-8093-4d0701090fa9",
                "parentUUID": "58086414-7477-4738-8c9f-f462f475a037",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ErrorMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "59ff1172-54c1-4b98-9b00-9ab2d8b930ea",
                "parentUUID": "58086414-7477-4738-8c9f-f462f475a037",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/ErrorMessageTests.js",
        "uuid": "8b5532ac-8400-4bc8-8992-769861d526a7",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ErrorMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "HostSettingsUpdateMessage",
        "suites": [
          {
            "title": "#sessionName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #sessionName should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "f958a8b1-0888-41b6-9bed-6c00baa103e7",
                "parentUUID": "7d7c0e67-fe90-4dc9-bfc7-d5d1ac6658e1",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #sessionName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "01a2d8e2-3b8d-4af5-991a-51b40cf22909",
                "parentUUID": "7d7c0e67-fe90-4dc9-bfc7-d5d1ac6658e1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "7d7c0e67-fe90-4dc9-bfc7-d5d1ac6658e1",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #sessionName should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "f958a8b1-0888-41b6-9bed-6c00baa103e7",
                "parentUUID": "7d7c0e67-fe90-4dc9-bfc7-d5d1ac6658e1",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #sessionName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "01a2d8e2-3b8d-4af5-991a-51b40cf22909",
                "parentUUID": "7d7c0e67-fe90-4dc9-bfc7-d5d1ac6658e1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#maxTeams",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #maxTeams should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxTeams = <span class=\"hljs-number\">5</span>;<br>m.data._maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "2a66dd5c-073b-4b36-81f1-5e8ea77080c5",
                "parentUUID": "d208400c-17a7-45be-8fce-df694627a3a6",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #maxTeams should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxTeams = <span class=\"hljs-number\">5</span>;<br>m.maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "015e5f2d-df7d-4b1d-a04f-b9f4f82e97b3",
                "parentUUID": "d208400c-17a7-45be-8fce-df694627a3a6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "d208400c-17a7-45be-8fce-df694627a3a6",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #maxTeams should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxTeams = <span class=\"hljs-number\">5</span>;<br>m.data._maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "2a66dd5c-073b-4b36-81f1-5e8ea77080c5",
                "parentUUID": "d208400c-17a7-45be-8fce-df694627a3a6",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #maxTeams should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxTeams = <span class=\"hljs-number\">5</span>;<br>m.maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "015e5f2d-df7d-4b1d-a04f-b9f4f82e97b3",
                "parentUUID": "d208400c-17a7-45be-8fce-df694627a3a6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#teamSize",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #teamSize should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.teamSize = <span class=\"hljs-number\">5</span>;<br>m.data._teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "4f59932a-e508-4ed3-b9e6-243c57c9a074",
                "parentUUID": "4e700cbb-b49f-4936-a591-7203fa3392f4",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #teamSize should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._teamSize = <span class=\"hljs-number\">5</span>;<br>m.teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "bd3527ff-d1ab-4a3b-a693-6fb12aa4d869",
                "parentUUID": "4e700cbb-b49f-4936-a591-7203fa3392f4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "4e700cbb-b49f-4936-a591-7203fa3392f4",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #teamSize should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.teamSize = <span class=\"hljs-number\">5</span>;<br>m.data._teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "4f59932a-e508-4ed3-b9e6-243c57c9a074",
                "parentUUID": "4e700cbb-b49f-4936-a591-7203fa3392f4",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #teamSize should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._teamSize = <span class=\"hljs-number\">5</span>;<br>m.teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "bd3527ff-d1ab-4a3b-a693-6fb12aa4d869",
                "parentUUID": "4e700cbb-b49f-4936-a591-7203fa3392f4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#maxContestants",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #maxContestants should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxContestants = <span class=\"hljs-number\">5</span>;<br>m.data._maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "3782d1a7-7c31-4d41-bb5f-459a814a58c8",
                "parentUUID": "07dfae1d-63b4-4c77-b841-a69381e1361c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #maxContestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxContestants = <span class=\"hljs-number\">5</span>;<br>m.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "0f0db82c-7c20-44a1-a599-fa1616a127b3",
                "parentUUID": "07dfae1d-63b4-4c77-b841-a69381e1361c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "07dfae1d-63b4-4c77-b841-a69381e1361c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #maxContestants should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxContestants = <span class=\"hljs-number\">5</span>;<br>m.data._maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "3782d1a7-7c31-4d41-bb5f-459a814a58c8",
                "parentUUID": "07dfae1d-63b4-4c77-b841-a69381e1361c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #maxContestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxContestants = <span class=\"hljs-number\">5</span>;<br>m.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "0f0db82c-7c20-44a1-a599-fa1616a127b3",
                "parentUUID": "07dfae1d-63b4-4c77-b841-a69381e1361c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "cdae23d4-59d1-4d12-9894-0c2cd953181c",
                "parentUUID": "d513f9ee-08b3-47c1-9b92-27e2e8bd26f0",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "2bb5a8f6-a3e7-4023-b56a-12411fb8a4b9",
                "parentUUID": "d513f9ee-08b3-47c1-9b92-27e2e8bd26f0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "d513f9ee-08b3-47c1-9b92-27e2e8bd26f0",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "cdae23d4-59d1-4d12-9894-0c2cd953181c",
                "parentUUID": "d513f9ee-08b3-47c1-9b92-27e2e8bd26f0",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "2bb5a8f6-a3e7-4023-b56a-12411fb8a4b9",
                "parentUUID": "d513f9ee-08b3-47c1-9b92-27e2e8bd26f0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "9f84616c-dcdf-4b46-8e2e-a9f4bd296e1c",
                "parentUUID": "36b8b68b-20ec-4d03-bf9a-1c426012fb18",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #hostId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5c998d43-b654-4989-bf7a-384f39300033",
                "parentUUID": "36b8b68b-20ec-4d03-bf9a-1c426012fb18",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "36b8b68b-20ec-4d03-bf9a-1c426012fb18",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostSettingsUpdateMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "9f84616c-dcdf-4b46-8e2e-a9f4bd296e1c",
                "parentUUID": "36b8b68b-20ec-4d03-bf9a-1c426012fb18",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostSettingsUpdateMessage #hostId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5c998d43-b654-4989-bf7a-384f39300033",
                "parentUUID": "36b8b68b-20ec-4d03-bf9a-1c426012fb18",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostSettingsUpdateMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "5fee0132-51d1-425b-a1ac-76cddd072a65",
                "parentUUID": "90ea308f-b04b-43db-82ca-bdcf78fae034",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostSettingsUpdateMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "b267d7db-c2b9-4f94-9587-624a39dde9e2",
                "parentUUID": "90ea308f-b04b-43db-82ca-bdcf78fae034",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "uuid": "90ea308f-b04b-43db-82ca-bdcf78fae034",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostSettingsUpdateMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "5fee0132-51d1-425b-a1ac-76cddd072a65",
                "parentUUID": "90ea308f-b04b-43db-82ca-bdcf78fae034",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostSettingsUpdateMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "b267d7db-c2b9-4f94-9587-624a39dde9e2",
                "parentUUID": "90ea308f-b04b-43db-82ca-bdcf78fae034",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
        "uuid": "29a11773-4764-4fbd-996d-31949fe58cb6",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostSettingsUpdateMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "HostTeamLeaderSetRequestMessage",
        "suites": [
          {
            "title": "#teamName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "af34594d-0d20-4b84-a48d-657ff5751e85",
                "parentUUID": "33650f99-f14f-40bc-91b0-979498058789",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "6c284831-dca3-4f8d-85db-4b7d4cd0df45",
                "parentUUID": "33650f99-f14f-40bc-91b0-979498058789",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "uuid": "33650f99-f14f-40bc-91b0-979498058789",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "af34594d-0d20-4b84-a48d-657ff5751e85",
                "parentUUID": "33650f99-f14f-40bc-91b0-979498058789",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "6c284831-dca3-4f8d-85db-4b7d4cd0df45",
                "parentUUID": "33650f99-f14f-40bc-91b0-979498058789",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#teamLeaderUsername",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamLeaderUsername should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "7da6628d-1bdb-4442-914d-c3bc62c55d8e",
                "parentUUID": "2c4f566d-0d6f-47bd-9405-52a084eeac03",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamLeaderUsername should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e8c05e8b-df3e-4997-a37f-aa4aaa687b1f",
                "parentUUID": "2c4f566d-0d6f-47bd-9405-52a084eeac03",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "uuid": "2c4f566d-0d6f-47bd-9405-52a084eeac03",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamLeaderUsername should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "7da6628d-1bdb-4442-914d-c3bc62c55d8e",
                "parentUUID": "2c4f566d-0d6f-47bd-9405-52a084eeac03",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #teamLeaderUsername should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e8c05e8b-df3e-4997-a37f-aa4aaa687b1f",
                "parentUUID": "2c4f566d-0d6f-47bd-9405-52a084eeac03",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "4dffcba1-986b-4ca6-8913-de7ebf182f70",
                "parentUUID": "d8a419cc-32d7-4c93-99fa-aab95208ac8f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5eb2831d-98e0-4d5f-b726-2f1a6558bf8e",
                "parentUUID": "d8a419cc-32d7-4c93-99fa-aab95208ac8f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "uuid": "d8a419cc-32d7-4c93-99fa-aab95208ac8f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "4dffcba1-986b-4ca6-8913-de7ebf182f70",
                "parentUUID": "d8a419cc-32d7-4c93-99fa-aab95208ac8f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5eb2831d-98e0-4d5f-b726-2f1a6558bf8e",
                "parentUUID": "d8a419cc-32d7-4c93-99fa-aab95208ac8f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "cc9ddf19-719a-4b18-a991-66103c21ec24",
                "parentUUID": "4ac55368-1f72-4c0b-9399-e7ca25ef618f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "25f44a08-ac17-456d-ad07-4ce90e7ad8f2",
                "parentUUID": "4ac55368-1f72-4c0b-9399-e7ca25ef618f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "uuid": "4ac55368-1f72-4c0b-9399-e7ca25ef618f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "cc9ddf19-719a-4b18-a991-66103c21ec24",
                "parentUUID": "4ac55368-1f72-4c0b-9399-e7ca25ef618f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamLeaderSetRequestMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "25f44a08-ac17-456d-ad07-4ce90e7ad8f2",
                "parentUUID": "4ac55368-1f72-4c0b-9399-e7ca25ef618f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostTeamLeaderSetRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "3cb90cf5-07fc-4948-ae77-73a87fdd6dfd",
                "parentUUID": "03c851e4-1e78-44de-9c09-9cc109c5e232",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostTeamLeaderSetRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "6b5245aa-95a6-41a8-804c-97a9d0ffa5a9",
                "parentUUID": "03c851e4-1e78-44de-9c09-9cc109c5e232",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "uuid": "03c851e4-1e78-44de-9c09-9cc109c5e232",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostTeamLeaderSetRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "3cb90cf5-07fc-4948-ae77-73a87fdd6dfd",
                "parentUUID": "03c851e4-1e78-44de-9c09-9cc109c5e232",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostTeamLeaderSetRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "6b5245aa-95a6-41a8-804c-97a9d0ffa5a9",
                "parentUUID": "03c851e4-1e78-44de-9c09-9cc109c5e232",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 7
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
        "uuid": "46830431-bf81-44f9-9f17-316d48bafb09",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamLeaderSetRequestMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "HostTeamNameUpdateRequestMessage",
        "suites": [
          {
            "title": "#teamNameFrom",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameFrom should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "889fb41c-ca62-4f0d-be25-f79f9886fc89",
                "parentUUID": "b8f0b2ec-4b9f-470c-a22b-f0868756678f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameFrom should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "9846a565-a5f6-46ab-b4ef-64c6dad9bbfd",
                "parentUUID": "b8f0b2ec-4b9f-470c-a22b-f0868756678f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "uuid": "b8f0b2ec-4b9f-470c-a22b-f0868756678f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameFrom should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "889fb41c-ca62-4f0d-be25-f79f9886fc89",
                "parentUUID": "b8f0b2ec-4b9f-470c-a22b-f0868756678f",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameFrom should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "9846a565-a5f6-46ab-b4ef-64c6dad9bbfd",
                "parentUUID": "b8f0b2ec-4b9f-470c-a22b-f0868756678f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#teamNameTo",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameTo should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "6437f858-41b0-4d8d-a897-ef0264c21b10",
                "parentUUID": "8d74fbb9-f779-4d11-9b8d-c2217504ea4b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameTo should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "1561c3e1-1c96-41f5-a6ff-db2f082584f8",
                "parentUUID": "8d74fbb9-f779-4d11-9b8d-c2217504ea4b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "uuid": "8d74fbb9-f779-4d11-9b8d-c2217504ea4b",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameTo should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "6437f858-41b0-4d8d-a897-ef0264c21b10",
                "parentUUID": "8d74fbb9-f779-4d11-9b8d-c2217504ea4b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #teamNameTo should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "1561c3e1-1c96-41f5-a6ff-db2f082584f8",
                "parentUUID": "8d74fbb9-f779-4d11-9b8d-c2217504ea4b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "1970aa85-17d7-48f0-ae6b-7b3aeab72f76",
                "parentUUID": "b4ee1018-371e-404b-9eeb-91881ac492f4",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "7f58885a-72f6-4411-9bf4-7ad039960e37",
                "parentUUID": "b4ee1018-371e-404b-9eeb-91881ac492f4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "uuid": "b4ee1018-371e-404b-9eeb-91881ac492f4",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "1970aa85-17d7-48f0-ae6b-7b3aeab72f76",
                "parentUUID": "b4ee1018-371e-404b-9eeb-91881ac492f4",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "7f58885a-72f6-4411-9bf4-7ad039960e37",
                "parentUUID": "b4ee1018-371e-404b-9eeb-91881ac492f4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e6da373e-09e7-49bb-a1db-c4999531adb2",
                "parentUUID": "34a6d7c8-9b06-41b8-9dc4-14b586da93f9",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "c1fc759b-3c62-46f9-a58a-bd9b71cae949",
                "parentUUID": "34a6d7c8-9b06-41b8-9dc4-14b586da93f9",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "uuid": "34a6d7c8-9b06-41b8-9dc4-14b586da93f9",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #hostId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e6da373e-09e7-49bb-a1db-c4999531adb2",
                "parentUUID": "34a6d7c8-9b06-41b8-9dc4-14b586da93f9",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "HostTeamNameUpdateRequestMessage #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "c1fc759b-3c62-46f9-a58a-bd9b71cae949",
                "parentUUID": "34a6d7c8-9b06-41b8-9dc4-14b586da93f9",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostTeamNameUpdateRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "3d13de78-2400-4d8e-bbda-178c2c1c27d1",
                "parentUUID": "a679ceb1-6dcf-42aa-be2c-68cc53f6dc9e",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostTeamNameUpdateRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "470509bf-cbd6-4136-8013-0bba31a279d8",
                "parentUUID": "a679ceb1-6dcf-42aa-be2c-68cc53f6dc9e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "uuid": "a679ceb1-6dcf-42aa-be2c-68cc53f6dc9e",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "HostTeamNameUpdateRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "3d13de78-2400-4d8e-bbda-178c2c1c27d1",
                "parentUUID": "a679ceb1-6dcf-42aa-be2c-68cc53f6dc9e",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "HostTeamNameUpdateRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 4,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "470509bf-cbd6-4136-8013-0bba31a279d8",
                "parentUUID": "a679ceb1-6dcf-42aa-be2c-68cc53f6dc9e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
        "uuid": "beb3e70a-a96e-4d57-864f-a9e39a8107b5",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/HostTeamNameUpdateRequestMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "InquireTeamLeaderResponseMessage",
        "suites": [
          {
            "title": "#decision",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #decision should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.data._decision.should.be.true();",
                "isRoot": false,
                "uuid": "c45f1968-d0f3-46a8-ad02-72b2d33d4c26",
                "parentUUID": "40086d1a-b486-40d4-96b9-d3526101855e",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #decision should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._decision = <span class=\"hljs-literal\">true</span>;<br>m.decision.should.be.true();",
                "isRoot": false,
                "uuid": "a7f47fe8-166c-4970-a087-5e33e9a8d624",
                "parentUUID": "40086d1a-b486-40d4-96b9-d3526101855e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "uuid": "40086d1a-b486-40d4-96b9-d3526101855e",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #decision should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.data._decision.should.be.true();",
                "isRoot": false,
                "uuid": "c45f1968-d0f3-46a8-ad02-72b2d33d4c26",
                "parentUUID": "40086d1a-b486-40d4-96b9-d3526101855e",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #decision should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._decision = <span class=\"hljs-literal\">true</span>;<br>m.decision.should.be.true();",
                "isRoot": false,
                "uuid": "a7f47fe8-166c-4970-a087-5e33e9a8d624",
                "parentUUID": "40086d1a-b486-40d4-96b9-d3526101855e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "dec3c08e-ebb5-4f41-beb6-78441a3ae362",
                "parentUUID": "60fdd4a2-bbc9-41b9-8407-dec1fbbaf2d4",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5549706a-edb1-47ce-9de7-645ce5f8b7f9",
                "parentUUID": "60fdd4a2-bbc9-41b9-8407-dec1fbbaf2d4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "uuid": "60fdd4a2-bbc9-41b9-8407-dec1fbbaf2d4",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "dec3c08e-ebb5-4f41-beb6-78441a3ae362",
                "parentUUID": "60fdd4a2-bbc9-41b9-8407-dec1fbbaf2d4",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5549706a-edb1-47ce-9de7-645ce5f8b7f9",
                "parentUUID": "60fdd4a2-bbc9-41b9-8407-dec1fbbaf2d4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#contestantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e23af201-6fbb-4981-9702-d97be1eb0dac",
                "parentUUID": "1c1db983-ae10-4a49-8a07-15c937d86a4d",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "307a68f0-2c2f-4895-b6ea-14a86c7ec254",
                "parentUUID": "1c1db983-ae10-4a49-8a07-15c937d86a4d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "uuid": "1c1db983-ae10-4a49-8a07-15c937d86a4d",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "InquireTeamLeaderResponseMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "e23af201-6fbb-4981-9702-d97be1eb0dac",
                "parentUUID": "1c1db983-ae10-4a49-8a07-15c937d86a4d",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "InquireTeamLeaderResponseMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "307a68f0-2c2f-4895-b6ea-14a86c7ec254",
                "parentUUID": "1c1db983-ae10-4a49-8a07-15c937d86a4d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "InquireTeamLeaderResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "6fc63f93-1b27-49e7-8870-4bee3ffd65e1",
                "parentUUID": "b1d872bf-e4dc-4f4e-8785-cfb063ef8935",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "InquireTeamLeaderResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "a3f21431-4ed0-4839-93b1-76ca95ca9618",
                "parentUUID": "b1d872bf-e4dc-4f4e-8785-cfb063ef8935",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "uuid": "b1d872bf-e4dc-4f4e-8785-cfb063ef8935",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "InquireTeamLeaderResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "6fc63f93-1b27-49e7-8870-4bee3ffd65e1",
                "parentUUID": "b1d872bf-e4dc-4f4e-8785-cfb063ef8935",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "InquireTeamLeaderResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "a3f21431-4ed0-4839-93b1-76ca95ca9618",
                "parentUUID": "b1d872bf-e4dc-4f4e-8785-cfb063ef8935",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
        "uuid": "a51e833c-712e-4bb1-a68b-6296e16490df",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/InquireTeamLeaderResponseMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ObserverUpdateMessage",
        "suites": [
          {
            "title": "#gameState",
            "suites": [],
            "tests": [
              {
                "title": "should get value",
                "fullTitle": "ObserverUpdateMessage #gameState should get value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.gameState.should.be.Object();",
                "isRoot": false,
                "uuid": "5269b268-02b3-4737-bdff-f3adab6ca61c",
                "parentUUID": "4db23fc6-b305-4ff0-937e-206c3df670d6",
                "skipped": false
              },
              {
                "title": "should not have ids",
                "fullTitle": "ObserverUpdateMessage #gameState should not have ids",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState.id);<br>should.not.exist(m.gameState.host.id);",
                "isRoot": false,
                "uuid": "520466c3-1b40-4c38-90a4-e0d09d0f5cc0",
                "parentUUID": "4db23fc6-b305-4ff0-937e-206c3df670d6",
                "skipped": false
              },
              {
                "title": "should promote private field _ to public field",
                "fullTitle": "ObserverUpdateMessage #gameState should promote private field _ to public field",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState._host);<br>should.not.exist(m.gameState._settings);<br>should.exist(m.gameState.host);<br>should.exist(m.gameState.settings);<br>should.exist(m.gameState.settings.teamLeaderSelectionMethod);",
                "isRoot": false,
                "uuid": "f7f07456-9d89-40cd-ab4e-dfd0f936ed9b",
                "parentUUID": "4db23fc6-b305-4ff0-937e-206c3df670d6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
            "uuid": "4db23fc6-b305-4ff0-937e-206c3df670d6",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
            "passes": [
              {
                "title": "should get value",
                "fullTitle": "ObserverUpdateMessage #gameState should get value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.gameState.should.be.Object();",
                "isRoot": false,
                "uuid": "5269b268-02b3-4737-bdff-f3adab6ca61c",
                "parentUUID": "4db23fc6-b305-4ff0-937e-206c3df670d6",
                "skipped": false
              },
              {
                "title": "should not have ids",
                "fullTitle": "ObserverUpdateMessage #gameState should not have ids",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState.id);<br>should.not.exist(m.gameState.host.id);",
                "isRoot": false,
                "uuid": "520466c3-1b40-4c38-90a4-e0d09d0f5cc0",
                "parentUUID": "4db23fc6-b305-4ff0-937e-206c3df670d6",
                "skipped": false
              },
              {
                "title": "should promote private field _ to public field",
                "fullTitle": "ObserverUpdateMessage #gameState should promote private field _ to public field",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState._host);<br>should.not.exist(m.gameState._settings);<br>should.exist(m.gameState.host);<br>should.exist(m.gameState.settings);<br>should.exist(m.gameState.settings.teamLeaderSelectionMethod);",
                "isRoot": false,
                "uuid": "f7f07456-9d89-40cd-ab4e-dfd0f936ed9b",
                "parentUUID": "4db23fc6-b305-4ff0-937e-206c3df670d6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "ObserverUpdateMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "6dfe48ec-d04b-4c3a-b244-861e8e475da0",
                "parentUUID": "fb076ee7-adaa-489f-ac18-840206e36c81",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ObserverUpdateMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "8a4bb700-e51d-4f7b-86c4-f9f3070d1654",
                "parentUUID": "fb076ee7-adaa-489f-ac18-840206e36c81",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
            "uuid": "fb076ee7-adaa-489f-ac18-840206e36c81",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "ObserverUpdateMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "6dfe48ec-d04b-4c3a-b244-861e8e475da0",
                "parentUUID": "fb076ee7-adaa-489f-ac18-840206e36c81",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "ObserverUpdateMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "8a4bb700-e51d-4f7b-86c4-f9f3070d1654",
                "parentUUID": "fb076ee7-adaa-489f-ac18-840206e36c81",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
        "uuid": "15588ae0-3fe3-46dd-a5e0-084c4e699199",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/ObserverUpdateMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "RejoinSessionMessage",
        "suites": [
          {
            "title": "#rejoinAs",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #rejoinAs should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.rejoinAs = constants.rejoinAs.HOST;<br>m.data._rejoinAs.should.equal(constants.rejoinAs.HOST);",
                "isRoot": false,
                "uuid": "9026787b-837b-4c55-a5f9-3364fd76a183",
                "parentUUID": "69e880fa-8f9f-4572-81ac-8db50c1d74ad",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #rejoinAs should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._rejoinAs = constants.rejoinAs.HOST;<br>m.rejoinAs.should.equal(constants.rejoinAs.HOST);",
                "isRoot": false,
                "uuid": "282950dd-cad4-423a-9859-27fea9dc99bf",
                "parentUUID": "69e880fa-8f9f-4572-81ac-8db50c1d74ad",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "uuid": "69e880fa-8f9f-4572-81ac-8db50c1d74ad",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #rejoinAs should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.rejoinAs = constants.rejoinAs.HOST;<br>m.data._rejoinAs.should.equal(constants.rejoinAs.HOST);",
                "isRoot": false,
                "uuid": "9026787b-837b-4c55-a5f9-3364fd76a183",
                "parentUUID": "69e880fa-8f9f-4572-81ac-8db50c1d74ad",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #rejoinAs should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._rejoinAs = constants.rejoinAs.HOST;<br>m.rejoinAs.should.equal(constants.rejoinAs.HOST);",
                "isRoot": false,
                "uuid": "282950dd-cad4-423a-9859-27fea9dc99bf",
                "parentUUID": "69e880fa-8f9f-4572-81ac-8db50c1d74ad",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "dc5e5a84-c47d-41b3-9aab-cb9cd892baba",
                "parentUUID": "7085797e-c871-4929-93cd-a0a61ca27b47",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "b1e366d3-81bd-4a5c-bb34-d4fea99eb609",
                "parentUUID": "7085797e-c871-4929-93cd-a0a61ca27b47",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "uuid": "7085797e-c871-4929-93cd-a0a61ca27b47",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "dc5e5a84-c47d-41b3-9aab-cb9cd892baba",
                "parentUUID": "7085797e-c871-4929-93cd-a0a61ca27b47",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "b1e366d3-81bd-4a5c-bb34-d4fea99eb609",
                "parentUUID": "7085797e-c871-4929-93cd-a0a61ca27b47",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#participantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #participantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "db4247fb-5f32-45de-b08b-92c2018b35c8",
                "parentUUID": "6f386603-1d65-400b-8e04-79fc53cb1be1",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #participantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "ed56c823-d7e8-4eb2-b951-1780d50e5dfd",
                "parentUUID": "6f386603-1d65-400b-8e04-79fc53cb1be1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "uuid": "6f386603-1d65-400b-8e04-79fc53cb1be1",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "RejoinSessionMessage #participantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "db4247fb-5f32-45de-b08b-92c2018b35c8",
                "parentUUID": "6f386603-1d65-400b-8e04-79fc53cb1be1",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RejoinSessionMessage #participantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "ed56c823-d7e8-4eb2-b951-1780d50e5dfd",
                "parentUUID": "6f386603-1d65-400b-8e04-79fc53cb1be1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "RejoinSessionMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.rejoinAs = constants.rejoinAs.OBSERVER;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "1d09c12d-4020-48ca-8b10-f2bf25b8d3ee",
                "parentUUID": "eda54633-b83f-4a54-888a-b63077ed5f2d",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "RejoinSessionMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "3614d8e7-026d-485a-8059-b7d0ac32909a",
                "parentUUID": "eda54633-b83f-4a54-888a-b63077ed5f2d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "uuid": "eda54633-b83f-4a54-888a-b63077ed5f2d",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RejoinSessionMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "RejoinSessionMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.rejoinAs = constants.rejoinAs.OBSERVER;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "1d09c12d-4020-48ca-8b10-f2bf25b8d3ee",
                "parentUUID": "eda54633-b83f-4a54-888a-b63077ed5f2d",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "RejoinSessionMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "3614d8e7-026d-485a-8059-b7d0ac32909a",
                "parentUUID": "eda54633-b83f-4a54-888a-b63077ed5f2d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/RejoinSessionMessageTests.js",
        "uuid": "c85717bd-f364-4a93-ad46-0bd5fa8fb98c",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RejoinSessionMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "RoundWonMessage",
        "suites": [
          {
            "title": "#username",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "RoundWonMessage #username should set value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "11886483-cf87-4518-8c30-7584950ccabb",
                "parentUUID": "d58f8620-61ad-4ff8-bc7a-a107d8fe2ac4",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RoundWonMessage #username should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "68fe8322-19de-41bd-a6d0-3a9978b7467b",
                "parentUUID": "d58f8620-61ad-4ff8-bc7a-a107d8fe2ac4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RoundWonMessageTests.js",
            "uuid": "d58f8620-61ad-4ff8-bc7a-a107d8fe2ac4",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RoundWonMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "RoundWonMessage #username should set value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "11886483-cf87-4518-8c30-7584950ccabb",
                "parentUUID": "d58f8620-61ad-4ff8-bc7a-a107d8fe2ac4",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RoundWonMessage #username should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "68fe8322-19de-41bd-a6d0-3a9978b7467b",
                "parentUUID": "d58f8620-61ad-4ff8-bc7a-a107d8fe2ac4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#teamName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "RoundWonMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "3493ae62-4946-455b-b249-cbf028329746",
                "parentUUID": "b6239fa6-d5ff-4eed-a49b-4980b6b109c6",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RoundWonMessage #teamName should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "ca48f212-8454-4208-8251-f45e4c9a8eff",
                "parentUUID": "b6239fa6-d5ff-4eed-a49b-4980b6b109c6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RoundWonMessageTests.js",
            "uuid": "b6239fa6-d5ff-4eed-a49b-4980b6b109c6",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RoundWonMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "RoundWonMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "3493ae62-4946-455b-b249-cbf028329746",
                "parentUUID": "b6239fa6-d5ff-4eed-a49b-4980b6b109c6",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "RoundWonMessage #teamName should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "ca48f212-8454-4208-8251-f45e4c9a8eff",
                "parentUUID": "b6239fa6-d5ff-4eed-a49b-4980b6b109c6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "RoundWonMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "aa60ce11-0892-4d88-ab3d-d8718d61d7da",
                "parentUUID": "a63a6caa-a79a-4c5a-b400-8f7e4ce588e6",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "RoundWonMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "b26f837a-4766-4247-99b2-617beffca9f6",
                "parentUUID": "a63a6caa-a79a-4c5a-b400-8f7e4ce588e6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/RoundWonMessageTests.js",
            "uuid": "a63a6caa-a79a-4c5a-b400-8f7e4ce588e6",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RoundWonMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "RoundWonMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "aa60ce11-0892-4d88-ab3d-d8718d61d7da",
                "parentUUID": "a63a6caa-a79a-4c5a-b400-8f7e4ce588e6",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "RoundWonMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "b26f837a-4766-4247-99b2-617beffca9f6",
                "parentUUID": "a63a6caa-a79a-4c5a-b400-8f7e4ce588e6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/RoundWonMessageTests.js",
        "uuid": "6b5f3a7c-ae1f-4619-bf3b-c430fb7226ed",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/RoundWonMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SessionCompleted",
        "suites": [
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionCompleted #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionCompleted();<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "b5e3aa5b-07a5-41a3-8487-ae08674b655a",
                "parentUUID": "b3e6adeb-6e4e-4500-9115-8ec6bca7c7ba",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionCompletedTests.js",
            "uuid": "b3e6adeb-6e4e-4500-9115-8ec6bca7c7ba",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompletedTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionCompleted #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionCompleted();<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "b5e3aa5b-07a5-41a3-8487-ae08674b655a",
                "parentUUID": "b3e6adeb-6e4e-4500-9115-8ec6bca7c7ba",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SessionCompletedTests.js",
        "uuid": "bd9101d1-1e1b-4e40-800d-b797b41b6d3c",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompletedTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SessionComplete",
        "suites": [
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SessionComplete #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "7df1414d-0194-43fe-a355-f551507dc587",
                "parentUUID": "04a78c95-c220-4c67-81ed-41bf0b572115",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionComplete #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5a8f1ba8-72cb-4e1f-973b-77c4c2333f54",
                "parentUUID": "04a78c95-c220-4c67-81ed-41bf0b572115",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionCompleteTests.js",
            "uuid": "04a78c95-c220-4c67-81ed-41bf0b572115",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompleteTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SessionComplete #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "7df1414d-0194-43fe-a355-f551507dc587",
                "parentUUID": "04a78c95-c220-4c67-81ed-41bf0b572115",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionComplete #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5a8f1ba8-72cb-4e1f-973b-77c4c2333f54",
                "parentUUID": "04a78c95-c220-4c67-81ed-41bf0b572115",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#hostId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SessionComplete #hostId should set value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "3bf4d791-d30d-4fe8-9df6-090e21225cc0",
                "parentUUID": "2007479a-2aa3-48b9-b4a4-f33ec18e6f9c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionComplete #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "d3f121c7-1cd4-4225-9644-87bf0b6209d8",
                "parentUUID": "2007479a-2aa3-48b9-b4a4-f33ec18e6f9c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionCompleteTests.js",
            "uuid": "2007479a-2aa3-48b9-b4a4-f33ec18e6f9c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompleteTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SessionComplete #hostId should set value",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "3bf4d791-d30d-4fe8-9df6-090e21225cc0",
                "parentUUID": "2007479a-2aa3-48b9-b4a4-f33ec18e6f9c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionComplete #hostId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "d3f121c7-1cd4-4225-9644-87bf0b6209d8",
                "parentUUID": "2007479a-2aa3-48b9-b4a4-f33ec18e6f9c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionComplete #isValid() should return true when valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "52f9f1ff-f299-4163-8f3b-276874984d88",
                "parentUUID": "b94a2ee2-1579-4b15-aefd-2be7ca55b695",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionComplete #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "abe8aeb5-4399-4072-be04-943cfd985f1f",
                "parentUUID": "b94a2ee2-1579-4b15-aefd-2be7ca55b695",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionCompleteTests.js",
            "uuid": "b94a2ee2-1579-4b15-aefd-2be7ca55b695",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompleteTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionComplete #isValid() should return true when valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "52f9f1ff-f299-4163-8f3b-276874984d88",
                "parentUUID": "b94a2ee2-1579-4b15-aefd-2be7ca55b695",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionComplete #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "abe8aeb5-4399-4072-be04-943cfd985f1f",
                "parentUUID": "b94a2ee2-1579-4b15-aefd-2be7ca55b695",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SessionCompleteTests.js",
        "uuid": "a142c428-e2aa-410c-9b0b-6a0f956a1b03",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionCompleteTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SessionInformationRequestMessage",
        "suites": [
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SessionInformationRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "794666b7-4ea3-480c-8993-e7ad5d976df5",
                "parentUUID": "d3cab98b-213f-4602-963c-f303d63fd917",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionInformationRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "eb8f059a-cae6-45f9-bdd8-f5fe36b910a5",
                "parentUUID": "d3cab98b-213f-4602-963c-f303d63fd917",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "uuid": "d3cab98b-213f-4602-963c-f303d63fd917",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SessionInformationRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "794666b7-4ea3-480c-8993-e7ad5d976df5",
                "parentUUID": "d3cab98b-213f-4602-963c-f303d63fd917",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionInformationRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "eb8f059a-cae6-45f9-bdd8-f5fe36b910a5",
                "parentUUID": "d3cab98b-213f-4602-963c-f303d63fd917",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#participantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SessionInformationRequestMessage #participantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "603ec1d4-f86c-4110-be86-be909c8b33e7",
                "parentUUID": "551591d6-ee1b-4557-a61f-392d55969de3",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionInformationRequestMessage #participantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "39ea3650-7040-42c0-805a-383343d5aaf8",
                "parentUUID": "551591d6-ee1b-4557-a61f-392d55969de3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "uuid": "551591d6-ee1b-4557-a61f-392d55969de3",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SessionInformationRequestMessage #participantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "603ec1d4-f86c-4110-be86-be909c8b33e7",
                "parentUUID": "551591d6-ee1b-4557-a61f-392d55969de3",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SessionInformationRequestMessage #participantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "39ea3650-7040-42c0-805a-383343d5aaf8",
                "parentUUID": "551591d6-ee1b-4557-a61f-392d55969de3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionInformationRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "5719b7e6-5ff3-4749-8ecd-79fa0203b745",
                "parentUUID": "36025eef-f19b-44a2-bbf1-a41c05036322",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionInformationRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "a05264cd-0239-4ad7-942a-a579437c2464",
                "parentUUID": "36025eef-f19b-44a2-bbf1-a41c05036322",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "uuid": "36025eef-f19b-44a2-bbf1-a41c05036322",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionInformationRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "5719b7e6-5ff3-4749-8ecd-79fa0203b745",
                "parentUUID": "36025eef-f19b-44a2-bbf1-a41c05036322",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionInformationRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "a05264cd-0239-4ad7-942a-a579437c2464",
                "parentUUID": "36025eef-f19b-44a2-bbf1-a41c05036322",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
        "uuid": "2ceec910-dd04-47cd-8252-18896c0fcf3f",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationRequestMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SessionInformationResponseMessage",
        "suites": [
          {
            "title": "#info",
            "suites": [],
            "tests": [
              {
                "title": "should get value",
                "fullTitle": "SessionInformationResponseMessage #info should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.should.be.Object();",
                "isRoot": false,
                "uuid": "9564669a-4784-43f0-8732-775c65e83657",
                "parentUUID": "c74c1948-30f2-41f4-8fb6-6a13e9a4aba3",
                "skipped": false
              },
              {
                "title": "should not have ids",
                "fullTitle": "SessionInformationResponseMessage #info should not have ids",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.host.should.not.be.null();<br>should.not.exist(m.info.host.id);",
                "isRoot": false,
                "uuid": "35d4c486-0622-4b79-b7e9-65a63d2d7607",
                "parentUUID": "c74c1948-30f2-41f4-8fb6-6a13e9a4aba3",
                "skipped": false
              },
              {
                "title": "should promote private field _ to public field",
                "fullTitle": "SessionInformationResponseMessage #info should promote private field _ to public field",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>should.not.exist(m.info._host);<br>should.not.exist(m.info._session);<br>should.exist(m.info.host);<br>should.exist(m.info.session);<br>should.exist(m.info.session.settings.teamLeaderSelectionMethod);",
                "isRoot": false,
                "uuid": "93467984-4c98-4a0b-ac12-ce9f0cc22903",
                "parentUUID": "c74c1948-30f2-41f4-8fb6-6a13e9a4aba3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
            "uuid": "c74c1948-30f2-41f4-8fb6-6a13e9a4aba3",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
            "passes": [
              {
                "title": "should get value",
                "fullTitle": "SessionInformationResponseMessage #info should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.should.be.Object();",
                "isRoot": false,
                "uuid": "9564669a-4784-43f0-8732-775c65e83657",
                "parentUUID": "c74c1948-30f2-41f4-8fb6-6a13e9a4aba3",
                "skipped": false
              },
              {
                "title": "should not have ids",
                "fullTitle": "SessionInformationResponseMessage #info should not have ids",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.host.should.not.be.null();<br>should.not.exist(m.info.host.id);",
                "isRoot": false,
                "uuid": "35d4c486-0622-4b79-b7e9-65a63d2d7607",
                "parentUUID": "c74c1948-30f2-41f4-8fb6-6a13e9a4aba3",
                "skipped": false
              },
              {
                "title": "should promote private field _ to public field",
                "fullTitle": "SessionInformationResponseMessage #info should promote private field _ to public field",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>should.not.exist(m.info._host);<br>should.not.exist(m.info._session);<br>should.exist(m.info.host);<br>should.exist(m.info.session);<br>should.exist(m.info.session.settings.teamLeaderSelectionMethod);",
                "isRoot": false,
                "uuid": "93467984-4c98-4a0b-ac12-ce9f0cc22903",
                "parentUUID": "c74c1948-30f2-41f4-8fb6-6a13e9a4aba3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 3
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionInformationResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "298cbdb3-3457-4c7c-9b4e-42b0bb8d60b4",
                "parentUUID": "5da711b2-61a6-44af-8777-42f25ba71ded",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionInformationResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "cb491fd4-4780-43f8-b6e4-783ae9b4f326",
                "parentUUID": "5da711b2-61a6-44af-8777-42f25ba71ded",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
            "uuid": "5da711b2-61a6-44af-8777-42f25ba71ded",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SessionInformationResponseMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "298cbdb3-3457-4c7c-9b4e-42b0bb8d60b4",
                "parentUUID": "5da711b2-61a6-44af-8777-42f25ba71ded",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SessionInformationResponseMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "cb491fd4-4780-43f8-b6e4-783ae9b4f326",
                "parentUUID": "5da711b2-61a6-44af-8777-42f25ba71ded",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
        "uuid": "16027ee9-9627-473c-8e31-77a4b6d611e9",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SessionInformationResponseMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SetTeamNameRequestMessage",
        "suites": [
          {
            "title": "#teamName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5d4b8c18-6ffa-4f57-8d37-4f8428b3c1f3",
                "parentUUID": "804aa5ca-8e15-4fc9-ac96-4ff258ea2bd0",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "bb70deeb-2e8b-49ba-bbdf-f5b4994e982b",
                "parentUUID": "804aa5ca-8e15-4fc9-ac96-4ff258ea2bd0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "uuid": "804aa5ca-8e15-4fc9-ac96-4ff258ea2bd0",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "5d4b8c18-6ffa-4f57-8d37-4f8428b3c1f3",
                "parentUUID": "804aa5ca-8e15-4fc9-ac96-4ff258ea2bd0",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #teamName should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "bb70deeb-2e8b-49ba-bbdf-f5b4994e982b",
                "parentUUID": "804aa5ca-8e15-4fc9-ac96-4ff258ea2bd0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#sessionId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "332743d1-e6ec-4b4d-8c49-e9354ef3a282",
                "parentUUID": "89ec7fe4-9d85-49f9-b3f4-1836ec6ae43c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "981b1998-cd11-46cd-9092-1cc909e86a10",
                "parentUUID": "89ec7fe4-9d85-49f9-b3f4-1836ec6ae43c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "uuid": "89ec7fe4-9d85-49f9-b3f4-1836ec6ae43c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #sessionId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "332743d1-e6ec-4b4d-8c49-e9354ef3a282",
                "parentUUID": "89ec7fe4-9d85-49f9-b3f4-1836ec6ae43c",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #sessionId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "981b1998-cd11-46cd-9092-1cc909e86a10",
                "parentUUID": "89ec7fe4-9d85-49f9-b3f4-1836ec6ae43c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#contestantId",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "b66d030e-4176-48d1-99e1-6f377493f83d",
                "parentUUID": "7ec09368-7786-46e2-8d7f-3ed9f7a9386b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "3a826806-0c2b-4912-a7a4-cf56effdc708",
                "parentUUID": "7ec09368-7786-46e2-8d7f-3ed9f7a9386b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "uuid": "7ec09368-7786-46e2-8d7f-3ed9f7a9386b",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "SetTeamNameRequestMessage #contestantId should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "b66d030e-4176-48d1-99e1-6f377493f83d",
                "parentUUID": "7ec09368-7786-46e2-8d7f-3ed9f7a9386b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "SetTeamNameRequestMessage #contestantId should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
                "isRoot": false,
                "uuid": "3a826806-0c2b-4912-a7a4-cf56effdc708",
                "parentUUID": "7ec09368-7786-46e2-8d7f-3ed9f7a9386b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SetTeamNameRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.contestantId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "83338187-8085-411e-b29c-ca62f445edbb",
                "parentUUID": "7ba5657f-484a-4a31-bf38-655415fe210e",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SetTeamNameRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "7cb3c14b-1ade-4e95-9e8a-9845d718882d",
                "parentUUID": "7ba5657f-484a-4a31-bf38-655415fe210e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "uuid": "7ba5657f-484a-4a31-bf38-655415fe210e",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SetTeamNameRequestMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.contestantId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "83338187-8085-411e-b29c-ca62f445edbb",
                "parentUUID": "7ba5657f-484a-4a31-bf38-655415fe210e",
                "skipped": false
              },
              {
                "title": "should return false when invalid",
                "fullTitle": "SetTeamNameRequestMessage #isValid() should return false when invalid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.isValid().should.be.false();",
                "isRoot": false,
                "uuid": "7cb3c14b-1ade-4e95-9e8a-9845d718882d",
                "parentUUID": "7ba5657f-484a-4a31-bf38-655415fe210e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
        "uuid": "f4c8bb61-f5ce-4778-aa89-b300a70ddf79",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SetTeamNameRequestMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "SuccessMessage",
        "suites": [
          {
            "title": "#isValid()",
            "suites": [],
            "tests": [
              {
                "title": "should return true when valid",
                "fullTitle": "SuccessMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SuccessMessage();<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "1f3deee1-87f9-41ee-abe4-f2aba899d76b",
                "parentUUID": "70d7457a-f18d-44fb-9bc1-e281ffa32be0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/message/SuccessMessageTests.js",
            "uuid": "70d7457a-f18d-44fb-9bc1-e281ffa32be0",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SuccessMessageTests.js",
            "passes": [
              {
                "title": "should return true when valid",
                "fullTitle": "SuccessMessage #isValid() should return true when valid",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SuccessMessage();<br>m.isValid().should.be.true();",
                "isRoot": false,
                "uuid": "1f3deee1-87f9-41ee-abe4-f2aba899d76b",
                "parentUUID": "70d7457a-f18d-44fb-9bc1-e281ffa32be0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/message/SuccessMessageTests.js",
        "uuid": "e8e21173-fb05-4309-b2a5-e9bb1d834e45",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/message/SuccessMessageTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "ParamCheck",
        "suites": [
          {
            "title": "#isInstanceAndTypeOf()",
            "suites": [],
            "tests": [
              {
                "title": "should return false when not referenced",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when not referenced",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf().should.be.false();",
                "isRoot": false,
                "uuid": "f5fe91e3-9874-421c-946e-6082b537436e",
                "parentUUID": "c4b7e7b5-d426-469a-ace7-359b9f5a5d8e",
                "skipped": false
              },
              {
                "title": "should return false when null",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when null",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">''</span>).should.be.false();",
                "isRoot": false,
                "uuid": "d79159e4-94b7-43ba-b59d-4b9dc6302f05",
                "parentUUID": "c4b7e7b5-d426-469a-ace7-359b9f5a5d8e",
                "skipped": false
              },
              {
                "title": "should return false when not the correct type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when not the correct type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'Int'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "7910d926-dace-412a-ba4b-0494019971f2",
                "parentUUID": "c4b7e7b5-d426-469a-ace7-359b9f5a5d8e",
                "skipped": false
              },
              {
                "title": "should return true when is a built-in type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return true when is a built-in type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'Number'</span>).should.be.true();",
                "isRoot": false,
                "uuid": "8eefabf4-e17f-4d05-ae50-2ae35fe3b696",
                "parentUUID": "c4b7e7b5-d426-469a-ace7-359b9f5a5d8e",
                "skipped": false
              },
              {
                "title": "should return true when is user defined type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return true when is user defined type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-keyword\">new</span> UserDefinedType(),<br>    UserDefinedType).should.be.true();",
                "isRoot": false,
                "uuid": "b45d4129-7818-4b4e-967a-21e8716ed605",
                "parentUUID": "c4b7e7b5-d426-469a-ace7-359b9f5a5d8e",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParamCheckTests.js",
            "uuid": "c4b7e7b5-d426-469a-ace7-359b9f5a5d8e",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParamCheckTests.js",
            "passes": [
              {
                "title": "should return false when not referenced",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when not referenced",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf().should.be.false();",
                "isRoot": false,
                "uuid": "f5fe91e3-9874-421c-946e-6082b537436e",
                "parentUUID": "c4b7e7b5-d426-469a-ace7-359b9f5a5d8e",
                "skipped": false
              },
              {
                "title": "should return false when null",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when null",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">''</span>).should.be.false();",
                "isRoot": false,
                "uuid": "d79159e4-94b7-43ba-b59d-4b9dc6302f05",
                "parentUUID": "c4b7e7b5-d426-469a-ace7-359b9f5a5d8e",
                "skipped": false
              },
              {
                "title": "should return false when not the correct type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return false when not the correct type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'Int'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "7910d926-dace-412a-ba4b-0494019971f2",
                "parentUUID": "c4b7e7b5-d426-469a-ace7-359b9f5a5d8e",
                "skipped": false
              },
              {
                "title": "should return true when is a built-in type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return true when is a built-in type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'Number'</span>).should.be.true();",
                "isRoot": false,
                "uuid": "8eefabf4-e17f-4d05-ae50-2ae35fe3b696",
                "parentUUID": "c4b7e7b5-d426-469a-ace7-359b9f5a5d8e",
                "skipped": false
              },
              {
                "title": "should return true when is user defined type",
                "fullTitle": "ParamCheck #isInstanceAndTypeOf() should return true when is user defined type",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-keyword\">new</span> UserDefinedType(),<br>    UserDefinedType).should.be.true();",
                "isRoot": false,
                "uuid": "b45d4129-7818-4b4e-967a-21e8716ed605",
                "parentUUID": "c4b7e7b5-d426-469a-ace7-359b9f5a5d8e",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/ParamCheckTests.js",
        "uuid": "62f2e0d1-1130-44f6-aa67-3c87334c19a7",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParamCheckTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Participants",
        "suites": [
          {
            "title": "#all",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participants #all should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "39551626-f1fa-489e-a5ac-0b9bcc60097a",
                "parentUUID": "3dd928f8-cfaf-4c8a-9538-b3d023c31c34",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participants #all should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "c1753cf1-dd4d-4147-9ec5-dfdca8ad8746",
                "parentUUID": "3dd928f8-cfaf-4c8a-9538-b3d023c31c34",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Participants #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all.pop();<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "8afdbb5c-0aee-451d-a391-e64b767c1963",
                "parentUUID": "3dd928f8-cfaf-4c8a-9538-b3d023c31c34",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "3dd928f8-cfaf-4c8a-9538-b3d023c31c34",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participants #all should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "39551626-f1fa-489e-a5ac-0b9bcc60097a",
                "parentUUID": "3dd928f8-cfaf-4c8a-9538-b3d023c31c34",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participants #all should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "c1753cf1-dd4d-4147-9ec5-dfdca8ad8746",
                "parentUUID": "3dd928f8-cfaf-4c8a-9538-b3d023c31c34",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Participants #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all.pop();<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "8afdbb5c-0aee-451d-a391-e64b767c1963",
                "parentUUID": "3dd928f8-cfaf-4c8a-9538-b3d023c31c34",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#length",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participants #length should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.length = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "c4bbeede-8b25-415d-9365-fb878313d177",
                "parentUUID": "e8934ee7-e0dd-4703-9b2f-ef7927605e5d",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participants #length should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "97b547be-ba40-498d-98c6-873063eaa302",
                "parentUUID": "e8934ee7-e0dd-4703-9b2f-ef7927605e5d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "e8934ee7-e0dd-4703-9b2f-ef7927605e5d",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participants #length should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.length = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "c4bbeede-8b25-415d-9365-fb878313d177",
                "parentUUID": "e8934ee7-e0dd-4703-9b2f-ef7927605e5d",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participants #length should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "97b547be-ba40-498d-98c6-873063eaa302",
                "parentUUID": "e8934ee7-e0dd-4703-9b2f-ef7927605e5d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#contains(id)",
            "suites": [],
            "tests": [
              {
                "title": "should return true when id does exist",
                "fullTitle": "Participants #contains(id) should return true when id does exist",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(p.id).should.be.true();",
                "isRoot": false,
                "uuid": "fffee70e-27d8-45e6-ac48-c5ed40168f20",
                "parentUUID": "74d29097-2952-466f-853e-d091dc5c95cc",
                "skipped": false
              },
              {
                "title": "should return false when id does not exist",
                "fullTitle": "Participants #contains(id) should return false when id does not exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(<span class=\"hljs-string\">'p2'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "df2bff9a-10e8-495b-9a62-6aa97eff4f43",
                "parentUUID": "74d29097-2952-466f-853e-d091dc5c95cc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "74d29097-2952-466f-853e-d091dc5c95cc",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should return true when id does exist",
                "fullTitle": "Participants #contains(id) should return true when id does exist",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(p.id).should.be.true();",
                "isRoot": false,
                "uuid": "fffee70e-27d8-45e6-ac48-c5ed40168f20",
                "parentUUID": "74d29097-2952-466f-853e-d091dc5c95cc",
                "skipped": false
              },
              {
                "title": "should return false when id does not exist",
                "fullTitle": "Participants #contains(id) should return false when id does not exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(<span class=\"hljs-string\">'p2'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "df2bff9a-10e8-495b-9a62-6aa97eff4f43",
                "parentUUID": "74d29097-2952-466f-853e-d091dc5c95cc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#add(participant)",
            "suites": [],
            "tests": [
              {
                "title": "should add the given participant",
                "fullTitle": "Participants #add(participant) should add the given participant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc._participants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc._participants[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "1ab9140e-77f9-44f3-afda-05d83b6db776",
                "parentUUID": "a55a76ba-590f-434f-87e3-fcb50e3afdc1",
                "skipped": false
              },
              {
                "title": "should error if participant with id already exists",
                "fullTitle": "Participants #add(participant) should error if participant with id already exists",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.add(p);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "7ba79b09-08c6-4a76-97fc-2b28c0ff0730",
                "parentUUID": "a55a76ba-590f-434f-87e3-fcb50e3afdc1",
                "skipped": false
              },
              {
                "title": "should emit add event",
                "fullTitle": "Participants #add(participant) should emit add event",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.on(<span class=\"hljs-string\">'add'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">participant</span>) </span>{<br>    participant.should.equal(p);<br>    done();<br>});<br>pc.add(p);",
                "isRoot": false,
                "uuid": "8f7b7480-e64b-4492-87c8-ef40d3acf80b",
                "parentUUID": "a55a76ba-590f-434f-87e3-fcb50e3afdc1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "a55a76ba-590f-434f-87e3-fcb50e3afdc1",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should add the given participant",
                "fullTitle": "Participants #add(participant) should add the given participant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc._participants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc._participants[<span class=\"hljs-number\">0</span>].should.equal(p);",
                "isRoot": false,
                "uuid": "1ab9140e-77f9-44f3-afda-05d83b6db776",
                "parentUUID": "a55a76ba-590f-434f-87e3-fcb50e3afdc1",
                "skipped": false
              },
              {
                "title": "should error if participant with id already exists",
                "fullTitle": "Participants #add(participant) should error if participant with id already exists",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.add(p);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "7ba79b09-08c6-4a76-97fc-2b28c0ff0730",
                "parentUUID": "a55a76ba-590f-434f-87e3-fcb50e3afdc1",
                "skipped": false
              },
              {
                "title": "should emit add event",
                "fullTitle": "Participants #add(participant) should emit add event",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.on(<span class=\"hljs-string\">'add'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">participant</span>) </span>{<br>    participant.should.equal(p);<br>    done();<br>});<br>pc.add(p);",
                "isRoot": false,
                "uuid": "8f7b7480-e64b-4492-87c8-ef40d3acf80b",
                "parentUUID": "a55a76ba-590f-434f-87e3-fcb50e3afdc1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#remove(participant)",
            "suites": [],
            "tests": [
              {
                "title": "should remove the existing participant",
                "fullTitle": "Participants #remove(participant) should remove the existing participant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "83234907-04ee-4b41-92c4-2eef280d6d7d",
                "parentUUID": "4044154f-6508-4861-acd4-391b9c695bac",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing participant",
                "fullTitle": "Participants #remove(participant) should not remove the non-existing participant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p1).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "5358e377-c0b5-444e-a5f7-3d391abbc44e",
                "parentUUID": "4044154f-6508-4861-acd4-391b9c695bac",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "4044154f-6508-4861-acd4-391b9c695bac",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should remove the existing participant",
                "fullTitle": "Participants #remove(participant) should remove the existing participant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "83234907-04ee-4b41-92c4-2eef280d6d7d",
                "parentUUID": "4044154f-6508-4861-acd4-391b9c695bac",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing participant",
                "fullTitle": "Participants #remove(participant) should not remove the non-existing participant",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p1).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "5358e377-c0b5-444e-a5f7-3d391abbc44e",
                "parentUUID": "4044154f-6508-4861-acd4-391b9c695bac",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#removeById(id)",
            "suites": [],
            "tests": [
              {
                "title": "should remove the existing participant",
                "fullTitle": "Participants #removeById(id) should remove the existing participant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p.id).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "37065435-f5b4-4ee7-aadd-5357769ab0ce",
                "parentUUID": "9f523130-7fde-4088-b56a-8fce8111d824",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing participant",
                "fullTitle": "Participants #removeById(id) should not remove the non-existing participant",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p1.id).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "7135d5c1-0b3d-4497-a58b-0776aa5aead7",
                "parentUUID": "9f523130-7fde-4088-b56a-8fce8111d824",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantsTests.js",
            "uuid": "9f523130-7fde-4088-b56a-8fce8111d824",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
            "passes": [
              {
                "title": "should remove the existing participant",
                "fullTitle": "Participants #removeById(id) should remove the existing participant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p.id).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "37065435-f5b4-4ee7-aadd-5357769ab0ce",
                "parentUUID": "9f523130-7fde-4088-b56a-8fce8111d824",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing participant",
                "fullTitle": "Participants #removeById(id) should not remove the non-existing participant",
                "timedOut": false,
                "duration": 3,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p1.id).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "7135d5c1-0b3d-4497-a58b-0776aa5aead7",
                "parentUUID": "9f523130-7fde-4088-b56a-8fce8111d824",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/ParticipantsTests.js",
        "uuid": "2ab82f0f-471a-4b02-96e1-f36c68e35e1f",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantsTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Participant",
        "suites": [
          {
            "title": "#id",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Participant #id should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'id_test'</span>;<br>p._id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "df70fa42-94c4-433f-970d-2be21b29124d",
                "parentUUID": "a90be0b1-0dc4-46dc-9c2b-40ff191cb5dc",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participant #id should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "bde0704a-b5cf-468c-8d4b-a76416e60b6a",
                "parentUUID": "a90be0b1-0dc4-46dc-9c2b-40ff191cb5dc",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantTests.js",
            "uuid": "a90be0b1-0dc4-46dc-9c2b-40ff191cb5dc",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Participant #id should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'id_test'</span>;<br>p._id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "df70fa42-94c4-433f-970d-2be21b29124d",
                "parentUUID": "a90be0b1-0dc4-46dc-9c2b-40ff191cb5dc",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participant #id should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "bde0704a-b5cf-468c-8d4b-a76416e60b6a",
                "parentUUID": "a90be0b1-0dc4-46dc-9c2b-40ff191cb5dc",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isDisconnected",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participant #isDisconnected should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    p.isDisconnected = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "9104598e-3f34-4ce0-90a4-b539d7cdb3bc",
                "parentUUID": "4b08a076-7a2d-46af-bc8b-f047fb7dc2a4",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participant #isDisconnected should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "a09f84c3-2572-4095-8b5d-e3ec85f606c4",
                "parentUUID": "4b08a076-7a2d-46af-bc8b-f047fb7dc2a4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantTests.js",
            "uuid": "4b08a076-7a2d-46af-bc8b-f047fb7dc2a4",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Participant #isDisconnected should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    p.isDisconnected = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "9104598e-3f34-4ce0-90a4-b539d7cdb3bc",
                "parentUUID": "4b08a076-7a2d-46af-bc8b-f047fb7dc2a4",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Participant #isDisconnected should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "a09f84c3-2572-4095-8b5d-e3ec85f606c4",
                "parentUUID": "4b08a076-7a2d-46af-bc8b-f047fb7dc2a4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#disconnect()",
            "suites": [],
            "tests": [
              {
                "title": "should change participant state to disconnected",
                "fullTitle": "Participant #disconnect() should change participant state to disconnected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">false</span>;<br>p.disconnect();<br>p.isDisconnected.should.be.true();",
                "isRoot": false,
                "uuid": "65e73d23-03b8-41a1-b6c3-32dcaa9ebcef",
                "parentUUID": "22f0c5f0-7b17-4683-9acb-323583c61f49",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantTests.js",
            "uuid": "22f0c5f0-7b17-4683-9acb-323583c61f49",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantTests.js",
            "passes": [
              {
                "title": "should change participant state to disconnected",
                "fullTitle": "Participant #disconnect() should change participant state to disconnected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">false</span>;<br>p.disconnect();<br>p.isDisconnected.should.be.true();",
                "isRoot": false,
                "uuid": "65e73d23-03b8-41a1-b6c3-32dcaa9ebcef",
                "parentUUID": "22f0c5f0-7b17-4683-9acb-323583c61f49",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#reconnect()",
            "suites": [],
            "tests": [
              {
                "title": "should change participant state to connected",
                "fullTitle": "Participant #reconnect() should change participant state to connected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">true</span>;<br>p.reconnect();<br>p.isDisconnected.should.be.false();",
                "isRoot": false,
                "uuid": "b1d3986e-2dfa-48f9-8f7d-8ce1fcfccc91",
                "parentUUID": "6cb4508f-8582-4acf-8bd6-4d4be110f052",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/ParticipantTests.js",
            "uuid": "6cb4508f-8582-4acf-8bd6-4d4be110f052",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantTests.js",
            "passes": [
              {
                "title": "should change participant state to connected",
                "fullTitle": "Participant #reconnect() should change participant state to connected",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">true</span>;<br>p.reconnect();<br>p.isDisconnected.should.be.false();",
                "isRoot": false,
                "uuid": "b1d3986e-2dfa-48f9-8f7d-8ce1fcfccc91",
                "parentUUID": "6cb4508f-8582-4acf-8bd6-4d4be110f052",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/ParticipantTests.js",
        "uuid": "c202fe25-a62b-4bc0-bc9a-d8b2671156e2",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/ParticipantTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Sessions",
        "suites": [
          {
            "title": "#all",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Sessions #all should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    sc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "6f85fbbc-7a5f-4020-991b-9437380674ff",
                "parentUUID": "5b7d5bb9-3eca-4186-ae0f-abd54c761867",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Sessions #all should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
                "isRoot": false,
                "uuid": "feb71c51-cb9e-4af0-9cf5-c5a508da49d2",
                "parentUUID": "5b7d5bb9-3eca-4186-ae0f-abd54c761867",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Sessions #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all.pop();<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
                "isRoot": false,
                "uuid": "949460b1-f530-4667-9247-c74444e0bc63",
                "parentUUID": "5b7d5bb9-3eca-4186-ae0f-abd54c761867",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionsTests.js",
            "uuid": "5b7d5bb9-3eca-4186-ae0f-abd54c761867",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionsTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Sessions #all should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    sc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "6f85fbbc-7a5f-4020-991b-9437380674ff",
                "parentUUID": "5b7d5bb9-3eca-4186-ae0f-abd54c761867",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Sessions #all should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
                "isRoot": false,
                "uuid": "feb71c51-cb9e-4af0-9cf5-c5a508da49d2",
                "parentUUID": "5b7d5bb9-3eca-4186-ae0f-abd54c761867",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Sessions #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all.pop();<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
                "isRoot": false,
                "uuid": "949460b1-f530-4667-9247-c74444e0bc63",
                "parentUUID": "5b7d5bb9-3eca-4186-ae0f-abd54c761867",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#add(host, settings)",
            "suites": [],
            "tests": [
              {
                "title": "add and return session",
                "fullTitle": "Sessions #add(host, settings) add and return session",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-keyword\">var</span> ses = sc.add(h, s);<br>ses.should.be.instanceof(Session);",
                "isRoot": false,
                "uuid": "968aa23c-961f-48b3-9412-02c9acf78f0c",
                "parentUUID": "8688b35f-5912-40de-bf42-40998543b1d3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionsTests.js",
            "uuid": "8688b35f-5912-40de-bf42-40998543b1d3",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionsTests.js",
            "passes": [
              {
                "title": "add and return session",
                "fullTitle": "Sessions #add(host, settings) add and return session",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-keyword\">var</span> ses = sc.add(h, s);<br>ses.should.be.instanceof(Session);",
                "isRoot": false,
                "uuid": "968aa23c-961f-48b3-9412-02c9acf78f0c",
                "parentUUID": "8688b35f-5912-40de-bf42-40998543b1d3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#getById(id)",
            "suites": [],
            "tests": [
              {
                "title": "when given valid id should return session",
                "fullTitle": "Sessions #getById(id) when given valid id should return session",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-comment\">/* eslint-disable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses1 = sc.add(h, s);<br><span class=\"hljs-comment\">/* eslint-enable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses2 = sc.add(h, s);<br><span class=\"hljs-keyword\">var</span> sessionLocate = sc.getById(ses2.id);<br>sessionLocate.should.be.instanceof(Session)<br>    .and.equal(ses2);",
                "isRoot": false,
                "uuid": "1debc78b-d90c-4127-8594-d2e05c3a9491",
                "parentUUID": "310e43e6-10a1-481d-a51a-bad13a29a935",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionsTests.js",
            "uuid": "310e43e6-10a1-481d-a51a-bad13a29a935",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionsTests.js",
            "passes": [
              {
                "title": "when given valid id should return session",
                "fullTitle": "Sessions #getById(id) when given valid id should return session",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-comment\">/* eslint-disable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses1 = sc.add(h, s);<br><span class=\"hljs-comment\">/* eslint-enable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses2 = sc.add(h, s);<br><span class=\"hljs-keyword\">var</span> sessionLocate = sc.getById(ses2.id);<br>sessionLocate.should.be.instanceof(Session)<br>    .and.equal(ses2);",
                "isRoot": false,
                "uuid": "1debc78b-d90c-4127-8594-d2e05c3a9491",
                "parentUUID": "310e43e6-10a1-481d-a51a-bad13a29a935",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#purgeCompleted()",
            "suites": [],
            "tests": [
              {
                "title": "should remove complete sc",
                "fullTitle": "Sessions #purgeCompleted() should remove complete sc",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.all[<span class=\"hljs-number\">0</span>].complete();<br>sc.all[<span class=\"hljs-number\">1</span>].complete();<br>sc.purgeCompleted();<br>sc.all.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "40901f6d-5a93-4c1e-a542-910dcc07281e",
                "parentUUID": "94bb6960-de57-49ad-9e0d-9bad15d87b4b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionsTests.js",
            "uuid": "94bb6960-de57-49ad-9e0d-9bad15d87b4b",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionsTests.js",
            "passes": [
              {
                "title": "should remove complete sc",
                "fullTitle": "Sessions #purgeCompleted() should remove complete sc",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.all[<span class=\"hljs-number\">0</span>].complete();<br>sc.all[<span class=\"hljs-number\">1</span>].complete();<br>sc.purgeCompleted();<br>sc.all.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "40901f6d-5a93-4c1e-a542-910dcc07281e",
                "parentUUID": "94bb6960-de57-49ad-9e0d-9bad15d87b4b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/SessionsTests.js",
        "uuid": "5ab47264-620b-4195-8adf-1a40fb6afb3f",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionsTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Session",
        "suites": [
          {
            "title": "#constructor",
            "suites": [],
            "tests": [
              {
                "title": "should create teams",
                "fullTitle": "Session #constructor should create teams",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "a82025de-bc48-42f2-9420-1753ecc380e6",
                "parentUUID": "0c433fb1-aaf5-4567-b0e2-5af4e0e4b7bd",
                "skipped": false
              },
              {
                "title": "should not create teams",
                "fullTitle": "Session #constructor should not create teams",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>should(s.teams).be.null();",
                "isRoot": false,
                "uuid": "399a90f5-6ab7-42fc-8381-5fb64cf2e3e3",
                "parentUUID": "0c433fb1-aaf5-4567-b0e2-5af4e0e4b7bd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "0c433fb1-aaf5-4567-b0e2-5af4e0e4b7bd",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should create teams",
                "fullTitle": "Session #constructor should create teams",
                "timedOut": false,
                "duration": 5,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "a82025de-bc48-42f2-9420-1753ecc380e6",
                "parentUUID": "0c433fb1-aaf5-4567-b0e2-5af4e0e4b7bd",
                "skipped": false
              },
              {
                "title": "should not create teams",
                "fullTitle": "Session #constructor should not create teams",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>should(s.teams).be.null();",
                "isRoot": false,
                "uuid": "399a90f5-6ab7-42fc-8381-5fb64cf2e3e3",
                "parentUUID": "0c433fb1-aaf5-4567-b0e2-5af4e0e4b7bd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 5
          },
          {
            "title": "#id",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #id should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.id = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "3449f07a-ddd1-4315-872d-73b04eb6a1ee",
                "parentUUID": "560ad419-48bd-47e5-b9bc-2cb4bbca1835",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #id should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "d1df7c35-46e8-46b4-8831-79f18ebf707a",
                "parentUUID": "560ad419-48bd-47e5-b9bc-2cb4bbca1835",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "560ad419-48bd-47e5-b9bc-2cb4bbca1835",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #id should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.id = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "3449f07a-ddd1-4315-872d-73b04eb6a1ee",
                "parentUUID": "560ad419-48bd-47e5-b9bc-2cb4bbca1835",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #id should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
                "isRoot": false,
                "uuid": "d1df7c35-46e8-46b4-8831-79f18ebf707a",
                "parentUUID": "560ad419-48bd-47e5-b9bc-2cb4bbca1835",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#roundsPlayed",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #roundsPlayed should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundsPlayed = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "5619fbbd-b2f2-4328-90d8-31001edbd62e",
                "parentUUID": "5f30c2f8-643c-4146-af88-81b836635c50",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #roundsPlayed should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "3ea4885b-d357-498f-b535-d5df229370de",
                "parentUUID": "5f30c2f8-643c-4146-af88-81b836635c50",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "5f30c2f8-643c-4146-af88-81b836635c50",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #roundsPlayed should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundsPlayed = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "5619fbbd-b2f2-4328-90d8-31001edbd62e",
                "parentUUID": "5f30c2f8-643c-4146-af88-81b836635c50",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #roundsPlayed should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "3ea4885b-d357-498f-b535-d5df229370de",
                "parentUUID": "5f30c2f8-643c-4146-af88-81b836635c50",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#previousWinners",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #previousWinners should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.previousWinners = [<span class=\"hljs-string\">'SomeWinner'</span>];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "c03be201-02f6-4b5b-a202-13fd1a11b0a5",
                "parentUUID": "6470aec9-aebe-4e7a-b698-87418dc76bef",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #previousWinners should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._previousWinners = [<span class=\"hljs-string\">'Winner1'</span>, <span class=\"hljs-string\">'Winner2'</span>];<br>s.previousWinners.should.be.Array();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
                "isRoot": false,
                "uuid": "0fbbf497-c7c5-4c75-b5ff-64761183c741",
                "parentUUID": "6470aec9-aebe-4e7a-b698-87418dc76bef",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "6470aec9-aebe-4e7a-b698-87418dc76bef",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #previousWinners should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.previousWinners = [<span class=\"hljs-string\">'SomeWinner'</span>];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "c03be201-02f6-4b5b-a202-13fd1a11b0a5",
                "parentUUID": "6470aec9-aebe-4e7a-b698-87418dc76bef",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #previousWinners should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._previousWinners = [<span class=\"hljs-string\">'Winner1'</span>, <span class=\"hljs-string\">'Winner2'</span>];<br>s.previousWinners.should.be.Array();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
                "isRoot": false,
                "uuid": "0fbbf497-c7c5-4c75-b5ff-64761183c741",
                "parentUUID": "6470aec9-aebe-4e7a-b698-87418dc76bef",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#roundWinner",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #roundWinner should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundWinner = <span class=\"hljs-string\">'SomeWinner'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "e644059b-4053-4c51-a3d9-386c6a1a04f5",
                "parentUUID": "c45c2191-912e-4580-a40c-6c4fc584c178",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #roundWinner should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundWinner = <span class=\"hljs-string\">'Winner1'</span>;<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
                "isRoot": false,
                "uuid": "3950bc26-ed76-4d70-a957-2869aef78672",
                "parentUUID": "c45c2191-912e-4580-a40c-6c4fc584c178",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "c45c2191-912e-4580-a40c-6c4fc584c178",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #roundWinner should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundWinner = <span class=\"hljs-string\">'SomeWinner'</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "e644059b-4053-4c51-a3d9-386c6a1a04f5",
                "parentUUID": "c45c2191-912e-4580-a40c-6c4fc584c178",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #roundWinner should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundWinner = <span class=\"hljs-string\">'Winner1'</span>;<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
                "isRoot": false,
                "uuid": "3950bc26-ed76-4d70-a957-2869aef78672",
                "parentUUID": "c45c2191-912e-4580-a40c-6c4fc584c178",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#isSessionCompleted",
            "suites": [],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "cd46fe23-dfe5-4d83-a334-bde1d281133c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasSuites": false,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#observers",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #observers should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.observers = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "aed76a0d-e48c-42ab-a0a3-79b0f1d67b14",
                "parentUUID": "627bba33-01cb-4991-8500-7c87f7803063",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #observers should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.observers.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.observers[<span class=\"hljs-number\">0</span>].should.equal(observer);",
                "isRoot": false,
                "uuid": "fb59976c-8355-44bd-98d5-8d1740b7dea1",
                "parentUUID": "627bba33-01cb-4991-8500-7c87f7803063",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "627bba33-01cb-4991-8500-7c87f7803063",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #observers should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.observers = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "aed76a0d-e48c-42ab-a0a3-79b0f1d67b14",
                "parentUUID": "627bba33-01cb-4991-8500-7c87f7803063",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #observers should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.observers.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.observers[<span class=\"hljs-number\">0</span>].should.equal(observer);",
                "isRoot": false,
                "uuid": "fb59976c-8355-44bd-98d5-8d1740b7dea1",
                "parentUUID": "627bba33-01cb-4991-8500-7c87f7803063",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#contestants",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #contestants should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.contestants = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "07f024c1-73be-4edb-b733-d9807f7bdd29",
                "parentUUID": "9a202f7d-148c-4aec-a5d1-171800d8a9b1",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #contestants should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.contestants[<span class=\"hljs-number\">0</span>].should.equal(contestant);",
                "isRoot": false,
                "uuid": "8463dcec-1fd4-43b3-bbbb-ee92b61ddd5c",
                "parentUUID": "9a202f7d-148c-4aec-a5d1-171800d8a9b1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "9a202f7d-148c-4aec-a5d1-171800d8a9b1",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #contestants should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.contestants = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "07f024c1-73be-4edb-b733-d9807f7bdd29",
                "parentUUID": "9a202f7d-148c-4aec-a5d1-171800d8a9b1",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #contestants should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.contestants[<span class=\"hljs-number\">0</span>].should.equal(contestant);",
                "isRoot": false,
                "uuid": "8463dcec-1fd4-43b3-bbbb-ee92b61ddd5c",
                "parentUUID": "9a202f7d-148c-4aec-a5d1-171800d8a9b1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#host",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #host should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.host = host;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "47b0fb30-01b1-4a65-94b3-1752df556cc6",
                "parentUUID": "124fd589-beca-4d01-b367-913fa2cb4271",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #host should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.host.should.equal(host);",
                "isRoot": false,
                "uuid": "c8c1194f-7916-4184-8e7b-5ed5ad20132d",
                "parentUUID": "124fd589-beca-4d01-b367-913fa2cb4271",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "124fd589-beca-4d01-b367-913fa2cb4271",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Session #host should throw on set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.host = host;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "47b0fb30-01b1-4a65-94b3-1752df556cc6",
                "parentUUID": "124fd589-beca-4d01-b367-913fa2cb4271",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Session #host should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.host.should.equal(host);",
                "isRoot": false,
                "uuid": "c8c1194f-7916-4184-8e7b-5ed5ad20132d",
                "parentUUID": "124fd589-beca-4d01-b367-913fa2cb4271",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#currentState",
            "suites": [],
            "tests": [
              {
                "title": "should get value",
                "fullTitle": "Session #currentState should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
                "isRoot": false,
                "uuid": "39e7f713-de13-4d5b-b056-a6cfef41ab80",
                "parentUUID": "a211c397-5940-41d9-a4a4-bfc53e94c4c6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "a211c397-5940-41d9-a4a4-bfc53e94c4c6",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should get value",
                "fullTitle": "Session #currentState should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
                "isRoot": false,
                "uuid": "39e7f713-de13-4d5b-b056-a6cfef41ab80",
                "parentUUID": "a211c397-5940-41d9-a4a4-bfc53e94c4c6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#incrementRoundsPlayed()",
            "suites": [],
            "tests": [
              {
                "title": "should increment rounds played",
                "fullTitle": "Session #incrementRoundsPlayed() should increment rounds played",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.incrementRoundsPlayed();<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "758e70a2-b38c-44fe-acfb-e59a42c1b358",
                "parentUUID": "8bac88f2-193c-48c4-8060-d7db53c44e6c",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "8bac88f2-193c-48c4-8060-d7db53c44e6c",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should increment rounds played",
                "fullTitle": "Session #incrementRoundsPlayed() should increment rounds played",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.incrementRoundsPlayed();<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "758e70a2-b38c-44fe-acfb-e59a42c1b358",
                "parentUUID": "8bac88f2-193c-48c4-8060-d7db53c44e6c",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#addContestant(contestant)",
            "suites": [
              {
                "title": "when in individual mode",
                "suites": [],
                "tests": [
                  {
                    "title": "should add contestant when session is not full",
                    "fullTitle": "#addContestant(contestant) when in individual mode should add contestant when session is not full",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
                    "isRoot": false,
                    "uuid": "e96ac412-7840-4dd5-9f49-dc4f2f30ecd0",
                    "parentUUID": "ae27940d-2d38-4fbf-becc-289b6536a52a",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when session is full",
                    "fullTitle": "#addContestant(contestant) when in individual mode should not add contestant when session is full",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br>s.addContestant(c2);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();",
                    "isRoot": false,
                    "uuid": "047dd3d2-fae5-4151-ad8b-7efcd244539f",
                    "parentUUID": "ae27940d-2d38-4fbf-becc-289b6536a52a",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when username is already taken",
                    "fullTitle": "#addContestant(contestant) when in individual mode should not add contestant when username is already taken",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "d494b436-86a2-4a48-8f5f-4920e19131ed",
                    "parentUUID": "ae27940d-2d38-4fbf-becc-289b6536a52a",
                    "skipped": false
                  },
                  {
                    "title": "BUG# username case should not matter",
                    "fullTitle": "#addContestant(contestant) when in individual mode BUG# username case should not matter",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'abc1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'ABC1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "25a5e9fc-fa5e-4556-8a9c-321c2ee0ce9d",
                    "parentUUID": "ae27940d-2d38-4fbf-becc-289b6536a52a",
                    "skipped": false
                  },
                  {
                    "title": "should allow unlimited contestants when max is set to constants.UNLIMITED",
                    "fullTitle": "#addContestant(contestant) when in individual mode should allow unlimited contestants when max is set to constants.UNLIMITED",
                    "timedOut": false,
                    "duration": 622,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = constants.UNLIMITED;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    <span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>    c.username = <span class=\"hljs-string\">'c'</span> + i;<br>    <span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>    response.wasSuccessful.should.be.true();<br>}",
                    "isRoot": false,
                    "uuid": "ccd25a00-0770-41bc-bb99-11c95b54d91a",
                    "parentUUID": "ae27940d-2d38-4fbf-becc-289b6536a52a",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "ae27940d-2d38-4fbf-becc-289b6536a52a",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should add contestant when session is not full",
                    "fullTitle": "#addContestant(contestant) when in individual mode should add contestant when session is not full",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
                    "isRoot": false,
                    "uuid": "e96ac412-7840-4dd5-9f49-dc4f2f30ecd0",
                    "parentUUID": "ae27940d-2d38-4fbf-becc-289b6536a52a",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when session is full",
                    "fullTitle": "#addContestant(contestant) when in individual mode should not add contestant when session is full",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br>s.addContestant(c2);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();",
                    "isRoot": false,
                    "uuid": "047dd3d2-fae5-4151-ad8b-7efcd244539f",
                    "parentUUID": "ae27940d-2d38-4fbf-becc-289b6536a52a",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when username is already taken",
                    "fullTitle": "#addContestant(contestant) when in individual mode should not add contestant when username is already taken",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "d494b436-86a2-4a48-8f5f-4920e19131ed",
                    "parentUUID": "ae27940d-2d38-4fbf-becc-289b6536a52a",
                    "skipped": false
                  },
                  {
                    "title": "BUG# username case should not matter",
                    "fullTitle": "#addContestant(contestant) when in individual mode BUG# username case should not matter",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'abc1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'ABC1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "25a5e9fc-fa5e-4556-8a9c-321c2ee0ce9d",
                    "parentUUID": "ae27940d-2d38-4fbf-becc-289b6536a52a",
                    "skipped": false
                  },
                  {
                    "title": "should allow unlimited contestants when max is set to constants.UNLIMITED",
                    "fullTitle": "#addContestant(contestant) when in individual mode should allow unlimited contestants when max is set to constants.UNLIMITED",
                    "timedOut": false,
                    "duration": 622,
                    "state": "passed",
                    "speed": "slow",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = constants.UNLIMITED;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    <span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>    c.username = <span class=\"hljs-string\">'c'</span> + i;<br>    <span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>    response.wasSuccessful.should.be.true();<br>}",
                    "isRoot": false,
                    "uuid": "ccd25a00-0770-41bc-bb99-11c95b54d91a",
                    "parentUUID": "ae27940d-2d38-4fbf-becc-289b6536a52a",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 5,
                "totalPasses": 5,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 628
              },
              {
                "title": "when in team mode",
                "suites": [],
                "tests": [
                  {
                    "title": "should add contestant when teams is not full",
                    "fullTitle": "#addContestant(contestant) when in team mode should add contestant when teams is not full",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
                    "isRoot": false,
                    "uuid": "a480a705-0009-40d0-8af0-2212f8ca4919",
                    "parentUUID": "84de1aa7-cdf1-41cb-be4d-5174a9d6ad65",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when teams are full",
                    "fullTitle": "#addContestant(contestant) when in team mode should not add contestant when teams are full",
                    "timedOut": false,
                    "duration": 7,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.TEAMS_ARE_FULL);",
                    "isRoot": false,
                    "uuid": "fcf5db47-3e02-4eba-868e-7b011157a814",
                    "parentUUID": "84de1aa7-cdf1-41cb-be4d-5174a9d6ad65",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when username is already taken",
                    "fullTitle": "#addContestant(contestant) when in team mode should not add contestant when username is already taken",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "f7223a10-da25-4920-a4cf-396fbf7d0423",
                    "parentUUID": "84de1aa7-cdf1-41cb-be4d-5174a9d6ad65",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "84de1aa7-cdf1-41cb-be4d-5174a9d6ad65",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should add contestant when teams is not full",
                    "fullTitle": "#addContestant(contestant) when in team mode should add contestant when teams is not full",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
                    "isRoot": false,
                    "uuid": "a480a705-0009-40d0-8af0-2212f8ca4919",
                    "parentUUID": "84de1aa7-cdf1-41cb-be4d-5174a9d6ad65",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when teams are full",
                    "fullTitle": "#addContestant(contestant) when in team mode should not add contestant when teams are full",
                    "timedOut": false,
                    "duration": 7,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.TEAMS_ARE_FULL);",
                    "isRoot": false,
                    "uuid": "fcf5db47-3e02-4eba-868e-7b011157a814",
                    "parentUUID": "84de1aa7-cdf1-41cb-be4d-5174a9d6ad65",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant when username is already taken",
                    "fullTitle": "#addContestant(contestant) when in team mode should not add contestant when username is already taken",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
                    "isRoot": false,
                    "uuid": "f7223a10-da25-4920-a4cf-396fbf7d0423",
                    "parentUUID": "84de1aa7-cdf1-41cb-be4d-5174a9d6ad65",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 12
              }
            ],
            "tests": [
              {
                "title": "should not allow a contestant username with bad words",
                "fullTitle": "Session #addContestant(contestant) should not allow a contestant username with bad words",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Penis #YOLO'</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_CONTAINS_PROFANITY);",
                "isRoot": false,
                "uuid": "b94e846f-edee-433d-8003-ca5ce8164c89",
                "parentUUID": "82b22c6d-8edf-4d95-81b7-7192e793acf3",
                "skipped": false
              },
              {
                "title": "should not allow when username is empty",
                "fullTitle": "Session #addContestant(contestant) should not allow when username is empty",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">' '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_IS_REQUIRED);",
                "isRoot": false,
                "uuid": "e930c779-0e72-48c4-8bde-6bcf3df9e8d1",
                "parentUUID": "82b22c6d-8edf-4d95-81b7-7192e793acf3",
                "skipped": false
              },
              {
                "title": "should trim username",
                "fullTitle": "Session #addContestant(contestant) should trim username",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Wade  '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>c.username.should.equal(<span class=\"hljs-string\">'Wade'</span>);",
                "isRoot": false,
                "uuid": "33dca048-aaf4-4242-aa7e-efb8a581bc60",
                "parentUUID": "82b22c6d-8edf-4d95-81b7-7192e793acf3",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "82b22c6d-8edf-4d95-81b7-7192e793acf3",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should not allow a contestant username with bad words",
                "fullTitle": "Session #addContestant(contestant) should not allow a contestant username with bad words",
                "timedOut": false,
                "duration": 9,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Penis #YOLO'</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_CONTAINS_PROFANITY);",
                "isRoot": false,
                "uuid": "b94e846f-edee-433d-8003-ca5ce8164c89",
                "parentUUID": "82b22c6d-8edf-4d95-81b7-7192e793acf3",
                "skipped": false
              },
              {
                "title": "should not allow when username is empty",
                "fullTitle": "Session #addContestant(contestant) should not allow when username is empty",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">' '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_IS_REQUIRED);",
                "isRoot": false,
                "uuid": "e930c779-0e72-48c4-8bde-6bcf3df9e8d1",
                "parentUUID": "82b22c6d-8edf-4d95-81b7-7192e793acf3",
                "skipped": false
              },
              {
                "title": "should trim username",
                "fullTitle": "Session #addContestant(contestant) should trim username",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Wade  '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>c.username.should.equal(<span class=\"hljs-string\">'Wade'</span>);",
                "isRoot": false,
                "uuid": "33dca048-aaf4-4242-aa7e-efb8a581bc60",
                "parentUUID": "82b22c6d-8edf-4d95-81b7-7192e793acf3",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 11
          },
          {
            "title": "#subscribeForStateChange(event, callback)",
            "suites": [],
            "tests": [
              {
                "title": "should subscribe callback to the correct event",
                "fullTitle": "Session #subscribeForStateChange(event, callback) should subscribe callback to the correct event",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> r = s.addContestant(c);<br>r.wasSuccessful.should.be.true();<br>s.subscribeForStateChange(<span class=\"hljs-string\">'onpending'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">session, event, from, to</span>) </span>{<br>    session.should.equal(s);<br>    event.should.equal(<span class=\"hljs-string\">'buzzerPressed'</span>);<br>    from.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>    to.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>    done();<br>});<br>s.tryBuzzerPressRegister(c.id).should.be.true();",
                "isRoot": false,
                "uuid": "7e490617-788e-45a3-9005-66d32147d6ac",
                "parentUUID": "d65b4b4b-9317-4c03-9c6f-d9430598e6f2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "d65b4b4b-9317-4c03-9c6f-d9430598e6f2",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should subscribe callback to the correct event",
                "fullTitle": "Session #subscribeForStateChange(event, callback) should subscribe callback to the correct event",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> r = s.addContestant(c);<br>r.wasSuccessful.should.be.true();<br>s.subscribeForStateChange(<span class=\"hljs-string\">'onpending'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">session, event, from, to</span>) </span>{<br>    session.should.equal(s);<br>    event.should.equal(<span class=\"hljs-string\">'buzzerPressed'</span>);<br>    from.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>    to.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>    done();<br>});<br>s.tryBuzzerPressRegister(c.id).should.be.true();",
                "isRoot": false,
                "uuid": "7e490617-788e-45a3-9005-66d32147d6ac",
                "parentUUID": "d65b4b4b-9317-4c03-9c6f-d9430598e6f2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "tryBuzzerPressRegister(contestantId)",
            "suites": [],
            "tests": [
              {
                "title": "should register when state is ready",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should register when state is ready",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);",
                "isRoot": false,
                "uuid": "67b56015-1fa8-4a51-aa81-95194402e92e",
                "parentUUID": "4397374d-8344-414b-ad61-341d5aa64a6f",
                "skipped": false
              },
              {
                "title": "should not register when state is not ready",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not register when state is not ready",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.false();",
                "isRoot": false,
                "uuid": "f03d05e1-0003-4df7-9b5d-0c6f143aca8b",
                "parentUUID": "4397374d-8344-414b-ad61-341d5aa64a6f",
                "skipped": false
              },
              {
                "title": "should not register when contestant does not exist",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not register when contestant does not exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(idUtility.generateParticipantId()).should.be.false();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
                "isRoot": false,
                "uuid": "27bb0af6-b1ff-4b36-a93c-8fda43ef2cb2",
                "parentUUID": "4397374d-8344-414b-ad61-341d5aa64a6f",
                "skipped": false
              },
              {
                "title": "should not replace previous round winner with pending contestant",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not replace previous round winner with pending contestant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                "isRoot": false,
                "uuid": "87f7511c-bb99-455d-82e5-c02f5046f8d2",
                "parentUUID": "4397374d-8344-414b-ad61-341d5aa64a6f",
                "skipped": false
              },
              {
                "title": "should not add previous round winner to winners list",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not add previous round winner to winners list",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "8db77398-bfde-4d12-9c1a-65ce560c3e2f",
                "parentUUID": "4397374d-8344-414b-ad61-341d5aa64a6f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "4397374d-8344-414b-ad61-341d5aa64a6f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should register when state is ready",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should register when state is ready",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);",
                "isRoot": false,
                "uuid": "67b56015-1fa8-4a51-aa81-95194402e92e",
                "parentUUID": "4397374d-8344-414b-ad61-341d5aa64a6f",
                "skipped": false
              },
              {
                "title": "should not register when state is not ready",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not register when state is not ready",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.false();",
                "isRoot": false,
                "uuid": "f03d05e1-0003-4df7-9b5d-0c6f143aca8b",
                "parentUUID": "4397374d-8344-414b-ad61-341d5aa64a6f",
                "skipped": false
              },
              {
                "title": "should not register when contestant does not exist",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not register when contestant does not exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(idUtility.generateParticipantId()).should.be.false();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
                "isRoot": false,
                "uuid": "27bb0af6-b1ff-4b36-a93c-8fda43ef2cb2",
                "parentUUID": "4397374d-8344-414b-ad61-341d5aa64a6f",
                "skipped": false
              },
              {
                "title": "should not replace previous round winner with pending contestant",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not replace previous round winner with pending contestant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                "isRoot": false,
                "uuid": "87f7511c-bb99-455d-82e5-c02f5046f8d2",
                "parentUUID": "4397374d-8344-414b-ad61-341d5aa64a6f",
                "skipped": false
              },
              {
                "title": "should not add previous round winner to winners list",
                "fullTitle": "Session tryBuzzerPressRegister(contestantId) should not add previous round winner to winners list",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "8db77398-bfde-4d12-9c1a-65ce560c3e2f",
                "parentUUID": "4397374d-8344-414b-ad61-341d5aa64a6f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 4
          },
          {
            "title": "tryBuzzerAction(action)",
            "suites": [
              {
                "title": "action->ACCEPT",
                "suites": [],
                "tests": [
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should allow when game state is pending",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();",
                    "isRoot": false,
                    "uuid": "115901ed-659c-40c6-baac-814469f8fbe9",
                    "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not pending",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should not allow when game state is not pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.false();",
                    "isRoot": false,
                    "uuid": "c53fdc8b-a622-433c-9b3f-d392173c4670",
                    "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
                    "skipped": false
                  },
                  {
                    "title": "should update contestant's score",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should update contestant's score",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "2b837730-aea1-47d0-b85d-062bf51bdff0",
                    "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
                    "skipped": false
                  },
                  {
                    "title": "should update contestant's team score",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should update contestant's team score",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>s.teams.all[<span class=\"hljs-number\">0</span>].score.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "914f6a63-b37a-42cf-8833-13721bd8a004",
                    "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "58889bb7-4c5d-4d96-81a4-280a04c1614b",
                    "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should change game state back to ready",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "2270159c-7dfa-43e8-9fbd-bab8d89815b3",
                    "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
                    "skipped": false
                  },
                  {
                    "title": "should clear pending winner",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should clear pending winner",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>should(s.pendingWinner).be.null();",
                    "isRoot": false,
                    "uuid": "1397be5b-05e6-465b-b3d9-a76a7ee30a99",
                    "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "91be8132-02b3-476e-be3d-198fa6b4275e",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should allow when game state is pending",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();",
                    "isRoot": false,
                    "uuid": "115901ed-659c-40c6-baac-814469f8fbe9",
                    "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not pending",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should not allow when game state is not pending",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.false();",
                    "isRoot": false,
                    "uuid": "c53fdc8b-a622-433c-9b3f-d392173c4670",
                    "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
                    "skipped": false
                  },
                  {
                    "title": "should update contestant's score",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should update contestant's score",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "2b837730-aea1-47d0-b85d-062bf51bdff0",
                    "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
                    "skipped": false
                  },
                  {
                    "title": "should update contestant's team score",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should update contestant's team score",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>s.teams.all[<span class=\"hljs-number\">0</span>].score.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "914f6a63-b37a-42cf-8833-13721bd8a004",
                    "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "58889bb7-4c5d-4d96-81a4-280a04c1614b",
                    "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should change game state back to ready",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "2270159c-7dfa-43e8-9fbd-bab8d89815b3",
                    "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
                    "skipped": false
                  },
                  {
                    "title": "should clear pending winner",
                    "fullTitle": "tryBuzzerAction(action) action->ACCEPT should clear pending winner",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>should(s.pendingWinner).be.null();",
                    "isRoot": false,
                    "uuid": "1397be5b-05e6-465b-b3d9-a76a7ee30a99",
                    "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 7,
                "totalPasses": 7,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 8
              },
              {
                "title": "action->REJECT",
                "suites": [],
                "tests": [
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should allow when game state is pending",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();",
                    "isRoot": false,
                    "uuid": "8c7edcd1-5283-4fdd-ae41-10093e1e2363",
                    "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not pending",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not allow when game state is not pending",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.false();",
                    "isRoot": false,
                    "uuid": "7c8d6c43-7ab7-418b-be1f-d035596c66ab",
                    "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
                    "skipped": false
                  },
                  {
                    "title": "should not replace round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not replace round winner with pending contestant",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "2e578656-6d3d-482d-ac3b-a3ccafd4068c",
                    "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
                    "skipped": false
                  },
                  {
                    "title": "should not update pending contestant's score",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not update pending contestant's score",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.score.should.equal(<span class=\"hljs-number\">0</span>);",
                    "isRoot": false,
                    "uuid": "adce1f04-15b8-43d8-ba77-960f5c03bc8a",
                    "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
                    "skipped": false
                  },
                  {
                    "title": "should add round winner to previous winners list",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should add round winner to previous winners list",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "ec6c29e0-4c21-4953-8bf7-f226d27805e5",
                    "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should change game state back to ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "eb5eca82-a45d-4fcb-b0c2-dd034f722506",
                    "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should allow when game state is pending",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();",
                    "isRoot": false,
                    "uuid": "8c7edcd1-5283-4fdd-ae41-10093e1e2363",
                    "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not pending",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not allow when game state is not pending",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.false();",
                    "isRoot": false,
                    "uuid": "7c8d6c43-7ab7-418b-be1f-d035596c66ab",
                    "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
                    "skipped": false
                  },
                  {
                    "title": "should not replace round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not replace round winner with pending contestant",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "2e578656-6d3d-482d-ac3b-a3ccafd4068c",
                    "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
                    "skipped": false
                  },
                  {
                    "title": "should not update pending contestant's score",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should not update pending contestant's score",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.score.should.equal(<span class=\"hljs-number\">0</span>);",
                    "isRoot": false,
                    "uuid": "adce1f04-15b8-43d8-ba77-960f5c03bc8a",
                    "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
                    "skipped": false
                  },
                  {
                    "title": "should add round winner to previous winners list",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should add round winner to previous winners list",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "ec6c29e0-4c21-4953-8bf7-f226d27805e5",
                    "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->REJECT should change game state back to ready",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "eb5eca82-a45d-4fcb-b0c2-dd034f722506",
                    "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 6,
                "totalPasses": 6,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 4
              },
              {
                "title": "action->RESET",
                "suites": [],
                "tests": [
                  {
                    "title": "should allow when game state is ready",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should allow when game state is ready",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
                    "isRoot": false,
                    "uuid": "850957df-442d-4118-80d6-6b53e5d9c3bd",
                    "parentUUID": "b2eda362-2a89-4968-bf94-ece771bce117",
                    "skipped": false
                  },
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should allow when game state is pending",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
                    "isRoot": false,
                    "uuid": "4f79a09c-1941-406d-a52e-f5fcfc834705",
                    "parentUUID": "b2eda362-2a89-4968-bf94-ece771bce117",
                    "skipped": false
                  },
                  {
                    "title": "should not replace previous round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should not replace previous round winner with pending contestant",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "6f826d4d-4982-4dd8-9c80-85d3ae5e95f1",
                    "parentUUID": "b2eda362-2a89-4968-bf94-ece771bce117",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "3cb198d9-be20-4080-977e-dfb2c9e243cd",
                    "parentUUID": "b2eda362-2a89-4968-bf94-ece771bce117",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should change game state back to ready",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "1765317e-cf7b-4291-998f-66f3109a1a4f",
                    "parentUUID": "b2eda362-2a89-4968-bf94-ece771bce117",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "b2eda362-2a89-4968-bf94-ece771bce117",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should allow when game state is ready",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should allow when game state is ready",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
                    "isRoot": false,
                    "uuid": "850957df-442d-4118-80d6-6b53e5d9c3bd",
                    "parentUUID": "b2eda362-2a89-4968-bf94-ece771bce117",
                    "skipped": false
                  },
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should allow when game state is pending",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
                    "isRoot": false,
                    "uuid": "4f79a09c-1941-406d-a52e-f5fcfc834705",
                    "parentUUID": "b2eda362-2a89-4968-bf94-ece771bce117",
                    "skipped": false
                  },
                  {
                    "title": "should not replace previous round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should not replace previous round winner with pending contestant",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "6f826d4d-4982-4dd8-9c80-85d3ae5e95f1",
                    "parentUUID": "b2eda362-2a89-4968-bf94-ece771bce117",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "3cb198d9-be20-4080-977e-dfb2c9e243cd",
                    "parentUUID": "b2eda362-2a89-4968-bf94-ece771bce117",
                    "skipped": false
                  },
                  {
                    "title": "should change game state back to ready",
                    "fullTitle": "tryBuzzerAction(action) action->RESET should change game state back to ready",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "1765317e-cf7b-4291-998f-66f3109a1a4f",
                    "parentUUID": "b2eda362-2a89-4968-bf94-ece771bce117",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 5,
                "totalPasses": 5,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 5
              },
              {
                "title": "action->DISABLE",
                "suites": [],
                "tests": [
                  {
                    "title": "should allow when game state is ready",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should allow when game state is ready",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "59ae5d3c-5ef3-4050-8c3d-d06c3d53fb1a",
                    "parentUUID": "871b10ff-4610-4aa5-b191-91549f032451",
                    "skipped": false
                  },
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should allow when game state is pending",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "d5dab582-76fd-4c32-aaa5-57c5f7342386",
                    "parentUUID": "871b10ff-4610-4aa5-b191-91549f032451",
                    "skipped": false
                  },
                  {
                    "title": "should not replace previous round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should not replace previous round winner with pending contestant",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "83fef47a-7835-4900-9ab3-efcd58b71e08",
                    "parentUUID": "871b10ff-4610-4aa5-b191-91549f032451",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "f099044c-4bec-46d4-b5ba-513a3bd5a470",
                    "parentUUID": "871b10ff-4610-4aa5-b191-91549f032451",
                    "skipped": false
                  },
                  {
                    "title": "should change game state to buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should change game state to buzzerLock",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.BUZZER_LOCK);",
                    "isRoot": false,
                    "uuid": "3b1950a6-9528-4471-88b1-ed540a6b9148",
                    "parentUUID": "871b10ff-4610-4aa5-b191-91549f032451",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "871b10ff-4610-4aa5-b191-91549f032451",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should allow when game state is ready",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should allow when game state is ready",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "59ae5d3c-5ef3-4050-8c3d-d06c3d53fb1a",
                    "parentUUID": "871b10ff-4610-4aa5-b191-91549f032451",
                    "skipped": false
                  },
                  {
                    "title": "should allow when game state is pending",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should allow when game state is pending",
                    "timedOut": false,
                    "duration": 2,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "d5dab582-76fd-4c32-aaa5-57c5f7342386",
                    "parentUUID": "871b10ff-4610-4aa5-b191-91549f032451",
                    "skipped": false
                  },
                  {
                    "title": "should not replace previous round winner with pending contestant",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should not replace previous round winner with pending contestant",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "83fef47a-7835-4900-9ab3-efcd58b71e08",
                    "parentUUID": "871b10ff-4610-4aa5-b191-91549f032451",
                    "skipped": false
                  },
                  {
                    "title": "should add previous round winner to winners list",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should add previous round winner to winners list",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
                    "isRoot": false,
                    "uuid": "f099044c-4bec-46d4-b5ba-513a3bd5a470",
                    "parentUUID": "871b10ff-4610-4aa5-b191-91549f032451",
                    "skipped": false
                  },
                  {
                    "title": "should change game state to buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->DISABLE should change game state to buzzerLock",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.BUZZER_LOCK);",
                    "isRoot": false,
                    "uuid": "3b1950a6-9528-4471-88b1-ed540a6b9148",
                    "parentUUID": "871b10ff-4610-4aa5-b191-91549f032451",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 5,
                "totalPasses": 5,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 8
              },
              {
                "title": "action->ENABLE",
                "suites": [],
                "tests": [
                  {
                    "title": "should allow when game state is buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should allow when game state is buzzerLock",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "7886ee36-815f-4ffc-a8fc-16e4bb449150",
                    "parentUUID": "236077a4-f096-47a1-84cf-998d68cefc9c",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should not allow when game state is not buzzerLock",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.false();",
                    "isRoot": false,
                    "uuid": "a76f4635-423d-47aa-9f00-9ad584a81bc7",
                    "parentUUID": "236077a4-f096-47a1-84cf-998d68cefc9c",
                    "skipped": false
                  },
                  {
                    "title": "should change game state to ready",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should change game state to ready",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "cee51da0-ddf0-4a0d-856d-1bbce61637a4",
                    "parentUUID": "236077a4-f096-47a1-84cf-998d68cefc9c",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/SessionTests.js",
                "uuid": "236077a4-f096-47a1-84cf-998d68cefc9c",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
                "passes": [
                  {
                    "title": "should allow when game state is buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should allow when game state is buzzerLock",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();",
                    "isRoot": false,
                    "uuid": "7886ee36-815f-4ffc-a8fc-16e4bb449150",
                    "parentUUID": "236077a4-f096-47a1-84cf-998d68cefc9c",
                    "skipped": false
                  },
                  {
                    "title": "should not allow when game state is not buzzerLock",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should not allow when game state is not buzzerLock",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.false();",
                    "isRoot": false,
                    "uuid": "a76f4635-423d-47aa-9f00-9ad584a81bc7",
                    "parentUUID": "236077a4-f096-47a1-84cf-998d68cefc9c",
                    "skipped": false
                  },
                  {
                    "title": "should change game state to ready",
                    "fullTitle": "tryBuzzerAction(action) action->ENABLE should change game state to ready",
                    "timedOut": false,
                    "duration": 3,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
                    "isRoot": false,
                    "uuid": "cee51da0-ddf0-4a0d-856d-1bbce61637a4",
                    "parentUUID": "236077a4-f096-47a1-84cf-998d68cefc9c",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 4
              }
            ],
            "tests": [],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "8150f739-3cc3-4b14-8b24-1bf78f6ca981",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [],
            "failures": [],
            "skipped": [],
            "hasTests": false,
            "hasSuites": true,
            "totalTests": 0,
            "totalPasses": 0,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": false,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#pendingWinner",
            "suites": [],
            "tests": [
              {
                "title": "should return the pending winner",
                "fullTitle": "Session #pendingWinner should return the pending winner",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.pendingWinner.should.equal(<span class=\"hljs-string\">'testUser'</span>);",
                "isRoot": false,
                "uuid": "5d78c3c7-20b1-41c5-9e42-74878bd50abb",
                "parentUUID": "7e5a272b-ef7a-4319-ba88-885260e1db5a",
                "skipped": false
              },
              {
                "title": "should not return the pending winner",
                "fullTitle": "Session #pendingWinner should not return the pending winner",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>should(s.pendingWinner).be.null();",
                "isRoot": false,
                "uuid": "29affbd2-d72a-4ba9-82f1-da87d28244b5",
                "parentUUID": "7e5a272b-ef7a-4319-ba88-885260e1db5a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "7e5a272b-ef7a-4319-ba88-885260e1db5a",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should return the pending winner",
                "fullTitle": "Session #pendingWinner should return the pending winner",
                "timedOut": false,
                "duration": 2,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.pendingWinner.should.equal(<span class=\"hljs-string\">'testUser'</span>);",
                "isRoot": false,
                "uuid": "5d78c3c7-20b1-41c5-9e42-74878bd50abb",
                "parentUUID": "7e5a272b-ef7a-4319-ba88-885260e1db5a",
                "skipped": false
              },
              {
                "title": "should not return the pending winner",
                "fullTitle": "Session #pendingWinner should not return the pending winner",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>should(s.pendingWinner).be.null();",
                "isRoot": false,
                "uuid": "29affbd2-d72a-4ba9-82f1-da87d28244b5",
                "parentUUID": "7e5a272b-ef7a-4319-ba88-885260e1db5a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#updateSessionName(name)",
            "suites": [],
            "tests": [
              {
                "title": "should update session name",
                "fullTitle": "Session #updateSessionName(name) should update session name",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.updateSessionName(<span class=\"hljs-string\">'session2'</span>);<br>settings.sessionName.should.equal(<span class=\"hljs-string\">'session2'</span>);",
                "isRoot": false,
                "uuid": "1c2384fa-96d5-4aef-a8ea-a5c8f133a080",
                "parentUUID": "5c6071ff-2645-410a-8528-324c4c0970f5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "5c6071ff-2645-410a-8528-324c4c0970f5",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should update session name",
                "fullTitle": "Session #updateSessionName(name) should update session name",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.updateSessionName(<span class=\"hljs-string\">'session2'</span>);<br>settings.sessionName.should.equal(<span class=\"hljs-string\">'session2'</span>);",
                "isRoot": false,
                "uuid": "1c2384fa-96d5-4aef-a8ea-a5c8f133a080",
                "parentUUID": "5c6071ff-2645-410a-8528-324c4c0970f5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#updateMaxContestants(maxContestants)",
            "suites": [],
            "tests": [
              {
                "title": "should update max contestants",
                "fullTitle": "Session #updateMaxContestants(maxContestants) should update max contestants",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "304f466d-f95b-4e60-88c7-dd01e6b1d39b",
                "parentUUID": "eddc8de6-78f3-4f91-9eb7-1134f8b944e5",
                "skipped": false
              },
              {
                "title": "should not allow below current connected amount",
                "fullTitle": "Session #updateMaxContestants(maxContestants) should not allow below current connected amount",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>s.addContestant(c1).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>s.addContestant(c2).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">1</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_CONTESTANTS_MUST_BE_GREATER_THAN_ALREADY_CONNECTED);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "14bcfd9c-70f0-4f3d-a68f-bf87b2951f4b",
                "parentUUID": "eddc8de6-78f3-4f91-9eb7-1134f8b944e5",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "eddc8de6-78f3-4f91-9eb7-1134f8b944e5",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should update max contestants",
                "fullTitle": "Session #updateMaxContestants(maxContestants) should update max contestants",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "304f466d-f95b-4e60-88c7-dd01e6b1d39b",
                "parentUUID": "eddc8de6-78f3-4f91-9eb7-1134f8b944e5",
                "skipped": false
              },
              {
                "title": "should not allow below current connected amount",
                "fullTitle": "Session #updateMaxContestants(maxContestants) should not allow below current connected amount",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.maxContestants = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>s.addContestant(c1).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>s.addContestant(c2).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">1</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_CONTESTANTS_MUST_BE_GREATER_THAN_ALREADY_CONNECTED);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "14bcfd9c-70f0-4f3d-a68f-bf87b2951f4b",
                "parentUUID": "eddc8de6-78f3-4f91-9eb7-1134f8b944e5",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "#updateTeamSize(teamSize)",
            "suites": [],
            "tests": [
              {
                "title": "should update team size",
                "fullTitle": "Session #updateTeamSize(teamSize) should update team size",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.teamSize.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "caf32f40-9803-46f9-83b9-d6e6d07053cb",
                "parentUUID": "c82c4cfc-95d2-4e8f-a4ee-bde096393980",
                "skipped": false
              },
              {
                "title": "should not allow below current setting",
                "fullTitle": "Session #updateTeamSize(teamSize) should not allow below current setting",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.TEAM_SIZE_MUST_BE_GREATER_THAN_ALREADY_SET);",
                "isRoot": false,
                "uuid": "61ab8dbc-9c73-43a9-902c-3b5640d4057f",
                "parentUUID": "c82c4cfc-95d2-4e8f-a4ee-bde096393980",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "c82c4cfc-95d2-4e8f-a4ee-bde096393980",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should update team size",
                "fullTitle": "Session #updateTeamSize(teamSize) should update team size",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.teamSize.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "caf32f40-9803-46f9-83b9-d6e6d07053cb",
                "parentUUID": "c82c4cfc-95d2-4e8f-a4ee-bde096393980",
                "skipped": false
              },
              {
                "title": "should not allow below current setting",
                "fullTitle": "Session #updateTeamSize(teamSize) should not allow below current setting",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.TEAM_SIZE_MUST_BE_GREATER_THAN_ALREADY_SET);",
                "isRoot": false,
                "uuid": "61ab8dbc-9c73-43a9-902c-3b5640d4057f",
                "parentUUID": "c82c4cfc-95d2-4e8f-a4ee-bde096393980",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#updateMaxTeams(maxTeams)",
            "suites": [],
            "tests": [
              {
                "title": "should update max teams",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should update max teams",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxTeams.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "f48ae455-19ef-440d-b7b2-5acd73de609e",
                "parentUUID": "fd29f0e0-cb3d-4ba0-ab15-7ef9708745b4",
                "skipped": false
              },
              {
                "title": "should add teams",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should add teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">5</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "84aa672e-b4cb-4291-8800-ce1c8700e920",
                "parentUUID": "fd29f0e0-cb3d-4ba0-ab15-7ef9708745b4",
                "skipped": false
              },
              {
                "title": "should not allow below current setting",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should not allow below current setting",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_MUST_BE_GREATER_THAN_ALREADY_SET);",
                "isRoot": false,
                "uuid": "e027c9ef-5d3d-4893-a6a2-683a90c56db9",
                "parentUUID": "fd29f0e0-cb3d-4ba0-ab15-7ef9708745b4",
                "skipped": false
              },
              {
                "title": "should not allow if teams are PLAYER_CHOICE",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should not allow if teams are PLAYER_CHOICE",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">6</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_CANNOT_BE_CHANGED_WHEN_PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "49c2c002-55e6-4de2-9b7d-603f2c79bc97",
                "parentUUID": "fd29f0e0-cb3d-4ba0-ab15-7ef9708745b4",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SessionTests.js",
            "uuid": "fd29f0e0-cb3d-4ba0-ab15-7ef9708745b4",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
            "passes": [
              {
                "title": "should update max teams",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should update max teams",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxTeams.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "f48ae455-19ef-440d-b7b2-5acd73de609e",
                "parentUUID": "fd29f0e0-cb3d-4ba0-ab15-7ef9708745b4",
                "skipped": false
              },
              {
                "title": "should add teams",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should add teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">5</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "84aa672e-b4cb-4291-8800-ce1c8700e920",
                "parentUUID": "fd29f0e0-cb3d-4ba0-ab15-7ef9708745b4",
                "skipped": false
              },
              {
                "title": "should not allow below current setting",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should not allow below current setting",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_MUST_BE_GREATER_THAN_ALREADY_SET);",
                "isRoot": false,
                "uuid": "e027c9ef-5d3d-4893-a6a2-683a90c56db9",
                "parentUUID": "fd29f0e0-cb3d-4ba0-ab15-7ef9708745b4",
                "skipped": false
              },
              {
                "title": "should not allow if teams are PLAYER_CHOICE",
                "fullTitle": "Session #updateMaxTeams(maxTeams) should not allow if teams are PLAYER_CHOICE",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">6</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_CANNOT_BE_CHANGED_WHEN_PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "49c2c002-55e6-4de2-9b7d-603f2c79bc97",
                "parentUUID": "fd29f0e0-cb3d-4ba0-ab15-7ef9708745b4",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/SessionTests.js",
        "uuid": "447ae0e8-123e-4ce6-ab8e-c48598df70ca",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SessionTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Settings",
        "suites": [
          {
            "title": "#hasTeams",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #hasTeams should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s._hasTeams.should.be.true();",
                "isRoot": false,
                "uuid": "80799b74-b896-4a91-9ea2-928e61729536",
                "parentUUID": "e49c01f0-680d-420f-9d5e-e2ba2643b23b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #hasTeams should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.hasTeams.should.be.true();",
                "isRoot": false,
                "uuid": "f4828846-1ca2-4861-b294-391276c55460",
                "parentUUID": "e49c01f0-680d-420f-9d5e-e2ba2643b23b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "e49c01f0-680d-420f-9d5e-e2ba2643b23b",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #hasTeams should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s._hasTeams.should.be.true();",
                "isRoot": false,
                "uuid": "80799b74-b896-4a91-9ea2-928e61729536",
                "parentUUID": "e49c01f0-680d-420f-9d5e-e2ba2643b23b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #hasTeams should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.hasTeams.should.be.true();",
                "isRoot": false,
                "uuid": "f4828846-1ca2-4861-b294-391276c55460",
                "parentUUID": "e49c01f0-680d-420f-9d5e-e2ba2643b23b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#teamSize",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamSize should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s._teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "ab7ee861-fb0d-4197-bf0d-e0e0cbdcf9f2",
                "parentUUID": "8efd482b-2697-4b07-b70c-12b896ab6fe7",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamSize should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamSize = <span class=\"hljs-number\">1</span>;<br>s.teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "607d7b8b-628d-47ac-9dc0-6a870ca8d024",
                "parentUUID": "8efd482b-2697-4b07-b70c-12b896ab6fe7",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "8efd482b-2697-4b07-b70c-12b896ab6fe7",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamSize should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s._teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "ab7ee861-fb0d-4197-bf0d-e0e0cbdcf9f2",
                "parentUUID": "8efd482b-2697-4b07-b70c-12b896ab6fe7",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamSize should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamSize = <span class=\"hljs-number\">1</span>;<br>s.teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "607d7b8b-628d-47ac-9dc0-6a870ca8d024",
                "parentUUID": "8efd482b-2697-4b07-b70c-12b896ab6fe7",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#maxTeams",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #maxTeams should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s._maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "ae504a69-6301-44bb-b8c2-ef1427ca8ebc",
                "parentUUID": "9f072311-0b30-484c-931b-1f3e0ed9e702",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #maxTeams should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-number\">1</span>;<br>s.maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "227e61cf-1413-4298-9257-91e1d31257c7",
                "parentUUID": "9f072311-0b30-484c-931b-1f3e0ed9e702",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "9f072311-0b30-484c-931b-1f3e0ed9e702",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #maxTeams should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s._maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "ae504a69-6301-44bb-b8c2-ef1427ca8ebc",
                "parentUUID": "9f072311-0b30-484c-931b-1f3e0ed9e702",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #maxTeams should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-number\">1</span>;<br>s.maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "227e61cf-1413-4298-9257-91e1d31257c7",
                "parentUUID": "9f072311-0b30-484c-931b-1f3e0ed9e702",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#teamLeaderSelectionMethod",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamLeaderSelectionMethod should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s._teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "ab7a4806-15c6-42aa-9bbe-921a553ed31e",
                "parentUUID": "86665cd5-dbe3-4290-bb09-5e57030e81af",
                "skipped": false
              },
              {
                "title": "should throw on set when constant value is invalid",
                "fullTitle": "Settings #teamLeaderSelectionMethod should throw on set when constant value is invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamLeaderSelectionMethod.all.slice().sort(<br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, b</span>) </span>{<br>            <span class=\"hljs-keyword\">return</span> a - b;<br>        }).pop();<br>    s.teamLeaderSelectionMethod = ++high;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "ef1e91c2-3d4a-43c8-bd50-b89accd10c09",
                "parentUUID": "86665cd5-dbe3-4290-bb09-5e57030e81af",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamLeaderSelectionMethod should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s.teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "7a19b377-1d60-4758-a7f9-4f9586688945",
                "parentUUID": "86665cd5-dbe3-4290-bb09-5e57030e81af",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "86665cd5-dbe3-4290-bb09-5e57030e81af",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamLeaderSelectionMethod should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s._teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "ab7a4806-15c6-42aa-9bbe-921a553ed31e",
                "parentUUID": "86665cd5-dbe3-4290-bb09-5e57030e81af",
                "skipped": false
              },
              {
                "title": "should throw on set when constant value is invalid",
                "fullTitle": "Settings #teamLeaderSelectionMethod should throw on set when constant value is invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamLeaderSelectionMethod.all.slice().sort(<br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, b</span>) </span>{<br>            <span class=\"hljs-keyword\">return</span> a - b;<br>        }).pop();<br>    s.teamLeaderSelectionMethod = ++high;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "ef1e91c2-3d4a-43c8-bd50-b89accd10c09",
                "parentUUID": "86665cd5-dbe3-4290-bb09-5e57030e81af",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamLeaderSelectionMethod should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s.teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
                "isRoot": false,
                "uuid": "7a19b377-1d60-4758-a7f9-4f9586688945",
                "parentUUID": "86665cd5-dbe3-4290-bb09-5e57030e81af",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#teamNameEdit",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamNameEdit should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br>s._teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
                "isRoot": false,
                "uuid": "0c341685-d5ac-41e1-8504-c259399926ab",
                "parentUUID": "e1e8f9be-afab-4fbc-9b1b-a31b73016b0b",
                "skipped": false
              },
              {
                "title": "should throw on set when constant value is invalid",
                "fullTitle": "Settings #teamNameEdit should throw on set when constant value is invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamNameEdit.all.slice().sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a,<br>        b</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> a - b;<br>    }).pop();<br>    s.teamNameEdit = ++high;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "533575ac-d8d3-41c0-bc7e-3d544f2f44eb",
                "parentUUID": "e1e8f9be-afab-4fbc-9b1b-a31b73016b0b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamNameEdit should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNameEdit = constants.teamNameEdit.ALLOW;<br>s.teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
                "isRoot": false,
                "uuid": "ff55dddd-a992-40c7-b688-3c4ce975afa5",
                "parentUUID": "e1e8f9be-afab-4fbc-9b1b-a31b73016b0b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "e1e8f9be-afab-4fbc-9b1b-a31b73016b0b",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamNameEdit should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br>s._teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
                "isRoot": false,
                "uuid": "0c341685-d5ac-41e1-8504-c259399926ab",
                "parentUUID": "e1e8f9be-afab-4fbc-9b1b-a31b73016b0b",
                "skipped": false
              },
              {
                "title": "should throw on set when constant value is invalid",
                "fullTitle": "Settings #teamNameEdit should throw on set when constant value is invalid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamNameEdit.all.slice().sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a,<br>        b</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> a - b;<br>    }).pop();<br>    s.teamNameEdit = ++high;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "533575ac-d8d3-41c0-bc7e-3d544f2f44eb",
                "parentUUID": "e1e8f9be-afab-4fbc-9b1b-a31b73016b0b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamNameEdit should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNameEdit = constants.teamNameEdit.ALLOW;<br>s.teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
                "isRoot": false,
                "uuid": "ff55dddd-a992-40c7-b688-3c4ce975afa5",
                "parentUUID": "e1e8f9be-afab-4fbc-9b1b-a31b73016b0b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#maxContestants",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #maxContestants should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxContestants = <span class=\"hljs-number\">1</span>;<br>s._maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "8d416089-f363-4f69-a809-6376a7ddb6c6",
                "parentUUID": "055ff0c2-e8d6-4b76-b89d-c3868f222fdf",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #maxContestants should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxContestants = <span class=\"hljs-number\">1</span>;<br>s.maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "f89b6391-131e-493d-9a70-112e476efe8a",
                "parentUUID": "055ff0c2-e8d6-4b76-b89d-c3868f222fdf",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "055ff0c2-e8d6-4b76-b89d-c3868f222fdf",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #maxContestants should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxContestants = <span class=\"hljs-number\">1</span>;<br>s._maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "8d416089-f363-4f69-a809-6376a7ddb6c6",
                "parentUUID": "055ff0c2-e8d6-4b76-b89d-c3868f222fdf",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #maxContestants should get value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxContestants = <span class=\"hljs-number\">1</span>;<br>s.maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "f89b6391-131e-493d-9a70-112e476efe8a",
                "parentUUID": "055ff0c2-e8d6-4b76-b89d-c3868f222fdf",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#sessionName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #sessionName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s._sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
                "isRoot": false,
                "uuid": "87945bf2-1d70-4ea5-9624-e76f2cc93518",
                "parentUUID": "1bc0792b-3093-4f97-a89c-323921d22ccd",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #sessionName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s.sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
                "isRoot": false,
                "uuid": "7f679d56-c7d6-41f5-ad29-d5a4ec61cee8",
                "parentUUID": "1bc0792b-3093-4f97-a89c-323921d22ccd",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "1bc0792b-3093-4f97-a89c-323921d22ccd",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #sessionName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s._sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
                "isRoot": false,
                "uuid": "87945bf2-1d70-4ea5-9624-e76f2cc93518",
                "parentUUID": "1bc0792b-3093-4f97-a89c-323921d22ccd",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #sessionName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s.sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
                "isRoot": false,
                "uuid": "7f679d56-c7d6-41f5-ad29-d5a4ec61cee8",
                "parentUUID": "1bc0792b-3093-4f97-a89c-323921d22ccd",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#teamNames",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamNames should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s._teamNames.should.be.Array();<br>s._teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s._teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
                "isRoot": false,
                "uuid": "9be2c583-6a6d-4c22-aa1e-df6a4cb18df3",
                "parentUUID": "1d7e1b02-4826-4318-8401-0c7aaf0eae48",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamNames should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s.teamNames.should.be.Array();<br>s.teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
                "isRoot": false,
                "uuid": "d1f23340-13c2-4f58-896f-bb0ca0b2358a",
                "parentUUID": "1d7e1b02-4826-4318-8401-0c7aaf0eae48",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/SettingsTests.js",
            "uuid": "1d7e1b02-4826-4318-8401-0c7aaf0eae48",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Settings #teamNames should set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s._teamNames.should.be.Array();<br>s._teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s._teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
                "isRoot": false,
                "uuid": "9be2c583-6a6d-4c22-aa1e-df6a4cb18df3",
                "parentUUID": "1d7e1b02-4826-4318-8401-0c7aaf0eae48",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Settings #teamNames should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s.teamNames.should.be.Array();<br>s.teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
                "isRoot": false,
                "uuid": "d1f23340-13c2-4f58-896f-bb0ca0b2358a",
                "parentUUID": "1d7e1b02-4826-4318-8401-0c7aaf0eae48",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/SettingsTests.js",
        "uuid": "db70768c-e695-4442-81d1-d874f6ed97f9",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/SettingsTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "TeamFactory",
        "suites": [
          {
            "title": "#create(teams, settings)",
            "suites": [],
            "tests": [
              {
                "title": "should throw when settings.maxTeams is less than 1",
                "fullTitle": "TeamFactory #create(teams, settings) should throw when settings.maxTeams is less than 1",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    teamFactory.create(tc, s);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "51de5f54-c599-4bf9-babb-3e3c6b6da558",
                "parentUUID": "56a07fb0-92b7-46b0-9aae-166bb5e1b01f",
                "skipped": false
              },
              {
                "title": "should create the correct amount of teams",
                "fullTitle": "TeamFactory #create(teams, settings) should create the correct amount of teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "5e3b38ea-08ae-4526-b8c1-bf21d074c0af",
                "parentUUID": "56a07fb0-92b7-46b0-9aae-166bb5e1b01f",
                "skipped": false
              },
              {
                "title": "should not fail with a large team size",
                "fullTitle": "TeamFactory #create(teams, settings) should not fail with a large team size",
                "timedOut": false,
                "duration": 50,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">500</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">500</span>);<br><span class=\"hljs-comment\">// ensure team names are unique</span><br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> i = names.indexOf(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> n === t.teamName;<br>    });<br>    i.should.equal(-<span class=\"hljs-number\">1</span>);<br>    names.push(t.teamName);<br>});",
                "isRoot": false,
                "uuid": "a58f8d75-ee83-4a55-afd6-a59a625c9f2f",
                "parentUUID": "56a07fb0-92b7-46b0-9aae-166bb5e1b01f",
                "skipped": false
              },
              {
                "title": "should use settings.teamNames first, before random selection",
                "fullTitle": "TeamFactory #create(teams, settings) should use settings.teamNames first, before random selection",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">10</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>, <span class=\"hljs-string\">'t3'</span>, <span class=\"hljs-string\">'t4'</span>, <span class=\"hljs-string\">'t5'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);<br>tc.all[<span class=\"hljs-number\">2</span>].teamName.should.equal(<span class=\"hljs-string\">'t3'</span>);<br>tc.all[<span class=\"hljs-number\">3</span>].teamName.should.equal(<span class=\"hljs-string\">'t4'</span>);<br>tc.all[<span class=\"hljs-number\">4</span>].teamName.should.equal(<span class=\"hljs-string\">'t5'</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">5</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">6</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">7</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">8</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">9</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "fa82dbd5-e433-4ea6-af0e-0af630c0c7e5",
                "parentUUID": "56a07fb0-92b7-46b0-9aae-166bb5e1b01f",
                "skipped": false
              },
              {
                "title": "should only create a single team when using unlimited teams",
                "fullTitle": "TeamFactory #create(teams, settings) should only create a single team when using unlimited teams",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "2af7b68d-f49a-4674-bf40-d3fe812db350",
                "parentUUID": "56a07fb0-92b7-46b0-9aae-166bb5e1b01f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamFactoryTests.js",
            "uuid": "56a07fb0-92b7-46b0-9aae-166bb5e1b01f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamFactoryTests.js",
            "passes": [
              {
                "title": "should throw when settings.maxTeams is less than 1",
                "fullTitle": "TeamFactory #create(teams, settings) should throw when settings.maxTeams is less than 1",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    teamFactory.create(tc, s);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "51de5f54-c599-4bf9-babb-3e3c6b6da558",
                "parentUUID": "56a07fb0-92b7-46b0-9aae-166bb5e1b01f",
                "skipped": false
              },
              {
                "title": "should create the correct amount of teams",
                "fullTitle": "TeamFactory #create(teams, settings) should create the correct amount of teams",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "5e3b38ea-08ae-4526-b8c1-bf21d074c0af",
                "parentUUID": "56a07fb0-92b7-46b0-9aae-166bb5e1b01f",
                "skipped": false
              },
              {
                "title": "should not fail with a large team size",
                "fullTitle": "TeamFactory #create(teams, settings) should not fail with a large team size",
                "timedOut": false,
                "duration": 50,
                "state": "passed",
                "speed": "medium",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">500</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">500</span>);<br><span class=\"hljs-comment\">// ensure team names are unique</span><br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> i = names.indexOf(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> n === t.teamName;<br>    });<br>    i.should.equal(-<span class=\"hljs-number\">1</span>);<br>    names.push(t.teamName);<br>});",
                "isRoot": false,
                "uuid": "a58f8d75-ee83-4a55-afd6-a59a625c9f2f",
                "parentUUID": "56a07fb0-92b7-46b0-9aae-166bb5e1b01f",
                "skipped": false
              },
              {
                "title": "should use settings.teamNames first, before random selection",
                "fullTitle": "TeamFactory #create(teams, settings) should use settings.teamNames first, before random selection",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">10</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>, <span class=\"hljs-string\">'t3'</span>, <span class=\"hljs-string\">'t4'</span>, <span class=\"hljs-string\">'t5'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);<br>tc.all[<span class=\"hljs-number\">2</span>].teamName.should.equal(<span class=\"hljs-string\">'t3'</span>);<br>tc.all[<span class=\"hljs-number\">3</span>].teamName.should.equal(<span class=\"hljs-string\">'t4'</span>);<br>tc.all[<span class=\"hljs-number\">4</span>].teamName.should.equal(<span class=\"hljs-string\">'t5'</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">5</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">6</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">7</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">8</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">9</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "fa82dbd5-e433-4ea6-af0e-0af630c0c7e5",
                "parentUUID": "56a07fb0-92b7-46b0-9aae-166bb5e1b01f",
                "skipped": false
              },
              {
                "title": "should only create a single team when using unlimited teams",
                "fullTitle": "TeamFactory #create(teams, settings) should only create a single team when using unlimited teams",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "2af7b68d-f49a-4674-bf40-d3fe812db350",
                "parentUUID": "56a07fb0-92b7-46b0-9aae-166bb5e1b01f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 5,
            "totalPasses": 5,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 53
          },
          {
            "title": "#add(teams, settings)",
            "suites": [],
            "tests": [
              {
                "title": "should add a team",
                "fullTitle": "TeamFactory #add(teams, settings) should add a team",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>teamFactory.add(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "3c1ed27d-1c4a-4c45-a8d2-cb26b1c8d8e9",
                "parentUUID": "3f9b4c05-5645-4c7d-af8e-c52b347863d6",
                "skipped": false
              },
              {
                "title": "should reuse team names specified in settings",
                "fullTitle": "TeamFactory #add(teams, settings) should reuse team names specified in settings",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>teamFactory.add(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);",
                "isRoot": false,
                "uuid": "0206a0ea-afc2-4ca6-b468-92311243ab38",
                "parentUUID": "3f9b4c05-5645-4c7d-af8e-c52b347863d6",
                "skipped": false
              },
              {
                "title": "should factor in team names which are already in use",
                "fullTitle": "TeamFactory #add(teams, settings) should factor in team names which are already in use",
                "timedOut": false,
                "duration": 257,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    teamFactory.add(tc, s);<br>}<br>tc.all.length.should.equal(<span class=\"hljs-number\">1001</span>);<br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    names.push(t.teamName);<br>});<br><span class=\"hljs-keyword\">var</span> uniqueNames = unique(names);<br>names.length.should.equal(uniqueNames.length);",
                "isRoot": false,
                "uuid": "64438fac-91d3-454e-b8cc-83059344be08",
                "parentUUID": "3f9b4c05-5645-4c7d-af8e-c52b347863d6",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamFactoryTests.js",
            "uuid": "3f9b4c05-5645-4c7d-af8e-c52b347863d6",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamFactoryTests.js",
            "passes": [
              {
                "title": "should add a team",
                "fullTitle": "TeamFactory #add(teams, settings) should add a team",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>teamFactory.add(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "3c1ed27d-1c4a-4c45-a8d2-cb26b1c8d8e9",
                "parentUUID": "3f9b4c05-5645-4c7d-af8e-c52b347863d6",
                "skipped": false
              },
              {
                "title": "should reuse team names specified in settings",
                "fullTitle": "TeamFactory #add(teams, settings) should reuse team names specified in settings",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>teamFactory.add(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);",
                "isRoot": false,
                "uuid": "0206a0ea-afc2-4ca6-b468-92311243ab38",
                "parentUUID": "3f9b4c05-5645-4c7d-af8e-c52b347863d6",
                "skipped": false
              },
              {
                "title": "should factor in team names which are already in use",
                "fullTitle": "TeamFactory #add(teams, settings) should factor in team names which are already in use",
                "timedOut": false,
                "duration": 257,
                "state": "passed",
                "speed": "slow",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    teamFactory.add(tc, s);<br>}<br>tc.all.length.should.equal(<span class=\"hljs-number\">1001</span>);<br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    names.push(t.teamName);<br>});<br><span class=\"hljs-keyword\">var</span> uniqueNames = unique(names);<br>names.length.should.equal(uniqueNames.length);",
                "isRoot": false,
                "uuid": "64438fac-91d3-454e-b8cc-83059344be08",
                "parentUUID": "3f9b4c05-5645-4c7d-af8e-c52b347863d6",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 259
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/TeamFactoryTests.js",
        "uuid": "e2d7b5a4-06c2-4744-adb4-059b6a9b1468",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamFactoryTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Teams",
        "suites": [
          {
            "title": "#contains(teamName)",
            "suites": [],
            "tests": [
              {
                "title": "should return true when team with teamName does exist",
                "fullTitle": "Teams #contains(teamName) should return true when team with teamName does exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(t.teamName).should.be.true();",
                "isRoot": false,
                "uuid": "327a778e-d861-4417-95c9-f11edfbf138c",
                "parentUUID": "9bcf0663-5838-41ea-bf0c-5cd8f067bbef",
                "skipped": false
              },
              {
                "title": "should return false when no team with teamName does exist",
                "fullTitle": "Teams #contains(teamName) should return false when no team with teamName does exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(<span class=\"hljs-string\">'other team name'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "c85301cf-e1f2-4786-8b07-c036317f800d",
                "parentUUID": "9bcf0663-5838-41ea-bf0c-5cd8f067bbef",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "9bcf0663-5838-41ea-bf0c-5cd8f067bbef",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should return true when team with teamName does exist",
                "fullTitle": "Teams #contains(teamName) should return true when team with teamName does exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(t.teamName).should.be.true();",
                "isRoot": false,
                "uuid": "327a778e-d861-4417-95c9-f11edfbf138c",
                "parentUUID": "9bcf0663-5838-41ea-bf0c-5cd8f067bbef",
                "skipped": false
              },
              {
                "title": "should return false when no team with teamName does exist",
                "fullTitle": "Teams #contains(teamName) should return false when no team with teamName does exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(<span class=\"hljs-string\">'other team name'</span>).should.be.false();",
                "isRoot": false,
                "uuid": "c85301cf-e1f2-4786-8b07-c036317f800d",
                "parentUUID": "9bcf0663-5838-41ea-bf0c-5cd8f067bbef",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#all",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Teams #all should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "86f76524-c701-4db1-849b-6bf54c8871f0",
                "parentUUID": "7b2c406d-90cb-4763-aaf5-68c6526b4e7b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Teams #all should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "373fda61-488b-4191-8fcc-e4a2f71e7d50",
                "parentUUID": "7b2c406d-90cb-4763-aaf5-68c6526b4e7b",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Teams #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all.pop();<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "7fd158fb-a735-45ac-a9c1-95d52188164c",
                "parentUUID": "7b2c406d-90cb-4763-aaf5-68c6526b4e7b",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "7b2c406d-90cb-4763-aaf5-68c6526b4e7b",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Teams #all should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.all = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "86f76524-c701-4db1-849b-6bf54c8871f0",
                "parentUUID": "7b2c406d-90cb-4763-aaf5-68c6526b4e7b",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Teams #all should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "373fda61-488b-4191-8fcc-e4a2f71e7d50",
                "parentUUID": "7b2c406d-90cb-4763-aaf5-68c6526b4e7b",
                "skipped": false
              },
              {
                "title": "should get copy of val and not reference",
                "fullTitle": "Teams #all should get copy of val and not reference",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all.pop();<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "7fd158fb-a735-45ac-a9c1-95d52188164c",
                "parentUUID": "7b2c406d-90cb-4763-aaf5-68c6526b4e7b",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#length",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Teams #length should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.length = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "baf61d6d-83bf-4054-b698-67ea81efe8fb",
                "parentUUID": "df86118e-53b2-4da7-b5ec-7424cab815a2",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Teams #length should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "5102eb5a-d5d0-4fb3-a90a-a71cf5e89ee2",
                "parentUUID": "df86118e-53b2-4da7-b5ec-7424cab815a2",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "df86118e-53b2-4da7-b5ec-7424cab815a2",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Teams #length should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.length = [];<br>}).should.throw();",
                "isRoot": false,
                "uuid": "baf61d6d-83bf-4054-b698-67ea81efe8fb",
                "parentUUID": "df86118e-53b2-4da7-b5ec-7424cab815a2",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Teams #length should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "5102eb5a-d5d0-4fb3-a90a-a71cf5e89ee2",
                "parentUUID": "df86118e-53b2-4da7-b5ec-7424cab815a2",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#add(team)",
            "suites": [],
            "tests": [
              {
                "title": "should add the given team",
                "fullTitle": "Teams #add(team) should add the given team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "6238b5bc-2eaa-4127-8bfb-20a56304f6a8",
                "parentUUID": "9f1f2455-304d-4acf-8c05-907951560bed",
                "skipped": false
              },
              {
                "title": "should error if team with teamName already exists",
                "fullTitle": "Teams #add(team) should error if team with teamName already exists",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.add(t);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "9c734304-4026-4b1b-9fec-ad7ea012bed1",
                "parentUUID": "9f1f2455-304d-4acf-8c05-907951560bed",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "9f1f2455-304d-4acf-8c05-907951560bed",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should add the given team",
                "fullTitle": "Teams #add(team) should add the given team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
                "isRoot": false,
                "uuid": "6238b5bc-2eaa-4127-8bfb-20a56304f6a8",
                "parentUUID": "9f1f2455-304d-4acf-8c05-907951560bed",
                "skipped": false
              },
              {
                "title": "should error if team with teamName already exists",
                "fullTitle": "Teams #add(team) should error if team with teamName already exists",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.add(t);<br>}).should.throw();",
                "isRoot": false,
                "uuid": "9c734304-4026-4b1b-9fec-ad7ea012bed1",
                "parentUUID": "9f1f2455-304d-4acf-8c05-907951560bed",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#remove(team)",
            "suites": [],
            "tests": [
              {
                "title": "should remove the existing team",
                "fullTitle": "Teams #remove(team) should remove the existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "69b834c2-1fa7-465a-96f6-3f0e0ef77953",
                "parentUUID": "b85150cc-d958-4b6c-87ee-f3ff2426b469",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing team",
                "fullTitle": "Teams #remove(team) should not remove the non-existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t1).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "0f1196ae-7cda-4139-a10e-d7c3c6aa81c9",
                "parentUUID": "b85150cc-d958-4b6c-87ee-f3ff2426b469",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "b85150cc-d958-4b6c-87ee-f3ff2426b469",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should remove the existing team",
                "fullTitle": "Teams #remove(team) should remove the existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "69b834c2-1fa7-465a-96f6-3f0e0ef77953",
                "parentUUID": "b85150cc-d958-4b6c-87ee-f3ff2426b469",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing team",
                "fullTitle": "Teams #remove(team) should not remove the non-existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t1).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "0f1196ae-7cda-4139-a10e-d7c3c6aa81c9",
                "parentUUID": "b85150cc-d958-4b6c-87ee-f3ff2426b469",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#removeByTeamName(team)",
            "suites": [],
            "tests": [
              {
                "title": "should remove the existing team",
                "fullTitle": "Teams #removeByTeamName(team) should remove the existing team",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t.teamName).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "2e2929dd-98df-42a0-8c78-ee851e5bd3a3",
                "parentUUID": "38964705-ae22-4a9f-974f-6a0ca055a9b0",
                "skipped": false
              },
              {
                "title": "should ignore team name case",
                "fullTitle": "Teams #removeByTeamName(team) should ignore team name case",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'abc1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(<span class=\"hljs-string\">'ABC1'</span>).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "c70fd123-d54b-4fa2-a252-843f241871a6",
                "parentUUID": "38964705-ae22-4a9f-974f-6a0ca055a9b0",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing team",
                "fullTitle": "Teams #removeByTeamName(team) should not remove the non-existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t1.teamName).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "1bf81068-8fe6-4588-b29c-e76db7321fd9",
                "parentUUID": "38964705-ae22-4a9f-974f-6a0ca055a9b0",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "38964705-ae22-4a9f-974f-6a0ca055a9b0",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should remove the existing team",
                "fullTitle": "Teams #removeByTeamName(team) should remove the existing team",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t.teamName).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "2e2929dd-98df-42a0-8c78-ee851e5bd3a3",
                "parentUUID": "38964705-ae22-4a9f-974f-6a0ca055a9b0",
                "skipped": false
              },
              {
                "title": "should ignore team name case",
                "fullTitle": "Teams #removeByTeamName(team) should ignore team name case",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'abc1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(<span class=\"hljs-string\">'ABC1'</span>).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
                "isRoot": false,
                "uuid": "c70fd123-d54b-4fa2-a252-843f241871a6",
                "parentUUID": "38964705-ae22-4a9f-974f-6a0ca055a9b0",
                "skipped": false
              },
              {
                "title": "should not remove the non-existing team",
                "fullTitle": "Teams #removeByTeamName(team) should not remove the non-existing team",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t1.teamName).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "1bf81068-8fe6-4588-b29c-e76db7321fd9",
                "parentUUID": "38964705-ae22-4a9f-974f-6a0ca055a9b0",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName)",
            "suites": [
              {
                "title": "when teams are full",
                "suites": [],
                "tests": [
                  {
                    "title": "should return a valid response",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teams are full should return a valid response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);",
                    "isRoot": false,
                    "uuid": "f1aca023-627a-488c-be89-a7492e6c6204",
                    "parentUUID": "e71d7d9a-993d-4584-9ec0-607215ead7ec",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamsTests.js",
                "uuid": "e71d7d9a-993d-4584-9ec0-607215ead7ec",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
                "passes": [
                  {
                    "title": "should return a valid response",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teams are full should return a valid response",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);",
                    "isRoot": false,
                    "uuid": "f1aca023-627a-488c-be89-a7492e6c6204",
                    "parentUUID": "e71d7d9a-993d-4584-9ec0-607215ead7ec",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0
              },
              {
                "title": "when teamLeader selection is PLAYER_CHOICE",
                "suites": [],
                "tests": [
                  {
                    "title": "should inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should inquire for team leader",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> inquired = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    inquired = <span class=\"hljs-literal\">true</span>;<br>});<br>r.should.be.true();<br>inquired.should.be.true();",
                    "isRoot": false,
                    "uuid": "f1e33f2d-70af-4858-a3e8-bf5a2c9c3d1c",
                    "parentUUID": "0a6857a0-6b6e-42b9-8066-63201803dc42",
                    "skipped": false
                  },
                  {
                    "title": "should not inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should not inquire for team leader",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>tc.all[<span class=\"hljs-number\">0</span>].teamLeader = c1;<br><span class=\"hljs-keyword\">var</span> didNotInquire = <span class=\"hljs-literal\">true</span>;<br>tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    didNotInquire = <span class=\"hljs-literal\">false</span>;<br>});<br>didNotInquire.should.be.true();<br>t.teamLeader.should.equal(c1);",
                    "isRoot": false,
                    "uuid": "48060932-7768-4963-ba33-1b0dd19b25b3",
                    "parentUUID": "0a6857a0-6b6e-42b9-8066-63201803dc42",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant as teamLeader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should not add contestant as teamLeader",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should(t.teamLeader).be.null();",
                    "isRoot": false,
                    "uuid": "30d6d10a-a3ce-44f0-b10a-82c7f1295f32",
                    "parentUUID": "0a6857a0-6b6e-42b9-8066-63201803dc42",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamsTests.js",
                "uuid": "0a6857a0-6b6e-42b9-8066-63201803dc42",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
                "passes": [
                  {
                    "title": "should inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should inquire for team leader",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> inquired = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    inquired = <span class=\"hljs-literal\">true</span>;<br>});<br>r.should.be.true();<br>inquired.should.be.true();",
                    "isRoot": false,
                    "uuid": "f1e33f2d-70af-4858-a3e8-bf5a2c9c3d1c",
                    "parentUUID": "0a6857a0-6b6e-42b9-8066-63201803dc42",
                    "skipped": false
                  },
                  {
                    "title": "should not inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should not inquire for team leader",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>tc.all[<span class=\"hljs-number\">0</span>].teamLeader = c1;<br><span class=\"hljs-keyword\">var</span> didNotInquire = <span class=\"hljs-literal\">true</span>;<br>tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    didNotInquire = <span class=\"hljs-literal\">false</span>;<br>});<br>didNotInquire.should.be.true();<br>t.teamLeader.should.equal(c1);",
                    "isRoot": false,
                    "uuid": "48060932-7768-4963-ba33-1b0dd19b25b3",
                    "parentUUID": "0a6857a0-6b6e-42b9-8066-63201803dc42",
                    "skipped": false
                  },
                  {
                    "title": "should not add contestant as teamLeader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is PLAYER_CHOICE should not add contestant as teamLeader",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should(t.teamLeader).be.null();",
                    "isRoot": false,
                    "uuid": "30d6d10a-a3ce-44f0-b10a-82c7f1295f32",
                    "parentUUID": "0a6857a0-6b6e-42b9-8066-63201803dc42",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 2
              },
              {
                "title": "when teamLeader selection is RANDOM",
                "suites": [],
                "tests": [
                  {
                    "title": "should not inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should not inquire for team leader",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> notInquired = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    notInquired = <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>r.should.be.true();<br>notInquired.should.be.true();",
                    "isRoot": false,
                    "uuid": "a6a64352-f242-49bf-8319-107468bd6acc",
                    "parentUUID": "e1537f4a-bf42-43ca-a0ae-6ba0694ff218",
                    "skipped": false
                  },
                  {
                    "title": "should automatically add team leader when team is filled",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should automatically add team leader when team is filled",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).not.be.null();<br>});",
                    "isRoot": false,
                    "uuid": "a2da5948-c54f-468b-a099-5894a5febd28",
                    "parentUUID": "e1537f4a-bf42-43ca-a0ae-6ba0694ff218",
                    "skipped": false
                  },
                  {
                    "title": "should not automatically add team leader when team is not filled",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should not automatically add team leader when team is not filled",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).be.null();<br>});",
                    "isRoot": false,
                    "uuid": "a4b86687-a823-405c-9095-1532761f399c",
                    "parentUUID": "e1537f4a-bf42-43ca-a0ae-6ba0694ff218",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamsTests.js",
                "uuid": "e1537f4a-bf42-43ca-a0ae-6ba0694ff218",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
                "passes": [
                  {
                    "title": "should not inquire for team leader",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should not inquire for team leader",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> notInquired = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    notInquired = <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>r.should.be.true();<br>notInquired.should.be.true();",
                    "isRoot": false,
                    "uuid": "a6a64352-f242-49bf-8319-107468bd6acc",
                    "parentUUID": "e1537f4a-bf42-43ca-a0ae-6ba0694ff218",
                    "skipped": false
                  },
                  {
                    "title": "should automatically add team leader when team is filled",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should automatically add team leader when team is filled",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).not.be.null();<br>});",
                    "isRoot": false,
                    "uuid": "a2da5948-c54f-468b-a099-5894a5febd28",
                    "parentUUID": "e1537f4a-bf42-43ca-a0ae-6ba0694ff218",
                    "skipped": false
                  },
                  {
                    "title": "should not automatically add team leader when team is not filled",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when teamLeader selection is RANDOM should not automatically add team leader when team is not filled",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).be.null();<br>});",
                    "isRoot": false,
                    "uuid": "a4b86687-a823-405c-9095-1532761f399c",
                    "parentUUID": "e1537f4a-bf42-43ca-a0ae-6ba0694ff218",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 2
              },
              {
                "title": "when set to use unlimited teams",
                "suites": [],
                "tests": [
                  {
                    "title": "should add team when teams are full",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when set to use unlimited teams should add team when teams are full",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
                    "isRoot": false,
                    "uuid": "148aa4a6-4261-4683-98af-cbb539da537e",
                    "parentUUID": "a7410ba3-6ede-49f3-a21f-0f39df49c9a3",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamsTests.js",
                "uuid": "a7410ba3-6ede-49f3-a21f-0f39df49c9a3",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
                "passes": [
                  {
                    "title": "should add team when teams are full",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when set to use unlimited teams should add team when teams are full",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
                    "isRoot": false,
                    "uuid": "148aa4a6-4261-4683-98af-cbb539da537e",
                    "parentUUID": "a7410ba3-6ede-49f3-a21f-0f39df49c9a3",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 1,
                "totalPasses": 1,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 1
              },
              {
                "title": "when team selection method is PLAYER_CHOICE",
                "suites": [],
                "tests": [
                  {
                    "title": "should throw when no team name is given",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should throw when no team name is given",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>}).should.throw();",
                    "isRoot": false,
                    "uuid": "f5e6c0f2-ab8a-40ef-a213-c67575bd01b4",
                    "parentUUID": "c6ff6330-6cd5-45a3-9e2c-faa3ac2fbd0b",
                    "skipped": false
                  },
                  {
                    "title": "should add contestant to correct team",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should add contestant to correct team",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "f7530152-2808-4172-995d-8cc59c31bbcf",
                    "parentUUID": "c6ff6330-6cd5-45a3-9e2c-faa3ac2fbd0b",
                    "skipped": false
                  },
                  {
                    "title": "should not add to full team",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should not add to full team",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "dcbc1376-75b8-4e8c-97f0-fce2b69e7d07",
                    "parentUUID": "c6ff6330-6cd5-45a3-9e2c-faa3ac2fbd0b",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamsTests.js",
                "uuid": "c6ff6330-6cd5-45a3-9e2c-faa3ac2fbd0b",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
                "passes": [
                  {
                    "title": "should throw when no team name is given",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should throw when no team name is given",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>}).should.throw();",
                    "isRoot": false,
                    "uuid": "f5e6c0f2-ab8a-40ef-a213-c67575bd01b4",
                    "parentUUID": "c6ff6330-6cd5-45a3-9e2c-faa3ac2fbd0b",
                    "skipped": false
                  },
                  {
                    "title": "should add contestant to correct team",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should add contestant to correct team",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "f7530152-2808-4172-995d-8cc59c31bbcf",
                    "parentUUID": "c6ff6330-6cd5-45a3-9e2c-faa3ac2fbd0b",
                    "skipped": false
                  },
                  {
                    "title": "should not add to full team",
                    "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) when team selection method is PLAYER_CHOICE should not add to full team",
                    "timedOut": false,
                    "duration": 1,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
                    "isRoot": false,
                    "uuid": "dcbc1376-75b8-4e8c-97f0-fce2b69e7d07",
                    "parentUUID": "c6ff6330-6cd5-45a3-9e2c-faa3ac2fbd0b",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 2
              }
            ],
            "tests": [
              {
                "title": "should give contestant an id",
                "fullTitle": "Teams addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) should give contestant an id",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Username'</span>;<br>should(c.id).be.null();<br>tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>should(c.id).not.be.null();",
                "isRoot": false,
                "uuid": "6149dc27-92a2-424c-bada-377e65d4302f",
                "parentUUID": "c3ac1813-7f32-4a19-9ccf-db065170f58f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "c3ac1813-7f32-4a19-9ccf-db065170f58f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should give contestant an id",
                "fullTitle": "Teams addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) should give contestant an id",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Username'</span>;<br>should(c.id).be.null();<br>tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>should(c.id).not.be.null();",
                "isRoot": false,
                "uuid": "6149dc27-92a2-424c-bada-377e65d4302f",
                "parentUUID": "c3ac1813-7f32-4a19-9ccf-db065170f58f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "getByContestant(contestant)",
            "suites": [],
            "tests": [
              {
                "title": "should get team of contestant",
                "fullTitle": "Teams getByContestant(contestant) should get team of contestant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">5</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>    r.should.be.true();<br>});<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">4</span>]);<br>t.should.not.be.null();<br>t.contestants.getById(cc[<span class=\"hljs-number\">4</span>].id).should.equal(cc[<span class=\"hljs-number\">4</span>]);",
                "isRoot": false,
                "uuid": "00523dfe-7a31-4f09-8491-9f33d681a5c0",
                "parentUUID": "1b9097fd-23b4-48fa-8401-1669b055803f",
                "skipped": false
              },
              {
                "title": "should not get team of contestant",
                "fullTitle": "Teams getByContestant(contestant) should not get team of contestant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">1</span>);<br>cc[<span class=\"hljs-number\">0</span>].id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">0</span>]);<br>should(t).be.null();",
                "isRoot": false,
                "uuid": "27f556ec-7b1c-40c8-9192-213646763961",
                "parentUUID": "1b9097fd-23b4-48fa-8401-1669b055803f",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "1b9097fd-23b4-48fa-8401-1669b055803f",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should get team of contestant",
                "fullTitle": "Teams getByContestant(contestant) should get team of contestant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">5</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>    r.should.be.true();<br>});<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">4</span>]);<br>t.should.not.be.null();<br>t.contestants.getById(cc[<span class=\"hljs-number\">4</span>].id).should.equal(cc[<span class=\"hljs-number\">4</span>]);",
                "isRoot": false,
                "uuid": "00523dfe-7a31-4f09-8491-9f33d681a5c0",
                "parentUUID": "1b9097fd-23b4-48fa-8401-1669b055803f",
                "skipped": false
              },
              {
                "title": "should not get team of contestant",
                "fullTitle": "Teams getByContestant(contestant) should not get team of contestant",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">1</span>);<br>cc[<span class=\"hljs-number\">0</span>].id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">0</span>]);<br>should(t).be.null();",
                "isRoot": false,
                "uuid": "27f556ec-7b1c-40c8-9192-213646763961",
                "parentUUID": "1b9097fd-23b4-48fa-8401-1669b055803f",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "getByTeamName(temName)",
            "suites": [],
            "tests": [
              {
                "title": "should get team when team with name exists",
                "fullTitle": "Teams getByTeamName(temName) should get team when team with name exists",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t1 = tc.all[<span class=\"hljs-number\">0</span>];<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(t1.teamName);<br>t.should.equal(t1);",
                "isRoot": false,
                "uuid": "555508bb-524f-475b-89e0-fa662f55108f",
                "parentUUID": "29e8f2cc-a6d6-4724-b68b-f309a79f7012",
                "skipped": false
              },
              {
                "title": "should not get team when team with name does not exist",
                "fullTitle": "Teams getByTeamName(temName) should not get team when team with name does not exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(<span class=\"hljs-string\">'Not a team name that exists'</span>);<br>should(t).be.null();",
                "isRoot": false,
                "uuid": "36d4a7a8-4b03-4154-bd7f-de944afc3d1d",
                "parentUUID": "29e8f2cc-a6d6-4724-b68b-f309a79f7012",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "29e8f2cc-a6d6-4724-b68b-f309a79f7012",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should get team when team with name exists",
                "fullTitle": "Teams getByTeamName(temName) should get team when team with name exists",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t1 = tc.all[<span class=\"hljs-number\">0</span>];<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(t1.teamName);<br>t.should.equal(t1);",
                "isRoot": false,
                "uuid": "555508bb-524f-475b-89e0-fa662f55108f",
                "parentUUID": "29e8f2cc-a6d6-4724-b68b-f309a79f7012",
                "skipped": false
              },
              {
                "title": "should not get team when team with name does not exist",
                "fullTitle": "Teams getByTeamName(temName) should not get team when team with name does not exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(<span class=\"hljs-string\">'Not a team name that exists'</span>);<br>should(t).be.null();",
                "isRoot": false,
                "uuid": "36d4a7a8-4b03-4154-bd7f-de944afc3d1d",
                "parentUUID": "29e8f2cc-a6d6-4724-b68b-f309a79f7012",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "getAvailable(settings)",
            "suites": [],
            "tests": [
              {
                "title": "should not return full teams",
                "fullTitle": "Teams getAvailable(settings) should not return full teams",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">2</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "70183bd5-e648-474a-aa23-3528880b5646",
                "parentUUID": "72b9cd7c-c6a7-4dd4-8c83-d4995531fcfa",
                "skipped": false
              },
              {
                "title": "should return teams with space",
                "fullTitle": "Teams getAvailable(settings) should return teams with space",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "bdbdbad8-0291-44ee-bdb8-dbe9b781f712",
                "parentUUID": "72b9cd7c-c6a7-4dd4-8c83-d4995531fcfa",
                "skipped": false
              },
              {
                "title": "should return teams with unlimited space",
                "fullTitle": "Teams getAvailable(settings) should return teams with unlimited space",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = constants.UNLIMITED;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "cacf1cc0-346a-4e17-bfa9-91309fab4a9c",
                "parentUUID": "72b9cd7c-c6a7-4dd4-8c83-d4995531fcfa",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamsTests.js",
            "uuid": "72b9cd7c-c6a7-4dd4-8c83-d4995531fcfa",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
            "passes": [
              {
                "title": "should not return full teams",
                "fullTitle": "Teams getAvailable(settings) should not return full teams",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">2</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">1</span>);",
                "isRoot": false,
                "uuid": "70183bd5-e648-474a-aa23-3528880b5646",
                "parentUUID": "72b9cd7c-c6a7-4dd4-8c83-d4995531fcfa",
                "skipped": false
              },
              {
                "title": "should return teams with space",
                "fullTitle": "Teams getAvailable(settings) should return teams with space",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "bdbdbad8-0291-44ee-bdb8-dbe9b781f712",
                "parentUUID": "72b9cd7c-c6a7-4dd4-8c83-d4995531fcfa",
                "skipped": false
              },
              {
                "title": "should return teams with unlimited space",
                "fullTitle": "Teams getAvailable(settings) should return teams with unlimited space",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = constants.UNLIMITED;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
                "isRoot": false,
                "uuid": "cacf1cc0-346a-4e17-bfa9-91309fab4a9c",
                "parentUUID": "72b9cd7c-c6a7-4dd4-8c83-d4995531fcfa",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/TeamsTests.js",
        "uuid": "f1fdd949-a35f-4bb1-aa88-1fc222ed0f72",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamsTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      },
      {
        "title": "Team",
        "suites": [
          {
            "title": "#teamName",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Team #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t._teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
                "isRoot": false,
                "uuid": "a17db688-1b59-461e-98b2-83219fb9f922",
                "parentUUID": "225757bb-1c7e-491b-8aa9-a31001b5b028",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t._teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t.teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
                "isRoot": false,
                "uuid": "85156308-e18e-41ac-ab3f-6b9f2b9c5a73",
                "parentUUID": "225757bb-1c7e-491b-8aa9-a31001b5b028",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "225757bb-1c7e-491b-8aa9-a31001b5b028",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Team #teamName should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t._teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
                "isRoot": false,
                "uuid": "a17db688-1b59-461e-98b2-83219fb9f922",
                "parentUUID": "225757bb-1c7e-491b-8aa9-a31001b5b028",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #teamName should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t._teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t.teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
                "isRoot": false,
                "uuid": "85156308-e18e-41ac-ab3f-6b9f2b9c5a73",
                "parentUUID": "225757bb-1c7e-491b-8aa9-a31001b5b028",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#teamLeader",
            "suites": [],
            "tests": [
              {
                "title": "should set value",
                "fullTitle": "Team #teamLeader should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t.teamLeader = c;<br>t._teamLeader.should.equal(c);",
                "isRoot": false,
                "uuid": "e7dd51e7-3906-4b80-be26-b9b1937fea82",
                "parentUUID": "06eb2522-c087-4599-a04a-730c624b890a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #teamLeader should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t._teamLeader = c;<br>t.teamLeader.should.equal(c);",
                "isRoot": false,
                "uuid": "57ee0f1d-1655-41ff-9540-b4fe81dfe72a",
                "parentUUID": "06eb2522-c087-4599-a04a-730c624b890a",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "06eb2522-c087-4599-a04a-730c624b890a",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should set value",
                "fullTitle": "Team #teamLeader should set value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t.teamLeader = c;<br>t._teamLeader.should.equal(c);",
                "isRoot": false,
                "uuid": "e7dd51e7-3906-4b80-be26-b9b1937fea82",
                "parentUUID": "06eb2522-c087-4599-a04a-730c624b890a",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #teamLeader should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t._teamLeader = c;<br>t.teamLeader.should.equal(c);",
                "isRoot": false,
                "uuid": "57ee0f1d-1655-41ff-9540-b4fe81dfe72a",
                "parentUUID": "06eb2522-c087-4599-a04a-730c624b890a",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 0
          },
          {
            "title": "#score",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Team #score should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "d9c5b6cf-dabb-4bee-a1c6-4957f15a0be4",
                "parentUUID": "9f941648-596b-4630-bc59-f8659a2f2c82",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #score should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br>p._score = <span class=\"hljs-number\">5</span>;<br>p.score.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "5883320c-008d-410a-a4ae-ba93bbd4898e",
                "parentUUID": "9f941648-596b-4630-bc59-f8659a2f2c82",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "9f941648-596b-4630-bc59-f8659a2f2c82",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Team #score should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "d9c5b6cf-dabb-4bee-a1c6-4957f15a0be4",
                "parentUUID": "9f941648-596b-4630-bc59-f8659a2f2c82",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #score should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br>p._score = <span class=\"hljs-number\">5</span>;<br>p.score.should.equal(<span class=\"hljs-number\">5</span>);",
                "isRoot": false,
                "uuid": "5883320c-008d-410a-a4ae-ba93bbd4898e",
                "parentUUID": "9f941648-596b-4630-bc59-f8659a2f2c82",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "#contestants",
            "suites": [],
            "tests": [
              {
                "title": "should throw on set value",
                "fullTitle": "Team #contestants should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "65e908ff-2f91-4378-9550-158096b810db",
                "parentUUID": "8a819de7-1d2f-4706-9595-18fc70e3f270",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #contestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = p.contestants;<br>c.should.be.instanceOf(Participants);",
                "isRoot": false,
                "uuid": "49173ed4-4994-4ecf-a15a-4ff2af70bea6",
                "parentUUID": "8a819de7-1d2f-4706-9595-18fc70e3f270",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "8a819de7-1d2f-4706-9595-18fc70e3f270",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should throw on set value",
                "fullTitle": "Team #contestants should throw on set value",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
                "isRoot": false,
                "uuid": "65e908ff-2f91-4378-9550-158096b810db",
                "parentUUID": "8a819de7-1d2f-4706-9595-18fc70e3f270",
                "skipped": false
              },
              {
                "title": "should get value",
                "fullTitle": "Team #contestants should get value",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = p.contestants;<br>c.should.be.instanceOf(Participants);",
                "isRoot": false,
                "uuid": "49173ed4-4994-4ecf-a15a-4ff2af70bea6",
                "parentUUID": "8a819de7-1d2f-4706-9595-18fc70e3f270",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "when a contestant scores",
            "suites": [],
            "tests": [
              {
                "title": "should update the teams score",
                "fullTitle": "Team when a contestant scores should update the teams score",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br>c1.incrementScore();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.incrementScore();<br>c2.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "c726f242-b385-454c-9254-4a3fa508a018",
                "parentUUID": "ebad5456-1946-4981-80d1-77a6944e90b1",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "ebad5456-1946-4981-80d1-77a6944e90b1",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should update the teams score",
                "fullTitle": "Team when a contestant scores should update the teams score",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br>c1.incrementScore();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.incrementScore();<br>c2.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">2</span>);",
                "isRoot": false,
                "uuid": "c726f242-b385-454c-9254-4a3fa508a018",
                "parentUUID": "ebad5456-1946-4981-80d1-77a6944e90b1",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 1,
            "totalPasses": 1,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "tryAssignTeamLeader(contestant, hostOverride)",
            "suites": [],
            "tests": [
              {
                "title": "should allow it when no team leader is set",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should allow it when no team leader is set",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.id = <span class=\"hljs-string\">'c1'</span>;<br>t.contestants.add(c);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);",
                "isRoot": false,
                "uuid": "13e89da8-e621-4b3e-8c49-0b14260f6bd8",
                "parentUUID": "d55d655f-48c5-4643-93ed-223d6424036d",
                "skipped": false
              },
              {
                "title": "should not allow it when a team leader is set",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should not allow it when a team leader is set",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_FULFILLED);",
                "isRoot": false,
                "uuid": "98ca99cd-537f-4580-a8f9-64373ed0a5fc",
                "parentUUID": "d55d655f-48c5-4643-93ed-223d6424036d",
                "skipped": false
              },
              {
                "title": "should not allow it when a contestant is not in team",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should not allow it when a contestant is not in team",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_NOT_CONTESTANT);",
                "isRoot": false,
                "uuid": "b8fb2ad4-32ba-4a39-83f4-3733091aa19f",
                "parentUUID": "d55d655f-48c5-4643-93ed-223d6424036d",
                "skipped": false
              },
              {
                "title": "should allow it when a team leader is set and host override is flagged",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should allow it when a team leader is set and host override is flagged",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">true</span>);<br>r.should.be.true();<br>should.not.exist(m);",
                "isRoot": false,
                "uuid": "2a9e8770-c1ca-4d0a-9184-5e36fc659a80",
                "parentUUID": "d55d655f-48c5-4643-93ed-223d6424036d",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "d55d655f-48c5-4643-93ed-223d6424036d",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should allow it when no team leader is set",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should allow it when no team leader is set",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.id = <span class=\"hljs-string\">'c1'</span>;<br>t.contestants.add(c);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);",
                "isRoot": false,
                "uuid": "13e89da8-e621-4b3e-8c49-0b14260f6bd8",
                "parentUUID": "d55d655f-48c5-4643-93ed-223d6424036d",
                "skipped": false
              },
              {
                "title": "should not allow it when a team leader is set",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should not allow it when a team leader is set",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_FULFILLED);",
                "isRoot": false,
                "uuid": "98ca99cd-537f-4580-a8f9-64373ed0a5fc",
                "parentUUID": "d55d655f-48c5-4643-93ed-223d6424036d",
                "skipped": false
              },
              {
                "title": "should not allow it when a contestant is not in team",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should not allow it when a contestant is not in team",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_NOT_CONTESTANT);",
                "isRoot": false,
                "uuid": "b8fb2ad4-32ba-4a39-83f4-3733091aa19f",
                "parentUUID": "d55d655f-48c5-4643-93ed-223d6424036d",
                "skipped": false
              },
              {
                "title": "should allow it when a team leader is set and host override is flagged",
                "fullTitle": "Team tryAssignTeamLeader(contestant, hostOverride) should allow it when a team leader is set and host override is flagged",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">true</span>);<br>r.should.be.true();<br>should.not.exist(m);",
                "isRoot": false,
                "uuid": "2a9e8770-c1ca-4d0a-9184-5e36fc659a80",
                "parentUUID": "d55d655f-48c5-4643-93ed-223d6424036d",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 4,
            "totalPasses": 4,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          },
          {
            "title": "tryChangeTeamName(teamName, settings, hostOverride)",
            "suites": [
              {
                "title": "when host override",
                "suites": [],
                "tests": [
                  {
                    "title": "should change name when request is valid",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when request is valid",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "abeb6229-a297-44a7-98c4-59485b518eda",
                    "parentUUID": "c272b722-f447-4c91-834f-b894f6ab01d6",
                    "skipped": false
                  },
                  {
                    "title": "should change name when setting do not allow it",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when setting do not allow it",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "873df63d-9c77-499f-a411-df6507afdd90",
                    "parentUUID": "c272b722-f447-4c91-834f-b894f6ab01d6",
                    "skipped": false
                  },
                  {
                    "title": "should change name when name contains profanity",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when name contains profanity",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "32ae3a2e-9e64-403f-99c5-28a3a371a26d",
                    "parentUUID": "c272b722-f447-4c91-834f-b894f6ab01d6",
                    "skipped": false
                  }
                ],
                "pending": [],
                "root": false,
                "_timeout": 2000,
                "file": "/tests/BDD/lib/TeamTests.js",
                "uuid": "c272b722-f447-4c91-834f-b894f6ab01d6",
                "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
                "passes": [
                  {
                    "title": "should change name when request is valid",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when request is valid",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "abeb6229-a297-44a7-98c4-59485b518eda",
                    "parentUUID": "c272b722-f447-4c91-834f-b894f6ab01d6",
                    "skipped": false
                  },
                  {
                    "title": "should change name when setting do not allow it",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when setting do not allow it",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "873df63d-9c77-499f-a411-df6507afdd90",
                    "parentUUID": "c272b722-f447-4c91-834f-b894f6ab01d6",
                    "skipped": false
                  },
                  {
                    "title": "should change name when name contains profanity",
                    "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) when host override should change name when name contains profanity",
                    "timedOut": false,
                    "duration": 0,
                    "state": "passed",
                    "speed": "fast",
                    "pass": true,
                    "fail": false,
                    "pending": false,
                    "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                    "isRoot": false,
                    "uuid": "32ae3a2e-9e64-403f-99c5-28a3a371a26d",
                    "parentUUID": "c272b722-f447-4c91-834f-b894f6ab01d6",
                    "skipped": false
                  }
                ],
                "failures": [],
                "skipped": [],
                "hasTests": true,
                "hasSuites": false,
                "totalTests": 3,
                "totalPasses": 3,
                "totalFailures": 0,
                "totalPending": 0,
                "totalSkipped": 0,
                "hasPasses": true,
                "hasFailures": false,
                "hasPending": false,
                "hasSkipped": false,
                "duration": 0
              }
            ],
            "tests": [
              {
                "title": "should change name when request is valid",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should change name when request is valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                "isRoot": false,
                "uuid": "e0aef271-7b9c-40c9-aab3-97a2a0b08ef9",
                "parentUUID": "5ca7f6f4-e7a5-4952-a08c-c09f63d5f318",
                "skipped": false
              },
              {
                "title": "should not change name when setting do not allow it",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should not change name when setting do not allow it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_SETTINGS_NOT_ALLOW);<br>r.should.be.false();",
                "isRoot": false,
                "uuid": "e4b5c948-6ed9-4c5c-bfe8-5699050e5970",
                "parentUUID": "5ca7f6f4-e7a5-4952-a08c-c09f63d5f318",
                "skipped": false
              },
              {
                "title": "should not change name when name contains profanity",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should not change name when name contains profanity",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_CONTAINS_PROFANITY);<br>r.should.be.false();",
                "isRoot": false,
                "uuid": "1f8b2fe8-50e5-4866-9ef9-c1da5500f66e",
                "parentUUID": "5ca7f6f4-e7a5-4952-a08c-c09f63d5f318",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "5ca7f6f4-e7a5-4952-a08c-c09f63d5f318",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should change name when request is valid",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should change name when request is valid",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>should.not.exist(em);<br>r.should.be.true();",
                "isRoot": false,
                "uuid": "e0aef271-7b9c-40c9-aab3-97a2a0b08ef9",
                "parentUUID": "5ca7f6f4-e7a5-4952-a08c-c09f63d5f318",
                "skipped": false
              },
              {
                "title": "should not change name when setting do not allow it",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should not change name when setting do not allow it",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_SETTINGS_NOT_ALLOW);<br>r.should.be.false();",
                "isRoot": false,
                "uuid": "e4b5c948-6ed9-4c5c-bfe8-5699050e5970",
                "parentUUID": "5ca7f6f4-e7a5-4952-a08c-c09f63d5f318",
                "skipped": false
              },
              {
                "title": "should not change name when name contains profanity",
                "fullTitle": "Team tryChangeTeamName(teamName, settings, hostOverride) should not change name when name contains profanity",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_CONTAINS_PROFANITY);<br>r.should.be.false();",
                "isRoot": false,
                "uuid": "1f8b2fe8-50e5-4866-9ef9-c1da5500f66e",
                "parentUUID": "5ca7f6f4-e7a5-4952-a08c-c09f63d5f318",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": true,
            "totalTests": 3,
            "totalPasses": 3,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 2
          },
          {
            "title": "getContestantByUsername(username)",
            "suites": [],
            "tests": [
              {
                "title": "should get contestant when contest with username exists",
                "fullTitle": "Team getContestantByUsername(username) should get contestant when contest with username exists",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(c1.username);<br>c.should.equal(c1);<br>c = t.getContestantByUsername(<span class=\"hljs-string\">'c1abc'</span>);<br>c.should.equal(c1);",
                "isRoot": false,
                "uuid": "0f384271-5db6-4b2d-bed5-6c996e27f93c",
                "parentUUID": "496cc9e9-d931-497b-b48b-9a5226954a15",
                "skipped": false
              },
              {
                "title": "should not get contestant when contest with username does not exist",
                "fullTitle": "Team getContestantByUsername(username) should not get contestant when contest with username does not exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(<span class=\"hljs-string\">'John Doe'</span>);<br>should(c).be.null();",
                "isRoot": false,
                "uuid": "e2e55ca8-26ee-422a-b20b-4569647ab46f",
                "parentUUID": "496cc9e9-d931-497b-b48b-9a5226954a15",
                "skipped": false
              }
            ],
            "pending": [],
            "root": false,
            "_timeout": 2000,
            "file": "/tests/BDD/lib/TeamTests.js",
            "uuid": "496cc9e9-d931-497b-b48b-9a5226954a15",
            "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
            "passes": [
              {
                "title": "should get contestant when contest with username exists",
                "fullTitle": "Team getContestantByUsername(username) should get contestant when contest with username exists",
                "timedOut": false,
                "duration": 1,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(c1.username);<br>c.should.equal(c1);<br>c = t.getContestantByUsername(<span class=\"hljs-string\">'c1abc'</span>);<br>c.should.equal(c1);",
                "isRoot": false,
                "uuid": "0f384271-5db6-4b2d-bed5-6c996e27f93c",
                "parentUUID": "496cc9e9-d931-497b-b48b-9a5226954a15",
                "skipped": false
              },
              {
                "title": "should not get contestant when contest with username does not exist",
                "fullTitle": "Team getContestantByUsername(username) should not get contestant when contest with username does not exist",
                "timedOut": false,
                "duration": 0,
                "state": "passed",
                "speed": "fast",
                "pass": true,
                "fail": false,
                "pending": false,
                "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(<span class=\"hljs-string\">'John Doe'</span>);<br>should(c).be.null();",
                "isRoot": false,
                "uuid": "e2e55ca8-26ee-422a-b20b-4569647ab46f",
                "parentUUID": "496cc9e9-d931-497b-b48b-9a5226954a15",
                "skipped": false
              }
            ],
            "failures": [],
            "skipped": [],
            "hasTests": true,
            "hasSuites": false,
            "totalTests": 2,
            "totalPasses": 2,
            "totalFailures": 0,
            "totalPending": 0,
            "totalSkipped": 0,
            "hasPasses": true,
            "hasFailures": false,
            "hasPending": false,
            "hasSkipped": false,
            "duration": 1
          }
        ],
        "tests": [],
        "pending": [],
        "root": false,
        "_timeout": 2000,
        "file": "/tests/BDD/lib/TeamTests.js",
        "uuid": "0913f425-68c8-48c3-9f12-19b92e089404",
        "fullFile": "/Users/nick/Documents/Uni/buzzer.click/tests/BDD/lib/TeamTests.js",
        "passes": [],
        "failures": [],
        "skipped": [],
        "hasTests": false,
        "hasSuites": true,
        "totalTests": 0,
        "totalPasses": 0,
        "totalFailures": 0,
        "totalPending": 0,
        "totalSkipped": 0,
        "hasPasses": false,
        "hasFailures": false,
        "hasPending": false,
        "hasSkipped": false,
        "duration": 0
      }
    ],
    "tests": [],
    "pending": [],
    "root": true,
    "_timeout": 2000,
    "uuid": "b252d258-73c3-45e9-ac73-f91531ea61d8",
    "fullFile": "",
    "file": "",
    "passes": [],
    "failures": [],
    "skipped": [],
    "hasTests": false,
    "hasSuites": true,
    "totalTests": 0,
    "totalPasses": 0,
    "totalFailures": 0,
    "totalPending": 0,
    "totalSkipped": 0,
    "hasPasses": false,
    "hasFailures": false,
    "hasPending": false,
    "hasSkipped": false,
    "duration": 0,
    "rootEmpty": true
  },
  "allTests": [
    {
      "title": "should throw on set value",
      "fullTitle": "#wasSuccessful should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.wasSuccessful = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "5948379f-c163-4503-b742-63f5ce0cb6ad",
      "parentUUID": "175a59ee-6832-4bc1-b1b8-29b1740a922b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#wasSuccessful should get value",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>r.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "c7cbbb3c-6741-430d-8c48-1d522dd1dff7",
      "parentUUID": "175a59ee-6832-4bc1-b1b8-29b1740a922b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#enquireForTeamLeaderPosition should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r._enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "491f8a39-8af5-4dfe-9db0-1bf8f49e97a8",
      "parentUUID": "c9bb5bf7-6434-4def-9749-94063d90c836",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#enquireForTeamLeaderPosition should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r.enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "3654fa9d-a3ed-4d29-8bfa-d46aa7f02430",
      "parentUUID": "c9bb5bf7-6434-4def-9749-94063d90c836",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#errorMessage should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.errorMessage = <span class=\"hljs-string\">'test'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "94c8cb90-4d3c-4f63-8aa6-b94a9b8c9328",
      "parentUUID": "605142f9-f7f3-4278-9e71-5fa8d8e5335f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#errorMessage should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._errorMessage = <span class=\"hljs-string\">'errorMessage_test'</span>;<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'errorMessage_test'</span>);",
      "isRoot": false,
      "uuid": "910af531-6cb5-4632-86a9-1a5ce761192c",
      "parentUUID": "605142f9-f7f3-4278-9e71-5fa8d8e5335f",
      "skipped": false
    },
    {
      "title": "should change the state to not successful",
      "fullTitle": "#setNotSuccessful(errorMessage) should change the state to not successful",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.setNotSuccessful(<span class=\"hljs-string\">'Test error message'</span>);<br>r.wasSuccessful.should.be.false();<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'Test error message'</span>);",
      "isRoot": false,
      "uuid": "97767051-7084-4fb8-87fe-0e3e05c5bf9e",
      "parentUUID": "cad4c15c-03ce-44a0-9542-dca5a45f496b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'username_test'</span>;<br>c._username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
      "isRoot": false,
      "uuid": "38ed117c-0763-4e72-9bf3-1149a5da7cc4",
      "parentUUID": "a8677fa0-79f2-40fd-84a4-dce7521d4fcb",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._username = <span class=\"hljs-string\">'username_test'</span>;<br>c.username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
      "isRoot": false,
      "uuid": "ebb2174b-6632-4b3d-a8c1-ab5a32362864",
      "parentUUID": "a8677fa0-79f2-40fd-84a4-dce7521d4fcb",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#score should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    c.score = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "e1e8d160-08df-40ca-b1da-b74a08a5d3b7",
      "parentUUID": "6f0fa397-5258-45f7-8eef-be0045a3b80d",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#score should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._score = <span class=\"hljs-number\">1</span>;<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "a65333fa-f9be-4e3f-b97e-fa3fa526c6fe",
      "parentUUID": "6f0fa397-5258-45f7-8eef-be0045a3b80d",
      "skipped": false
    },
    {
      "title": "should increment the contestant's score",
      "fullTitle": "#incrementScore() should increment the contestant's score",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.incrementScore();<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "7ef69412-5295-4e72-8131-8cf73561439f",
      "parentUUID": "9556573a-8bfc-4aef-8a3d-66c3b463ecdd",
      "skipped": false
    },
    {
      "title": "should emit scoreUpdate event",
      "fullTitle": "#incrementScore() should emit scoreUpdate event",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.on(<span class=\"hljs-string\">'scoreUpdate'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>});<br>c.incrementScore();",
      "isRoot": false,
      "uuid": "f4fab73e-5579-4374-b55a-8c0ab8426c04",
      "parentUUID": "9556573a-8bfc-4aef-8a3d-66c3b463ecdd",
      "skipped": false
    },
    {
      "title": "should return a non-null non-empty key",
      "fullTitle": "#generateSessionId() should return a non-null non-empty key",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateSessionId().should.not.be.equal(<span class=\"hljs-string\">''</span>).and.not.be.equal(<span class=\"hljs-literal\">null</span>);",
      "isRoot": false,
      "uuid": "7ca8e204-6bad-48e8-ac58-e0677daceb49",
      "parentUUID": "7bc20167-9816-4bcc-91fe-318c25faf9a8",
      "skipped": false
    },
    {
      "title": "should return a id of the correct length",
      "fullTitle": "#generateSessionId() should return a id of the correct length",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateSessionId()<br>    .length.should.be.Number().and.equal(idUtility.keyLength);",
      "isRoot": false,
      "uuid": "ef4420cd-1e97-454a-9c7e-76e26dfec0d3",
      "parentUUID": "7bc20167-9816-4bcc-91fe-318c25faf9a8",
      "skipped": false
    },
    {
      "title": "should record id so it cannot be reused.",
      "fullTitle": "#generateSessionId() should record id so it cannot be reused.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> id = idUtility.generateSessionId();<br>idUtility._sessionKeysInUse.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">cachedId</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> cachedId === id;<br>}).should.equal(id);",
      "isRoot": false,
      "uuid": "6e665455-8845-495a-8f7a-73ee16599689",
      "parentUUID": "7bc20167-9816-4bcc-91fe-318c25faf9a8",
      "skipped": false
    },
    {
      "title": "should return a UUID",
      "fullTitle": "#generateParticipantId() should return a UUID",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateParticipantId()<br>    .should.match(<span class=\"hljs-regexp\">/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i</span>);",
      "isRoot": false,
      "uuid": "be769d5e-4018-4b5b-ad2f-3d02cf4021d2",
      "parentUUID": "82b087e9-13aa-450a-8c95-bf0506e58a47",
      "skipped": false
    },
    {
      "title": "should store the ids to stop reuse",
      "fullTitle": "#registerSessionIdsInUse(ids) should store the ids to stop reuse",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.length.should.be.aboveOrEqual(<span class=\"hljs-number\">2</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "81a302b8-fb9a-4e6c-81b4-24c1f3cfaaab",
      "parentUUID": "374f9157-26a0-4287-9a5f-7760b55f3423",
      "skipped": false
    },
    {
      "title": "should return a UUID",
      "fullTitle": "#releaseSessionId(id) should return a UUID",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility.releaseSessionId(<span class=\"hljs-string\">'111AAA'</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.equal(-<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "912d4dca-3fef-4bbf-85b6-43b419bcfdf1",
      "parentUUID": "ed513e25-86aa-4a6c-b9cd-f3eb5122326f",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#action should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.data._action.should.equal(constants.buzzerActionCommands.RESET);",
      "isRoot": false,
      "uuid": "06409317-8e05-4e97-9072-be64cca71166",
      "parentUUID": "587cafaa-cf45-411c-a4a4-6d29a2fa1cb1",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#action should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._action = constants.buzzerActionCommands.RESET;<br>m.action.should.equal(constants.buzzerActionCommands.RESET);",
      "isRoot": false,
      "uuid": "dc66e9f7-95dc-4cb7-9a44-521b10cf8778",
      "parentUUID": "587cafaa-cf45-411c-a4a4-6d29a2fa1cb1",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "1c90b394-72f1-4c5d-8d2a-6377caa1f71d",
      "parentUUID": "c444cd40-673f-497d-878f-f3f37391371a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "12afb903-d4aa-4f16-ad7f-55e92238ac1c",
      "parentUUID": "c444cd40-673f-497d-878f-f3f37391371a",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "d827697c-5072-4092-b0ea-0dd2f781a4f0",
      "parentUUID": "09743c5c-ddf7-4a95-a3da-5bdf8e9d7a13",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "46c0b2dc-3e63-41f6-a69a-c44abf8bfda4",
      "parentUUID": "09743c5c-ddf7-4a95-a3da-5bdf8e9d7a13",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'yyy123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "0c950785-5983-456a-8d6f-c8b38e9eb986",
      "parentUUID": "464fc793-4d8c-40f6-ae54-873a8c42ea7c",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = <span class=\"hljs-number\">99</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "038adca5-c446-4db4-b292-96c143261357",
      "parentUUID": "464fc793-4d8c-40f6-ae54-873a8c42ea7c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "017dfda2-89ea-4421-8c06-8f2259b4498a",
      "parentUUID": "1af29d1d-2aab-41c3-85e5-52c0ca2cc024",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "d7f5f4c3-3fb0-4539-b36d-20cf64483476",
      "parentUUID": "1af29d1d-2aab-41c3-85e5-52c0ca2cc024",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "8bcd90bb-b9ec-40c5-8270-a87ea37e8ae6",
      "parentUUID": "4724948e-8cfe-49cc-933c-4726a5fa6f2e",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "248e0467-0115-4e60-8006-8f47ca443a43",
      "parentUUID": "4724948e-8cfe-49cc-933c-4726a5fa6f2e",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "7f486640-6218-4975-a3ff-31ef3be21c01",
      "parentUUID": "d1cda390-166d-4b8f-9a2d-49c72c18ad32",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "f28c100a-dcb9-4438-91e0-90128d7f7601",
      "parentUUID": "d1cda390-166d-4b8f-9a2d-49c72c18ad32",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.username = <span class=\"hljs-string\">'test123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
      "isRoot": false,
      "uuid": "138cfac5-b428-4c52-b4ff-cc8bbed4398a",
      "parentUUID": "f9019739-131a-4250-93aa-a7bf08805d0c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._username = <span class=\"hljs-string\">'test123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
      "isRoot": false,
      "uuid": "964edd83-edc9-4732-b4e8-94e12e30baee",
      "parentUUID": "f9019739-131a-4250-93aa-a7bf08805d0c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "28075eea-7352-4816-bd55-009a78dfc417",
      "parentUUID": "44473353-f5c4-4dd5-b2a0-8aeb7fbc0b35",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "6e9b0570-bf0c-4863-8fc5-46b12fc987a6",
      "parentUUID": "44473353-f5c4-4dd5-b2a0-8aeb7fbc0b35",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "7753ca1a-49d5-47d8-9c2e-dc111b17bb13",
      "parentUUID": "837133bb-7a22-48b8-9cab-1d240ab84912",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "3336734c-e459-4100-b39a-7413c2bde660",
      "parentUUID": "837133bb-7a22-48b8-9cab-1d240ab84912",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "d6c6f2ae-7ed6-4270-9780-eaf1ea0140f3",
      "parentUUID": "e20aa908-6389-4818-a65f-f545922dcadd",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "5e8d3360-11b8-418b-8d25-c6b4d6c40206",
      "parentUUID": "e20aa908-6389-4818-a65f-f545922dcadd",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#wasSuccessful should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.data._wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "f8693c6a-de1f-45e3-9f8b-3dbc8465474e",
      "parentUUID": "29ac6672-8e10-406d-b1d1-956a7996925c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#wasSuccessful should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "d6e66648-454e-4ea5-b91a-a5b780f8ca3a",
      "parentUUID": "29ac6672-8e10-406d-b1d1-956a7996925c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#enquireForTeamLeaderPosition should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.data._enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "c033974b-99d4-4d9c-9560-ac91a9eb78c8",
      "parentUUID": "70c89d7d-da8e-42a4-8646-89a9365be3dc",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#enquireForTeamLeaderPosition should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "60a34d51-2092-4429-a7c6-d2c8c9cdcf2d",
      "parentUUID": "70c89d7d-da8e-42a4-8646-89a9365be3dc",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#failedRequestReason should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.data._failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
      "isRoot": false,
      "uuid": "b4c6f63f-cd87-4873-96f6-c6c0064ce16e",
      "parentUUID": "e8f8421c-a323-4680-86ef-e2522301b1a5",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#failedRequestReason should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
      "isRoot": false,
      "uuid": "19d7e21e-4bdd-4d33-a220-68659361fc7d",
      "parentUUID": "e8f8421c-a323-4680-86ef-e2522301b1a5",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "9908471f-6cef-4e6a-8a0d-6754de69f019",
      "parentUUID": "95c83dd8-dec7-4859-9055-a4867649dcd8",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "22cc72b9-1774-41d5-84bf-e77c23dc68f9",
      "parentUUID": "95c83dd8-dec7-4859-9055-a4867649dcd8",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#mustChooseTeam should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.data._mustChooseTeam.should.be.true();",
      "isRoot": false,
      "uuid": "d1c76185-8830-4c04-9292-d6b6853bfa7d",
      "parentUUID": "dd6ca473-c45d-404c-bbec-fb3a280fc970",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#mustChooseTeam should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.mustChooseTeam.should.be.true();",
      "isRoot": false,
      "uuid": "e2bbe389-b100-4353-b20a-b0a75a62fad5",
      "parentUUID": "dd6ca473-c45d-404c-bbec-fb3a280fc970",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teams should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.data._teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
      "isRoot": false,
      "uuid": "a14e39ff-b037-4843-a60b-8ee936970d67",
      "parentUUID": "bebb6898-731b-4458-8ebf-0fd1d02d9ab3",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teams should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
      "isRoot": false,
      "uuid": "de69bfb1-2b65-4f59-b15c-16565424e44a",
      "parentUUID": "bebb6898-731b-4458-8ebf-0fd1d02d9ab3",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "7adae466-cfb8-416a-9eb1-f9deddc12353",
      "parentUUID": "879c4a09-7de6-4150-b310-72c2f5d62305",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "10505b3f-caa4-4ff1-84fd-2c7e6afd76ff",
      "parentUUID": "879c4a09-7de6-4150-b310-72c2f5d62305",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#settings should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.data._settings.should.equal(s);",
      "isRoot": false,
      "uuid": "36fb5e1e-d4bc-4f75-8ef4-1a3a43a51ab0",
      "parentUUID": "c0e5136f-fbe3-4f50-8e4a-fbe809333135",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#settings should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.data._settings = s;<br>m.settings.should.equal(s);",
      "isRoot": false,
      "uuid": "c9547b06-1fe4-40d8-b0e8-c0f71d689e72",
      "parentUUID": "c0e5136f-fbe3-4f50-8e4a-fbe809333135",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "48bacc3d-8cb9-469d-a939-f32c761d480c",
      "parentUUID": "68c23330-32e8-4a97-8702-67d4c98971d2",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-string\">'invalid'</span>;<br>m.settings = s;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "040d8067-29d9-43c3-b1a7-0184049fbbfa",
      "parentUUID": "68c23330-32e8-4a97-8702-67d4c98971d2",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f53e8f9b-9afa-4fb6-a29a-ef6cadd73a95",
      "parentUUID": "471ce376-80ef-4d9f-ade3-ad8773ac8aaa",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b73322db-efbe-4576-8581-fb8305714b43",
      "parentUUID": "471ce376-80ef-4d9f-ade3-ad8773ac8aaa",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "463780a5-bbe0-4a21-b661-92622e35923c",
      "parentUUID": "0812f20b-29e2-4e09-bf33-0afe691c3dbb",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "5e966823-72a4-4697-a7d1-b7841bdd6b46",
      "parentUUID": "0812f20b-29e2-4e09-bf33-0afe691c3dbb",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "e4706be8-79e6-4772-8d8b-17e3cdbdb9b6",
      "parentUUID": "92a9de38-aab2-4bba-8efe-abe8f550d7f0",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "f9f67789-ca09-4810-88eb-00307c0705c1",
      "parentUUID": "92a9de38-aab2-4bba-8efe-abe8f550d7f0",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#message should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "3441cae6-ad8c-43ac-9809-1f1177cb9b1b",
      "parentUUID": "8f13482a-f037-4eda-85ab-c221be5b0466",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#message should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.data._error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "c842337a-559e-49a8-a47d-1c39e7b4400f",
      "parentUUID": "8f13482a-f037-4eda-85ab-c221be5b0466",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "fe583783-f08a-4006-9dad-06a5f0123b7a",
      "parentUUID": "58086414-7477-4738-8c9f-f462f475a037",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "9242c79f-03e9-4f4a-8f07-5c6ea020bab4",
      "parentUUID": "58086414-7477-4738-8c9f-f462f475a037",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionName should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f131d623-766c-4ba0-adee-83e0d06855da",
      "parentUUID": "7d7c0e67-fe90-4dc9-bfc7-d5d1ac6658e1",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "4c4adf06-396d-4f43-9524-d65fb19b4a46",
      "parentUUID": "7d7c0e67-fe90-4dc9-bfc7-d5d1ac6658e1",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxTeams should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxTeams = <span class=\"hljs-number\">5</span>;<br>m.data._maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "36084690-901e-4073-913a-9452762d5ff0",
      "parentUUID": "d208400c-17a7-45be-8fce-df694627a3a6",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxTeams should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxTeams = <span class=\"hljs-number\">5</span>;<br>m.maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "2a7c2556-9d5e-4a21-9f6d-d3aa278db90f",
      "parentUUID": "d208400c-17a7-45be-8fce-df694627a3a6",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamSize should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.teamSize = <span class=\"hljs-number\">5</span>;<br>m.data._teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "83701333-3366-4739-a397-37260a7620af",
      "parentUUID": "4e700cbb-b49f-4936-a591-7203fa3392f4",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamSize should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._teamSize = <span class=\"hljs-number\">5</span>;<br>m.teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "ca79c697-548b-4cd3-8fca-b62d602d27de",
      "parentUUID": "4e700cbb-b49f-4936-a591-7203fa3392f4",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxContestants should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxContestants = <span class=\"hljs-number\">5</span>;<br>m.data._maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "e4f088af-5b5d-4700-a571-195d71b92d07",
      "parentUUID": "07dfae1d-63b4-4c77-b841-a69381e1361c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxContestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxContestants = <span class=\"hljs-number\">5</span>;<br>m.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "d58c9d57-f65c-4505-9337-c0eee7544e23",
      "parentUUID": "07dfae1d-63b4-4c77-b841-a69381e1361c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "6bb3a520-43ca-467d-afcd-3a1bd832b1e5",
      "parentUUID": "d513f9ee-08b3-47c1-9b92-27e2e8bd26f0",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "172923a5-8329-477a-96c7-2624a09d6d71",
      "parentUUID": "d513f9ee-08b3-47c1-9b92-27e2e8bd26f0",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "961205e0-515e-4103-92d9-53403affcc69",
      "parentUUID": "36b8b68b-20ec-4d03-bf9a-1c426012fb18",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "1d98950e-666f-4cbd-82ba-dad93ff46ebe",
      "parentUUID": "36b8b68b-20ec-4d03-bf9a-1c426012fb18",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "46b9552c-f379-4549-b6fd-44609f5d3864",
      "parentUUID": "90ea308f-b04b-43db-82ca-bdcf78fae034",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "33641c1f-cba2-433e-b276-90f36e268bf4",
      "parentUUID": "90ea308f-b04b-43db-82ca-bdcf78fae034",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "56a40059-2182-4bc8-ba80-6cc3c1d4c942",
      "parentUUID": "33650f99-f14f-40bc-91b0-979498058789",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "fd1a222e-02dd-41cd-8667-580b1983c8cd",
      "parentUUID": "33650f99-f14f-40bc-91b0-979498058789",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeaderUsername should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "3120666a-6ed8-4a0e-a0ef-b571f9beaf4e",
      "parentUUID": "2c4f566d-0d6f-47bd-9405-52a084eeac03",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeaderUsername should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "23615784-3689-43b2-9267-b541666930ca",
      "parentUUID": "2c4f566d-0d6f-47bd-9405-52a084eeac03",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "6e9ecef2-2564-4ffc-98e9-8459f475088e",
      "parentUUID": "d8a419cc-32d7-4c93-99fa-aab95208ac8f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "83ebd1f2-c886-49e2-86e5-83172f8be4fa",
      "parentUUID": "d8a419cc-32d7-4c93-99fa-aab95208ac8f",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "6afceb3d-8235-4471-89a4-d25f5e1efe5a",
      "parentUUID": "4ac55368-1f72-4c0b-9399-e7ca25ef618f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "aa8173d9-7b33-472d-89b8-01ef64f8d6f5",
      "parentUUID": "4ac55368-1f72-4c0b-9399-e7ca25ef618f",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "bbecc899-85b2-46f1-af9d-12dfab83dd57",
      "parentUUID": "03c851e4-1e78-44de-9c09-9cc109c5e232",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "02b25c38-43bd-4859-ae9e-e3adbbda2020",
      "parentUUID": "03c851e4-1e78-44de-9c09-9cc109c5e232",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameFrom should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f23a8c01-b153-4108-8fe6-7860cf4f0d10",
      "parentUUID": "b8f0b2ec-4b9f-470c-a22b-f0868756678f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameFrom should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "9dc4f004-b050-4a68-8648-497a9e6cfae9",
      "parentUUID": "b8f0b2ec-4b9f-470c-a22b-f0868756678f",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameTo should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "2bd3cd9e-cdc1-45b6-bb3c-5a35e7eb1e8e",
      "parentUUID": "8d74fbb9-f779-4d11-9b8d-c2217504ea4b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameTo should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "4c42736e-7736-465d-8fde-b06cb314fe1e",
      "parentUUID": "8d74fbb9-f779-4d11-9b8d-c2217504ea4b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "65648a5f-9e4d-4fee-8449-f1184af4a233",
      "parentUUID": "b4ee1018-371e-404b-9eeb-91881ac492f4",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "94acccfc-8ccb-4b2a-9406-869166b67570",
      "parentUUID": "b4ee1018-371e-404b-9eeb-91881ac492f4",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "a01edaed-3a88-4f4f-8461-890c407a1d5a",
      "parentUUID": "34a6d7c8-9b06-41b8-9dc4-14b586da93f9",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "183d1afa-dc89-4029-b346-a3908bef42d2",
      "parentUUID": "34a6d7c8-9b06-41b8-9dc4-14b586da93f9",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "e80a11bc-a49d-44c7-84d1-97a54f837721",
      "parentUUID": "a679ceb1-6dcf-42aa-be2c-68cc53f6dc9e",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "8a609531-239f-4cf2-8fd4-8bb2e49b120b",
      "parentUUID": "a679ceb1-6dcf-42aa-be2c-68cc53f6dc9e",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#decision should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.data._decision.should.be.true();",
      "isRoot": false,
      "uuid": "95e567e0-6272-44ae-bf82-082aab2be25c",
      "parentUUID": "40086d1a-b486-40d4-96b9-d3526101855e",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#decision should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._decision = <span class=\"hljs-literal\">true</span>;<br>m.decision.should.be.true();",
      "isRoot": false,
      "uuid": "cb801dbd-041d-4d53-8f1c-88bf433237d5",
      "parentUUID": "40086d1a-b486-40d4-96b9-d3526101855e",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "09dc4f32-2210-49f4-a945-7844d87b27ed",
      "parentUUID": "60fdd4a2-bbc9-41b9-8407-dec1fbbaf2d4",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "8c818b9d-2bb2-45ec-93dc-5ff753c98ecc",
      "parentUUID": "60fdd4a2-bbc9-41b9-8407-dec1fbbaf2d4",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "046f90a3-e7a0-4140-ad1b-75fa48a2f70b",
      "parentUUID": "1c1db983-ae10-4a49-8a07-15c937d86a4d",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "5c524b4f-4421-4d85-b947-66d05b5d8ce1",
      "parentUUID": "1c1db983-ae10-4a49-8a07-15c937d86a4d",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "652275c2-ea7c-41c4-a1fd-cb169e395f3e",
      "parentUUID": "b1d872bf-e4dc-4f4e-8785-cfb063ef8935",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "ad7fbb31-9ab2-49d9-9013-615bcd8fb680",
      "parentUUID": "b1d872bf-e4dc-4f4e-8785-cfb063ef8935",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#gameState should get value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.gameState.should.be.Object();",
      "isRoot": false,
      "uuid": "89f4c51b-4f95-4432-977f-756321e11130",
      "parentUUID": "4db23fc6-b305-4ff0-937e-206c3df670d6",
      "skipped": false
    },
    {
      "title": "should not have ids",
      "fullTitle": "#gameState should not have ids",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState.id);<br>should.not.exist(m.gameState.host.id);",
      "isRoot": false,
      "uuid": "213b16e1-8492-47e3-93ba-6266485c1009",
      "parentUUID": "4db23fc6-b305-4ff0-937e-206c3df670d6",
      "skipped": false
    },
    {
      "title": "should promote private field _ to public field",
      "fullTitle": "#gameState should promote private field _ to public field",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState._host);<br>should.not.exist(m.gameState._settings);<br>should.exist(m.gameState.host);<br>should.exist(m.gameState.settings);<br>should.exist(m.gameState.settings.teamLeaderSelectionMethod);",
      "isRoot": false,
      "uuid": "ae36b5a9-6129-47c6-8696-6dabe2ff09bd",
      "parentUUID": "4db23fc6-b305-4ff0-937e-206c3df670d6",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "dc813225-0ae0-4bf9-a9ad-639fcae4007c",
      "parentUUID": "fb076ee7-adaa-489f-ac18-840206e36c81",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "3bbd540b-52ba-49b6-bb1b-a16309b76b4d",
      "parentUUID": "fb076ee7-adaa-489f-ac18-840206e36c81",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#rejoinAs should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.rejoinAs = constants.rejoinAs.HOST;<br>m.data._rejoinAs.should.equal(constants.rejoinAs.HOST);",
      "isRoot": false,
      "uuid": "2a8d3376-d642-4d31-8025-58d7813c76f4",
      "parentUUID": "69e880fa-8f9f-4572-81ac-8db50c1d74ad",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#rejoinAs should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._rejoinAs = constants.rejoinAs.HOST;<br>m.rejoinAs.should.equal(constants.rejoinAs.HOST);",
      "isRoot": false,
      "uuid": "8e4e939c-4ea6-4cbc-9bab-59a43063b606",
      "parentUUID": "69e880fa-8f9f-4572-81ac-8db50c1d74ad",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "c9de2e16-223b-4e83-a6d7-435511d1d3f4",
      "parentUUID": "7085797e-c871-4929-93cd-a0a61ca27b47",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "ee843a36-f258-4c3b-aaf3-5a0354323ade",
      "parentUUID": "7085797e-c871-4929-93cd-a0a61ca27b47",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#participantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "0911925b-3d03-4d72-9d66-e55270656e35",
      "parentUUID": "6f386603-1d65-400b-8e04-79fc53cb1be1",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#participantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "592a0c7a-e370-4c52-9d63-b52b0faf644d",
      "parentUUID": "6f386603-1d65-400b-8e04-79fc53cb1be1",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.rejoinAs = constants.rejoinAs.OBSERVER;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "9ec7d26b-592e-4b7f-aa46-a1e42becaa46",
      "parentUUID": "eda54633-b83f-4a54-888a-b63077ed5f2d",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "57006d08-9fbc-469f-b096-e423d2b54139",
      "parentUUID": "eda54633-b83f-4a54-888a-b63077ed5f2d",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "3b15e849-5bae-40cc-9be3-bfa225a508e1",
      "parentUUID": "d58f8620-61ad-4ff8-bc7a-a107d8fe2ac4",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "853631f0-4b79-4835-b471-597fe99dd571",
      "parentUUID": "d58f8620-61ad-4ff8-bc7a-a107d8fe2ac4",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "010271c8-b76e-489b-9b30-85211d8f9095",
      "parentUUID": "b6239fa6-d5ff-4eed-a49b-4980b6b109c6",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "339a7e81-fa29-48ec-906b-eb55ca0783d2",
      "parentUUID": "b6239fa6-d5ff-4eed-a49b-4980b6b109c6",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "f1cbe99f-3dc8-44b1-9494-93c9dccc4539",
      "parentUUID": "a63a6caa-a79a-4c5a-b400-8f7e4ce588e6",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "8f330e30-f4a8-41e6-b29c-e0b99cb9ce72",
      "parentUUID": "a63a6caa-a79a-4c5a-b400-8f7e4ce588e6",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionCompleted();<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "f9d27f9d-2380-4af3-bce6-46c149fc7515",
      "parentUUID": "b3e6adeb-6e4e-4500-9115-8ec6bca7c7ba",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "7f582ad7-4fae-4492-8933-0725323e75ae",
      "parentUUID": "04a78c95-c220-4c67-81ed-41bf0b572115",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "c2aaf1b5-db42-41d2-86ca-ba31c9408b70",
      "parentUUID": "04a78c95-c220-4c67-81ed-41bf0b572115",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "d4523cff-498d-4784-a905-096a213105a2",
      "parentUUID": "2007479a-2aa3-48b9-b4a4-f33ec18e6f9c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "88550d3c-f618-4319-844e-78cccf5ce528",
      "parentUUID": "2007479a-2aa3-48b9-b4a4-f33ec18e6f9c",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "5952c50c-c6a5-4a9a-836e-5b0b7e00ec1b",
      "parentUUID": "b94a2ee2-1579-4b15-aefd-2be7ca55b695",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "469fa30e-5b1c-4890-88e4-8114d3a01f13",
      "parentUUID": "b94a2ee2-1579-4b15-aefd-2be7ca55b695",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "851d1d07-b584-4b1e-aa01-468146b169b9",
      "parentUUID": "d3cab98b-213f-4602-963c-f303d63fd917",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f067106e-7754-4bcf-bf55-0b5fd57c3a5b",
      "parentUUID": "d3cab98b-213f-4602-963c-f303d63fd917",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#participantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "e807d94c-c02e-45ad-8682-89b6cfeb34ec",
      "parentUUID": "551591d6-ee1b-4557-a61f-392d55969de3",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#participantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f8f18802-aec3-492b-8368-03babaacb622",
      "parentUUID": "551591d6-ee1b-4557-a61f-392d55969de3",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "d70f6923-ffc1-46f4-935a-33af7f8174bd",
      "parentUUID": "36025eef-f19b-44a2-bbf1-a41c05036322",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "d48eacac-4595-4328-83db-21b53900ffe3",
      "parentUUID": "36025eef-f19b-44a2-bbf1-a41c05036322",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#info should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.should.be.Object();",
      "isRoot": false,
      "uuid": "9b437258-871a-4731-a350-256fb27f4631",
      "parentUUID": "c74c1948-30f2-41f4-8fb6-6a13e9a4aba3",
      "skipped": false
    },
    {
      "title": "should not have ids",
      "fullTitle": "#info should not have ids",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.host.should.not.be.null();<br>should.not.exist(m.info.host.id);",
      "isRoot": false,
      "uuid": "e74856d3-09d2-4ce3-9903-fba6b2ec263b",
      "parentUUID": "c74c1948-30f2-41f4-8fb6-6a13e9a4aba3",
      "skipped": false
    },
    {
      "title": "should promote private field _ to public field",
      "fullTitle": "#info should promote private field _ to public field",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>should.not.exist(m.info._host);<br>should.not.exist(m.info._session);<br>should.exist(m.info.host);<br>should.exist(m.info.session);<br>should.exist(m.info.session.settings.teamLeaderSelectionMethod);",
      "isRoot": false,
      "uuid": "7a1dfe5e-0c0b-4c67-b41d-40da87975ff6",
      "parentUUID": "c74c1948-30f2-41f4-8fb6-6a13e9a4aba3",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "df371441-7e33-4562-8092-101bb09d48b6",
      "parentUUID": "5da711b2-61a6-44af-8777-42f25ba71ded",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "08284e69-c00e-4374-beda-da9bae335122",
      "parentUUID": "5da711b2-61a6-44af-8777-42f25ba71ded",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "28309c72-7929-4664-9186-7a2a34571568",
      "parentUUID": "804aa5ca-8e15-4fc9-ac96-4ff258ea2bd0",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "6f55e2d5-cbc4-47ae-a8d4-3062a8b2c66f",
      "parentUUID": "804aa5ca-8e15-4fc9-ac96-4ff258ea2bd0",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "6ddf8388-35ea-4b0c-ba56-e4d2d3d8c486",
      "parentUUID": "89ec7fe4-9d85-49f9-b3f4-1836ec6ae43c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "8a6cba56-3546-4cc5-bb3c-b5e076fe3124",
      "parentUUID": "89ec7fe4-9d85-49f9-b3f4-1836ec6ae43c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "89c0377c-84e3-425d-94fd-e84df291aadd",
      "parentUUID": "7ec09368-7786-46e2-8d7f-3ed9f7a9386b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "9f7bbc61-095e-41b3-8948-31b351ad5f58",
      "parentUUID": "7ec09368-7786-46e2-8d7f-3ed9f7a9386b",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.contestantId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "3b7a292c-8911-4ee7-b217-c853490a80fe",
      "parentUUID": "7ba5657f-484a-4a31-bf38-655415fe210e",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "e421a6d3-0d4d-4a6a-8c7d-d1c3fe0b4933",
      "parentUUID": "7ba5657f-484a-4a31-bf38-655415fe210e",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SuccessMessage();<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "fd974011-5184-41a0-81ad-cbe5a23dc10f",
      "parentUUID": "70d7457a-f18d-44fb-9bc1-e281ffa32be0",
      "skipped": false
    },
    {
      "title": "should return false when not referenced",
      "fullTitle": "#isInstanceAndTypeOf() should return false when not referenced",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf().should.be.false();",
      "isRoot": false,
      "uuid": "f8afa188-c76f-41fa-a48b-59ee3b21fccc",
      "parentUUID": "c4b7e7b5-d426-469a-ace7-359b9f5a5d8e",
      "skipped": false
    },
    {
      "title": "should return false when null",
      "fullTitle": "#isInstanceAndTypeOf() should return false when null",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">''</span>).should.be.false();",
      "isRoot": false,
      "uuid": "5555c954-015d-4ad5-a64e-c05b2af509dc",
      "parentUUID": "c4b7e7b5-d426-469a-ace7-359b9f5a5d8e",
      "skipped": false
    },
    {
      "title": "should return false when not the correct type",
      "fullTitle": "#isInstanceAndTypeOf() should return false when not the correct type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'Int'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "769514f3-9255-42b6-bf0f-649b03a024d7",
      "parentUUID": "c4b7e7b5-d426-469a-ace7-359b9f5a5d8e",
      "skipped": false
    },
    {
      "title": "should return true when is a built-in type",
      "fullTitle": "#isInstanceAndTypeOf() should return true when is a built-in type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'Number'</span>).should.be.true();",
      "isRoot": false,
      "uuid": "5d6956f1-7645-4bca-95b4-048d6d7a4c55",
      "parentUUID": "c4b7e7b5-d426-469a-ace7-359b9f5a5d8e",
      "skipped": false
    },
    {
      "title": "should return true when is user defined type",
      "fullTitle": "#isInstanceAndTypeOf() should return true when is user defined type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-keyword\">new</span> UserDefinedType(),<br>    UserDefinedType).should.be.true();",
      "isRoot": false,
      "uuid": "ea43dab0-c7b9-439d-96ee-ba55cb319344",
      "parentUUID": "c4b7e7b5-d426-469a-ace7-359b9f5a5d8e",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "6932e658-9aff-4023-a36c-8b854a7791ad",
      "parentUUID": "3dd928f8-cfaf-4c8a-9538-b3d023c31c34",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "51abc9f8-f6c1-4037-a625-b0c3778833eb",
      "parentUUID": "3dd928f8-cfaf-4c8a-9538-b3d023c31c34",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all.pop();<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "b03041f8-1f7b-4583-bde7-5487cdba5ecd",
      "parentUUID": "3dd928f8-cfaf-4c8a-9538-b3d023c31c34",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#length should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.length = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "debcda18-119c-48ad-89a8-eea9be6c99f3",
      "parentUUID": "e8934ee7-e0dd-4703-9b2f-ef7927605e5d",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#length should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "eddb7cc4-00d2-42c9-af78-bd0e281c9693",
      "parentUUID": "e8934ee7-e0dd-4703-9b2f-ef7927605e5d",
      "skipped": false
    },
    {
      "title": "should return true when id does exist",
      "fullTitle": "#contains(id) should return true when id does exist",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(p.id).should.be.true();",
      "isRoot": false,
      "uuid": "9be96d21-ca5c-47ff-92a7-6a28158ee682",
      "parentUUID": "74d29097-2952-466f-853e-d091dc5c95cc",
      "skipped": false
    },
    {
      "title": "should return false when id does not exist",
      "fullTitle": "#contains(id) should return false when id does not exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(<span class=\"hljs-string\">'p2'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "126ba2dd-de02-4cb7-b7c0-7dccd0a7fe28",
      "parentUUID": "74d29097-2952-466f-853e-d091dc5c95cc",
      "skipped": false
    },
    {
      "title": "should add the given participant",
      "fullTitle": "#add(participant) should add the given participant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc._participants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc._participants[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "538f24b1-6190-4632-b67b-ff5844adae5e",
      "parentUUID": "a55a76ba-590f-434f-87e3-fcb50e3afdc1",
      "skipped": false
    },
    {
      "title": "should error if participant with id already exists",
      "fullTitle": "#add(participant) should error if participant with id already exists",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.add(p);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "65a5ddc3-92b1-49a7-a251-1950070af01d",
      "parentUUID": "a55a76ba-590f-434f-87e3-fcb50e3afdc1",
      "skipped": false
    },
    {
      "title": "should emit add event",
      "fullTitle": "#add(participant) should emit add event",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.on(<span class=\"hljs-string\">'add'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">participant</span>) </span>{<br>    participant.should.equal(p);<br>    done();<br>});<br>pc.add(p);",
      "isRoot": false,
      "uuid": "2b5e2ce9-350f-4697-b666-613854969033",
      "parentUUID": "a55a76ba-590f-434f-87e3-fcb50e3afdc1",
      "skipped": false
    },
    {
      "title": "should remove the existing participant",
      "fullTitle": "#remove(participant) should remove the existing participant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "5b9c4f11-5e07-43f3-b3de-16f3a3ed739e",
      "parentUUID": "4044154f-6508-4861-acd4-391b9c695bac",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing participant",
      "fullTitle": "#remove(participant) should not remove the non-existing participant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p1).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "5e47b0f3-451e-4b87-a620-861d46d01a1b",
      "parentUUID": "4044154f-6508-4861-acd4-391b9c695bac",
      "skipped": false
    },
    {
      "title": "should remove the existing participant",
      "fullTitle": "#removeById(id) should remove the existing participant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p.id).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "b8e9873d-454c-41ef-bb3f-049864470cfa",
      "parentUUID": "9f523130-7fde-4088-b56a-8fce8111d824",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing participant",
      "fullTitle": "#removeById(id) should not remove the non-existing participant",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p1.id).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "3917bb2b-bab7-487a-9eb6-daf6ba91b690",
      "parentUUID": "9f523130-7fde-4088-b56a-8fce8111d824",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#id should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'id_test'</span>;<br>p._id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "fda53e36-976c-494f-8e28-d2985289d8d7",
      "parentUUID": "a90be0b1-0dc4-46dc-9c2b-40ff191cb5dc",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#id should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "478f448e-db45-4a09-9260-e131c72ed861",
      "parentUUID": "a90be0b1-0dc4-46dc-9c2b-40ff191cb5dc",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#isDisconnected should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    p.isDisconnected = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "c43259e8-3c45-49c4-bd1f-c5358b208cc9",
      "parentUUID": "4b08a076-7a2d-46af-bc8b-f047fb7dc2a4",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#isDisconnected should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "0e5a12da-968e-4770-b3dd-d6596ec991fe",
      "parentUUID": "4b08a076-7a2d-46af-bc8b-f047fb7dc2a4",
      "skipped": false
    },
    {
      "title": "should change participant state to disconnected",
      "fullTitle": "#disconnect() should change participant state to disconnected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">false</span>;<br>p.disconnect();<br>p.isDisconnected.should.be.true();",
      "isRoot": false,
      "uuid": "f0551d67-bf23-4fcf-afcb-0b7aed33aa61",
      "parentUUID": "22f0c5f0-7b17-4683-9acb-323583c61f49",
      "skipped": false
    },
    {
      "title": "should change participant state to connected",
      "fullTitle": "#reconnect() should change participant state to connected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">true</span>;<br>p.reconnect();<br>p.isDisconnected.should.be.false();",
      "isRoot": false,
      "uuid": "a7e26444-83f5-4415-8e7b-7eb75219d503",
      "parentUUID": "6cb4508f-8582-4acf-8bd6-4d4be110f052",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    sc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "6327fcdf-62da-412e-bb81-d5dd29cdedd1",
      "parentUUID": "5b7d5bb9-3eca-4186-ae0f-abd54c761867",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
      "isRoot": false,
      "uuid": "41dcf5c0-a3fc-43b6-9cc2-8f4a27eed183",
      "parentUUID": "5b7d5bb9-3eca-4186-ae0f-abd54c761867",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all.pop();<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
      "isRoot": false,
      "uuid": "a6c7d911-6c88-40f9-b55a-498f02f99049",
      "parentUUID": "5b7d5bb9-3eca-4186-ae0f-abd54c761867",
      "skipped": false
    },
    {
      "title": "add and return session",
      "fullTitle": "#add(host, settings) add and return session",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-keyword\">var</span> ses = sc.add(h, s);<br>ses.should.be.instanceof(Session);",
      "isRoot": false,
      "uuid": "6f61fed8-f006-460a-8914-14149a3641e4",
      "parentUUID": "8688b35f-5912-40de-bf42-40998543b1d3",
      "skipped": false
    },
    {
      "title": "when given valid id should return session",
      "fullTitle": "#getById(id) when given valid id should return session",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-comment\">/* eslint-disable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses1 = sc.add(h, s);<br><span class=\"hljs-comment\">/* eslint-enable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses2 = sc.add(h, s);<br><span class=\"hljs-keyword\">var</span> sessionLocate = sc.getById(ses2.id);<br>sessionLocate.should.be.instanceof(Session)<br>    .and.equal(ses2);",
      "isRoot": false,
      "uuid": "f8b0e137-b8c3-4c9c-b5a3-ce154e740ae2",
      "parentUUID": "310e43e6-10a1-481d-a51a-bad13a29a935",
      "skipped": false
    },
    {
      "title": "should remove complete sc",
      "fullTitle": "#purgeCompleted() should remove complete sc",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.all[<span class=\"hljs-number\">0</span>].complete();<br>sc.all[<span class=\"hljs-number\">1</span>].complete();<br>sc.purgeCompleted();<br>sc.all.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "196b81bf-a2e4-4770-b5cd-6cd76cdc62b9",
      "parentUUID": "94bb6960-de57-49ad-9e0d-9bad15d87b4b",
      "skipped": false
    },
    {
      "title": "should create teams",
      "fullTitle": "#constructor should create teams",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "a582291a-c956-46c0-b2cb-b1afebd9a0f1",
      "parentUUID": "0c433fb1-aaf5-4567-b0e2-5af4e0e4b7bd",
      "skipped": false
    },
    {
      "title": "should not create teams",
      "fullTitle": "#constructor should not create teams",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>should(s.teams).be.null();",
      "isRoot": false,
      "uuid": "a125ff89-dc66-4055-83cb-95cec529e14b",
      "parentUUID": "0c433fb1-aaf5-4567-b0e2-5af4e0e4b7bd",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#id should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.id = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "141fb2af-2a8b-4232-8705-69a063272dd1",
      "parentUUID": "560ad419-48bd-47e5-b9bc-2cb4bbca1835",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#id should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "ed99bc9d-a9bf-4819-a01c-8c844b80c039",
      "parentUUID": "560ad419-48bd-47e5-b9bc-2cb4bbca1835",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#roundsPlayed should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundsPlayed = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "090764eb-f302-49dd-83f0-6f9e25e41ceb",
      "parentUUID": "5f30c2f8-643c-4146-af88-81b836635c50",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#roundsPlayed should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "5504dd29-36f8-4cdc-9e3b-7885f309d9cd",
      "parentUUID": "5f30c2f8-643c-4146-af88-81b836635c50",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#previousWinners should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.previousWinners = [<span class=\"hljs-string\">'SomeWinner'</span>];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "6ad4ba54-fef2-4db9-a6af-f7609f707931",
      "parentUUID": "6470aec9-aebe-4e7a-b698-87418dc76bef",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#previousWinners should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._previousWinners = [<span class=\"hljs-string\">'Winner1'</span>, <span class=\"hljs-string\">'Winner2'</span>];<br>s.previousWinners.should.be.Array();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
      "isRoot": false,
      "uuid": "efb15f37-addd-42e6-9464-ee58069fda28",
      "parentUUID": "6470aec9-aebe-4e7a-b698-87418dc76bef",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#roundWinner should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundWinner = <span class=\"hljs-string\">'SomeWinner'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "cf1062ab-d7dd-47df-9894-03e40efe35cc",
      "parentUUID": "c45c2191-912e-4580-a40c-6c4fc584c178",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#roundWinner should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundWinner = <span class=\"hljs-string\">'Winner1'</span>;<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
      "isRoot": false,
      "uuid": "5f0fb5ad-0849-45aa-9029-a08ade65aefc",
      "parentUUID": "c45c2191-912e-4580-a40c-6c4fc584c178",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#observers should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.observers = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "c7ea6e27-ef90-46c4-91b3-65889e7f00a3",
      "parentUUID": "627bba33-01cb-4991-8500-7c87f7803063",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#observers should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.observers.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.observers[<span class=\"hljs-number\">0</span>].should.equal(observer);",
      "isRoot": false,
      "uuid": "f6f5055f-0f7e-41c0-b1d9-ae4008990804",
      "parentUUID": "627bba33-01cb-4991-8500-7c87f7803063",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#contestants should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.contestants = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "9e8e11ec-60e1-4ad7-a069-ce1b2dc9457f",
      "parentUUID": "9a202f7d-148c-4aec-a5d1-171800d8a9b1",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestants should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.contestants[<span class=\"hljs-number\">0</span>].should.equal(contestant);",
      "isRoot": false,
      "uuid": "b5eac9f1-2603-43ff-b591-8a8b8506b785",
      "parentUUID": "9a202f7d-148c-4aec-a5d1-171800d8a9b1",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#host should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.host = host;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "0fceadcc-07fb-41a7-830d-b8aa5aa5651d",
      "parentUUID": "124fd589-beca-4d01-b367-913fa2cb4271",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#host should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.host.should.equal(host);",
      "isRoot": false,
      "uuid": "15fc750a-7fe8-414a-abf9-38cbcfe57e98",
      "parentUUID": "124fd589-beca-4d01-b367-913fa2cb4271",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#currentState should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
      "isRoot": false,
      "uuid": "1644c516-84bb-4533-b01f-fa6866a8cde8",
      "parentUUID": "a211c397-5940-41d9-a4a4-bfc53e94c4c6",
      "skipped": false
    },
    {
      "title": "should increment rounds played",
      "fullTitle": "#incrementRoundsPlayed() should increment rounds played",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.incrementRoundsPlayed();<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "ad36da0e-204b-431e-bf67-8ddf6de40fb6",
      "parentUUID": "8bac88f2-193c-48c4-8060-d7db53c44e6c",
      "skipped": false
    },
    {
      "title": "should not allow a contestant username with bad words",
      "fullTitle": "#addContestant(contestant) should not allow a contestant username with bad words",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Penis #YOLO'</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_CONTAINS_PROFANITY);",
      "isRoot": false,
      "uuid": "f68e74c1-c80e-45ba-bf08-08a6cc48b3df",
      "parentUUID": "82b22c6d-8edf-4d95-81b7-7192e793acf3",
      "skipped": false
    },
    {
      "title": "should not allow when username is empty",
      "fullTitle": "#addContestant(contestant) should not allow when username is empty",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">' '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_IS_REQUIRED);",
      "isRoot": false,
      "uuid": "35909ab6-10be-4536-81cc-ae60d84a0b59",
      "parentUUID": "82b22c6d-8edf-4d95-81b7-7192e793acf3",
      "skipped": false
    },
    {
      "title": "should trim username",
      "fullTitle": "#addContestant(contestant) should trim username",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Wade  '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>c.username.should.equal(<span class=\"hljs-string\">'Wade'</span>);",
      "isRoot": false,
      "uuid": "c28891a5-1028-44cb-a5d6-e555c64359db",
      "parentUUID": "82b22c6d-8edf-4d95-81b7-7192e793acf3",
      "skipped": false
    },
    {
      "title": "should add contestant when session is not full",
      "fullTitle": "when in individual mode should add contestant when session is not full",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "5844cb2a-be7b-47e0-bca4-ac9e94f81141",
      "parentUUID": "ae27940d-2d38-4fbf-becc-289b6536a52a",
      "skipped": false
    },
    {
      "title": "should not add contestant when session is full",
      "fullTitle": "when in individual mode should not add contestant when session is full",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br>s.addContestant(c2);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();",
      "isRoot": false,
      "uuid": "ae03f344-6f1a-4426-9394-459da8008b42",
      "parentUUID": "ae27940d-2d38-4fbf-becc-289b6536a52a",
      "skipped": false
    },
    {
      "title": "should not add contestant when username is already taken",
      "fullTitle": "when in individual mode should not add contestant when username is already taken",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "dcf5c683-f906-4a93-b18c-67325ff00d50",
      "parentUUID": "ae27940d-2d38-4fbf-becc-289b6536a52a",
      "skipped": false
    },
    {
      "title": "BUG# username case should not matter",
      "fullTitle": "when in individual mode BUG# username case should not matter",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'abc1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'ABC1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "6cb9dae5-fe34-48f8-b70b-f204923ea5f8",
      "parentUUID": "ae27940d-2d38-4fbf-becc-289b6536a52a",
      "skipped": false
    },
    {
      "title": "should allow unlimited contestants when max is set to constants.UNLIMITED",
      "fullTitle": "when in individual mode should allow unlimited contestants when max is set to constants.UNLIMITED",
      "timedOut": false,
      "duration": 622,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = constants.UNLIMITED;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    <span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>    c.username = <span class=\"hljs-string\">'c'</span> + i;<br>    <span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>    response.wasSuccessful.should.be.true();<br>}",
      "isRoot": false,
      "uuid": "4f05ff51-b185-49f2-a593-93798a93f414",
      "parentUUID": "ae27940d-2d38-4fbf-becc-289b6536a52a",
      "skipped": false
    },
    {
      "title": "should add contestant when teams is not full",
      "fullTitle": "when in team mode should add contestant when teams is not full",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "93db0903-7703-458c-9170-bfcc81ba91c8",
      "parentUUID": "84de1aa7-cdf1-41cb-be4d-5174a9d6ad65",
      "skipped": false
    },
    {
      "title": "should not add contestant when teams are full",
      "fullTitle": "when in team mode should not add contestant when teams are full",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.TEAMS_ARE_FULL);",
      "isRoot": false,
      "uuid": "ae3733ee-49ec-4ac1-8ab3-fa1fa04e05a8",
      "parentUUID": "84de1aa7-cdf1-41cb-be4d-5174a9d6ad65",
      "skipped": false
    },
    {
      "title": "should not add contestant when username is already taken",
      "fullTitle": "when in team mode should not add contestant when username is already taken",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "9b837230-b7ea-4829-8361-081a331082f6",
      "parentUUID": "84de1aa7-cdf1-41cb-be4d-5174a9d6ad65",
      "skipped": false
    },
    {
      "title": "should subscribe callback to the correct event",
      "fullTitle": "#subscribeForStateChange(event, callback) should subscribe callback to the correct event",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> r = s.addContestant(c);<br>r.wasSuccessful.should.be.true();<br>s.subscribeForStateChange(<span class=\"hljs-string\">'onpending'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">session, event, from, to</span>) </span>{<br>    session.should.equal(s);<br>    event.should.equal(<span class=\"hljs-string\">'buzzerPressed'</span>);<br>    from.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>    to.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>    done();<br>});<br>s.tryBuzzerPressRegister(c.id).should.be.true();",
      "isRoot": false,
      "uuid": "3a480f39-dd7c-4fe4-847f-61e5336bfeb1",
      "parentUUID": "d65b4b4b-9317-4c03-9c6f-d9430598e6f2",
      "skipped": false
    },
    {
      "title": "should register when state is ready",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should register when state is ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);",
      "isRoot": false,
      "uuid": "f31a49b3-427e-4862-a90b-4f75ecde3dfb",
      "parentUUID": "4397374d-8344-414b-ad61-341d5aa64a6f",
      "skipped": false
    },
    {
      "title": "should not register when state is not ready",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not register when state is not ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.false();",
      "isRoot": false,
      "uuid": "0ad7883e-48f8-4e61-a6ad-d036299318d3",
      "parentUUID": "4397374d-8344-414b-ad61-341d5aa64a6f",
      "skipped": false
    },
    {
      "title": "should not register when contestant does not exist",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not register when contestant does not exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(idUtility.generateParticipantId()).should.be.false();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
      "isRoot": false,
      "uuid": "7a48b756-5ab3-48e2-9b59-7543ae031c00",
      "parentUUID": "4397374d-8344-414b-ad61-341d5aa64a6f",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "4d64aeeb-a0ea-4fb8-8b33-d9a35bbb01e3",
      "parentUUID": "4397374d-8344-414b-ad61-341d5aa64a6f",
      "skipped": false
    },
    {
      "title": "should not add previous round winner to winners list",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not add previous round winner to winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "c50d8c80-895e-40c2-9e90-21968a8e659c",
      "parentUUID": "4397374d-8344-414b-ad61-341d5aa64a6f",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->ACCEPT should allow when game state is pending",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();",
      "isRoot": false,
      "uuid": "0026a87e-a8e2-4d1d-a146-c15d4c53df41",
      "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not pending",
      "fullTitle": "action->ACCEPT should not allow when game state is not pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.false();",
      "isRoot": false,
      "uuid": "dfa8a40c-215c-4bd0-906e-0a0136f13926",
      "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
      "skipped": false
    },
    {
      "title": "should update contestant's score",
      "fullTitle": "action->ACCEPT should update contestant's score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "209c6433-6fcb-4bd0-beac-7167adcbdc1b",
      "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
      "skipped": false
    },
    {
      "title": "should update contestant's team score",
      "fullTitle": "action->ACCEPT should update contestant's team score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>s.teams.all[<span class=\"hljs-number\">0</span>].score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "7a9df768-09c4-4ead-a937-403d08a5f361",
      "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->ACCEPT should add previous round winner to winners list",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "9df36dc3-5cdb-463a-8c33-05117fcfbbdb",
      "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->ACCEPT should change game state back to ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "0632374a-ccb5-4a6d-a7e4-1dc56325b6f4",
      "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
      "skipped": false
    },
    {
      "title": "should clear pending winner",
      "fullTitle": "action->ACCEPT should clear pending winner",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>should(s.pendingWinner).be.null();",
      "isRoot": false,
      "uuid": "49961dc8-1b20-4c90-ae1b-79b952a3cd56",
      "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->REJECT should allow when game state is pending",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();",
      "isRoot": false,
      "uuid": "d309b368-89f9-41d2-a71b-e094f4109988",
      "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not pending",
      "fullTitle": "action->REJECT should not allow when game state is not pending",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.false();",
      "isRoot": false,
      "uuid": "9232c751-1857-46d3-9aa1-62d2d7edc1dd",
      "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
      "skipped": false
    },
    {
      "title": "should not replace round winner with pending contestant",
      "fullTitle": "action->REJECT should not replace round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "6a56fd03-5216-4956-8897-df6edb7eddba",
      "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
      "skipped": false
    },
    {
      "title": "should not update pending contestant's score",
      "fullTitle": "action->REJECT should not update pending contestant's score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.score.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "52d83624-e9a6-4bb9-8f39-d48d98c7c237",
      "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
      "skipped": false
    },
    {
      "title": "should add round winner to previous winners list",
      "fullTitle": "action->REJECT should add round winner to previous winners list",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "7c738541-cbef-47ee-bd84-5e05c0699fc8",
      "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->REJECT should change game state back to ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "9b6f4222-9d51-4b0f-baef-d38ebbf11078",
      "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
      "skipped": false
    },
    {
      "title": "should allow when game state is ready",
      "fullTitle": "action->RESET should allow when game state is ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
      "isRoot": false,
      "uuid": "8a45a85f-a071-41dd-b765-528304ea945a",
      "parentUUID": "b2eda362-2a89-4968-bf94-ece771bce117",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->RESET should allow when game state is pending",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
      "isRoot": false,
      "uuid": "6a31b158-0d80-4dec-ba3d-8ea9447a647f",
      "parentUUID": "b2eda362-2a89-4968-bf94-ece771bce117",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "action->RESET should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "11a4565a-418c-4c49-b976-816f4add3ee8",
      "parentUUID": "b2eda362-2a89-4968-bf94-ece771bce117",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->RESET should add previous round winner to winners list",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "48ad0d7a-51ed-4cfa-b839-826f2ebbdd8e",
      "parentUUID": "b2eda362-2a89-4968-bf94-ece771bce117",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->RESET should change game state back to ready",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "d632e9fb-82b1-417c-ace0-34fb8e3a1aa7",
      "parentUUID": "b2eda362-2a89-4968-bf94-ece771bce117",
      "skipped": false
    },
    {
      "title": "should allow when game state is ready",
      "fullTitle": "action->DISABLE should allow when game state is ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
      "isRoot": false,
      "uuid": "20edd3ff-2c28-4d4b-a72d-0bac983725e7",
      "parentUUID": "871b10ff-4610-4aa5-b191-91549f032451",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->DISABLE should allow when game state is pending",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
      "isRoot": false,
      "uuid": "63d0303b-c112-4bc3-bd0b-71f9c2229477",
      "parentUUID": "871b10ff-4610-4aa5-b191-91549f032451",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "action->DISABLE should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "e18f7adc-6a53-4a53-a2a8-b2d60ea1cff0",
      "parentUUID": "871b10ff-4610-4aa5-b191-91549f032451",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->DISABLE should add previous round winner to winners list",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "33db4a44-fc35-4a90-8815-d64d29e35eb0",
      "parentUUID": "871b10ff-4610-4aa5-b191-91549f032451",
      "skipped": false
    },
    {
      "title": "should change game state to buzzerLock",
      "fullTitle": "action->DISABLE should change game state to buzzerLock",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.BUZZER_LOCK);",
      "isRoot": false,
      "uuid": "7bb374c1-2c2f-4bef-9202-0936676db011",
      "parentUUID": "871b10ff-4610-4aa5-b191-91549f032451",
      "skipped": false
    },
    {
      "title": "should allow when game state is buzzerLock",
      "fullTitle": "action->ENABLE should allow when game state is buzzerLock",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();",
      "isRoot": false,
      "uuid": "d8777eab-ff57-406f-bacc-01b70fff7c55",
      "parentUUID": "236077a4-f096-47a1-84cf-998d68cefc9c",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not buzzerLock",
      "fullTitle": "action->ENABLE should not allow when game state is not buzzerLock",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.false();",
      "isRoot": false,
      "uuid": "e8b0f6eb-a2cc-4413-944b-a30ae3c8064a",
      "parentUUID": "236077a4-f096-47a1-84cf-998d68cefc9c",
      "skipped": false
    },
    {
      "title": "should change game state to ready",
      "fullTitle": "action->ENABLE should change game state to ready",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "b6410bd8-e239-449d-8f30-86624201fb77",
      "parentUUID": "236077a4-f096-47a1-84cf-998d68cefc9c",
      "skipped": false
    },
    {
      "title": "should return the pending winner",
      "fullTitle": "#pendingWinner should return the pending winner",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.pendingWinner.should.equal(<span class=\"hljs-string\">'testUser'</span>);",
      "isRoot": false,
      "uuid": "07d256cf-a123-4374-a921-9e9eb7026aef",
      "parentUUID": "7e5a272b-ef7a-4319-ba88-885260e1db5a",
      "skipped": false
    },
    {
      "title": "should not return the pending winner",
      "fullTitle": "#pendingWinner should not return the pending winner",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>should(s.pendingWinner).be.null();",
      "isRoot": false,
      "uuid": "0b20ba79-c877-4788-a784-df5acb634600",
      "parentUUID": "7e5a272b-ef7a-4319-ba88-885260e1db5a",
      "skipped": false
    },
    {
      "title": "should update session name",
      "fullTitle": "#updateSessionName(name) should update session name",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.updateSessionName(<span class=\"hljs-string\">'session2'</span>);<br>settings.sessionName.should.equal(<span class=\"hljs-string\">'session2'</span>);",
      "isRoot": false,
      "uuid": "c989466f-7c9a-4636-b9fa-eda6748b67c4",
      "parentUUID": "5c6071ff-2645-410a-8528-324c4c0970f5",
      "skipped": false
    },
    {
      "title": "should update max contestants",
      "fullTitle": "#updateMaxContestants(maxContestants) should update max contestants",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "04232f2e-6801-4928-9a37-06d16b1b4449",
      "parentUUID": "eddc8de6-78f3-4f91-9eb7-1134f8b944e5",
      "skipped": false
    },
    {
      "title": "should not allow below current connected amount",
      "fullTitle": "#updateMaxContestants(maxContestants) should not allow below current connected amount",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>s.addContestant(c1).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>s.addContestant(c2).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">1</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_CONTESTANTS_MUST_BE_GREATER_THAN_ALREADY_CONNECTED);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "40175d78-b070-409c-ac40-3d3c4e28e102",
      "parentUUID": "eddc8de6-78f3-4f91-9eb7-1134f8b944e5",
      "skipped": false
    },
    {
      "title": "should update team size",
      "fullTitle": "#updateTeamSize(teamSize) should update team size",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.teamSize.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "e3e701df-1317-47c2-89e6-effe0e0c500e",
      "parentUUID": "c82c4cfc-95d2-4e8f-a4ee-bde096393980",
      "skipped": false
    },
    {
      "title": "should not allow below current setting",
      "fullTitle": "#updateTeamSize(teamSize) should not allow below current setting",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.TEAM_SIZE_MUST_BE_GREATER_THAN_ALREADY_SET);",
      "isRoot": false,
      "uuid": "a05f8a1d-6115-4f0a-9ebf-995f5b7ac2bb",
      "parentUUID": "c82c4cfc-95d2-4e8f-a4ee-bde096393980",
      "skipped": false
    },
    {
      "title": "should update max teams",
      "fullTitle": "#updateMaxTeams(maxTeams) should update max teams",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxTeams.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "25ffb053-229b-47e2-b5f9-ce43e83f7d5a",
      "parentUUID": "fd29f0e0-cb3d-4ba0-ab15-7ef9708745b4",
      "skipped": false
    },
    {
      "title": "should add teams",
      "fullTitle": "#updateMaxTeams(maxTeams) should add teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">5</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "90211b0f-1be1-4ada-bcde-724f51017222",
      "parentUUID": "fd29f0e0-cb3d-4ba0-ab15-7ef9708745b4",
      "skipped": false
    },
    {
      "title": "should not allow below current setting",
      "fullTitle": "#updateMaxTeams(maxTeams) should not allow below current setting",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_MUST_BE_GREATER_THAN_ALREADY_SET);",
      "isRoot": false,
      "uuid": "e51f4dd4-584a-49af-a0cf-177ac853a634",
      "parentUUID": "fd29f0e0-cb3d-4ba0-ab15-7ef9708745b4",
      "skipped": false
    },
    {
      "title": "should not allow if teams are PLAYER_CHOICE",
      "fullTitle": "#updateMaxTeams(maxTeams) should not allow if teams are PLAYER_CHOICE",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">6</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_CANNOT_BE_CHANGED_WHEN_PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "a0c782db-0fe3-417d-b0ce-65666813435c",
      "parentUUID": "fd29f0e0-cb3d-4ba0-ab15-7ef9708745b4",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hasTeams should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s._hasTeams.should.be.true();",
      "isRoot": false,
      "uuid": "5ea09d39-296f-4e5c-9a45-74ef82886c9b",
      "parentUUID": "e49c01f0-680d-420f-9d5e-e2ba2643b23b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hasTeams should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.hasTeams.should.be.true();",
      "isRoot": false,
      "uuid": "c8f4393c-db09-40fa-9dbc-e3a37e58f351",
      "parentUUID": "e49c01f0-680d-420f-9d5e-e2ba2643b23b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamSize should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s._teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "07463482-71df-473a-b712-e19dba9d083b",
      "parentUUID": "8efd482b-2697-4b07-b70c-12b896ab6fe7",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamSize should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamSize = <span class=\"hljs-number\">1</span>;<br>s.teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "07764abd-7f5c-43b9-bdee-3781656711b7",
      "parentUUID": "8efd482b-2697-4b07-b70c-12b896ab6fe7",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxTeams should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s._maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "d14f5014-a931-46a8-978c-7c1ec55ce5c2",
      "parentUUID": "9f072311-0b30-484c-931b-1f3e0ed9e702",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxTeams should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-number\">1</span>;<br>s.maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "55878aef-c95d-4e69-98c5-df0b40eed2ff",
      "parentUUID": "9f072311-0b30-484c-931b-1f3e0ed9e702",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeaderSelectionMethod should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s._teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "1fe1b9c1-5243-4856-81db-87c1f87b6f5c",
      "parentUUID": "86665cd5-dbe3-4290-bb09-5e57030e81af",
      "skipped": false
    },
    {
      "title": "should throw on set when constant value is invalid",
      "fullTitle": "#teamLeaderSelectionMethod should throw on set when constant value is invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamLeaderSelectionMethod.all.slice().sort(<br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, b</span>) </span>{<br>            <span class=\"hljs-keyword\">return</span> a - b;<br>        }).pop();<br>    s.teamLeaderSelectionMethod = ++high;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "4d478ca9-2a4c-4477-b00d-48842df4830c",
      "parentUUID": "86665cd5-dbe3-4290-bb09-5e57030e81af",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeaderSelectionMethod should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s.teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "bd3d7d58-817b-43da-a678-595eab8b5393",
      "parentUUID": "86665cd5-dbe3-4290-bb09-5e57030e81af",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameEdit should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br>s._teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
      "isRoot": false,
      "uuid": "ed80c1d2-ae60-4108-82f7-404664cd4216",
      "parentUUID": "e1e8f9be-afab-4fbc-9b1b-a31b73016b0b",
      "skipped": false
    },
    {
      "title": "should throw on set when constant value is invalid",
      "fullTitle": "#teamNameEdit should throw on set when constant value is invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamNameEdit.all.slice().sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a,<br>        b</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> a - b;<br>    }).pop();<br>    s.teamNameEdit = ++high;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "ffe844eb-a33f-424e-9f13-80aef1b8864f",
      "parentUUID": "e1e8f9be-afab-4fbc-9b1b-a31b73016b0b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameEdit should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNameEdit = constants.teamNameEdit.ALLOW;<br>s.teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
      "isRoot": false,
      "uuid": "8b961dfa-5494-4ad2-86ed-7211dd95746d",
      "parentUUID": "e1e8f9be-afab-4fbc-9b1b-a31b73016b0b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxContestants should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxContestants = <span class=\"hljs-number\">1</span>;<br>s._maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "460b1a0a-e191-4fa3-bc9e-d6b09f1f4e1a",
      "parentUUID": "055ff0c2-e8d6-4b76-b89d-c3868f222fdf",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxContestants should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxContestants = <span class=\"hljs-number\">1</span>;<br>s.maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "e1632576-8a1f-47bd-b477-c17e407a9c3f",
      "parentUUID": "055ff0c2-e8d6-4b76-b89d-c3868f222fdf",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s._sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
      "isRoot": false,
      "uuid": "85eb52e1-af63-4ea5-9cfa-f14f49345f90",
      "parentUUID": "1bc0792b-3093-4f97-a89c-323921d22ccd",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s.sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
      "isRoot": false,
      "uuid": "8129bc4b-cf80-466c-a14e-13082ededb42",
      "parentUUID": "1bc0792b-3093-4f97-a89c-323921d22ccd",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNames should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s._teamNames.should.be.Array();<br>s._teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s._teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
      "isRoot": false,
      "uuid": "2245e9cd-792d-4616-97f9-1db0981fa05d",
      "parentUUID": "1d7e1b02-4826-4318-8401-0c7aaf0eae48",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNames should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s.teamNames.should.be.Array();<br>s.teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
      "isRoot": false,
      "uuid": "b314e637-a984-4a72-9b13-0e1da0dae561",
      "parentUUID": "1d7e1b02-4826-4318-8401-0c7aaf0eae48",
      "skipped": false
    },
    {
      "title": "should throw when settings.maxTeams is less than 1",
      "fullTitle": "#create(teams, settings) should throw when settings.maxTeams is less than 1",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    teamFactory.create(tc, s);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "09c467b0-9855-4303-82d6-f11210d10cce",
      "parentUUID": "56a07fb0-92b7-46b0-9aae-166bb5e1b01f",
      "skipped": false
    },
    {
      "title": "should create the correct amount of teams",
      "fullTitle": "#create(teams, settings) should create the correct amount of teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "5ec303b9-1502-401a-bdeb-dad72cfce5ae",
      "parentUUID": "56a07fb0-92b7-46b0-9aae-166bb5e1b01f",
      "skipped": false
    },
    {
      "title": "should not fail with a large team size",
      "fullTitle": "#create(teams, settings) should not fail with a large team size",
      "timedOut": false,
      "duration": 50,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">500</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">500</span>);<br><span class=\"hljs-comment\">// ensure team names are unique</span><br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> i = names.indexOf(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> n === t.teamName;<br>    });<br>    i.should.equal(-<span class=\"hljs-number\">1</span>);<br>    names.push(t.teamName);<br>});",
      "isRoot": false,
      "uuid": "ed65a8d8-5969-4007-b8a9-f5a006f7fbc8",
      "parentUUID": "56a07fb0-92b7-46b0-9aae-166bb5e1b01f",
      "skipped": false
    },
    {
      "title": "should use settings.teamNames first, before random selection",
      "fullTitle": "#create(teams, settings) should use settings.teamNames first, before random selection",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">10</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>, <span class=\"hljs-string\">'t3'</span>, <span class=\"hljs-string\">'t4'</span>, <span class=\"hljs-string\">'t5'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);<br>tc.all[<span class=\"hljs-number\">2</span>].teamName.should.equal(<span class=\"hljs-string\">'t3'</span>);<br>tc.all[<span class=\"hljs-number\">3</span>].teamName.should.equal(<span class=\"hljs-string\">'t4'</span>);<br>tc.all[<span class=\"hljs-number\">4</span>].teamName.should.equal(<span class=\"hljs-string\">'t5'</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">5</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">6</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">7</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">8</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">9</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "5c388a3a-cc6e-41b1-8f8d-70362a9b7a53",
      "parentUUID": "56a07fb0-92b7-46b0-9aae-166bb5e1b01f",
      "skipped": false
    },
    {
      "title": "should only create a single team when using unlimited teams",
      "fullTitle": "#create(teams, settings) should only create a single team when using unlimited teams",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "e8c798ce-e215-411f-98a5-5d193a98e7db",
      "parentUUID": "56a07fb0-92b7-46b0-9aae-166bb5e1b01f",
      "skipped": false
    },
    {
      "title": "should add a team",
      "fullTitle": "#add(teams, settings) should add a team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>teamFactory.add(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "71b5be7b-f3ca-4524-8ece-5c382752e5ca",
      "parentUUID": "3f9b4c05-5645-4c7d-af8e-c52b347863d6",
      "skipped": false
    },
    {
      "title": "should reuse team names specified in settings",
      "fullTitle": "#add(teams, settings) should reuse team names specified in settings",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>teamFactory.add(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);",
      "isRoot": false,
      "uuid": "7a01b1f5-2c81-4134-acba-8552bca816fc",
      "parentUUID": "3f9b4c05-5645-4c7d-af8e-c52b347863d6",
      "skipped": false
    },
    {
      "title": "should factor in team names which are already in use",
      "fullTitle": "#add(teams, settings) should factor in team names which are already in use",
      "timedOut": false,
      "duration": 257,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    teamFactory.add(tc, s);<br>}<br>tc.all.length.should.equal(<span class=\"hljs-number\">1001</span>);<br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    names.push(t.teamName);<br>});<br><span class=\"hljs-keyword\">var</span> uniqueNames = unique(names);<br>names.length.should.equal(uniqueNames.length);",
      "isRoot": false,
      "uuid": "d49a3229-da59-42cb-837d-f652bff09a58",
      "parentUUID": "3f9b4c05-5645-4c7d-af8e-c52b347863d6",
      "skipped": false
    },
    {
      "title": "should return true when team with teamName does exist",
      "fullTitle": "#contains(teamName) should return true when team with teamName does exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(t.teamName).should.be.true();",
      "isRoot": false,
      "uuid": "7c4628f8-ca86-4cbc-97fe-f72e22a665a1",
      "parentUUID": "9bcf0663-5838-41ea-bf0c-5cd8f067bbef",
      "skipped": false
    },
    {
      "title": "should return false when no team with teamName does exist",
      "fullTitle": "#contains(teamName) should return false when no team with teamName does exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(<span class=\"hljs-string\">'other team name'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "f429c3ce-071b-4543-a46f-af486a63812c",
      "parentUUID": "9bcf0663-5838-41ea-bf0c-5cd8f067bbef",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "800fdc42-4105-4885-ae29-5074569adff1",
      "parentUUID": "7b2c406d-90cb-4763-aaf5-68c6526b4e7b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "42382a5a-709d-4547-acf3-32d348a0e8d8",
      "parentUUID": "7b2c406d-90cb-4763-aaf5-68c6526b4e7b",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all.pop();<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "f4aeb7e7-476d-4926-b9ce-fceb3d948c9f",
      "parentUUID": "7b2c406d-90cb-4763-aaf5-68c6526b4e7b",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#length should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.length = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "c60c0960-9a27-484b-a4aa-8855e788c69b",
      "parentUUID": "df86118e-53b2-4da7-b5ec-7424cab815a2",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#length should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "763a44a6-d6bc-43ef-8b83-f56913bbd6a4",
      "parentUUID": "df86118e-53b2-4da7-b5ec-7424cab815a2",
      "skipped": false
    },
    {
      "title": "should add the given team",
      "fullTitle": "#add(team) should add the given team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "252579d5-f6f4-4ede-8201-5e3486fe3612",
      "parentUUID": "9f1f2455-304d-4acf-8c05-907951560bed",
      "skipped": false
    },
    {
      "title": "should error if team with teamName already exists",
      "fullTitle": "#add(team) should error if team with teamName already exists",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.add(t);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "97763815-2d42-4d1d-abbf-f9bc48c15e24",
      "parentUUID": "9f1f2455-304d-4acf-8c05-907951560bed",
      "skipped": false
    },
    {
      "title": "should remove the existing team",
      "fullTitle": "#remove(team) should remove the existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "93f4fc90-c7f7-48c5-bdb6-f293d89ebb21",
      "parentUUID": "b85150cc-d958-4b6c-87ee-f3ff2426b469",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing team",
      "fullTitle": "#remove(team) should not remove the non-existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t1).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "619d5ddc-7f1b-487c-a5ae-f3ecd46012cb",
      "parentUUID": "b85150cc-d958-4b6c-87ee-f3ff2426b469",
      "skipped": false
    },
    {
      "title": "should remove the existing team",
      "fullTitle": "#removeByTeamName(team) should remove the existing team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t.teamName).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "e0318c10-62f4-42f4-b0d2-120b80abbbbd",
      "parentUUID": "38964705-ae22-4a9f-974f-6a0ca055a9b0",
      "skipped": false
    },
    {
      "title": "should ignore team name case",
      "fullTitle": "#removeByTeamName(team) should ignore team name case",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'abc1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(<span class=\"hljs-string\">'ABC1'</span>).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "dd065eee-2caf-4c16-9a10-cc28abb3b365",
      "parentUUID": "38964705-ae22-4a9f-974f-6a0ca055a9b0",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing team",
      "fullTitle": "#removeByTeamName(team) should not remove the non-existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t1.teamName).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "dbf30593-74ea-4bdd-b60d-b50a41102833",
      "parentUUID": "38964705-ae22-4a9f-974f-6a0ca055a9b0",
      "skipped": false
    },
    {
      "title": "should give contestant an id",
      "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) should give contestant an id",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Username'</span>;<br>should(c.id).be.null();<br>tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>should(c.id).not.be.null();",
      "isRoot": false,
      "uuid": "5fdf6754-190d-450f-9b3b-c9790cee4458",
      "parentUUID": "c3ac1813-7f32-4a19-9ccf-db065170f58f",
      "skipped": false
    },
    {
      "title": "should return a valid response",
      "fullTitle": "when teams are full should return a valid response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);",
      "isRoot": false,
      "uuid": "46123431-6b79-4cca-b222-7ab9257416d8",
      "parentUUID": "e71d7d9a-993d-4584-9ec0-607215ead7ec",
      "skipped": false
    },
    {
      "title": "should inquire for team leader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should inquire for team leader",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> inquired = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    inquired = <span class=\"hljs-literal\">true</span>;<br>});<br>r.should.be.true();<br>inquired.should.be.true();",
      "isRoot": false,
      "uuid": "f65f032a-b256-469e-8bea-0f7eae98f63a",
      "parentUUID": "0a6857a0-6b6e-42b9-8066-63201803dc42",
      "skipped": false
    },
    {
      "title": "should not inquire for team leader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should not inquire for team leader",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>tc.all[<span class=\"hljs-number\">0</span>].teamLeader = c1;<br><span class=\"hljs-keyword\">var</span> didNotInquire = <span class=\"hljs-literal\">true</span>;<br>tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    didNotInquire = <span class=\"hljs-literal\">false</span>;<br>});<br>didNotInquire.should.be.true();<br>t.teamLeader.should.equal(c1);",
      "isRoot": false,
      "uuid": "760a322c-a8f1-4ab4-b0ee-7eff9ff4da91",
      "parentUUID": "0a6857a0-6b6e-42b9-8066-63201803dc42",
      "skipped": false
    },
    {
      "title": "should not add contestant as teamLeader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should not add contestant as teamLeader",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should(t.teamLeader).be.null();",
      "isRoot": false,
      "uuid": "80db7d3b-6df4-467b-b68c-74784250a203",
      "parentUUID": "0a6857a0-6b6e-42b9-8066-63201803dc42",
      "skipped": false
    },
    {
      "title": "should not inquire for team leader",
      "fullTitle": "when teamLeader selection is RANDOM should not inquire for team leader",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> notInquired = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    notInquired = <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>r.should.be.true();<br>notInquired.should.be.true();",
      "isRoot": false,
      "uuid": "65a471a9-6e89-44cf-b692-5bd344d7fd1c",
      "parentUUID": "e1537f4a-bf42-43ca-a0ae-6ba0694ff218",
      "skipped": false
    },
    {
      "title": "should automatically add team leader when team is filled",
      "fullTitle": "when teamLeader selection is RANDOM should automatically add team leader when team is filled",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).not.be.null();<br>});",
      "isRoot": false,
      "uuid": "fbd47386-6221-4c44-9e14-1578dda0a286",
      "parentUUID": "e1537f4a-bf42-43ca-a0ae-6ba0694ff218",
      "skipped": false
    },
    {
      "title": "should not automatically add team leader when team is not filled",
      "fullTitle": "when teamLeader selection is RANDOM should not automatically add team leader when team is not filled",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).be.null();<br>});",
      "isRoot": false,
      "uuid": "f5e27928-754e-473c-b8c9-d2231921ddd0",
      "parentUUID": "e1537f4a-bf42-43ca-a0ae-6ba0694ff218",
      "skipped": false
    },
    {
      "title": "should add team when teams are full",
      "fullTitle": "when set to use unlimited teams should add team when teams are full",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "6103328f-5aad-4039-bfb6-69a4b3b0fed6",
      "parentUUID": "a7410ba3-6ede-49f3-a21f-0f39df49c9a3",
      "skipped": false
    },
    {
      "title": "should throw when no team name is given",
      "fullTitle": "when team selection method is PLAYER_CHOICE should throw when no team name is given",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>}).should.throw();",
      "isRoot": false,
      "uuid": "edd80088-d64b-4404-8f9d-ef4ccd1643cb",
      "parentUUID": "c6ff6330-6cd5-45a3-9e2c-faa3ac2fbd0b",
      "skipped": false
    },
    {
      "title": "should add contestant to correct team",
      "fullTitle": "when team selection method is PLAYER_CHOICE should add contestant to correct team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "0899b027-eee1-4ea3-969c-1cd353e21aa3",
      "parentUUID": "c6ff6330-6cd5-45a3-9e2c-faa3ac2fbd0b",
      "skipped": false
    },
    {
      "title": "should not add to full team",
      "fullTitle": "when team selection method is PLAYER_CHOICE should not add to full team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "4b942570-96ee-403a-b5a2-573e80c75b41",
      "parentUUID": "c6ff6330-6cd5-45a3-9e2c-faa3ac2fbd0b",
      "skipped": false
    },
    {
      "title": "should get team of contestant",
      "fullTitle": "getByContestant(contestant) should get team of contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">5</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>    r.should.be.true();<br>});<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">4</span>]);<br>t.should.not.be.null();<br>t.contestants.getById(cc[<span class=\"hljs-number\">4</span>].id).should.equal(cc[<span class=\"hljs-number\">4</span>]);",
      "isRoot": false,
      "uuid": "de22b9a8-17d1-4e1f-a8bb-17f95942c534",
      "parentUUID": "1b9097fd-23b4-48fa-8401-1669b055803f",
      "skipped": false
    },
    {
      "title": "should not get team of contestant",
      "fullTitle": "getByContestant(contestant) should not get team of contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">1</span>);<br>cc[<span class=\"hljs-number\">0</span>].id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">0</span>]);<br>should(t).be.null();",
      "isRoot": false,
      "uuid": "2fd339c8-4b83-4516-8a65-06b61ec72fea",
      "parentUUID": "1b9097fd-23b4-48fa-8401-1669b055803f",
      "skipped": false
    },
    {
      "title": "should get team when team with name exists",
      "fullTitle": "getByTeamName(temName) should get team when team with name exists",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t1 = tc.all[<span class=\"hljs-number\">0</span>];<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(t1.teamName);<br>t.should.equal(t1);",
      "isRoot": false,
      "uuid": "f555e1eb-252d-4529-98ed-da0a2de49e33",
      "parentUUID": "29e8f2cc-a6d6-4724-b68b-f309a79f7012",
      "skipped": false
    },
    {
      "title": "should not get team when team with name does not exist",
      "fullTitle": "getByTeamName(temName) should not get team when team with name does not exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(<span class=\"hljs-string\">'Not a team name that exists'</span>);<br>should(t).be.null();",
      "isRoot": false,
      "uuid": "e5c38c37-a3c5-43c1-b550-b49248a19c16",
      "parentUUID": "29e8f2cc-a6d6-4724-b68b-f309a79f7012",
      "skipped": false
    },
    {
      "title": "should not return full teams",
      "fullTitle": "getAvailable(settings) should not return full teams",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">2</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "206e591d-d54d-4a7d-80d3-c9ac1eda1107",
      "parentUUID": "72b9cd7c-c6a7-4dd4-8c83-d4995531fcfa",
      "skipped": false
    },
    {
      "title": "should return teams with space",
      "fullTitle": "getAvailable(settings) should return teams with space",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "64670f96-6286-4b2f-a86c-2e3448498dc1",
      "parentUUID": "72b9cd7c-c6a7-4dd4-8c83-d4995531fcfa",
      "skipped": false
    },
    {
      "title": "should return teams with unlimited space",
      "fullTitle": "getAvailable(settings) should return teams with unlimited space",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = constants.UNLIMITED;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "256bd353-3e5d-4316-ad06-abbdc2288b73",
      "parentUUID": "72b9cd7c-c6a7-4dd4-8c83-d4995531fcfa",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t._teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
      "isRoot": false,
      "uuid": "869ea927-48a1-4a89-b202-d93d5fab10f6",
      "parentUUID": "225757bb-1c7e-491b-8aa9-a31001b5b028",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t._teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t.teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
      "isRoot": false,
      "uuid": "043eecd0-9307-4931-8ded-fdcc6f85aa5e",
      "parentUUID": "225757bb-1c7e-491b-8aa9-a31001b5b028",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeader should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t.teamLeader = c;<br>t._teamLeader.should.equal(c);",
      "isRoot": false,
      "uuid": "5d7d6128-821d-4ebf-b734-d79bd3bc11f5",
      "parentUUID": "06eb2522-c087-4599-a04a-730c624b890a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeader should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t._teamLeader = c;<br>t.teamLeader.should.equal(c);",
      "isRoot": false,
      "uuid": "efd47ffe-b31f-4640-8e80-be23c017f476",
      "parentUUID": "06eb2522-c087-4599-a04a-730c624b890a",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#score should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "329d2d4b-3ba0-4df1-9b20-47512b5b4273",
      "parentUUID": "9f941648-596b-4630-bc59-f8659a2f2c82",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#score should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br>p._score = <span class=\"hljs-number\">5</span>;<br>p.score.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "96406093-e6b7-4770-abe9-9fdeafe384c2",
      "parentUUID": "9f941648-596b-4630-bc59-f8659a2f2c82",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#contestants should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "a7a07369-9794-4894-8218-975055258d44",
      "parentUUID": "8a819de7-1d2f-4706-9595-18fc70e3f270",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = p.contestants;<br>c.should.be.instanceOf(Participants);",
      "isRoot": false,
      "uuid": "12985f30-bff0-4a14-9e65-55fc0387be79",
      "parentUUID": "8a819de7-1d2f-4706-9595-18fc70e3f270",
      "skipped": false
    },
    {
      "title": "should update the teams score",
      "fullTitle": "when a contestant scores should update the teams score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br>c1.incrementScore();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.incrementScore();<br>c2.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "1b0d7f67-970d-47f5-9f0c-020528c71f2f",
      "parentUUID": "ebad5456-1946-4981-80d1-77a6944e90b1",
      "skipped": false
    },
    {
      "title": "should allow it when no team leader is set",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should allow it when no team leader is set",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.id = <span class=\"hljs-string\">'c1'</span>;<br>t.contestants.add(c);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);",
      "isRoot": false,
      "uuid": "577fb428-1d11-4f4b-aa70-bc149cf9b7e3",
      "parentUUID": "d55d655f-48c5-4643-93ed-223d6424036d",
      "skipped": false
    },
    {
      "title": "should not allow it when a team leader is set",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should not allow it when a team leader is set",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_FULFILLED);",
      "isRoot": false,
      "uuid": "3bbb1e1e-7521-44b9-9201-736773dcb4fd",
      "parentUUID": "d55d655f-48c5-4643-93ed-223d6424036d",
      "skipped": false
    },
    {
      "title": "should not allow it when a contestant is not in team",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should not allow it when a contestant is not in team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_NOT_CONTESTANT);",
      "isRoot": false,
      "uuid": "962fa4c7-d5a6-466d-9081-e81d1cd18790",
      "parentUUID": "d55d655f-48c5-4643-93ed-223d6424036d",
      "skipped": false
    },
    {
      "title": "should allow it when a team leader is set and host override is flagged",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should allow it when a team leader is set and host override is flagged",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">true</span>);<br>r.should.be.true();<br>should.not.exist(m);",
      "isRoot": false,
      "uuid": "9a5c107d-1ee0-4582-b23f-12c5115b249e",
      "parentUUID": "d55d655f-48c5-4643-93ed-223d6424036d",
      "skipped": false
    },
    {
      "title": "should change name when request is valid",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should change name when request is valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "7fb35756-0574-4e63-ac83-5bf9272b38d6",
      "parentUUID": "5ca7f6f4-e7a5-4952-a08c-c09f63d5f318",
      "skipped": false
    },
    {
      "title": "should not change name when setting do not allow it",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should not change name when setting do not allow it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_SETTINGS_NOT_ALLOW);<br>r.should.be.false();",
      "isRoot": false,
      "uuid": "1bed34f9-06fd-4896-a52c-808e6fa7ea5c",
      "parentUUID": "5ca7f6f4-e7a5-4952-a08c-c09f63d5f318",
      "skipped": false
    },
    {
      "title": "should not change name when name contains profanity",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should not change name when name contains profanity",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_CONTAINS_PROFANITY);<br>r.should.be.false();",
      "isRoot": false,
      "uuid": "b8fc6f13-0cb1-457a-a4ea-1f2666b5ed5c",
      "parentUUID": "5ca7f6f4-e7a5-4952-a08c-c09f63d5f318",
      "skipped": false
    },
    {
      "title": "should change name when request is valid",
      "fullTitle": "when host override should change name when request is valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "837750f0-5ae2-4a53-83d2-f5626dd24c25",
      "parentUUID": "c272b722-f447-4c91-834f-b894f6ab01d6",
      "skipped": false
    },
    {
      "title": "should change name when setting do not allow it",
      "fullTitle": "when host override should change name when setting do not allow it",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "815cc041-2afc-4010-b217-91c3f04e1d0a",
      "parentUUID": "c272b722-f447-4c91-834f-b894f6ab01d6",
      "skipped": false
    },
    {
      "title": "should change name when name contains profanity",
      "fullTitle": "when host override should change name when name contains profanity",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "5a1a5fbc-0914-445a-9d6a-a3a307090f65",
      "parentUUID": "c272b722-f447-4c91-834f-b894f6ab01d6",
      "skipped": false
    },
    {
      "title": "should get contestant when contest with username exists",
      "fullTitle": "getContestantByUsername(username) should get contestant when contest with username exists",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(c1.username);<br>c.should.equal(c1);<br>c = t.getContestantByUsername(<span class=\"hljs-string\">'c1abc'</span>);<br>c.should.equal(c1);",
      "isRoot": false,
      "uuid": "83e01e1d-2b1e-49ec-b2cd-7a5b1ecb3b36",
      "parentUUID": "496cc9e9-d931-497b-b48b-9a5226954a15",
      "skipped": false
    },
    {
      "title": "should not get contestant when contest with username does not exist",
      "fullTitle": "getContestantByUsername(username) should not get contestant when contest with username does not exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(<span class=\"hljs-string\">'John Doe'</span>);<br>should(c).be.null();",
      "isRoot": false,
      "uuid": "ef25cc93-4f38-4b69-bae1-f2ef02d37d37",
      "parentUUID": "496cc9e9-d931-497b-b48b-9a5226954a15",
      "skipped": false
    }
  ],
  "allPending": [],
  "allPasses": [
    {
      "title": "should throw on set value",
      "fullTitle": "#wasSuccessful should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.wasSuccessful = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "2a2f1b5a-01bc-479c-9c28-8fd2e977c9c7",
      "parentUUID": "175a59ee-6832-4bc1-b1b8-29b1740a922b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#wasSuccessful should get value",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>r.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "05913f76-414d-4532-8f16-3baece4896ba",
      "parentUUID": "175a59ee-6832-4bc1-b1b8-29b1740a922b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#enquireForTeamLeaderPosition should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r._enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "a86d92db-6521-46cf-8dd5-9a0925c9397b",
      "parentUUID": "c9bb5bf7-6434-4def-9749-94063d90c836",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#enquireForTeamLeaderPosition should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>r.enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "cdec5947-0d63-40f9-831a-b0ee40adbc4b",
      "parentUUID": "c9bb5bf7-6434-4def-9749-94063d90c836",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#errorMessage should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    r.errorMessage = <span class=\"hljs-string\">'test'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "fdadd98e-0a2f-4a5c-ae59-145eb72935e0",
      "parentUUID": "605142f9-f7f3-4278-9e71-5fa8d8e5335f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#errorMessage should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r._errorMessage = <span class=\"hljs-string\">'errorMessage_test'</span>;<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'errorMessage_test'</span>);",
      "isRoot": false,
      "uuid": "e62189a8-72fb-46b2-9f7d-844a64753723",
      "parentUUID": "605142f9-f7f3-4278-9e71-5fa8d8e5335f",
      "skipped": false
    },
    {
      "title": "should change the state to not successful",
      "fullTitle": "#setNotSuccessful(errorMessage) should change the state to not successful",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> r = <span class=\"hljs-keyword\">new</span> AddContestantResponse();<br>r.setNotSuccessful(<span class=\"hljs-string\">'Test error message'</span>);<br>r.wasSuccessful.should.be.false();<br>r.errorMessage.should.equal(<span class=\"hljs-string\">'Test error message'</span>);",
      "isRoot": false,
      "uuid": "9c31bf2a-c340-4d9f-89ca-feb509e248fc",
      "parentUUID": "cad4c15c-03ce-44a0-9542-dca5a45f496b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'username_test'</span>;<br>c._username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
      "isRoot": false,
      "uuid": "9bbee7fd-488c-4169-a9a0-0c58bce77865",
      "parentUUID": "a8677fa0-79f2-40fd-84a4-dce7521d4fcb",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._username = <span class=\"hljs-string\">'username_test'</span>;<br>c.username.should.equal(<span class=\"hljs-string\">'username_test'</span>);",
      "isRoot": false,
      "uuid": "10cedf3c-56af-4436-8560-cddca015372e",
      "parentUUID": "a8677fa0-79f2-40fd-84a4-dce7521d4fcb",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#score should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    c.score = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "c51b77cd-7dd7-42bb-ba93-91098129a5b0",
      "parentUUID": "6f0fa397-5258-45f7-8eef-be0045a3b80d",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#score should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c._score = <span class=\"hljs-number\">1</span>;<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "26f78167-c829-4e6a-8d46-190fa9ff9a7f",
      "parentUUID": "6f0fa397-5258-45f7-8eef-be0045a3b80d",
      "skipped": false
    },
    {
      "title": "should increment the contestant's score",
      "fullTitle": "#incrementScore() should increment the contestant's score",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.incrementScore();<br>c.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "1a551fe4-48c0-4781-a831-d8babd869c12",
      "parentUUID": "9556573a-8bfc-4aef-8a3d-66c3b463ecdd",
      "skipped": false
    },
    {
      "title": "should emit scoreUpdate event",
      "fullTitle": "#incrementScore() should emit scoreUpdate event",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.on(<span class=\"hljs-string\">'scoreUpdate'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    done();<br>});<br>c.incrementScore();",
      "isRoot": false,
      "uuid": "335535cf-e2ba-40d8-b34f-3ef7d6604f84",
      "parentUUID": "9556573a-8bfc-4aef-8a3d-66c3b463ecdd",
      "skipped": false
    },
    {
      "title": "should return a non-null non-empty key",
      "fullTitle": "#generateSessionId() should return a non-null non-empty key",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateSessionId().should.not.be.equal(<span class=\"hljs-string\">''</span>).and.not.be.equal(<span class=\"hljs-literal\">null</span>);",
      "isRoot": false,
      "uuid": "a19c5235-fc49-4b59-bdaa-7b4de83ee14a",
      "parentUUID": "7bc20167-9816-4bcc-91fe-318c25faf9a8",
      "skipped": false
    },
    {
      "title": "should return a id of the correct length",
      "fullTitle": "#generateSessionId() should return a id of the correct length",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateSessionId()<br>    .length.should.be.Number().and.equal(idUtility.keyLength);",
      "isRoot": false,
      "uuid": "bdda2d4c-4ca1-439c-b21e-6d0cd6c8fad8",
      "parentUUID": "7bc20167-9816-4bcc-91fe-318c25faf9a8",
      "skipped": false
    },
    {
      "title": "should record id so it cannot be reused.",
      "fullTitle": "#generateSessionId() should record id so it cannot be reused.",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> id = idUtility.generateSessionId();<br>idUtility._sessionKeysInUse.find(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">cachedId</span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> cachedId === id;<br>}).should.equal(id);",
      "isRoot": false,
      "uuid": "60139a5f-5ff0-42d8-9e95-deae766950a2",
      "parentUUID": "7bc20167-9816-4bcc-91fe-318c25faf9a8",
      "skipped": false
    },
    {
      "title": "should return a UUID",
      "fullTitle": "#generateParticipantId() should return a UUID",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.generateParticipantId()<br>    .should.match(<span class=\"hljs-regexp\">/^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}$/i</span>);",
      "isRoot": false,
      "uuid": "be159f0f-c62e-4264-9e94-d1a666fae66f",
      "parentUUID": "82b087e9-13aa-450a-8c95-bf0506e58a47",
      "skipped": false
    },
    {
      "title": "should store the ids to stop reuse",
      "fullTitle": "#registerSessionIdsInUse(ids) should store the ids to stop reuse",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.length.should.be.aboveOrEqual(<span class=\"hljs-number\">2</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "084c0126-2cae-4337-b37d-0ce0471272af",
      "parentUUID": "374f9157-26a0-4287-9a5f-7760b55f3423",
      "skipped": false
    },
    {
      "title": "should return a UUID",
      "fullTitle": "#releaseSessionId(id) should return a UUID",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "idUtility.registerSessionIdsInUse([<span class=\"hljs-string\">'111AAA'</span>, <span class=\"hljs-string\">'222AAA'</span>]);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'222AAA'</span>).should.be.aboveOrEqual(<span class=\"hljs-number\">0</span>);<br>idUtility.releaseSessionId(<span class=\"hljs-string\">'111AAA'</span>);<br>idUtility._sessionKeysInUse.indexOf(<span class=\"hljs-string\">'111AAA'</span>).should.equal(-<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "e301ea46-4d6b-4e9f-b6c2-bb50dd16cc14",
      "parentUUID": "ed513e25-86aa-4a6c-b9cd-f3eb5122326f",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#action should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.data._action.should.equal(constants.buzzerActionCommands.RESET);",
      "isRoot": false,
      "uuid": "1cf1b183-6df4-4041-820a-1b37bddf1cfd",
      "parentUUID": "587cafaa-cf45-411c-a4a4-6d29a2fa1cb1",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#action should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._action = constants.buzzerActionCommands.RESET;<br>m.action.should.equal(constants.buzzerActionCommands.RESET);",
      "isRoot": false,
      "uuid": "70ae1388-5936-43bc-ab9a-8ae8f6f6b60f",
      "parentUUID": "587cafaa-cf45-411c-a4a4-6d29a2fa1cb1",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "55743c35-d8be-4e48-a509-1e69c01d5bdb",
      "parentUUID": "c444cd40-673f-497d-878f-f3f37391371a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "27a49512-ff44-4529-a8dc-7bc29e825633",
      "parentUUID": "c444cd40-673f-497d-878f-f3f37391371a",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "4f4ae9a6-8493-43f1-a9f6-d66339e7d0d4",
      "parentUUID": "09743c5c-ddf7-4a95-a3da-5bdf8e9d7a13",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "36c7dd37-5742-4dc5-b903-481976466543",
      "parentUUID": "09743c5c-ddf7-4a95-a3da-5bdf8e9d7a13",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = constants.buzzerActionCommands.RESET;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'yyy123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "bfdd698d-5ea4-42f2-9bf9-60c123a03a1d",
      "parentUUID": "464fc793-4d8c-40f6-ae54-873a8c42ea7c",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> BuzzerActionCommandMessage();<br>m.action = <span class=\"hljs-number\">99</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "d37bef05-bbbf-4229-a050-e629b8096b6b",
      "parentUUID": "464fc793-4d8c-40f6-ae54-873a8c42ea7c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "04b847e0-3630-4364-bf25-7dc76da5c4f3",
      "parentUUID": "1af29d1d-2aab-41c3-85e5-52c0ca2cc024",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f03f7655-7087-4a71-8c3a-ccb6a1c1604c",
      "parentUUID": "1af29d1d-2aab-41c3-85e5-52c0ca2cc024",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "56345c81-879a-4d34-a7a6-ed50cfc40435",
      "parentUUID": "4724948e-8cfe-49cc-933c-4726a5fa6f2e",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "9c98582f-9ce4-4292-bc5a-839dd8d18fe6",
      "parentUUID": "4724948e-8cfe-49cc-933c-4726a5fa6f2e",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "30fa1fe5-7dac-4f38-9685-2b7585bd0ea0",
      "parentUUID": "d1cda390-166d-4b8f-9a2d-49c72c18ad32",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantBuzzerPressMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "b4f28044-a7e7-42ca-9b3e-cdfa06d79fa7",
      "parentUUID": "d1cda390-166d-4b8f-9a2d-49c72c18ad32",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.username = <span class=\"hljs-string\">'test123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
      "isRoot": false,
      "uuid": "51979935-5073-426a-a674-089193cb5c9b",
      "parentUUID": "f9019739-131a-4250-93aa-a7bf08805d0c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._username = <span class=\"hljs-string\">'test123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'test123'</span>);",
      "isRoot": false,
      "uuid": "9980878e-ebbb-4ed5-bcbb-43c7e2cc00c7",
      "parentUUID": "f9019739-131a-4250-93aa-a7bf08805d0c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "82be36e0-a766-4ea7-a8f1-2cde223744b8",
      "parentUUID": "44473353-f5c4-4dd5-b2a0-8aeb7fbc0b35",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "ac65f726-b284-4a62-8b76-39973540922a",
      "parentUUID": "44473353-f5c4-4dd5-b2a0-8aeb7fbc0b35",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "98985e34-6422-45fb-a7bb-4d5bd990b5e6",
      "parentUUID": "837133bb-7a22-48b8-9cab-1d240ab84912",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "1089eb5e-f265-4b7e-b3c7-a2fbc0974a18",
      "parentUUID": "837133bb-7a22-48b8-9cab-1d240ab84912",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "503d93ab-a2d8-44f4-bbbf-c33fdbdeef47",
      "parentUUID": "e20aa908-6389-4818-a65f-f545922dcadd",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 6,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "dc074278-d3ec-4343-a334-6194940322aa",
      "parentUUID": "e20aa908-6389-4818-a65f-f545922dcadd",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#wasSuccessful should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.data._wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "9f65150c-be7d-40f2-a507-9bbc33b116a2",
      "parentUUID": "29ac6672-8e10-406d-b1d1-956a7996925c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#wasSuccessful should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "37b5f7d9-afb9-49d0-a768-d579960589f2",
      "parentUUID": "29ac6672-8e10-406d-b1d1-956a7996925c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#enquireForTeamLeaderPosition should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.data._enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "a662671b-d816-43dc-8166-ca710f57363c",
      "parentUUID": "70c89d7d-da8e-42a4-8646-89a9365be3dc",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#enquireForTeamLeaderPosition should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._enquireForTeamLeaderPosition = <span class=\"hljs-literal\">true</span>;<br>m.enquireForTeamLeaderPosition.should.be.true();",
      "isRoot": false,
      "uuid": "78cd753c-f29d-462b-ac6c-f5bd4617982d",
      "parentUUID": "70c89d7d-da8e-42a4-8646-89a9365be3dc",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#failedRequestReason should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.data._failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
      "isRoot": false,
      "uuid": "aa775d8b-9d56-4087-866a-d38694edfc88",
      "parentUUID": "e8f8421c-a323-4680-86ef-e2522301b1a5",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#failedRequestReason should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._failedRequestReason = <span class=\"hljs-string\">'session full'</span>;<br>m.failedRequestReason.should.equal(<span class=\"hljs-string\">'session full'</span>);",
      "isRoot": false,
      "uuid": "385281a5-cf9c-41a7-8d49-46cda59a9109",
      "parentUUID": "e8f8421c-a323-4680-86ef-e2522301b1a5",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "6d6e9e11-8365-4a3b-8c8d-e2496e5afb90",
      "parentUUID": "95c83dd8-dec7-4859-9055-a4867649dcd8",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "259c0267-7644-4f45-8615-e2eb661a2bfd",
      "parentUUID": "95c83dd8-dec7-4859-9055-a4867649dcd8",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#mustChooseTeam should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.data._mustChooseTeam.should.be.true();",
      "isRoot": false,
      "uuid": "a2c2abaa-bb16-4997-a8c5-741106f811fa",
      "parentUUID": "dd6ca473-c45d-404c-bbec-fb3a280fc970",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#mustChooseTeam should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._mustChooseTeam = <span class=\"hljs-literal\">true</span>;<br>m.mustChooseTeam.should.be.true();",
      "isRoot": false,
      "uuid": "a4437fb0-5fe4-4a4f-8a52-cbcc04a2764a",
      "parentUUID": "dd6ca473-c45d-404c-bbec-fb3a280fc970",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teams should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.data._teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
      "isRoot": false,
      "uuid": "0f2c17b7-1910-4238-be23-a9d6a67245ab",
      "parentUUID": "bebb6898-731b-4458-8ebf-0fd1d02d9ab3",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teams should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.data._teams = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>m.teams[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'t1'</span>);",
      "isRoot": false,
      "uuid": "5746c061-bc1f-4b39-bc7a-e5ea66e640e1",
      "parentUUID": "bebb6898-731b-4458-8ebf-0fd1d02d9ab3",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.wasSuccessful = <span class=\"hljs-literal\">true</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "dd97b2a2-28bf-43d2-86fb-7ad6fec9a864",
      "parentUUID": "879c4a09-7de6-4150-b310-72c2f5d62305",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ContestantJoinResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "d0689857-f21a-4c8e-9933-5407fe0cddc6",
      "parentUUID": "879c4a09-7de6-4150-b310-72c2f5d62305",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#settings should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.data._settings.should.equal(s);",
      "isRoot": false,
      "uuid": "33b7f1e5-88a2-4cf3-b737-9b4dbd318017",
      "parentUUID": "c0e5136f-fbe3-4f50-8e4a-fbe809333135",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#settings should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.data._settings = s;<br>m.settings.should.equal(s);",
      "isRoot": false,
      "uuid": "c075f7d2-1627-4ab1-89b2-ac1e1aa4fa31",
      "parentUUID": "c0e5136f-fbe3-4f50-8e4a-fbe809333135",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>m.settings = s;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "891f990f-e664-4ba1-90fb-df543b404798",
      "parentUUID": "68c23330-32e8-4a97-8702-67d4c98971d2",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionMessage();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-string\">'invalid'</span>;<br>m.settings = s;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "e2a41389-b842-4030-8da7-6238d25bde23",
      "parentUUID": "68c23330-32e8-4a97-8702-67d4c98971d2",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "1353a469-b5bf-4001-860b-93305cd43fcb",
      "parentUUID": "471ce376-80ef-4d9f-ade3-ad8773ac8aaa",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "8546389a-a176-4227-b0fb-780042ce5f0f",
      "parentUUID": "471ce376-80ef-4d9f-ade3-ad8773ac8aaa",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b775bfb3-5cda-4afc-b258-80ad52cffb17",
      "parentUUID": "0812f20b-29e2-4e09-bf33-0afe691c3dbb",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "da08a0f2-3188-4d8e-b1c4-362003db1932",
      "parentUUID": "0812f20b-29e2-4e09-bf33-0afe691c3dbb",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "3d285a97-4f72-43c7-bf17-1b974421385c",
      "parentUUID": "92a9de38-aab2-4bba-8efe-abe8f550d7f0",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> CreateSessionResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "550e24e7-9656-4d79-b59b-02f0bff7a381",
      "parentUUID": "92a9de38-aab2-4bba-8efe-abe8f550d7f0",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#message should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "a741fbd0-1763-41ac-92af-79acc45390f5",
      "parentUUID": "8f13482a-f037-4eda-85ab-c221be5b0466",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#message should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.data._error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.error.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "942bda2b-ed55-4aa2-8171-e2309114818d",
      "parentUUID": "8f13482a-f037-4eda-85ab-c221be5b0466",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.error = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "34975257-e306-4e13-af47-96c89dfcba13",
      "parentUUID": "58086414-7477-4738-8c9f-f462f475a037",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ErrorMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "52180a98-ab80-4c62-a4e6-282269c764b8",
      "parentUUID": "58086414-7477-4738-8c9f-f462f475a037",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionName should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "1abf4891-d720-4f36-b866-7a7e80de35ad",
      "parentUUID": "7d7c0e67-fe90-4dc9-bfc7-d5d1ac6658e1",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "ad5cc62c-f84a-4b61-aa85-3fc6fe8e9779",
      "parentUUID": "7d7c0e67-fe90-4dc9-bfc7-d5d1ac6658e1",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxTeams should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxTeams = <span class=\"hljs-number\">5</span>;<br>m.data._maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "ef1b5ced-d74f-4b00-8bd5-f71c2493f7d4",
      "parentUUID": "d208400c-17a7-45be-8fce-df694627a3a6",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxTeams should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxTeams = <span class=\"hljs-number\">5</span>;<br>m.maxTeams.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "3b216d65-2e42-4366-8172-afc44a963a70",
      "parentUUID": "d208400c-17a7-45be-8fce-df694627a3a6",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamSize should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.teamSize = <span class=\"hljs-number\">5</span>;<br>m.data._teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "c87f1f98-e4a2-4df5-b107-c4d3f1226a95",
      "parentUUID": "4e700cbb-b49f-4936-a591-7203fa3392f4",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamSize should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._teamSize = <span class=\"hljs-number\">5</span>;<br>m.teamSize.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "38e74c31-25b7-4a7d-bda6-06676833f1a6",
      "parentUUID": "4e700cbb-b49f-4936-a591-7203fa3392f4",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxContestants should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.maxContestants = <span class=\"hljs-number\">5</span>;<br>m.data._maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "f2adde54-1a05-465a-bd01-eb3281e5efe3",
      "parentUUID": "07dfae1d-63b4-4c77-b841-a69381e1361c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxContestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._maxContestants = <span class=\"hljs-number\">5</span>;<br>m.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "19969412-3574-4847-8820-c5311b08857f",
      "parentUUID": "07dfae1d-63b4-4c77-b841-a69381e1361c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "dc043edc-9763-42fb-8d67-66a2d7ad7aae",
      "parentUUID": "d513f9ee-08b3-47c1-9b92-27e2e8bd26f0",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "92562c45-2306-4767-807e-69d5e4c038da",
      "parentUUID": "d513f9ee-08b3-47c1-9b92-27e2e8bd26f0",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f7e5ccc8-eed3-4165-91a0-73e8ab3093da",
      "parentUUID": "36b8b68b-20ec-4d03-bf9a-1c426012fb18",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "98709433-54f9-488b-abd4-69a5a730af1a",
      "parentUUID": "36b8b68b-20ec-4d03-bf9a-1c426012fb18",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "02d06146-1676-458f-bb5c-367d365c8c11",
      "parentUUID": "90ea308f-b04b-43db-82ca-bdcf78fae034",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostSettingsUpdateMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "7f78f73a-471d-41ce-9cb3-f98006a51205",
      "parentUUID": "90ea308f-b04b-43db-82ca-bdcf78fae034",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "dced86c5-3272-4fae-9dae-24da8892d083",
      "parentUUID": "33650f99-f14f-40bc-91b0-979498058789",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "87089eb0-c52e-4249-a87e-b9fc3d94b08a",
      "parentUUID": "33650f99-f14f-40bc-91b0-979498058789",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeaderUsername should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "00624152-4eab-4a95-8995-78fe4c4774b0",
      "parentUUID": "2c4f566d-0d6f-47bd-9405-52a084eeac03",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeaderUsername should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamLeaderUsername.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f852bebf-a476-4ca5-96a8-1841fc50d31b",
      "parentUUID": "2c4f566d-0d6f-47bd-9405-52a084eeac03",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "818c3e7a-50ee-49ae-bbca-9d4914eb797c",
      "parentUUID": "d8a419cc-32d7-4c93-99fa-aab95208ac8f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "ba7f006c-80dd-48dd-8883-1c3b7d463d36",
      "parentUUID": "d8a419cc-32d7-4c93-99fa-aab95208ac8f",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "ff6b912b-3247-4d39-baea-12f49502a034",
      "parentUUID": "4ac55368-1f72-4c0b-9399-e7ca25ef618f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "56365b68-d03c-4e65-8921-0683e1922607",
      "parentUUID": "4ac55368-1f72-4c0b-9399-e7ca25ef618f",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamLeaderUsername = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "90481979-019b-48b4-bf5e-713189310cde",
      "parentUUID": "03c851e4-1e78-44de-9c09-9cc109c5e232",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamLeaderSetRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "db13a1b4-48b2-4ad5-a773-c0b2a774eb7e",
      "parentUUID": "03c851e4-1e78-44de-9c09-9cc109c5e232",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameFrom should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "9ce48317-a566-4ca9-bc47-a6e6a73cfe79",
      "parentUUID": "b8f0b2ec-4b9f-470c-a22b-f0868756678f",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameFrom should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameFrom = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameFrom.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b7d526ab-48b6-4bf3-8a85-51285fc0c849",
      "parentUUID": "b8f0b2ec-4b9f-470c-a22b-f0868756678f",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameTo should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "209e588a-4dd4-416c-a50e-2f0944762a7b",
      "parentUUID": "8d74fbb9-f779-4d11-9b8d-c2217504ea4b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameTo should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamNameTo.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "31c25a88-8c2d-454f-8b95-270ebf9b0ac7",
      "parentUUID": "8d74fbb9-f779-4d11-9b8d-c2217504ea4b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "8744e467-e985-45d4-aa25-d268d343b56c",
      "parentUUID": "b4ee1018-371e-404b-9eeb-91881ac492f4",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b28b785b-4014-4ecd-8c5e-e073127263bc",
      "parentUUID": "b4ee1018-371e-404b-9eeb-91881ac492f4",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "a13703c0-8678-4343-8c1a-3b98641492ed",
      "parentUUID": "34a6d7c8-9b06-41b8-9dc4-14b586da93f9",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "cdc13eab-35b6-4e6d-943f-5244d6e69850",
      "parentUUID": "34a6d7c8-9b06-41b8-9dc4-14b586da93f9",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.teamNameFrom = <span class=\"hljs-string\">'123xyz'</span>;<br>m.teamNameTo = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.hostId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "37c3825b-408e-4409-be70-401e55b7379c",
      "parentUUID": "a679ceb1-6dcf-42aa-be2c-68cc53f6dc9e",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 4,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> HostTeamNameUpdateRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "a9cdd1ff-7b67-42fb-a5fc-d58d8850c2a4",
      "parentUUID": "a679ceb1-6dcf-42aa-be2c-68cc53f6dc9e",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#decision should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.data._decision.should.be.true();",
      "isRoot": false,
      "uuid": "6c3bbebc-71a4-4c08-b3dc-9714941012b7",
      "parentUUID": "40086d1a-b486-40d4-96b9-d3526101855e",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#decision should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._decision = <span class=\"hljs-literal\">true</span>;<br>m.decision.should.be.true();",
      "isRoot": false,
      "uuid": "b5b4f560-5eca-4782-aec0-1bb016872138",
      "parentUUID": "40086d1a-b486-40d4-96b9-d3526101855e",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "5d104e47-b112-42b8-89e8-effadc373cab",
      "parentUUID": "60fdd4a2-bbc9-41b9-8407-dec1fbbaf2d4",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "2cba9029-24bc-4ab8-88df-429313c5d5c4",
      "parentUUID": "60fdd4a2-bbc9-41b9-8407-dec1fbbaf2d4",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "3663e9e3-37b2-4ec7-9d56-53db4022a74f",
      "parentUUID": "1c1db983-ae10-4a49-8a07-15c937d86a4d",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "6f1ad384-1fe5-482a-b0fb-d23a4c98e782",
      "parentUUID": "1c1db983-ae10-4a49-8a07-15c937d86a4d",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.decision = <span class=\"hljs-literal\">true</span>;<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "5a5fe56c-ad69-4873-b7bb-2bf37b32d6d5",
      "parentUUID": "b1d872bf-e4dc-4f4e-8785-cfb063ef8935",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> InquireTeamLeaderResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "e1b126b7-af14-4d5a-a642-35febc714414",
      "parentUUID": "b1d872bf-e4dc-4f4e-8785-cfb063ef8935",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#gameState should get value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.gameState.should.be.Object();",
      "isRoot": false,
      "uuid": "84c58afb-0778-4a34-a1f5-8a2231da7747",
      "parentUUID": "4db23fc6-b305-4ff0-937e-206c3df670d6",
      "skipped": false
    },
    {
      "title": "should not have ids",
      "fullTitle": "#gameState should not have ids",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState.id);<br>should.not.exist(m.gameState.host.id);",
      "isRoot": false,
      "uuid": "539564d3-f1a6-4a04-9130-d50c0bed1e9b",
      "parentUUID": "4db23fc6-b305-4ff0-937e-206c3df670d6",
      "skipped": false
    },
    {
      "title": "should promote private field _ to public field",
      "fullTitle": "#gameState should promote private field _ to public field",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>should.not.exist(m.gameState._host);<br>should.not.exist(m.gameState._settings);<br>should.exist(m.gameState.host);<br>should.exist(m.gameState.settings);<br>should.exist(m.gameState.settings.teamLeaderSelectionMethod);",
      "isRoot": false,
      "uuid": "059c74e8-fc3b-4f12-a3ff-91d78448b56d",
      "parentUUID": "4db23fc6-b305-4ff0-937e-206c3df670d6",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.populate(session);<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "86b5eb28-fb76-4e2e-b3f2-3fd6a471a691",
      "parentUUID": "fb076ee7-adaa-489f-ac18-840206e36c81",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> ObserverUpdateMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "18c92979-8a7a-47ea-b091-5e4157ea785b",
      "parentUUID": "fb076ee7-adaa-489f-ac18-840206e36c81",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#rejoinAs should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.rejoinAs = constants.rejoinAs.HOST;<br>m.data._rejoinAs.should.equal(constants.rejoinAs.HOST);",
      "isRoot": false,
      "uuid": "6eb20fa6-1d18-497d-8ea4-04884f7b8dfe",
      "parentUUID": "69e880fa-8f9f-4572-81ac-8db50c1d74ad",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#rejoinAs should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._rejoinAs = constants.rejoinAs.HOST;<br>m.rejoinAs.should.equal(constants.rejoinAs.HOST);",
      "isRoot": false,
      "uuid": "9228216a-7b53-4690-899e-6a0c8b093c89",
      "parentUUID": "69e880fa-8f9f-4572-81ac-8db50c1d74ad",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "c065773c-cdf7-42d6-9d5c-7ef44ef98c21",
      "parentUUID": "7085797e-c871-4929-93cd-a0a61ca27b47",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "e379d55a-e719-4991-8f2f-420f5e877f13",
      "parentUUID": "7085797e-c871-4929-93cd-a0a61ca27b47",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#participantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "f5d2659d-cf1b-483b-9bfc-638580559739",
      "parentUUID": "6f386603-1d65-400b-8e04-79fc53cb1be1",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#participantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "5c19e2e5-fc8e-4dc8-ab94-38a7bb4e2aec",
      "parentUUID": "6f386603-1d65-400b-8e04-79fc53cb1be1",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.rejoinAs = constants.rejoinAs.OBSERVER;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "ef3d0cf7-4695-4258-ac15-16a2015f61f1",
      "parentUUID": "eda54633-b83f-4a54-888a-b63077ed5f2d",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RejoinSessionMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "8d9bb664-e638-47c4-9cd4-84da1b093abf",
      "parentUUID": "eda54633-b83f-4a54-888a-b63077ed5f2d",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#username should set value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "5bb63dc6-5041-4906-a643-187bf3d4f9db",
      "parentUUID": "d58f8620-61ad-4ff8-bc7a-a107d8fe2ac4",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#username should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.username.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "1127fb41-49c8-4c14-941b-5c253d9198fc",
      "parentUUID": "d58f8620-61ad-4ff8-bc7a-a107d8fe2ac4",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "c2364b8a-1da3-48f1-b264-1cb1ad088808",
      "parentUUID": "b6239fa6-d5ff-4eed-a49b-4980b6b109c6",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "b93db19c-00ba-4f08-8ebd-ab21fad618e0",
      "parentUUID": "b6239fa6-d5ff-4eed-a49b-4980b6b109c6",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.username = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "d4f06e68-45dc-4869-8077-36051fa48489",
      "parentUUID": "a63a6caa-a79a-4c5a-b400-8f7e4ce588e6",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> RoundWonMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "ec0b0b08-7f2c-4f01-8fe8-2310ef162b6d",
      "parentUUID": "a63a6caa-a79a-4c5a-b400-8f7e4ce588e6",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionCompleted();<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "a662714a-2f1b-4dc2-a464-a1ab50693eb2",
      "parentUUID": "b3e6adeb-6e4e-4500-9115-8ec6bca7c7ba",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "8246c2c1-db7a-406d-8aa6-dda7dc2d41ee",
      "parentUUID": "04a78c95-c220-4c67-81ed-41bf0b572115",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "4829d6f2-48c7-4520-8730-e622f2238ea0",
      "parentUUID": "04a78c95-c220-4c67-81ed-41bf0b572115",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hostId should set value",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "1adba94b-0c70-4c2d-8c20-6400c0a7ac26",
      "parentUUID": "2007479a-2aa3-48b9-b4a4-f33ec18e6f9c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hostId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.data._hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "efbd65e6-cc21-4450-9640-0bca35dd993b",
      "parentUUID": "2007479a-2aa3-48b9-b4a4-f33ec18e6f9c",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.hostId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "dfe790c2-c72b-4fc3-a298-cd8ba87269fa",
      "parentUUID": "b94a2ee2-1579-4b15-aefd-2be7ca55b695",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionComplete();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "b86df7aa-8bdf-48f7-8025-d95b93addd8e",
      "parentUUID": "b94a2ee2-1579-4b15-aefd-2be7ca55b695",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "5d1f8715-8297-4fcd-b98c-76c752a8e1cf",
      "parentUUID": "d3cab98b-213f-4602-963c-f303d63fd917",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "2120c483-5400-4ae0-81bd-cb4ee7e767e8",
      "parentUUID": "d3cab98b-213f-4602-963c-f303d63fd917",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#participantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "2153aa21-b468-48ed-9fdf-d4250b7ee1d8",
      "parentUUID": "551591d6-ee1b-4557-a61f-392d55969de3",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#participantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.data._participantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.participantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "32a18f98-5602-4df8-ac71-060b65d351ac",
      "parentUUID": "551591d6-ee1b-4557-a61f-392d55969de3",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "3030c299-99b0-494a-88b4-6ec5ad8df3a2",
      "parentUUID": "36025eef-f19b-44a2-bbf1-a41c05036322",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "bc9b8c84-eaec-42e3-904e-237a080ff325",
      "parentUUID": "36025eef-f19b-44a2-bbf1-a41c05036322",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#info should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.should.be.Object();",
      "isRoot": false,
      "uuid": "987afa86-5157-4768-b2e2-4b2b47210973",
      "parentUUID": "c74c1948-30f2-41f4-8fb6-6a13e9a4aba3",
      "skipped": false
    },
    {
      "title": "should not have ids",
      "fullTitle": "#info should not have ids",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.info.host.should.not.be.null();<br>should.not.exist(m.info.host.id);",
      "isRoot": false,
      "uuid": "eb570863-adc6-4546-837a-d193e8e49ab1",
      "parentUUID": "c74c1948-30f2-41f4-8fb6-6a13e9a4aba3",
      "skipped": false
    },
    {
      "title": "should promote private field _ to public field",
      "fullTitle": "#info should promote private field _ to public field",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>should.not.exist(m.info._host);<br>should.not.exist(m.info._session);<br>should.exist(m.info.host);<br>should.exist(m.info.session);<br>should.exist(m.info.session.settings.teamLeaderSelectionMethod);",
      "isRoot": false,
      "uuid": "deedba89-72c5-45e5-8b8b-30555ecf260d",
      "parentUUID": "c74c1948-30f2-41f4-8fb6-6a13e9a4aba3",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.populate(host, <span class=\"hljs-literal\">null</span>, session);<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "08682076-7555-4e5c-8034-2210560a075a",
      "parentUUID": "5da711b2-61a6-44af-8777-42f25ba71ded",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SessionInformationResponseMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "e25137f4-33e0-4107-aff9-c3573dfc8f69",
      "parentUUID": "5da711b2-61a6-44af-8777-42f25ba71ded",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "014ebb8b-3ea5-4483-87c9-62353fee6f27",
      "parentUUID": "804aa5ca-8e15-4fc9-ac96-4ff258ea2bd0",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.teamName.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "beaa46c5-7ccf-4198-9b35-56921e1b04a9",
      "parentUUID": "804aa5ca-8e15-4fc9-ac96-4ff258ea2bd0",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "168d8eb0-9fe1-4e24-8826-f26963bd8de5",
      "parentUUID": "89ec7fe4-9d85-49f9-b3f4-1836ec6ae43c",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._sessionId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "525ce239-a9c1-4780-a060-3fb5c261b0d9",
      "parentUUID": "89ec7fe4-9d85-49f9-b3f4-1836ec6ae43c",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#contestantId should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.data._contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "0a1bb933-63d1-4acd-a6e9-38d9fa00dc5d",
      "parentUUID": "7ec09368-7786-46e2-8d7f-3ed9f7a9386b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestantId should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.data._contestantId = <span class=\"hljs-string\">'xyz123'</span>;<br>m.contestantId.should.equal(<span class=\"hljs-string\">'xyz123'</span>);",
      "isRoot": false,
      "uuid": "a59ae971-2918-4250-805c-e5307bd93962",
      "parentUUID": "7ec09368-7786-46e2-8d7f-3ed9f7a9386b",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.teamName = <span class=\"hljs-string\">'xyz123'</span>;<br>m.sessionId = <span class=\"hljs-string\">'1234'</span>;<br>m.contestantId = <span class=\"hljs-string\">'2jj'</span>;<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "67607368-51e7-40d0-82d7-f246a875a293",
      "parentUUID": "7ba5657f-484a-4a31-bf38-655415fe210e",
      "skipped": false
    },
    {
      "title": "should return false when invalid",
      "fullTitle": "#isValid() should return false when invalid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SetTeamNameRequestMessage();<br>m.isValid().should.be.false();",
      "isRoot": false,
      "uuid": "5e557279-0548-40a2-85a4-092b0f18957e",
      "parentUUID": "7ba5657f-484a-4a31-bf38-655415fe210e",
      "skipped": false
    },
    {
      "title": "should return true when valid",
      "fullTitle": "#isValid() should return true when valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> m = <span class=\"hljs-keyword\">new</span> SuccessMessage();<br>m.isValid().should.be.true();",
      "isRoot": false,
      "uuid": "67ec9361-227f-459d-be64-02dafd040b27",
      "parentUUID": "70d7457a-f18d-44fb-9bc1-e281ffa32be0",
      "skipped": false
    },
    {
      "title": "should return false when not referenced",
      "fullTitle": "#isInstanceAndTypeOf() should return false when not referenced",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf().should.be.false();",
      "isRoot": false,
      "uuid": "b43b6888-b60e-4681-b947-d89c9ff533d3",
      "parentUUID": "c4b7e7b5-d426-469a-ace7-359b9f5a5d8e",
      "skipped": false
    },
    {
      "title": "should return false when null",
      "fullTitle": "#isInstanceAndTypeOf() should return false when null",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-literal\">null</span>, <span class=\"hljs-string\">''</span>).should.be.false();",
      "isRoot": false,
      "uuid": "ee97834f-013b-4b50-9f62-6f2f13735756",
      "parentUUID": "c4b7e7b5-d426-469a-ace7-359b9f5a5d8e",
      "skipped": false
    },
    {
      "title": "should return false when not the correct type",
      "fullTitle": "#isInstanceAndTypeOf() should return false when not the correct type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-string\">''</span>, <span class=\"hljs-string\">'Int'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "d0342212-38f8-4917-99b5-9feaf86cc39b",
      "parentUUID": "c4b7e7b5-d426-469a-ace7-359b9f5a5d8e",
      "skipped": false
    },
    {
      "title": "should return true when is a built-in type",
      "fullTitle": "#isInstanceAndTypeOf() should return true when is a built-in type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-number\">1</span>, <span class=\"hljs-string\">'Number'</span>).should.be.true();",
      "isRoot": false,
      "uuid": "fc23e5b2-5dcc-4f3e-af08-2afae44575ea",
      "parentUUID": "c4b7e7b5-d426-469a-ace7-359b9f5a5d8e",
      "skipped": false
    },
    {
      "title": "should return true when is user defined type",
      "fullTitle": "#isInstanceAndTypeOf() should return true when is user defined type",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">new</span> ParamCheck().isInstanceAndTypeOf(<span class=\"hljs-keyword\">new</span> UserDefinedType(),<br>    UserDefinedType).should.be.true();",
      "isRoot": false,
      "uuid": "4495a125-9c5c-40e8-b64a-efc43ab5b90b",
      "parentUUID": "c4b7e7b5-d426-469a-ace7-359b9f5a5d8e",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "37e87217-739d-4654-a74c-d68d9f387e06",
      "parentUUID": "3dd928f8-cfaf-4c8a-9538-b3d023c31c34",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "0333d534-8ebf-4e35-bd7d-799a93b3fd57",
      "parentUUID": "3dd928f8-cfaf-4c8a-9538-b3d023c31c34",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.all.pop();<br>pc.all[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "1ab48c9b-af38-4157-8ad6-080d4f586b3a",
      "parentUUID": "3dd928f8-cfaf-4c8a-9538-b3d023c31c34",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#length should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.length = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "008c5cbe-b05d-4d27-ae4c-18e115a0d5cb",
      "parentUUID": "e8934ee7-e0dd-4703-9b2f-ef7927605e5d",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#length should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br><span class=\"hljs-keyword\">var</span> pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "0b4cbb77-8495-45b3-be3a-8265dbbcb3ec",
      "parentUUID": "e8934ee7-e0dd-4703-9b2f-ef7927605e5d",
      "skipped": false
    },
    {
      "title": "should return true when id does exist",
      "fullTitle": "#contains(id) should return true when id does exist",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(p.id).should.be.true();",
      "isRoot": false,
      "uuid": "69e543da-e0c2-4112-8846-54630d3112b2",
      "parentUUID": "74d29097-2952-466f-853e-d091dc5c95cc",
      "skipped": false
    },
    {
      "title": "should return false when id does not exist",
      "fullTitle": "#contains(id) should return false when id does not exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.contains(<span class=\"hljs-string\">'p2'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "14008b63-e1f5-43fc-822b-b5ce1e568fb5",
      "parentUUID": "74d29097-2952-466f-853e-d091dc5c95cc",
      "skipped": false
    },
    {
      "title": "should add the given participant",
      "fullTitle": "#add(participant) should add the given participant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc._participants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc._participants[<span class=\"hljs-number\">0</span>].should.equal(p);",
      "isRoot": false,
      "uuid": "622fd242-591a-43bb-8c6f-d62396d5692d",
      "parentUUID": "a55a76ba-590f-434f-87e3-fcb50e3afdc1",
      "skipped": false
    },
    {
      "title": "should error if participant with id already exists",
      "fullTitle": "#add(participant) should error if participant with id already exists",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    pc.add(p);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "ddb2f51a-dcaf-41be-88fa-5302de822807",
      "parentUUID": "a55a76ba-590f-434f-87e3-fcb50e3afdc1",
      "skipped": false
    },
    {
      "title": "should emit add event",
      "fullTitle": "#add(participant) should emit add event",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.on(<span class=\"hljs-string\">'add'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">participant</span>) </span>{<br>    participant.should.equal(p);<br>    done();<br>});<br>pc.add(p);",
      "isRoot": false,
      "uuid": "9a4e0da9-089e-4698-8378-802612380dc7",
      "parentUUID": "a55a76ba-590f-434f-87e3-fcb50e3afdc1",
      "skipped": false
    },
    {
      "title": "should remove the existing participant",
      "fullTitle": "#remove(participant) should remove the existing participant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "5d4fab4c-1548-4f67-919d-329339b3842b",
      "parentUUID": "4044154f-6508-4861-acd4-391b9c695bac",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing participant",
      "fullTitle": "#remove(participant) should not remove the non-existing participant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.remove(p1).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "1150562e-33b5-4d5b-b428-06e8012ec8a4",
      "parentUUID": "4044154f-6508-4861-acd4-391b9c695bac",
      "skipped": false
    },
    {
      "title": "should remove the existing participant",
      "fullTitle": "#removeById(id) should remove the existing participant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'p1'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p.id).should.be.true();<br>pc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "81050c9f-5cad-4ed2-8f39-24095c5d55d2",
      "parentUUID": "9f523130-7fde-4088-b56a-8fce8111d824",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing participant",
      "fullTitle": "#removeById(id) should not remove the non-existing participant",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "p1 = <span class=\"hljs-keyword\">new</span> Participant();<br>p1.id = <span class=\"hljs-string\">'p1'</span>;<br>p2 = <span class=\"hljs-keyword\">new</span> Participant();<br>p2.id = <span class=\"hljs-string\">'p2'</span>;<br>pc = <span class=\"hljs-keyword\">new</span> Participants();<br>pc.add(p2);<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>pc.removeById(p1.id).should.be.false();<br>pc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "9bacdd4d-e431-4fb2-822b-9793e23e7526",
      "parentUUID": "9f523130-7fde-4088-b56a-8fce8111d824",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#id should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p.id = <span class=\"hljs-string\">'id_test'</span>;<br>p._id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "971baa9a-672c-4358-b6a2-a7f31a3c69dd",
      "parentUUID": "a90be0b1-0dc4-46dc-9c2b-40ff191cb5dc",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#id should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "d1ada3b7-5b19-4bb7-9049-171e82881d74",
      "parentUUID": "a90be0b1-0dc4-46dc-9c2b-40ff191cb5dc",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#isDisconnected should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    p.isDisconnected = <span class=\"hljs-literal\">false</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "18a817ce-2484-4db4-90a6-4f1ed38b2f17",
      "parentUUID": "4b08a076-7a2d-46af-bc8b-f047fb7dc2a4",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#isDisconnected should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._id = <span class=\"hljs-string\">'id_test'</span>;<br>p.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "dc3771b2-7b21-4bb3-a1f2-50035c574a13",
      "parentUUID": "4b08a076-7a2d-46af-bc8b-f047fb7dc2a4",
      "skipped": false
    },
    {
      "title": "should change participant state to disconnected",
      "fullTitle": "#disconnect() should change participant state to disconnected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">false</span>;<br>p.disconnect();<br>p.isDisconnected.should.be.true();",
      "isRoot": false,
      "uuid": "df4afde4-b1e4-4d4c-883f-3af11e5891be",
      "parentUUID": "22f0c5f0-7b17-4683-9acb-323583c61f49",
      "skipped": false
    },
    {
      "title": "should change participant state to connected",
      "fullTitle": "#reconnect() should change participant state to connected",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Participant();<br>p._disconnected = <span class=\"hljs-literal\">true</span>;<br>p.reconnect();<br>p.isDisconnected.should.be.false();",
      "isRoot": false,
      "uuid": "20de6cd1-e411-4f17-8e05-2e1ae4307629",
      "parentUUID": "6cb4508f-8582-4acf-8bd6-4d4be110f052",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    sc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "fad5c765-e218-4474-ae48-87706de1c561",
      "parentUUID": "5b7d5bb9-3eca-4186-ae0f-abd54c761867",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
      "isRoot": false,
      "uuid": "8717c08f-941a-4532-b627-f1a08e664c33",
      "parentUUID": "5b7d5bb9-3eca-4186-ae0f-abd54c761867",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "s = <span class=\"hljs-keyword\">new</span> Session(<span class=\"hljs-string\">'s1'</span>, <span class=\"hljs-keyword\">new</span> Settings(), <span class=\"hljs-keyword\">new</span> Host());<br><span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc._sessions.push(s);<br>sc.all.pop();<br>sc.all[<span class=\"hljs-number\">0</span>].should.equal(s);",
      "isRoot": false,
      "uuid": "697efa78-c0df-415e-a9ab-6edc24d6fcea",
      "parentUUID": "5b7d5bb9-3eca-4186-ae0f-abd54c761867",
      "skipped": false
    },
    {
      "title": "add and return session",
      "fullTitle": "#add(host, settings) add and return session",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-keyword\">var</span> ses = sc.add(h, s);<br>ses.should.be.instanceof(Session);",
      "isRoot": false,
      "uuid": "19e4b9fd-957a-40c8-9a36-5f7e4cd9349a",
      "parentUUID": "8688b35f-5912-40de-bf42-40998543b1d3",
      "skipped": false
    },
    {
      "title": "when given valid id should return session",
      "fullTitle": "#getById(id) when given valid id should return session",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br><span class=\"hljs-keyword\">var</span> h = <span class=\"hljs-keyword\">new</span> Host();<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br><span class=\"hljs-comment\">/* eslint-disable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses1 = sc.add(h, s);<br><span class=\"hljs-comment\">/* eslint-enable no-unused-vars */</span><br><span class=\"hljs-keyword\">var</span> ses2 = sc.add(h, s);<br><span class=\"hljs-keyword\">var</span> sessionLocate = sc.getById(ses2.id);<br>sessionLocate.should.be.instanceof(Session)<br>    .and.equal(ses2);",
      "isRoot": false,
      "uuid": "dbc23b59-f80f-4770-b6f9-aad694d4b51c",
      "parentUUID": "310e43e6-10a1-481d-a51a-bad13a29a935",
      "skipped": false
    },
    {
      "title": "should remove complete sc",
      "fullTitle": "#purgeCompleted() should remove complete sc",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> sc = <span class=\"hljs-keyword\">new</span> Sessions();<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.add(<span class=\"hljs-keyword\">new</span> Host(), <span class=\"hljs-keyword\">new</span> Settings());<br>sc.all[<span class=\"hljs-number\">0</span>].complete();<br>sc.all[<span class=\"hljs-number\">1</span>].complete();<br>sc.purgeCompleted();<br>sc.all.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "ffd4ff9d-3f28-4993-8762-7ee57fd1ae78",
      "parentUUID": "94bb6960-de57-49ad-9e0d-9bad15d87b4b",
      "skipped": false
    },
    {
      "title": "should create teams",
      "fullTitle": "#constructor should create teams",
      "timedOut": false,
      "duration": 5,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "f7ea3e77-3b41-415b-a772-7916f1370814",
      "parentUUID": "0c433fb1-aaf5-4567-b0e2-5af4e0e4b7bd",
      "skipped": false
    },
    {
      "title": "should not create teams",
      "fullTitle": "#constructor should not create teams",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>should(s.teams).be.null();",
      "isRoot": false,
      "uuid": "d6cfe23a-b748-48f2-9516-53fc0ba2ac80",
      "parentUUID": "0c433fb1-aaf5-4567-b0e2-5af4e0e4b7bd",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#id should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.id = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "b36776ca-e060-4623-84b7-919eb2701888",
      "parentUUID": "560ad419-48bd-47e5-b9bc-2cb4bbca1835",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#id should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.id.should.equal(<span class=\"hljs-string\">'id_test'</span>);",
      "isRoot": false,
      "uuid": "695b8bb1-326d-4d76-8493-9a4edb3c4ade",
      "parentUUID": "560ad419-48bd-47e5-b9bc-2cb4bbca1835",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#roundsPlayed should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundsPlayed = <span class=\"hljs-string\">'SomeId'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "6bc06856-9636-4b9a-adde-ece13a9c0456",
      "parentUUID": "5f30c2f8-643c-4146-af88-81b836635c50",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#roundsPlayed should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "f1738313-e273-427a-85d4-233fc32b5eb4",
      "parentUUID": "5f30c2f8-643c-4146-af88-81b836635c50",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#previousWinners should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.previousWinners = [<span class=\"hljs-string\">'SomeWinner'</span>];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "cee290cd-92fc-481d-8d1f-562aa22f057c",
      "parentUUID": "6470aec9-aebe-4e7a-b698-87418dc76bef",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#previousWinners should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._previousWinners = [<span class=\"hljs-string\">'Winner1'</span>, <span class=\"hljs-string\">'Winner2'</span>];<br>s.previousWinners.should.be.Array();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
      "isRoot": false,
      "uuid": "d0c03987-4684-42a9-9f12-bdb7188448a8",
      "parentUUID": "6470aec9-aebe-4e7a-b698-87418dc76bef",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#roundWinner should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.roundWinner = <span class=\"hljs-string\">'SomeWinner'</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "5f0e7c11-94af-4c5c-a991-fd54e7f221ac",
      "parentUUID": "c45c2191-912e-4580-a40c-6c4fc584c178",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#roundWinner should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundWinner = <span class=\"hljs-string\">'Winner1'</span>;<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'Winner1'</span>);",
      "isRoot": false,
      "uuid": "508af143-295c-4f1c-8dc1-cb75b0e0abaf",
      "parentUUID": "c45c2191-912e-4580-a40c-6c4fc584c178",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#observers should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.observers = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "1b4d634e-0848-4ec8-a72b-d379f63eed14",
      "parentUUID": "627bba33-01cb-4991-8500-7c87f7803063",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#observers should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.observers.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.observers[<span class=\"hljs-number\">0</span>].should.equal(observer);",
      "isRoot": false,
      "uuid": "457ff58e-11ac-47e8-8b78-4b3bdc1e803f",
      "parentUUID": "627bba33-01cb-4991-8500-7c87f7803063",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#contestants should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.contestants = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "106e9935-0a06-43a5-9067-e00fa22477d2",
      "parentUUID": "9a202f7d-148c-4aec-a5d1-171800d8a9b1",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestants should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> observer = <span class=\"hljs-keyword\">new</span> Observer();<br>observer.id = <span class=\"hljs-string\">'ob1'</span>;<br><span class=\"hljs-keyword\">var</span> contestant = <span class=\"hljs-keyword\">new</span> Contestant();<br>contestant.id = <span class=\"hljs-string\">'con1'</span>;<br>s._participants.add(observer);<br>s._participants.add(contestant);<br>s.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.contestants[<span class=\"hljs-number\">0</span>].should.equal(contestant);",
      "isRoot": false,
      "uuid": "339c46b7-5011-4702-b9fa-d00f6aa57d43",
      "parentUUID": "9a202f7d-148c-4aec-a5d1-171800d8a9b1",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#host should throw on set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    s.host = host;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "c8517560-aec8-4200-92ae-35d5a4c620b9",
      "parentUUID": "124fd589-beca-4d01-b367-913fa2cb4271",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#host should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.host.should.equal(host);",
      "isRoot": false,
      "uuid": "81b8e715-a2b9-48da-80ad-c1286080a33e",
      "parentUUID": "124fd589-beca-4d01-b367-913fa2cb4271",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#currentState should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
      "isRoot": false,
      "uuid": "3eaa1490-f7cb-46b7-b8a4-befeb89eaea3",
      "parentUUID": "a211c397-5940-41d9-a4a4-bfc53e94c4c6",
      "skipped": false
    },
    {
      "title": "should increment rounds played",
      "fullTitle": "#incrementRoundsPlayed() should increment rounds played",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s._roundsPlayed = <span class=\"hljs-number\">1</span>;<br>s.incrementRoundsPlayed();<br>s.roundsPlayed.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "517d1d6e-56f1-4514-a423-5d8d16358d45",
      "parentUUID": "8bac88f2-193c-48c4-8060-d7db53c44e6c",
      "skipped": false
    },
    {
      "title": "should not allow a contestant username with bad words",
      "fullTitle": "#addContestant(contestant) should not allow a contestant username with bad words",
      "timedOut": false,
      "duration": 9,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Penis #YOLO'</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_CONTAINS_PROFANITY);",
      "isRoot": false,
      "uuid": "43f677ec-c5e1-412c-ac34-fd7cafd31693",
      "parentUUID": "82b22c6d-8edf-4d95-81b7-7192e793acf3",
      "skipped": false
    },
    {
      "title": "should not allow when username is empty",
      "fullTitle": "#addContestant(contestant) should not allow when username is empty",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">' '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.equal(constants.messages.USERNAME_IS_REQUIRED);",
      "isRoot": false,
      "uuid": "ea30ae09-6a0c-42cc-8cd3-b93d21a108ae",
      "parentUUID": "82b22c6d-8edf-4d95-81b7-7192e793acf3",
      "skipped": false
    },
    {
      "title": "should trim username",
      "fullTitle": "#addContestant(contestant) should trim username",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Wade  '</span>;<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>c.username.should.equal(<span class=\"hljs-string\">'Wade'</span>);",
      "isRoot": false,
      "uuid": "340cc72d-81d4-4559-99e0-3286a3be3cfa",
      "parentUUID": "82b22c6d-8edf-4d95-81b7-7192e793acf3",
      "skipped": false
    },
    {
      "title": "should add contestant when session is not full",
      "fullTitle": "when in individual mode should add contestant when session is not full",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "f3457e02-debc-4722-91b6-1210b2487057",
      "parentUUID": "ae27940d-2d38-4fbf-becc-289b6536a52a",
      "skipped": false
    },
    {
      "title": "should not add contestant when session is full",
      "fullTitle": "when in individual mode should not add contestant when session is full",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br>s.addContestant(c2);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();",
      "isRoot": false,
      "uuid": "cf02a901-53c8-412a-b135-d9c953995642",
      "parentUUID": "ae27940d-2d38-4fbf-becc-289b6536a52a",
      "skipped": false
    },
    {
      "title": "should not add contestant when username is already taken",
      "fullTitle": "when in individual mode should not add contestant when username is already taken",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "fffddeb5-bbfc-4c72-9090-ec80056b434a",
      "parentUUID": "ae27940d-2d38-4fbf-becc-289b6536a52a",
      "skipped": false
    },
    {
      "title": "BUG# username case should not matter",
      "fullTitle": "when in individual mode BUG# username case should not matter",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'abc1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'ABC1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "4d1488d7-089e-4d09-a812-481437e2abfc",
      "parentUUID": "ae27940d-2d38-4fbf-becc-289b6536a52a",
      "skipped": false
    },
    {
      "title": "should allow unlimited contestants when max is set to constants.UNLIMITED",
      "fullTitle": "when in individual mode should allow unlimited contestants when max is set to constants.UNLIMITED",
      "timedOut": false,
      "duration": 622,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = constants.UNLIMITED;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    <span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>    c.username = <span class=\"hljs-string\">'c'</span> + i;<br>    <span class=\"hljs-keyword\">var</span> response = s.addContestant(c);<br>    response.wasSuccessful.should.be.true();<br>}",
      "isRoot": false,
      "uuid": "12bbc9b0-88cd-4b22-b35f-3a163c86c654",
      "parentUUID": "ae27940d-2d38-4fbf-becc-289b6536a52a",
      "skipped": false
    },
    {
      "title": "should add contestant when teams is not full",
      "fullTitle": "when in team mode should add contestant when teams is not full",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();",
      "isRoot": false,
      "uuid": "56907fed-a6a4-49ff-86c7-83e7bdbc9891",
      "parentUUID": "84de1aa7-cdf1-41cb-be4d-5174a9d6ad65",
      "skipped": false
    },
    {
      "title": "should not add contestant when teams are full",
      "fullTitle": "when in team mode should not add contestant when teams are full",
      "timedOut": false,
      "duration": 7,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> c3 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c3.username = <span class=\"hljs-string\">'c3'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c1);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.true();<br>response = s.addContestant(c3);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.TEAMS_ARE_FULL);",
      "isRoot": false,
      "uuid": "d774b97e-57d1-445f-8c32-12f615afa598",
      "parentUUID": "84de1aa7-cdf1-41cb-be4d-5174a9d6ad65",
      "skipped": false
    },
    {
      "title": "should not add contestant when username is already taken",
      "fullTitle": "when in team mode should not add contestant when username is already taken",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">2</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1);<br><span class=\"hljs-keyword\">var</span> response = s.addContestant(c2);<br>response.should.not.be.null();<br>response.wasSuccessful.should.be.false();<br>response.errorMessage.should.be.equal(constants.messages.USERNAME_TAKEN);",
      "isRoot": false,
      "uuid": "3ef610eb-da06-471c-a99a-89bc07a59df3",
      "parentUUID": "84de1aa7-cdf1-41cb-be4d-5174a9d6ad65",
      "skipped": false
    },
    {
      "title": "should subscribe callback to the correct event",
      "fullTitle": "#subscribeForStateChange(event, callback) should subscribe callback to the correct event",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> r = s.addContestant(c);<br>r.wasSuccessful.should.be.true();<br>s.subscribeForStateChange(<span class=\"hljs-string\">'onpending'</span>, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">session, event, from, to</span>) </span>{<br>    session.should.equal(s);<br>    event.should.equal(<span class=\"hljs-string\">'buzzerPressed'</span>);<br>    from.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>    to.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>    done();<br>});<br>s.tryBuzzerPressRegister(c.id).should.be.true();",
      "isRoot": false,
      "uuid": "9b119ab4-5608-40d0-b0f5-06c787a48777",
      "parentUUID": "d65b4b4b-9317-4c03-9c6f-d9430598e6f2",
      "skipped": false
    },
    {
      "title": "should register when state is ready",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should register when state is ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);",
      "isRoot": false,
      "uuid": "cddc88d6-7dbc-45ce-9c19-9d75d18274d0",
      "parentUUID": "4397374d-8344-414b-ad61-341d5aa64a6f",
      "skipped": false
    },
    {
      "title": "should not register when state is not ready",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not register when state is not ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.false();",
      "isRoot": false,
      "uuid": "7b37d564-6a41-4840-bf63-b510f8961eba",
      "parentUUID": "4397374d-8344-414b-ad61-341d5aa64a6f",
      "skipped": false
    },
    {
      "title": "should not register when contestant does not exist",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not register when contestant does not exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(idUtility.generateParticipantId()).should.be.false();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);",
      "isRoot": false,
      "uuid": "d66df076-7e12-4231-9a41-a9d1f7dfd155",
      "parentUUID": "4397374d-8344-414b-ad61-341d5aa64a6f",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "7fc4873c-dbe7-4abb-904b-98cf392203f9",
      "parentUUID": "4397374d-8344-414b-ad61-341d5aa64a6f",
      "skipped": false
    },
    {
      "title": "should not add previous round winner to winners list",
      "fullTitle": "tryBuzzerPressRegister(contestantId) should not add previous round winner to winners list",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "8fc14848-cadd-4e4c-aaa7-96c14d8d50cb",
      "parentUUID": "4397374d-8344-414b-ad61-341d5aa64a6f",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->ACCEPT should allow when game state is pending",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();",
      "isRoot": false,
      "uuid": "2d86b4fd-c7bf-4d14-b71c-313b31c8b381",
      "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not pending",
      "fullTitle": "action->ACCEPT should not allow when game state is not pending",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.false();",
      "isRoot": false,
      "uuid": "064ca971-ceaf-47e4-ae75-ebd7cfb17b5a",
      "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
      "skipped": false
    },
    {
      "title": "should update contestant's score",
      "fullTitle": "action->ACCEPT should update contestant's score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "c14a73e6-b627-4ea9-9201-b576421a7d7b",
      "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
      "skipped": false
    },
    {
      "title": "should update contestant's team score",
      "fullTitle": "action->ACCEPT should update contestant's team score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.roundWinner.should.equal(<span class=\"hljs-string\">'testUser1'</span>);<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>s.teams.all[<span class=\"hljs-number\">0</span>].score.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "3487f79e-cbbc-4c00-b75e-18f866acc0ab",
      "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->ACCEPT should add previous round winner to winners list",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.previousWinners.length.should.equal(<span class=\"hljs-number\">1</span>);<br>s.previousWinners[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "2008e500-7927-47c9-8b21-946c8e10bdcb",
      "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->ACCEPT should change game state back to ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "705dc08f-ce8b-404b-be18-b5275ba3ad57",
      "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
      "skipped": false
    },
    {
      "title": "should clear pending winner",
      "fullTitle": "action->ACCEPT should clear pending winner",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>should(s.pendingWinner).be.null();",
      "isRoot": false,
      "uuid": "fc3fef29-3cbd-402a-b46b-7f49c4e5abc5",
      "parentUUID": "91be8132-02b3-476e-be3d-198fa6b4275e",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->REJECT should allow when game state is pending",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();",
      "isRoot": false,
      "uuid": "41b1da91-1673-4bf7-bf94-43075598855f",
      "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not pending",
      "fullTitle": "action->REJECT should not allow when game state is not pending",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.false();",
      "isRoot": false,
      "uuid": "f283d472-9b97-4ae2-b7fa-2115d19b6ed2",
      "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
      "skipped": false
    },
    {
      "title": "should not replace round winner with pending contestant",
      "fullTitle": "action->REJECT should not replace round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "a116b8e5-82f2-4d52-a9e6-36e576becebd",
      "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
      "skipped": false
    },
    {
      "title": "should not update pending contestant's score",
      "fullTitle": "action->REJECT should not update pending contestant's score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.score.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "0e579b2e-d0be-470b-af80-4473f0c85530",
      "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
      "skipped": false
    },
    {
      "title": "should add round winner to previous winners list",
      "fullTitle": "action->REJECT should add round winner to previous winners list",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "242ad313-80dc-4e58-9ce5-b481df93fbe1",
      "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->REJECT should change game state back to ready",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.REJECT).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "311a767d-c451-4fe8-a1d6-b6eb344d5c2b",
      "parentUUID": "54a29872-1bc8-4a1f-a17f-15b6f5d39f87",
      "skipped": false
    },
    {
      "title": "should allow when game state is ready",
      "fullTitle": "action->RESET should allow when game state is ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
      "isRoot": false,
      "uuid": "eb950542-4b49-4fb6-845a-bc35df08335c",
      "parentUUID": "b2eda362-2a89-4968-bf94-ece771bce117",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->RESET should allow when game state is pending",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();",
      "isRoot": false,
      "uuid": "a935a083-5cb5-46de-96d2-127b2a3fb8c0",
      "parentUUID": "b2eda362-2a89-4968-bf94-ece771bce117",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "action->RESET should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "d1c06a51-3d54-4fe7-bb64-314083c814f3",
      "parentUUID": "b2eda362-2a89-4968-bf94-ece771bce117",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->RESET should add previous round winner to winners list",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "34e62878-b0ac-4a48-973d-5698f6f0e773",
      "parentUUID": "b2eda362-2a89-4968-bf94-ece771bce117",
      "skipped": false
    },
    {
      "title": "should change game state back to ready",
      "fullTitle": "action->RESET should change game state back to ready",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.RESET).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "97e67f29-6651-4ee0-9736-b104bb2ebc09",
      "parentUUID": "b2eda362-2a89-4968-bf94-ece771bce117",
      "skipped": false
    },
    {
      "title": "should allow when game state is ready",
      "fullTitle": "action->DISABLE should allow when game state is ready",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
      "isRoot": false,
      "uuid": "94fe3acf-d59f-40f5-a330-91478c809504",
      "parentUUID": "871b10ff-4610-4aa5-b191-91549f032451",
      "skipped": false
    },
    {
      "title": "should allow when game state is pending",
      "fullTitle": "action->DISABLE should allow when game state is pending",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();",
      "isRoot": false,
      "uuid": "7a4e6c13-030e-4362-9b58-ce50d53e08f4",
      "parentUUID": "871b10ff-4610-4aa5-b191-91549f032451",
      "skipped": false
    },
    {
      "title": "should not replace previous round winner with pending contestant",
      "fullTitle": "action->DISABLE should not replace previous round winner with pending contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "c6910638-0d59-4450-a239-d0eddc3cbf47",
      "parentUUID": "871b10ff-4610-4aa5-b191-91549f032451",
      "skipped": false
    },
    {
      "title": "should add previous round winner to winners list",
      "fullTitle": "action->DISABLE should add previous round winner to winners list",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">2</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.addContestant(c2).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ACCEPT).should.be.true();<br>s.tryBuzzerPressRegister(c2.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>should(s.roundWinner).be.null();<br>s.previousWinners.pop().should.equal(<span class=\"hljs-string\">'testUser1'</span>);",
      "isRoot": false,
      "uuid": "14bd3f87-2c78-452d-ae92-f01e38777e04",
      "parentUUID": "871b10ff-4610-4aa5-b191-91549f032451",
      "skipped": false
    },
    {
      "title": "should change game state to buzzerLock",
      "fullTitle": "action->DISABLE should change game state to buzzerLock",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c1).wasSuccessful.should.be.true();<br>s.tryBuzzerPressRegister(c1.id).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.BUZZER_LOCK);",
      "isRoot": false,
      "uuid": "f9e75097-ed6b-40df-b870-3c8ecc19e169",
      "parentUUID": "871b10ff-4610-4aa5-b191-91549f032451",
      "skipped": false
    },
    {
      "title": "should allow when game state is buzzerLock",
      "fullTitle": "action->ENABLE should allow when game state is buzzerLock",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();",
      "isRoot": false,
      "uuid": "85049c59-42a4-45dd-b3fb-286c13f612d9",
      "parentUUID": "236077a4-f096-47a1-84cf-998d68cefc9c",
      "skipped": false
    },
    {
      "title": "should not allow when game state is not buzzerLock",
      "fullTitle": "action->ENABLE should not allow when game state is not buzzerLock",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.false();",
      "isRoot": false,
      "uuid": "a9fc1cf5-a2cc-4990-ab1f-281620ddbdd3",
      "parentUUID": "236077a4-f096-47a1-84cf-998d68cefc9c",
      "skipped": false
    },
    {
      "title": "should change game state to ready",
      "fullTitle": "action->ENABLE should change game state to ready",
      "timedOut": false,
      "duration": 3,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.tryBuzzerAction(constants.buzzerActionCommands.DISABLE).should.be.true();<br>s.tryBuzzerAction(constants.buzzerActionCommands.ENABLE).should.be.true();<br>s.currentState.should.equal(constants.gameStates.READY);",
      "isRoot": false,
      "uuid": "7bab9883-d375-49a3-b736-f18dcb4b95e9",
      "parentUUID": "236077a4-f096-47a1-84cf-998d68cefc9c",
      "skipped": false
    },
    {
      "title": "should return the pending winner",
      "fullTitle": "#pendingWinner should return the pending winner",
      "timedOut": false,
      "duration": 2,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>s.tryBuzzerPressRegister(c.id).should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'pending'</span>);<br>s.pendingWinner.should.equal(<span class=\"hljs-string\">'testUser'</span>);",
      "isRoot": false,
      "uuid": "9ee92b82-a152-4fb3-941e-9e06eb0e8f0f",
      "parentUUID": "7e5a272b-ef7a-4319-ba88-885260e1db5a",
      "skipped": false
    },
    {
      "title": "should not return the pending winner",
      "fullTitle": "#pendingWinner should not return the pending winner",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'testUser'</span>;<br>settings.maxContestants = <span class=\"hljs-number\">1</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.addContestant(c).wasSuccessful.should.be.true();<br>s.currentState.should.equal(<span class=\"hljs-string\">'ready'</span>);<br>should(s.pendingWinner).be.null();",
      "isRoot": false,
      "uuid": "1e8a6265-d063-4bc2-b5ed-1bb22a0f6eda",
      "parentUUID": "7e5a272b-ef7a-4319-ba88-885260e1db5a",
      "skipped": false
    },
    {
      "title": "should update session name",
      "fullTitle": "#updateSessionName(name) should update session name",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br>s.updateSessionName(<span class=\"hljs-string\">'session2'</span>);<br>settings.sessionName.should.equal(<span class=\"hljs-string\">'session2'</span>);",
      "isRoot": false,
      "uuid": "281f698c-ee8d-4c97-9cc0-5b4df2818577",
      "parentUUID": "5c6071ff-2645-410a-8528-324c4c0970f5",
      "skipped": false
    },
    {
      "title": "should update max contestants",
      "fullTitle": "#updateMaxContestants(maxContestants) should update max contestants",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "ec40d5e5-8b8e-4215-98f0-b3730cd70c75",
      "parentUUID": "eddc8de6-78f3-4f91-9eb7-1134f8b944e5",
      "skipped": false
    },
    {
      "title": "should not allow below current connected amount",
      "fullTitle": "#updateMaxContestants(maxContestants) should not allow below current connected amount",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.maxContestants = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'testUser1'</span>;<br>s.addContestant(c1).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'testUser2'</span>;<br>s.addContestant(c2).wasSuccessful.should.be.true();<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxContestants(<span class=\"hljs-number\">1</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_CONTESTANTS_MUST_BE_GREATER_THAN_ALREADY_CONNECTED);<br>settings.maxContestants.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "0cadbe28-8c05-41a3-92bc-4c7871c5a51a",
      "parentUUID": "eddc8de6-78f3-4f91-9eb7-1134f8b944e5",
      "skipped": false
    },
    {
      "title": "should update team size",
      "fullTitle": "#updateTeamSize(teamSize) should update team size",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.teamSize.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "2411685c-8bbd-450b-8323-00f190fe0423",
      "parentUUID": "c82c4cfc-95d2-4e8f-a4ee-bde096393980",
      "skipped": false
    },
    {
      "title": "should not allow below current setting",
      "fullTitle": "#updateTeamSize(teamSize) should not allow below current setting",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateTeamSize(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.TEAM_SIZE_MUST_BE_GREATER_THAN_ALREADY_SET);",
      "isRoot": false,
      "uuid": "10fb124d-48ee-4742-a189-0a5a098c7be6",
      "parentUUID": "c82c4cfc-95d2-4e8f-a4ee-bde096393980",
      "skipped": false
    },
    {
      "title": "should update max teams",
      "fullTitle": "#updateMaxTeams(maxTeams) should update max teams",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">2</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>settings.maxTeams.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "b4624cb6-340d-44af-abf7-54df11f3cee7",
      "parentUUID": "fd29f0e0-cb3d-4ba0-ab15-7ef9708745b4",
      "skipped": false
    },
    {
      "title": "should add teams",
      "fullTitle": "#updateMaxTeams(maxTeams) should add teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">1</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">5</span>);<br>r.should.be.true();<br>should.not.exist(e);<br>s.teams.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "8da183f1-974b-4766-97d4-de3e654d0c53",
      "parentUUID": "fd29f0e0-cb3d-4ba0-ab15-7ef9708745b4",
      "skipped": false
    },
    {
      "title": "should not allow below current setting",
      "fullTitle": "#updateMaxTeams(maxTeams) should not allow below current setting",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">1</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">4</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_MUST_BE_GREATER_THAN_ALREADY_SET);",
      "isRoot": false,
      "uuid": "5ee1bd74-660d-4e3d-83c2-cd1658532094",
      "parentUUID": "fd29f0e0-cb3d-4ba0-ab15-7ef9708745b4",
      "skipped": false
    },
    {
      "title": "should not allow if teams are PLAYER_CHOICE",
      "fullTitle": "#updateMaxTeams(maxTeams) should not allow if teams are PLAYER_CHOICE",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "settings.hasTeams = <span class=\"hljs-literal\">true</span>;<br>settings.teamSize = <span class=\"hljs-number\">5</span>;<br>settings.maxTeams = <span class=\"hljs-number\">5</span>;<br>settings.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br>settings.sessionName = <span class=\"hljs-string\">'session1'</span>;<br><span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Session(id, settings, host);<br><span class=\"hljs-keyword\">var</span> [r, e] = s.updateMaxTeams(<span class=\"hljs-number\">6</span>);<br>r.should.be.false();<br>e.should.equal(constants.messages.MAX_TEAMS_CANNOT_BE_CHANGED_WHEN_PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "41817114-8344-42a0-a148-4f940f3c2585",
      "parentUUID": "fd29f0e0-cb3d-4ba0-ab15-7ef9708745b4",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#hasTeams should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s._hasTeams.should.be.true();",
      "isRoot": false,
      "uuid": "505db5d2-2457-4219-9bd0-db3828243d2b",
      "parentUUID": "e49c01f0-680d-420f-9d5e-e2ba2643b23b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#hasTeams should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.hasTeams.should.be.true();",
      "isRoot": false,
      "uuid": "1d5c384d-e176-475d-aa96-48c274e885f2",
      "parentUUID": "e49c01f0-680d-420f-9d5e-e2ba2643b23b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamSize should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s._teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "ff1042e9-1f9e-41e3-9418-39a51b75f57d",
      "parentUUID": "8efd482b-2697-4b07-b70c-12b896ab6fe7",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamSize should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamSize = <span class=\"hljs-number\">1</span>;<br>s.teamSize.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "c69d8638-3019-434d-8eff-70df84fb7695",
      "parentUUID": "8efd482b-2697-4b07-b70c-12b896ab6fe7",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxTeams should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s._maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "fce0994c-d13c-4498-85f3-97a126596f1d",
      "parentUUID": "9f072311-0b30-484c-931b-1f3e0ed9e702",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxTeams should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxTeams = <span class=\"hljs-number\">1</span>;<br>s.maxTeams.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "4f192add-2160-4ce5-8b63-67d294c27946",
      "parentUUID": "9f072311-0b30-484c-931b-1f3e0ed9e702",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeaderSelectionMethod should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s._teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "f78720fd-964e-4c3f-8f62-46b441032ba3",
      "parentUUID": "86665cd5-dbe3-4290-bb09-5e57030e81af",
      "skipped": false
    },
    {
      "title": "should throw on set when constant value is invalid",
      "fullTitle": "#teamLeaderSelectionMethod should throw on set when constant value is invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamLeaderSelectionMethod.all.slice().sort(<br>        <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a, b</span>) </span>{<br>            <span class=\"hljs-keyword\">return</span> a - b;<br>        }).pop();<br>    s.teamLeaderSelectionMethod = ++high;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "a49719f0-ca47-4c34-878b-250fd0265b18",
      "parentUUID": "86665cd5-dbe3-4290-bb09-5e57030e81af",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeaderSelectionMethod should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br>s.teamLeaderSelectionMethod.should.be.equal(constants.teamLeaderSelectionMethod<br>    .PLAYER_CHOICE);",
      "isRoot": false,
      "uuid": "23929f43-ed16-4c0c-a8b8-4734729d0187",
      "parentUUID": "86665cd5-dbe3-4290-bb09-5e57030e81af",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNameEdit should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br>s._teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
      "isRoot": false,
      "uuid": "de007f57-de84-4929-875c-c72f91251fcc",
      "parentUUID": "e1e8f9be-afab-4fbc-9b1b-a31b73016b0b",
      "skipped": false
    },
    {
      "title": "should throw on set when constant value is invalid",
      "fullTitle": "#teamNameEdit should throw on set when constant value is invalid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> high = constants.teamNameEdit.all.slice().sort(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">a,<br>        b</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> a - b;<br>    }).pop();<br>    s.teamNameEdit = ++high;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "c57d6bc6-46e9-4feb-afc9-f1917a9c095a",
      "parentUUID": "e1e8f9be-afab-4fbc-9b1b-a31b73016b0b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNameEdit should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNameEdit = constants.teamNameEdit.ALLOW;<br>s.teamNameEdit.should.be.equal(constants.teamNameEdit.ALLOW);",
      "isRoot": false,
      "uuid": "2bb9161c-ee3e-4555-a56a-72efa14f85d1",
      "parentUUID": "e1e8f9be-afab-4fbc-9b1b-a31b73016b0b",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#maxContestants should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.maxContestants = <span class=\"hljs-number\">1</span>;<br>s._maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "c0ac8976-0397-414f-a200-9db050b73be8",
      "parentUUID": "055ff0c2-e8d6-4b76-b89d-c3868f222fdf",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#maxContestants should get value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._maxContestants = <span class=\"hljs-number\">1</span>;<br>s.maxContestants.should.be.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "6753aa6a-ee73-46d3-9f0a-d2b10982a666",
      "parentUUID": "055ff0c2-e8d6-4b76-b89d-c3868f222fdf",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#sessionName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s._sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
      "isRoot": false,
      "uuid": "2ea1fa13-8e02-4b5b-b0b6-fcedacf15c5a",
      "parentUUID": "1bc0792b-3093-4f97-a89c-323921d22ccd",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#sessionName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._sessionName = <span class=\"hljs-string\">'sessionName'</span>;<br>s.sessionName.should.be.equal(<span class=\"hljs-string\">'sessionName'</span>);",
      "isRoot": false,
      "uuid": "ce43f7f4-6602-4651-b788-86c37efa85a2",
      "parentUUID": "1bc0792b-3093-4f97-a89c-323921d22ccd",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamNames should set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s._teamNames.should.be.Array();<br>s._teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s._teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
      "isRoot": false,
      "uuid": "4a4ce909-47ce-4cb3-941d-700000a57569",
      "parentUUID": "1d7e1b02-4826-4318-8401-0c7aaf0eae48",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamNames should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s._teamNames = [<span class=\"hljs-string\">'n1'</span>, <span class=\"hljs-string\">'n2'</span>];<br>s.teamNames.should.be.Array();<br>s.teamNames.length.should.equal(<span class=\"hljs-number\">2</span>);<br>s.teamNames[<span class=\"hljs-number\">0</span>].should.equal(<span class=\"hljs-string\">'n1'</span>);",
      "isRoot": false,
      "uuid": "9489281f-0fe4-4b70-aacf-e94de8cfd5b6",
      "parentUUID": "1d7e1b02-4826-4318-8401-0c7aaf0eae48",
      "skipped": false
    },
    {
      "title": "should throw when settings.maxTeams is less than 1",
      "fullTitle": "#create(teams, settings) should throw when settings.maxTeams is less than 1",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    teamFactory.create(tc, s);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "bcfb1352-4abf-413f-a7cb-8b362dbe195d",
      "parentUUID": "56a07fb0-92b7-46b0-9aae-166bb5e1b01f",
      "skipped": false
    },
    {
      "title": "should create the correct amount of teams",
      "fullTitle": "#create(teams, settings) should create the correct amount of teams",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "15ab585d-e5b1-4845-91f3-53699a3989e7",
      "parentUUID": "56a07fb0-92b7-46b0-9aae-166bb5e1b01f",
      "skipped": false
    },
    {
      "title": "should not fail with a large team size",
      "fullTitle": "#create(teams, settings) should not fail with a large team size",
      "timedOut": false,
      "duration": 50,
      "state": "passed",
      "speed": "medium",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">500</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.length.should.equal(<span class=\"hljs-number\">500</span>);<br><span class=\"hljs-comment\">// ensure team names are unique</span><br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> i = names.indexOf(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">n</span>) </span>{<br>        <span class=\"hljs-keyword\">return</span> n === t.teamName;<br>    });<br>    i.should.equal(-<span class=\"hljs-number\">1</span>);<br>    names.push(t.teamName);<br>});",
      "isRoot": false,
      "uuid": "ed1fda95-6a07-47ec-a90e-cd271f4f5223",
      "parentUUID": "56a07fb0-92b7-46b0-9aae-166bb5e1b01f",
      "skipped": false
    },
    {
      "title": "should use settings.teamNames first, before random selection",
      "fullTitle": "#create(teams, settings) should use settings.teamNames first, before random selection",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">10</span>;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>, <span class=\"hljs-string\">'t3'</span>, <span class=\"hljs-string\">'t4'</span>, <span class=\"hljs-string\">'t5'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);<br>tc.all[<span class=\"hljs-number\">2</span>].teamName.should.equal(<span class=\"hljs-string\">'t3'</span>);<br>tc.all[<span class=\"hljs-number\">3</span>].teamName.should.equal(<span class=\"hljs-string\">'t4'</span>);<br>tc.all[<span class=\"hljs-number\">4</span>].teamName.should.equal(<span class=\"hljs-string\">'t5'</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">5</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">6</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">7</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">8</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);<br>teamFactory._names.indexOf(tc.all[<span class=\"hljs-number\">9</span>].teamName).should.be.above(-<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "aa298a85-f920-4171-8587-93ccddd5a2e5",
      "parentUUID": "56a07fb0-92b7-46b0-9aae-166bb5e1b01f",
      "skipped": false
    },
    {
      "title": "should only create a single team when using unlimited teams",
      "fullTitle": "#create(teams, settings) should only create a single team when using unlimited teams",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "04c924d8-8224-461c-b1cc-caca092b40e2",
      "parentUUID": "56a07fb0-92b7-46b0-9aae-166bb5e1b01f",
      "skipped": false
    },
    {
      "title": "should add a team",
      "fullTitle": "#add(teams, settings) should add a team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>teamFactory.add(tc, s);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "b7993dea-c3e8-4323-88e7-666f4e8cd75f",
      "parentUUID": "3f9b4c05-5645-4c7d-af8e-c52b347863d6",
      "skipped": false
    },
    {
      "title": "should reuse team names specified in settings",
      "fullTitle": "#add(teams, settings) should reuse team names specified in settings",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br>teamFactory.add(tc, s);<br>tc.all[<span class=\"hljs-number\">0</span>].teamName.should.equal(<span class=\"hljs-string\">'t1'</span>);<br>tc.all[<span class=\"hljs-number\">1</span>].teamName.should.equal(<span class=\"hljs-string\">'t2'</span>);",
      "isRoot": false,
      "uuid": "81523041-a492-40a7-b333-2015b04cb831",
      "parentUUID": "3f9b4c05-5645-4c7d-af8e-c52b347863d6",
      "skipped": false
    },
    {
      "title": "should factor in team names which are already in use",
      "fullTitle": "#add(teams, settings) should factor in team names which are already in use",
      "timedOut": false,
      "duration": 257,
      "state": "passed",
      "speed": "slow",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">5</span>;<br>s.teamNames = [<span class=\"hljs-string\">'t1'</span>, <span class=\"hljs-string\">'t2'</span>];<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">for</span> (<span class=\"hljs-keyword\">var</span> i = <span class=\"hljs-number\">0</span>; i &lt; <span class=\"hljs-number\">1000</span>; i++) {<br>    teamFactory.add(tc, s);<br>}<br>tc.all.length.should.equal(<span class=\"hljs-number\">1001</span>);<br><span class=\"hljs-keyword\">var</span> names = [];<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    names.push(t.teamName);<br>});<br><span class=\"hljs-keyword\">var</span> uniqueNames = unique(names);<br>names.length.should.equal(uniqueNames.length);",
      "isRoot": false,
      "uuid": "dabc3635-b2d4-40d8-9e45-b8fc07d305fd",
      "parentUUID": "3f9b4c05-5645-4c7d-af8e-c52b347863d6",
      "skipped": false
    },
    {
      "title": "should return true when team with teamName does exist",
      "fullTitle": "#contains(teamName) should return true when team with teamName does exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(t.teamName).should.be.true();",
      "isRoot": false,
      "uuid": "f52ee2dc-db80-427e-953a-fc40868e414b",
      "parentUUID": "9bcf0663-5838-41ea-bf0c-5cd8f067bbef",
      "skipped": false
    },
    {
      "title": "should return false when no team with teamName does exist",
      "fullTitle": "#contains(teamName) should return false when no team with teamName does exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'tameName test'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.contains(<span class=\"hljs-string\">'other team name'</span>).should.be.false();",
      "isRoot": false,
      "uuid": "9980f3de-6759-48a6-a680-8180eaa87b7a",
      "parentUUID": "9bcf0663-5838-41ea-bf0c-5cd8f067bbef",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#all should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.all = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "5336c23f-69c2-4d77-853e-27e5e5be22d6",
      "parentUUID": "7b2c406d-90cb-4763-aaf5-68c6526b4e7b",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#all should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "5abdc742-3af1-4bd5-be73-5525ed4319b7",
      "parentUUID": "7b2c406d-90cb-4763-aaf5-68c6526b4e7b",
      "skipped": false
    },
    {
      "title": "should get copy of val and not reference",
      "fullTitle": "#all should get copy of val and not reference",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.all.pop();<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "9dd16998-612a-4108-9598-e818a4494212",
      "parentUUID": "7b2c406d-90cb-4763-aaf5-68c6526b4e7b",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#length should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.length = [];<br>}).should.throw();",
      "isRoot": false,
      "uuid": "d9d3ed82-9442-4a15-8bb3-eccafc0d5d6e",
      "parentUUID": "df86118e-53b2-4da7-b5ec-7424cab815a2",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#length should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "786c5610-e613-4373-98b8-20ece5fe743c",
      "parentUUID": "df86118e-53b2-4da7-b5ec-7424cab815a2",
      "skipped": false
    },
    {
      "title": "should add the given team",
      "fullTitle": "#add(team) should add the given team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.all[<span class=\"hljs-number\">0</span>].should.equal(t);",
      "isRoot": false,
      "uuid": "8996e719-21e0-492d-a84b-6285559895fd",
      "parentUUID": "9f1f2455-304d-4acf-8c05-907951560bed",
      "skipped": false
    },
    {
      "title": "should error if team with teamName already exists",
      "fullTitle": "#add(team) should error if team with teamName already exists",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.add(t);<br>}).should.throw();",
      "isRoot": false,
      "uuid": "2fff1af1-04b3-4ccb-9f56-0c922343884c",
      "parentUUID": "9f1f2455-304d-4acf-8c05-907951560bed",
      "skipped": false
    },
    {
      "title": "should remove the existing team",
      "fullTitle": "#remove(team) should remove the existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "1b4a36a1-6417-4260-8163-bb16438bc152",
      "parentUUID": "b85150cc-d958-4b6c-87ee-f3ff2426b469",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing team",
      "fullTitle": "#remove(team) should not remove the non-existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.remove(t1).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "18585bdf-ac6f-47a3-a46d-9d814420bc01",
      "parentUUID": "b85150cc-d958-4b6c-87ee-f3ff2426b469",
      "skipped": false
    },
    {
      "title": "should remove the existing team",
      "fullTitle": "#removeByTeamName(team) should remove the existing team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t.teamName).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "920f3685-313a-4535-b1c0-faafb0a3420e",
      "parentUUID": "38964705-ae22-4a9f-974f-6a0ca055a9b0",
      "skipped": false
    },
    {
      "title": "should ignore team name case",
      "fullTitle": "#removeByTeamName(team) should ignore team name case",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'abc1'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(<span class=\"hljs-string\">'ABC1'</span>).should.be.true();<br>tc.length.should.equal(<span class=\"hljs-number\">0</span>);",
      "isRoot": false,
      "uuid": "b64d8c38-42aa-44e2-ae51-9ef3e5d4e41a",
      "parentUUID": "38964705-ae22-4a9f-974f-6a0ca055a9b0",
      "skipped": false
    },
    {
      "title": "should not remove the non-existing team",
      "fullTitle": "#removeByTeamName(team) should not remove the non-existing team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "t1 = <span class=\"hljs-keyword\">new</span> Team();<br>t1.teamName = <span class=\"hljs-string\">'t1'</span>;<br>t2 = <span class=\"hljs-keyword\">new</span> Team();<br>t2.teamName = <span class=\"hljs-string\">'t2'</span>;<br>tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t2);<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);<br>tc.removeByTeamName(t1.teamName).should.be.false();<br>tc.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "8e18b9b8-344a-412a-9e56-3430b7be85c1",
      "parentUUID": "38964705-ae22-4a9f-974f-6a0ca055a9b0",
      "skipped": false
    },
    {
      "title": "should give contestant an id",
      "fullTitle": "addContestant(contestant, settings, inquireTeamLeaderCallback, teamName) should give contestant an id",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.username = <span class=\"hljs-string\">'Username'</span>;<br>should(c.id).be.null();<br>tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>should(c.id).not.be.null();",
      "isRoot": false,
      "uuid": "7ca5d711-5c97-4ea4-a151-d9d1f2be708f",
      "parentUUID": "c3ac1813-7f32-4a19-9ccf-db065170f58f",
      "skipped": false
    },
    {
      "title": "should return a valid response",
      "fullTitle": "when teams are full should return a valid response",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);",
      "isRoot": false,
      "uuid": "b5ce5081-6272-41e6-9aa0-443d441a78ac",
      "parentUUID": "e71d7d9a-993d-4584-9ec0-607215ead7ec",
      "skipped": false
    },
    {
      "title": "should inquire for team leader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should inquire for team leader",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> inquired = <span class=\"hljs-literal\">false</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    inquired = <span class=\"hljs-literal\">true</span>;<br>});<br>r.should.be.true();<br>inquired.should.be.true();",
      "isRoot": false,
      "uuid": "62d026d7-4a5e-4386-80dd-1858e448e56b",
      "parentUUID": "0a6857a0-6b6e-42b9-8066-63201803dc42",
      "skipped": false
    },
    {
      "title": "should not inquire for team leader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should not inquire for team leader",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>tc.all[<span class=\"hljs-number\">0</span>].teamLeader = c1;<br><span class=\"hljs-keyword\">var</span> didNotInquire = <span class=\"hljs-literal\">true</span>;<br>tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    didNotInquire = <span class=\"hljs-literal\">false</span>;<br>});<br>didNotInquire.should.be.true();<br>t.teamLeader.should.equal(c1);",
      "isRoot": false,
      "uuid": "3b3457ac-31eb-4f2f-ab29-4e0d17af5953",
      "parentUUID": "0a6857a0-6b6e-42b9-8066-63201803dc42",
      "skipped": false
    },
    {
      "title": "should not add contestant as teamLeader",
      "fullTitle": "when teamLeader selection is PLAYER_CHOICE should not add contestant as teamLeader",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should(t.teamLeader).be.null();",
      "isRoot": false,
      "uuid": "9ea0f15b-def6-4708-ab38-976f6c4cc2e4",
      "parentUUID": "0a6857a0-6b6e-42b9-8066-63201803dc42",
      "skipped": false
    },
    {
      "title": "should not inquire for team leader",
      "fullTitle": "when teamLeader selection is RANDOM should not inquire for team leader",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">1</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> notInquired = <span class=\"hljs-literal\">true</span>;<br><span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    notInquired = <span class=\"hljs-literal\">false</span>;<br>    <span class=\"hljs-keyword\">return</span> <span class=\"hljs-literal\">false</span>;<br>});<br>r.should.be.true();<br>notInquired.should.be.true();",
      "isRoot": false,
      "uuid": "a6ca145a-bfa3-4539-85fd-56140281b15c",
      "parentUUID": "e1537f4a-bf42-43ca-a0ae-6ba0694ff218",
      "skipped": false
    },
    {
      "title": "should automatically add team leader when team is filled",
      "fullTitle": "when teamLeader selection is RANDOM should automatically add team leader when team is filled",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">2</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).not.be.null();<br>});",
      "isRoot": false,
      "uuid": "3a9b6f44-ab63-47cd-8247-946c25ad20e2",
      "parentUUID": "e1537f4a-bf42-43ca-a0ae-6ba0694ff218",
      "skipped": false
    },
    {
      "title": "should not automatically add team leader when team is not filled",
      "fullTitle": "when teamLeader selection is RANDOM should not automatically add team leader when team is not filled",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">2</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamLeaderSelectionMethod = constants.teamLeaderSelectionMethod.RANDOM;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">4</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br>tc.length.should.equal(<span class=\"hljs-number\">2</span>);<br>tc.all.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">t</span>) </span>{<br>    should(t.teamLeader).be.null();<br>});",
      "isRoot": false,
      "uuid": "ebf23301-335f-49fd-a92b-def3523660a3",
      "parentUUID": "e1537f4a-bf42-43ca-a0ae-6ba0694ff218",
      "skipped": false
    },
    {
      "title": "should add team when teams are full",
      "fullTitle": "when set to use unlimited teams should add team when teams are full",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = constants.UNLIMITED;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'t1'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>tc.add(t);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">1</span>);<br>[r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>r.should.be.true();<br>should.not.exist(em);<br>tc.all.length.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "a109a381-7840-43e1-bcc4-97f7ee19aff4",
      "parentUUID": "a7410ba3-6ede-49f3-a21f-0f39df49c9a3",
      "skipped": false
    },
    {
      "title": "should throw when no team name is given",
      "fullTitle": "when team selection method is PLAYER_CHOICE should throw when no team name is given",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>}).should.throw();",
      "isRoot": false,
      "uuid": "88c72750-e91d-4d2d-bfbc-6ebc05b915c8",
      "parentUUID": "c6ff6330-6cd5-45a3-9e2c-faa3ac2fbd0b",
      "skipped": false
    },
    {
      "title": "should add contestant to correct team",
      "fullTitle": "when team selection method is PLAYER_CHOICE should add contestant to correct team",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "c770fc02-8020-43ac-ab2c-ca3c87b0f2ab",
      "parentUUID": "c6ff6330-6cd5-45a3-9e2c-faa3ac2fbd0b",
      "skipped": false
    },
    {
      "title": "should not add to full team",
      "fullTitle": "when team selection method is PLAYER_CHOICE should not add to full team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br>s.teamSelectionMethod = constants.teamSelectionMethod.PLAYER_CHOICE;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br><span class=\"hljs-keyword\">var</span> teamName = tc.all[<span class=\"hljs-number\">1</span>].teamName;<br><span class=\"hljs-keyword\">var</span> [r, em] = tc.addContestant(c1, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.true();<br>should.not.exist(em);<br>[r, em] = tc.addContestant(c2, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{}, teamName);<br>r.should.be.false();<br>em.should.equal(constants.messages.TEAMS_ARE_FULL);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(teamName);<br>t.contestants.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "bd292061-3cd3-41b1-9cae-2062c1b4018b",
      "parentUUID": "c6ff6330-6cd5-45a3-9e2c-faa3ac2fbd0b",
      "skipped": false
    },
    {
      "title": "should get team of contestant",
      "fullTitle": "getByContestant(contestant) should get team of contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">5</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    <span class=\"hljs-keyword\">var</span> [r] = tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>    r.should.be.true();<br>});<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">4</span>]);<br>t.should.not.be.null();<br>t.contestants.getById(cc[<span class=\"hljs-number\">4</span>].id).should.equal(cc[<span class=\"hljs-number\">4</span>]);",
      "isRoot": false,
      "uuid": "bc28d712-ca3a-41e9-acf8-0518ef049e22",
      "parentUUID": "1b9097fd-23b4-48fa-8401-1669b055803f",
      "skipped": false
    },
    {
      "title": "should not get team of contestant",
      "fullTitle": "getByContestant(contestant) should not get team of contestant",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">1</span>);<br>cc[<span class=\"hljs-number\">0</span>].id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> t = tc.getByContestant(cc[<span class=\"hljs-number\">0</span>]);<br>should(t).be.null();",
      "isRoot": false,
      "uuid": "77165059-d146-413d-ab5f-7c6e1e07ce24",
      "parentUUID": "1b9097fd-23b4-48fa-8401-1669b055803f",
      "skipped": false
    },
    {
      "title": "should get team when team with name exists",
      "fullTitle": "getByTeamName(temName) should get team when team with name exists",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t1 = tc.all[<span class=\"hljs-number\">0</span>];<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(t1.teamName);<br>t.should.equal(t1);",
      "isRoot": false,
      "uuid": "58f8ec3b-aea6-4db3-9679-fc286451a35b",
      "parentUUID": "29e8f2cc-a6d6-4724-b68b-f309a79f7012",
      "skipped": false
    },
    {
      "title": "should not get team when team with name does not exist",
      "fullTitle": "getByTeamName(temName) should not get team when team with name does not exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">5</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> t = tc.getByTeamName(<span class=\"hljs-string\">'Not a team name that exists'</span>);<br>should(t).be.null();",
      "isRoot": false,
      "uuid": "c94d4cda-9187-4508-88b3-2529ae887e94",
      "parentUUID": "29e8f2cc-a6d6-4724-b68b-f309a79f7012",
      "skipped": false
    },
    {
      "title": "should not return full teams",
      "fullTitle": "getAvailable(settings) should not return full teams",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">1</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">2</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">1</span>);",
      "isRoot": false,
      "uuid": "3dba41c5-a4fb-42c3-8270-6175c514d5fa",
      "parentUUID": "72b9cd7c-c6a7-4dd4-8c83-d4995531fcfa",
      "skipped": false
    },
    {
      "title": "should return teams with space",
      "fullTitle": "getAvailable(settings) should return teams with space",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = <span class=\"hljs-number\">3</span>;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "baeef5e0-3733-4386-89bf-6450165e5741",
      "parentUUID": "72b9cd7c-c6a7-4dd4-8c83-d4995531fcfa",
      "skipped": false
    },
    {
      "title": "should return teams with unlimited space",
      "fullTitle": "getAvailable(settings) should return teams with unlimited space",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.maxTeams = <span class=\"hljs-number\">3</span>;<br>s.teamSize = constants.UNLIMITED;<br>s.sessionName = <span class=\"hljs-string\">'s'</span>;<br><span class=\"hljs-keyword\">var</span> tc = <span class=\"hljs-keyword\">new</span> Teams();<br>teamFactory.create(tc, s);<br><span class=\"hljs-keyword\">var</span> cc = generateContestants(<span class=\"hljs-number\">3</span>);<br>cc.forEach(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\">c</span>) </span>{<br>    tc.addContestant(c, s, <span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{});<br>});<br><span class=\"hljs-keyword\">var</span> teams = tc.getAvailable(s);<br>teams.length.should.equal(<span class=\"hljs-number\">3</span>);",
      "isRoot": false,
      "uuid": "6bb7ba46-68ac-4670-88a5-849230c59f2d",
      "parentUUID": "72b9cd7c-c6a7-4dd4-8c83-d4995531fcfa",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamName should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t.teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t._teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
      "isRoot": false,
      "uuid": "3d128e9d-4c6f-41c3-9b15-9d3e346df463",
      "parentUUID": "225757bb-1c7e-491b-8aa9-a31001b5b028",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamName should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>t._teamName = <span class=\"hljs-string\">'teamName_test'</span>;<br>t.teamName.should.equal(<span class=\"hljs-string\">'teamName_test'</span>);",
      "isRoot": false,
      "uuid": "7cfc5a18-721a-48fc-8afb-3c4bf75d9123",
      "parentUUID": "225757bb-1c7e-491b-8aa9-a31001b5b028",
      "skipped": false
    },
    {
      "title": "should set value",
      "fullTitle": "#teamLeader should set value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t.teamLeader = c;<br>t._teamLeader.should.equal(c);",
      "isRoot": false,
      "uuid": "f5207398-5a9a-4fb9-9cc6-dbd9b4e090e2",
      "parentUUID": "06eb2522-c087-4599-a04a-730c624b890a",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#teamLeader should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>t._teamLeader = c;<br>t.teamLeader.should.equal(c);",
      "isRoot": false,
      "uuid": "37fdb129-d493-4923-bf99-457c9899a3a7",
      "parentUUID": "06eb2522-c087-4599-a04a-730c624b890a",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#score should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "36aed801-5607-499a-8cf5-10612dbf7faf",
      "parentUUID": "9f941648-596b-4630-bc59-f8659a2f2c82",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#score should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br>p._score = <span class=\"hljs-number\">5</span>;<br>p.score.should.equal(<span class=\"hljs-number\">5</span>);",
      "isRoot": false,
      "uuid": "2f15789e-ca48-4cf3-9726-30a656c0761b",
      "parentUUID": "9f941648-596b-4630-bc59-f8659a2f2c82",
      "skipped": false
    },
    {
      "title": "should throw on set value",
      "fullTitle": "#contestants should throw on set value",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br>(<span class=\"hljs-function\"><span class=\"hljs-keyword\">function</span>(<span class=\"hljs-params\"></span>) </span>{<br>    t.score = <span class=\"hljs-number\">1</span>;<br>}).should.throw();",
      "isRoot": false,
      "uuid": "468fbe1b-cec6-4a64-b431-abbd0c790dba",
      "parentUUID": "8a819de7-1d2f-4706-9595-18fc70e3f270",
      "skipped": false
    },
    {
      "title": "should get value",
      "fullTitle": "#contestants should get value",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> p = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = p.contestants;<br>c.should.be.instanceOf(Participants);",
      "isRoot": false,
      "uuid": "af58ea24-2999-4895-bb7e-fef5f3e26f6e",
      "parentUUID": "8a819de7-1d2f-4706-9595-18fc70e3f270",
      "skipped": false
    },
    {
      "title": "should update the teams score",
      "fullTitle": "when a contestant scores should update the teams score",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br>c1.incrementScore();<br>c1.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">1</span>);<br>c2.incrementScore();<br>c2.score.should.equal(<span class=\"hljs-number\">1</span>);<br>t.score.should.equal(<span class=\"hljs-number\">2</span>);",
      "isRoot": false,
      "uuid": "0f7199fb-a1e6-4b9f-baae-11fc7f9e5182",
      "parentUUID": "ebad5456-1946-4981-80d1-77a6944e90b1",
      "skipped": false
    },
    {
      "title": "should allow it when no team leader is set",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should allow it when no team leader is set",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c = <span class=\"hljs-keyword\">new</span> Contestant();<br>c.id = <span class=\"hljs-string\">'c1'</span>;<br>t.contestants.add(c);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);",
      "isRoot": false,
      "uuid": "4ca15052-8cb2-46e6-bad8-ea2963cf42dc",
      "parentUUID": "d55d655f-48c5-4643-93ed-223d6424036d",
      "skipped": false
    },
    {
      "title": "should not allow it when a team leader is set",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should not allow it when a team leader is set",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_FULFILLED);",
      "isRoot": false,
      "uuid": "f63354bd-3af4-4620-af69-27eed0f7cd0a",
      "parentUUID": "d55d655f-48c5-4643-93ed-223d6424036d",
      "skipped": false
    },
    {
      "title": "should not allow it when a contestant is not in team",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should not allow it when a contestant is not in team",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">false</span>);<br>r.should.be.false();<br>m.should.equal(constants.messages.COULD_NOT_PROMOTE_TO_TEAM_LEADER_POSITION_NOT_CONTESTANT);",
      "isRoot": false,
      "uuid": "d4b2a69f-9815-4247-a77f-afd3c3ff7cb9",
      "parentUUID": "d55d655f-48c5-4643-93ed-223d6424036d",
      "skipped": false
    },
    {
      "title": "should allow it when a team leader is set and host override is flagged",
      "fullTitle": "tryAssignTeamLeader(contestant, hostOverride) should allow it when a team leader is set and host override is flagged",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> [r, m] = t.tryAssignTeamLeader(c1, <span class=\"hljs-literal\">false</span>);<br>r.should.be.true();<br>should.not.exist(m);<br>[r, m] = t.tryAssignTeamLeader(c2, <span class=\"hljs-literal\">true</span>);<br>r.should.be.true();<br>should.not.exist(m);",
      "isRoot": false,
      "uuid": "ab9b1c9e-9d34-4815-bf78-0fe98dcc4e3d",
      "parentUUID": "d55d655f-48c5-4643-93ed-223d6424036d",
      "skipped": false
    },
    {
      "title": "should change name when request is valid",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should change name when request is valid",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "55488cf6-3e73-41eb-bdfe-1406fdb0fc09",
      "parentUUID": "5ca7f6f4-e7a5-4952-a08c-c09f63d5f318",
      "skipped": false
    },
    {
      "title": "should not change name when setting do not allow it",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should not change name when setting do not allow it",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_SETTINGS_NOT_ALLOW);<br>r.should.be.false();",
      "isRoot": false,
      "uuid": "77609e82-0b76-4609-8494-905c681d4a76",
      "parentUUID": "5ca7f6f4-e7a5-4952-a08c-c09f63d5f318",
      "skipped": false
    },
    {
      "title": "should not change name when name contains profanity",
      "fullTitle": "tryChangeTeamName(teamName, settings, hostOverride) should not change name when name contains profanity",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">false</span>);<br>em.should.equal(constants.messages.COULD_NOT_ACCEPT_TEAM_NAME_CONTAINS_PROFANITY);<br>r.should.be.false();",
      "isRoot": false,
      "uuid": "f95f0a85-ccef-4fd2-9c50-5f78a299c780",
      "parentUUID": "5ca7f6f4-e7a5-4952-a08c-c09f63d5f318",
      "skipped": false
    },
    {
      "title": "should change name when request is valid",
      "fullTitle": "when host override should change name when request is valid",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "75e20b5a-176b-42fd-9bba-7988aa9fbea0",
      "parentUUID": "c272b722-f447-4c91-834f-b894f6ab01d6",
      "skipped": false
    },
    {
      "title": "should change name when setting do not allow it",
      "fullTitle": "when host override should change name when setting do not allow it",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.MANUAL;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'test'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "722cd895-85cf-4605-98cf-cf6656e21b22",
      "parentUUID": "c272b722-f447-4c91-834f-b894f6ab01d6",
      "skipped": false
    },
    {
      "title": "should change name when name contains profanity",
      "fullTitle": "when host override should change name when name contains profanity",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> s = <span class=\"hljs-keyword\">new</span> Settings();<br>s.hasTeams = <span class=\"hljs-literal\">true</span>;<br>s.teamNameEdit = constants.teamNameEdit.ALLOW;<br><span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> [r, em] = t.tryChangeName(<span class=\"hljs-string\">'You are all an ash0le'</span>, s, <span class=\"hljs-literal\">true</span>);<br>should.not.exist(em);<br>r.should.be.true();",
      "isRoot": false,
      "uuid": "5f0bb0e3-a37f-4018-8a85-132ed3c38ec4",
      "parentUUID": "c272b722-f447-4c91-834f-b894f6ab01d6",
      "skipped": false
    },
    {
      "title": "should get contestant when contest with username exists",
      "fullTitle": "getContestantByUsername(username) should get contestant when contest with username exists",
      "timedOut": false,
      "duration": 1,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(c1.username);<br>c.should.equal(c1);<br>c = t.getContestantByUsername(<span class=\"hljs-string\">'c1abc'</span>);<br>c.should.equal(c1);",
      "isRoot": false,
      "uuid": "53a7ccee-dbc9-4091-8a3a-c5133ba84525",
      "parentUUID": "496cc9e9-d931-497b-b48b-9a5226954a15",
      "skipped": false
    },
    {
      "title": "should not get contestant when contest with username does not exist",
      "fullTitle": "getContestantByUsername(username) should not get contestant when contest with username does not exist",
      "timedOut": false,
      "duration": 0,
      "state": "passed",
      "speed": "fast",
      "pass": true,
      "fail": false,
      "pending": false,
      "code": "<span class=\"hljs-keyword\">var</span> t = <span class=\"hljs-keyword\">new</span> Team();<br><span class=\"hljs-keyword\">var</span> c1 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c1.id = <span class=\"hljs-string\">'c1'</span>;<br>c1.username = <span class=\"hljs-string\">'c1ABC'</span>;<br><span class=\"hljs-keyword\">var</span> c2 = <span class=\"hljs-keyword\">new</span> Contestant();<br>c2.id = <span class=\"hljs-string\">'c2'</span>;<br>c2.username = <span class=\"hljs-string\">'c2'</span>;<br>t.contestants.add(c1);<br>t.contestants.add(c2);<br><span class=\"hljs-keyword\">var</span> c = t.getContestantByUsername(<span class=\"hljs-string\">'John Doe'</span>);<br>should(c).be.null();",
      "isRoot": false,
      "uuid": "443a7671-9e2f-4e9f-88f9-94fa71909079",
      "parentUUID": "496cc9e9-d931-497b-b48b-9a5226954a15",
      "skipped": false
    }
  ],
  "allFailures": [],
  "copyrightYear": 2016
}